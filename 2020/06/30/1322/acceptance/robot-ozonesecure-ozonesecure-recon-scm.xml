<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 11:21:11.618" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:11.681" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:11.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:11.684" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:21:11.677" endtime="20200630 11:21:11.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:11.685" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:21:11.684" endtime="20200630 11:21:11.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:11.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:11.685" endtime="20200630 11:21:11.686"></status>
</kw>
<msg timestamp="20200630 11:21:11.686" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:21:11.677" endtime="20200630 11:21:11.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 11:21:11.687" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 11:21:11.686" endtime="20200630 11:21:11.687"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:11.690" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:11.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:11.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:21:11.688" endtime="20200630 11:21:11.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:11.707" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:21:11.706" endtime="20200630 11:21:11.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:11.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:11.707" endtime="20200630 11:21:11.708"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:11.688" endtime="20200630 11:21:11.708"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:11.687" endtime="20200630 11:21:11.708"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:11.677" endtime="20200630 11:21:11.708"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:11.676" endtime="20200630 11:21:11.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:11.712" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:20.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:20.454" level="INFO">${output} = 2020-06-30 11:21:13,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:21:13,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 11:21:11.709" endtime="20200630 11:21:20.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:20.456" level="INFO">2020-06-30 11:21:13,174 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 11:21:13,343 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 11:21:13,344 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 11:21:14,936 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 11:21:14,937 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 11:21:14,944 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 11:21:14,959 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 11:21:14,996 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-21454, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 11:21:15,026 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-21454/bucket-0-27273, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 11:21:15,549 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 11:21:15,965 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,129
Average Time spent in key write: 00:00:00,486
Total bytes written: 10250
Total Execution time: 00:00:06,583
***************************************************</msg>
<status status="PASS" starttime="20200630 11:21:20.455" endtime="20200630 11:21:20.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:20.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:20.456" endtime="20200630 11:21:20.457"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:11.708" endtime="20200630 11:21:20.457"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:21:11.675" endtime="20200630 11:21:20.457" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:20.462" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:20.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:20.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:21:20.460" endtime="20200630 11:21:20.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:20.466" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:21:20.466" endtime="20200630 11:21:20.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:20.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:20.466" endtime="20200630 11:21:20.467"></status>
</kw>
<msg timestamp="20200630 11:21:20.467" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:21:20.460" endtime="20200630 11:21:20.467"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:20.470" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:20.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:20.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:21:20.468" endtime="20200630 11:21:20.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:20.488" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:21:20.488" endtime="20200630 11:21:20.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:20.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:20.489" endtime="20200630 11:21:20.489"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:20.468" endtime="20200630 11:21:20.489"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:20.468" endtime="20200630 11:21:20.489"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:20.459" endtime="20200630 11:21:20.490"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:20.459" endtime="20200630 11:21:20.490"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:20.493" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:20.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:20.677" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:20.490" endtime="20200630 11:21:20.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:20.678" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    435      0 --:--:-- --:--:-- --:--:--   437
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 11:21:20.678" endtime="20200630 11:21:20.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:20.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:20.678" endtime="20200630 11:21:20.679"></status>
</kw>
<msg timestamp="20200630 11:21:20.679" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:20.490" endtime="20200630 11:21:20.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:20.679" endtime="20200630 11:21:20.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:20.682" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:20.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:20.715" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:20.680" endtime="20200630 11:21:20.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:20.716" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0   107k      0 --:--:-- --:--:-- --:--:--  110k
* Connection #0 to host recon left intact
[{"volume":"vol-4-41616","bucket":"bucket-3-39525","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-0-40096","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-3-77898","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-0-59019","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-2-67734","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-3-85813","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-0-38933","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-4-72677","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-2-96045","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-2-17176","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-4-84553","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-2-39633","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-3-86749","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-3-88229","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-1-76522","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-1-21314","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-1-24779","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-4-54017","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-0-59180","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-0-42797","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-4-54832","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-2-91786","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-1-88503","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-4-57823","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-1-24184","fileSize":16384,"count":5},{"volume":"23305-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23305-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest303","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-13977","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-87411","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-36190","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-06461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87411","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200630 11:21:20.715" endtime="20200630 11:21:20.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:20.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:20.716" endtime="20200630 11:21:20.716"></status>
</kw>
<msg timestamp="20200630 11:21:20.717" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:20.680" endtime="20200630 11:21:20.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:21:20.718" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:20 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0   107k      0 --:--:-- --:--:-- --:--:--  110k
* Connection #0 to host recon left intact
[{"volume":"vol-4-41616","bucket":"bucket-3-39525","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-0-40096","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-3-77898","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-0-59019","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-2-67734","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-3-85813","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-0-38933","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-4-72677","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-2-96045","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-2-17176","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-4-84553","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-2-39633","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-3-86749","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-3-88229","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-1-76522","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-1-21314","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-1-24779","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-4-54017","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-0-59180","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-0-42797","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-4-54832","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-2-91786","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-1-88503","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-4-57823","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-1-24184","fileSize":16384,"count":5},{"volume":"23305-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23305-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest303","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-13977","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-87411","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-36190","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-06461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87411","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:21:20.717" endtime="20200630 11:21:20.718"></status>
</kw>
<status status="FAIL" starttime="20200630 11:21:20.459" endtime="20200630 11:21:20.718"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:30.723" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:30.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:30.726" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:21:30.721" endtime="20200630 11:21:30.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:30.727" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:21:30.726" endtime="20200630 11:21:30.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:30.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:30.727" endtime="20200630 11:21:30.727"></status>
</kw>
<msg timestamp="20200630 11:21:30.728" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:21:30.720" endtime="20200630 11:21:30.728"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:30.732" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:30.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:30.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:21:30.729" endtime="20200630 11:21:30.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:30.747" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:21:30.746" endtime="20200630 11:21:30.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:30.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:30.747" endtime="20200630 11:21:30.747"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:30.728" endtime="20200630 11:21:30.748"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:30.728" endtime="20200630 11:21:30.748"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:30.720" endtime="20200630 11:21:30.748"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:30.719" endtime="20200630 11:21:30.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:30.752" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:30.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:30.771" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:30.749" endtime="20200630 11:21:30.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:30.772" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6652      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 11:21:30.771" endtime="20200630 11:21:30.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:30.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:30.772" endtime="20200630 11:21:30.773"></status>
</kw>
<msg timestamp="20200630 11:21:30.773" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:30.748" endtime="20200630 11:21:30.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:30.773" endtime="20200630 11:21:30.774"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:30.777" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:30.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:30.795" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:30.775" endtime="20200630 11:21:30.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:30.796" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0   234k      0 --:--:-- --:--:-- --:--:--  238k
* Connection #0 to host recon left intact
[{"volume":"vol-4-41616","bucket":"bucket-3-39525","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-0-40096","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-3-77898","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-0-59019","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-2-67734","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-3-85813","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-0-38933","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-4-72677","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-2-96045","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-2-17176","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-4-84553","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-2-39633","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-3-86749","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-3-88229","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-1-76522","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-1-21314","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-1-24779","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-4-54017","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-0-59180","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-0-42797","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-4-54832","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-2-91786","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-1-88503","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-4-57823","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-1-24184","fileSize":16384,"count":5},{"volume":"23305-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23305-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest303","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-13977","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-87411","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-36190","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-06461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87411","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200630 11:21:30.796" endtime="20200630 11:21:30.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:30.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:30.797" endtime="20200630 11:21:30.801"></status>
</kw>
<msg timestamp="20200630 11:21:30.801" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:30.774" endtime="20200630 11:21:30.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 11:21:30.802" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0   234k      0 --:--:-- --:--:-- --:--:--  238k
* Connection #0 to host recon left intact
[{"volume":"vol-4-41616","bucket":"bucket-3-39525","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-0-40096","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-3-77898","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-0-59019","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-2-67734","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-3-85813","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-0-38933","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-4-72677","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-2-96045","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-2-17176","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-4-84553","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-2-39633","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-3-86749","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-3-88229","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-1-76522","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-1-21314","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-1-24779","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-4-54017","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-0-59180","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-0-42797","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-4-54832","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-2-91786","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-1-88503","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-4-57823","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-1-24184","fileSize":16384,"count":5},{"volume":"23305-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23305-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest303","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-13977","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-87411","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-36190","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-06461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87411","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 11:21:30.802" endtime="20200630 11:21:30.803"></status>
</kw>
<status status="FAIL" starttime="20200630 11:21:30.719" endtime="20200630 11:21:30.803"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.808" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:40.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:40.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:21:40.806" endtime="20200630 11:21:40.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:40.812" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:21:40.811" endtime="20200630 11:21:40.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:40.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:40.812" endtime="20200630 11:21:40.813"></status>
</kw>
<msg timestamp="20200630 11:21:40.814" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:21:40.805" endtime="20200630 11:21:40.814"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.817" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:40.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:40.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:21:40.815" endtime="20200630 11:21:40.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:40.834" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:21:40.834" endtime="20200630 11:21:40.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:40.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:40.834" endtime="20200630 11:21:40.835"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:40.814" endtime="20200630 11:21:40.835"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:40.814" endtime="20200630 11:21:40.835"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:40.805" endtime="20200630 11:21:40.835"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:40.805" endtime="20200630 11:21:40.835"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.840" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:40.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:40.885" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.836" endtime="20200630 11:21:40.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:40.887" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0   4529      0 --:--:-- --:--:-- --:--:--  4550
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200630 11:21:40.886" endtime="20200630 11:21:40.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:40.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:40.887" endtime="20200630 11:21:40.888"></status>
</kw>
<msg timestamp="20200630 11:21:40.888" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.836" endtime="20200630 11:21:40.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.888" endtime="20200630 11:21:40.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.892" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:40.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:40.907" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.889" endtime="20200630 11:21:40.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:40.908" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   412k      0 --:--:-- --:--:-- --:--:--  438k
* Connection #0 to host recon left intact
[{"volume":"vol-4-41616","bucket":"bucket-3-39525","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-0-40096","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-3-77898","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-0-59019","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-2-67734","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-3-85813","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-0-38933","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-4-72677","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-2-96045","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-2-17176","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-4-84553","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-2-39633","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-3-86749","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-3-88229","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-1-76522","fileSize":16384,"count":5},{"volume":"vol-4-41616","bucket":"bucket-1-21314","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-1-24779","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-4-54017","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-0-59180","fileSize":16384,"count":5},{"volume":"vol-3-72304","bucket":"bucket-0-42797","fileSize":16384,"count":5},{"volume":"vol-2-71614","bucket":"bucket-4-54832","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-2-91786","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-1-88503","fileSize":16384,"count":5},{"volume":"vol-0-52276","bucket":"bucket-4-57823","fileSize":16384,"count":5},{"volume":"vol-1-22680","bucket":"bucket-1-24184","fileSize":16384,"count":5},{"volume":"23305-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23305-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23305-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest303","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-13977","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-87411","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-36190","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-06461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87411","fileSize":16777216,"count":2},{"volume":"vol-0-21454","bucket":"bucket-0-27273","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-53493","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-46318","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 11:21:40.907" endtime="20200630 11:21:40.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:40.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:40.908" endtime="20200630 11:21:40.908"></status>
</kw>
<msg timestamp="20200630 11:21:40.909" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.889" endtime="20200630 11:21:40.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.909" endtime="20200630 11:21:40.909"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:40.804" endtime="20200630 11:21:40.910"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:20.458" endtime="20200630 11:21:40.910"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:21:20.458" endtime="20200630 11:21:40.910" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.914" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:40.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:40.972" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.912" endtime="20200630 11:21:40.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:40.973" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  35711      0 --:--:-- --:--:-- --:--:-- 36240
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"844e6692-1460-491a-bf00-b6745ee81d8a","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593516076541,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443598336},"pipelines":[{"pipelineID":"1c998260-00f0-425b-b917-428d2572e718","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"f784a73e-658c-4b65-beef-6a3c2aef4764","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"feb4dd09-d197-4f69-b7d2-834113171d71","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593516076531,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443598336},"pipelines":[{"pipelineID":"8f900bb4-1570-43ab-a122-50676499f371","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"f784a73e-658c-4b65-beef-6a3c2aef4764","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"816de059-dc0b-432a-aa11-7df1457fbe67","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593516076620,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443598336},"pipelines":[{"pipelineID":"f5330b0d-e8bc-451c-89e0-7b529902816d","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"f784a73e-658c-4b65-beef-6a3c2aef4764","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200630 11:21:40.972" endtime="20200630 11:21:40.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:40.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:40.974" endtime="20200630 11:21:40.974"></status>
</kw>
<msg timestamp="20200630 11:21:40.974" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.912" endtime="20200630 11:21:40.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.975" endtime="20200630 11:21:40.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.975" endtime="20200630 11:21:40.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.975" endtime="20200630 11:21:40.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:40.976" endtime="20200630 11:21:40.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:40.979" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.018" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.977" endtime="20200630 11:21:41.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.019" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  44471      0 --:--:-- --:--:-- --:--:-- 45600
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"1c998260-00f0-425b-b917-428d2572e718","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1337378,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8f900bb4-1570-43ab-a122-50676499f371","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1337371,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f5330b0d-e8bc-451c-89e0-7b529902816d","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1337901,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f784a73e-658c-4b65-beef-6a3c2aef4764","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1337336,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 11:21:41.018" endtime="20200630 11:21:41.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.019" endtime="20200630 11:21:41.020"></status>
</kw>
<msg timestamp="20200630 11:21:41.020" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:40.977" endtime="20200630 11:21:41.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.021" endtime="20200630 11:21:41.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.021" endtime="20200630 11:21:41.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.022" endtime="20200630 11:21:41.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.023" endtime="20200630 11:21:41.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.023" endtime="20200630 11:21:41.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.024" endtime="20200630 11:21:41.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:41.027" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.048" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.025" endtime="20200630 11:21:41.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.049" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  13659      0 --:--:-- --:--:-- --:--:-- 14307
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76330795008},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200630 11:21:41.048" endtime="20200630 11:21:41.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.049" endtime="20200630 11:21:41.050"></status>
</kw>
<msg timestamp="20200630 11:21:41.050" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.024" endtime="20200630 11:21:41.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.050" endtime="20200630 11:21:41.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.051" endtime="20200630 11:21:41.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.052" endtime="20200630 11:21:41.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:41.055" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.078" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.053" endtime="20200630 11:21:41.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.079" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  29819      0 --:--:-- --:--:-- --:--:-- 30266
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593514793974,"lastReportTimestamp":1593516053842},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593514793500,"lastReportTimestamp":1593516023214},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593514793794,"lastReportTimestamp":1593516076532}]</msg>
<status status="PASS" starttime="20200630 11:21:41.078" endtime="20200630 11:21:41.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.080" endtime="20200630 11:21:41.080"></status>
</kw>
<msg timestamp="20200630 11:21:41.080" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.052" endtime="20200630 11:21:41.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.081" endtime="20200630 11:21:41.082"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:21:40.911" endtime="20200630 11:21:41.082" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:41.088" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 11:21:41.085" endtime="20200630 11:21:41.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.091" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 11:21:41.091" endtime="20200630 11:21:41.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.091" endtime="20200630 11:21:41.092"></status>
</kw>
<msg timestamp="20200630 11:21:41.092" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 11:21:41.085" endtime="20200630 11:21:41.092"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:41.096" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 11:21:41.094" endtime="20200630 11:21:41.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.114" level="INFO"></msg>
<status status="PASS" starttime="20200630 11:21:41.113" endtime="20200630 11:21:41.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.114" endtime="20200630 11:21:41.115"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:41.093" endtime="20200630 11:21:41.115"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:41.092" endtime="20200630 11:21:41.115"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:41.084" endtime="20200630 11:21:41.115"></status>
</kw>
<status status="PASS" starttime="20200630 11:21:41.084" endtime="20200630 11:21:41.115"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 11:21:41.118" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 11:21:41.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 11:21:41.165" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.116" endtime="20200630 11:21:41.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 11:21:41.167" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  16423      0 --:--:-- --:--:-- --:--:-- 17000
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x261bf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQJT0ql+PZmw08XWTsHkF7emNS9tLCPq3O148loMX3P5rDyyIhxbacyV5PWNuj82vi3IeScxi11sVcffFCns9A441aOCjtmivL+dG0hOVRsYPC0DuIyEJoQgV+X1fLhL0mk/0j2RYC3ryVdqAIQ8bOaFryUno7cbfAY+vgM+CtsI1wOZUFUZxFFCekoonrhqs2BdZzemLpAhtEIMwZQ19x8lzmWmj8rQlcIvHDU00bVQv2h13js6VzxptVliodG2CYvK2BRzrkD3HKypmpI6dGaGRrNothJQYbI1t2kIyY4lLgye9O0yOeKCd02cqcgko8v3wp9z6NG3I+B1sR8yJfcCFaikgdIwgc+gAwIBEqKBxwSBxGRIoF4oVWZhO35t+BvsvueynDpyN7SpKWhFyHEAP5/hscdzTzpIrp1STrogppTuUfXebIiDfsFngjSPdBjL0J3I1PHP3M2bEA0mfWcjNUSXVrrLr0+/3hadzI6QxWieXFhydYE9Am76RH5yz3BVgkeEixxJyGpK9jtt/TYhONO6Uaw7nUhJSHhJWr8H33wVLWay/AlawfG2XvIQJ8Nj0kEXwVaztwVz9wP2Fx8hhfF4NlFF12GrbKYk1zd6W2eMGVo62jQ=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Date: Tue, 30 Jun 2020 11:21:41 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCD3IZNy/kXLhHC46K02VJgeA+jHt6dO1ZOUYPa6kdNeOnpIXt4ltbiajZirEtnRgZ6HmBJ+zK1Yl6vI0QDj1bjL9e
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593552101159&amp;s=aPdB6zBbizd94xRn9dh5aktx2RWPVMJgi8EUvSnVI3c="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 10:08:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  55502      0 --:--:-- --:--:-- --:--:-- 55502
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.166" endtime="20200630 11:21:41.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 11:21:41.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 11:21:41.167" endtime="20200630 11:21:41.168"></status>
</kw>
<msg timestamp="20200630 11:21:41.168" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 11:21:41.116" endtime="20200630 11:21:41.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 11:21:41.168" endtime="20200630 11:21:41.169"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 11:21:41.083" endtime="20200630 11:21:41.169" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 11:21:11.648" endtime="20200630 11:21:41.171"></status>
</suite>
<status status="PASS" starttime="20200630 11:21:11.618" endtime="20200630 11:21:41.176"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
