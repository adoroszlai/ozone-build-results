<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 06:32:22.857" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:22.931" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:22.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:22.933" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:32:22.919" endtime="20200630 06:32:22.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:22.934" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:32:22.934" endtime="20200630 06:32:22.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:22.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:22.934" endtime="20200630 06:32:22.935"></status>
</kw>
<msg timestamp="20200630 06:32:22.935" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:32:22.919" endtime="20200630 06:32:22.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:32:22.937" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:32:22.935" endtime="20200630 06:32:22.937"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:22.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:22.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:22.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:32:22.938" endtime="20200630 06:32:22.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:22.957" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:32:22.957" endtime="20200630 06:32:22.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:22.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:22.958" endtime="20200630 06:32:22.958"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:22.937" endtime="20200630 06:32:22.959"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:22.937" endtime="20200630 06:32:22.959"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:22.918" endtime="20200630 06:32:22.959"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:22.918" endtime="20200630 06:32:22.959"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:22.963" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:31.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:31.973" level="INFO">${output} = 2020-06-30 06:32:24,444 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 06:32:24,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 06:32:22.960" endtime="20200630 06:32:31.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:31.975" level="INFO">2020-06-30 06:32:24,444 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 06:32:24,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 06:32:24,640 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 06:32:26,441 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 06:32:26,442 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 06:32:26,451 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 06:32:26,471 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 06:32:26,524 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86634, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 06:32:26,562 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-86634/bucket-0-32618, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 06:32:27,197 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 06:32:27,477 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,195
Average Time spent in key write: 00:00:00,541
Total bytes written: 10250
Total Execution time: 00:00:06,751
***************************************************</msg>
<status status="PASS" starttime="20200630 06:32:31.974" endtime="20200630 06:32:31.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:31.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:31.975" endtime="20200630 06:32:31.975"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:22.959" endtime="20200630 06:32:31.976"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:32:22.917" endtime="20200630 06:32:31.976" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:31.983" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:31.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:31.984" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:32:31.980" endtime="20200630 06:32:31.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:31.985" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:32:31.985" endtime="20200630 06:32:31.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:31.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:31.985" endtime="20200630 06:32:31.986"></status>
</kw>
<msg timestamp="20200630 06:32:31.986" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:32:31.979" endtime="20200630 06:32:31.986"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:31.990" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:32.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:32.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:32:31.987" endtime="20200630 06:32:32.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:32.002" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:32:32.001" endtime="20200630 06:32:32.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:32.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:32.002" endtime="20200630 06:32:32.002"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:31.987" endtime="20200630 06:32:32.002"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:31.986" endtime="20200630 06:32:32.002"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:31.979" endtime="20200630 06:32:32.003"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:31.978" endtime="20200630 06:32:32.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:32.006" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:32.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:32.211" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:32.003" endtime="20200630 06:32:32.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:32.213" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    384      0 --:--:-- --:--:-- --:--:--   385
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200630 06:32:32.212" endtime="20200630 06:32:32.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:32.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:32.213" endtime="20200630 06:32:32.213"></status>
</kw>
<msg timestamp="20200630 06:32:32.214" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:32.003" endtime="20200630 06:32:32.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:32.214" endtime="20200630 06:32:32.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:32.219" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:32.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:32.247" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:32.215" endtime="20200630 06:32:32.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:32.248" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   129k      0 --:--:-- --:--:-- --:--:--  136k
* Connection #0 to host recon left intact
[{"volume":"vol-3-27863","bucket":"bucket-1-65257","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-0-98549","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-4-79036","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-0-06641","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-3-68869","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-3-41111","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-2-47239","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-2-73420","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-3-16974","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-4-41965","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-2-37654","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-1-20493","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-2-06478","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-3-74930","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-3-47845","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-2-04821","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-0-64253","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-4-76309","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-1-28410","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-0-31600","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-1-50022","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-4-40495","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-1-05448","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-4-32614","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-0-58075","fileSize":16384,"count":5},{"volume":"94991-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"94991-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-47820","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-79010","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-79010","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-48911","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86624","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89615","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-79010","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200630 06:32:32.247" endtime="20200630 06:32:32.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:32.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:32.248" endtime="20200630 06:32:32.249"></status>
</kw>
<msg timestamp="20200630 06:32:32.249" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:32.215" endtime="20200630 06:32:32.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 06:32:32.250" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   129k      0 --:--:-- --:--:-- --:--:--  136k
* Connection #0 to host recon left intact
[{"volume":"vol-3-27863","bucket":"bucket-1-65257","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-0-98549","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-4-79036","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-0-06641","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-3-68869","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-3-41111","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-2-47239","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-2-73420","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-3-16974","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-4-41965","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-2-37654","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-1-20493","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-2-06478","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-3-74930","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-3-47845","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-2-04821","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-0-64253","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-4-76309","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-1-28410","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-0-31600","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-1-50022","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-4-40495","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-1-05448","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-4-32614","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-0-58075","fileSize":16384,"count":5},{"volume":"94991-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"94991-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-47820","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-79010","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-79010","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-48911","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86624","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89615","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-79010","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 06:32:32.250" endtime="20200630 06:32:32.250"></status>
</kw>
<status status="FAIL" starttime="20200630 06:32:31.978" endtime="20200630 06:32:32.251"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:42.257" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:42.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:42.259" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:32:42.254" endtime="20200630 06:32:42.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:42.260" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:32:42.260" endtime="20200630 06:32:42.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:42.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:42.260" endtime="20200630 06:32:42.261"></status>
</kw>
<msg timestamp="20200630 06:32:42.261" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:32:42.253" endtime="20200630 06:32:42.261"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:42.264" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:42.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:42.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:32:42.262" endtime="20200630 06:32:42.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:42.282" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:32:42.281" endtime="20200630 06:32:42.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:42.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:42.282" endtime="20200630 06:32:42.283"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:42.262" endtime="20200630 06:32:42.283"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:42.261" endtime="20200630 06:32:42.283"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:42.252" endtime="20200630 06:32:42.283"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:42.252" endtime="20200630 06:32:42.283"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:42.287" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:42.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:42.306" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:42.284" endtime="20200630 06:32:42.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:42.307" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6655      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200630 06:32:42.306" endtime="20200630 06:32:42.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:42.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:42.307" endtime="20200630 06:32:42.307"></status>
</kw>
<msg timestamp="20200630 06:32:42.308" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:42.283" endtime="20200630 06:32:42.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:42.308" endtime="20200630 06:32:42.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:42.312" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:42.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:42.328" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:42.309" endtime="20200630 06:32:42.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:42.328" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   273k      0 --:--:-- --:--:-- --:--:--  299k
* Connection #0 to host recon left intact
[{"volume":"vol-3-27863","bucket":"bucket-1-65257","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-0-98549","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-4-79036","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-0-06641","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-3-68869","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-3-41111","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-2-47239","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-2-73420","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-3-16974","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-4-41965","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-2-37654","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-1-20493","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-2-06478","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-3-74930","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-3-47845","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-2-04821","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-0-64253","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-4-76309","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-1-28410","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-0-31600","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-1-50022","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-4-40495","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-1-05448","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-4-32614","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-0-58075","fileSize":16384,"count":5},{"volume":"94991-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"94991-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-47820","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-79010","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-79010","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-48911","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86624","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89615","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-79010","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200630 06:32:42.328" endtime="20200630 06:32:42.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:42.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:42.329" endtime="20200630 06:32:42.329"></status>
</kw>
<msg timestamp="20200630 06:32:42.330" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:42.309" endtime="20200630 06:32:42.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 06:32:42.331" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:42 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   273k      0 --:--:-- --:--:-- --:--:--  299k
* Connection #0 to host recon left intact
[{"volume":"vol-3-27863","bucket":"bucket-1-65257","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-0-98549","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-4-79036","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-0-06641","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-3-68869","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-3-41111","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-2-47239","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-2-73420","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-3-16974","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-4-41965","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-2-37654","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-1-20493","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-2-06478","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-3-74930","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-3-47845","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-2-04821","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-0-64253","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-4-76309","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-1-28410","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-0-31600","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-1-50022","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-4-40495","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-1-05448","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-4-32614","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-0-58075","fileSize":16384,"count":5},{"volume":"94991-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"94991-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-47820","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-79010","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-79010","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-48911","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86624","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89615","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-79010","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 06:32:42.330" endtime="20200630 06:32:42.331"></status>
</kw>
<status status="FAIL" starttime="20200630 06:32:42.251" endtime="20200630 06:32:42.331"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.336" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.339" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:32:52.334" endtime="20200630 06:32:52.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.340" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:32:52.339" endtime="20200630 06:32:52.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.340" endtime="20200630 06:32:52.341"></status>
</kw>
<msg timestamp="20200630 06:32:52.341" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:32:52.333" endtime="20200630 06:32:52.341"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.344" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:32:52.342" endtime="20200630 06:32:52.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.357" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:32:52.357" endtime="20200630 06:32:52.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.357" endtime="20200630 06:32:52.358"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.342" endtime="20200630 06:32:52.358"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.341" endtime="20200630 06:32:52.358"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.333" endtime="20200630 06:32:52.358"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.332" endtime="20200630 06:32:52.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.362" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.409" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.359" endtime="20200630 06:32:52.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.410" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0   4403      0 --:--:-- --:--:-- --:--:--  4439
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200630 06:32:52.409" endtime="20200630 06:32:52.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.410" endtime="20200630 06:32:52.411"></status>
</kw>
<msg timestamp="20200630 06:32:52.411" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.359" endtime="20200630 06:32:52.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.411" endtime="20200630 06:32:52.412"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.416" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.438" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.413" endtime="20200630 06:32:52.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.439" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3215
&lt; 
{ [data not shown]

100  3215  100  3215    0     0   188k      0 --:--:-- --:--:-- --:--:--  196k
* Connection #0 to host recon left intact
[{"volume":"vol-3-27863","bucket":"bucket-1-65257","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-0-98549","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-4-79036","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-0-06641","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-3-68869","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-3-41111","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-2-47239","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-2-73420","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-3-16974","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-4-41965","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-2-37654","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-1-20493","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-2-06478","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-3-74930","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-3-47845","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-2-04821","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-0-64253","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-4-76309","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-1-28410","fileSize":16384,"count":5},{"volume":"vol-3-27863","bucket":"bucket-0-31600","fileSize":16384,"count":5},{"volume":"vol-4-85847","bucket":"bucket-1-50022","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-4-40495","fileSize":16384,"count":5},{"volume":"vol-1-22753","bucket":"bucket-1-05448","fileSize":16384,"count":5},{"volume":"vol-2-53480","bucket":"bucket-4-32614","fileSize":16384,"count":5},{"volume":"vol-0-85286","bucket":"bucket-0-58075","fileSize":16384,"count":5},{"volume":"94991-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"94991-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"94991-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-47820","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-79010","fileSize":33554432,"count":0},{"volume":"s3v","bucket":"bucket-79010","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-48911","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86624","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89615","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-79010","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-72619","fileSize":1024,"count":2},{"volume":"vol-0-86634","bucket":"bucket-0-32618","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200630 06:32:52.438" endtime="20200630 06:32:52.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.439" endtime="20200630 06:32:52.440"></status>
</kw>
<msg timestamp="20200630 06:32:52.440" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.412" endtime="20200630 06:32:52.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.440" endtime="20200630 06:32:52.441"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.332" endtime="20200630 06:32:52.441"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:31.977" endtime="20200630 06:32:52.441"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:32:31.977" endtime="20200630 06:32:52.441" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.445" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.483" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.443" endtime="20200630 06:32:52.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.484" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  56186      0 --:--:-- --:--:-- --:--:-- 56625
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"5f187fff-72ec-4fe9-8950-e66ad68799ff","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593498748332,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25387982848},"pipelines":[{"pipelineID":"e6f17090-64ab-4cc2-97a5-b830884459a4","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"a2dc591d-9462-462d-b7f6-95e49fd67b54","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"188cff18-23e1-4164-8fcd-ec7b2c381c3c","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593498748176,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25387982848},"pipelines":[{"pipelineID":"03b2bd56-3df1-4d52-a09f-2c24d682b1f6","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"a2dc591d-9462-462d-b7f6-95e49fd67b54","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"0794d36c-43e7-4eb7-bc83-8948db693b91","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593498748290,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25387982848},"pipelines":[{"pipelineID":"850c5e92-2c37-4041-a5ae-4ece32d3d89e","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"a2dc591d-9462-462d-b7f6-95e49fd67b54","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200630 06:32:52.484" endtime="20200630 06:32:52.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.485" endtime="20200630 06:32:52.485"></status>
</kw>
<msg timestamp="20200630 06:32:52.486" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.443" endtime="20200630 06:32:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.486" endtime="20200630 06:32:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.486" endtime="20200630 06:32:52.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.487" endtime="20200630 06:32:52.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.487" endtime="20200630 06:32:52.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.490" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.510" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.488" endtime="20200630 06:32:52.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.511" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0    98k      0 --:--:-- --:--:-- --:--:--  102k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"850c5e92-2c37-4041-a5ae-4ece32d3d89e","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1328268,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"03b2bd56-3df1-4d52-a09f-2c24d682b1f6","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1327487,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"e6f17090-64ab-4cc2-97a5-b830884459a4","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1328686,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"a2dc591d-9462-462d-b7f6-95e49fd67b54","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1327469,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 06:32:52.511" endtime="20200630 06:32:52.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.512" endtime="20200630 06:32:52.512"></status>
</kw>
<msg timestamp="20200630 06:32:52.512" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.488" endtime="20200630 06:32:52.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.513" endtime="20200630 06:32:52.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.514" endtime="20200630 06:32:52.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.514" endtime="20200630 06:32:52.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.515" endtime="20200630 06:32:52.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.516" endtime="20200630 06:32:52.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.517" endtime="20200630 06:32:52.517"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.521" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.538" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.518" endtime="20200630 06:32:52.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.539" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  15657      0 --:--:-- --:--:-- --:--:-- 16909
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76163948544},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200630 06:32:52.539" endtime="20200630 06:32:52.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.540" endtime="20200630 06:32:52.540"></status>
</kw>
<msg timestamp="20200630 06:32:52.540" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.517" endtime="20200630 06:32:52.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.541" endtime="20200630 06:32:52.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.541" endtime="20200630 06:32:52.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.542" endtime="20200630 06:32:52.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.545" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.570" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.543" endtime="20200630 06:32:52.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.571" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  27460      0 --:--:-- --:--:-- --:--:-- 28375
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593497476009,"lastReportTimestamp":1593498735945},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593497475785,"lastReportTimestamp":1593498705486},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593497476226,"lastReportTimestamp":1593498711313}]</msg>
<status status="PASS" starttime="20200630 06:32:52.570" endtime="20200630 06:32:52.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.571" endtime="20200630 06:32:52.572"></status>
</kw>
<msg timestamp="20200630 06:32:52.572" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.543" endtime="20200630 06:32:52.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.572" endtime="20200630 06:32:52.573"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:32:52.442" endtime="20200630 06:32:52.573" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.578" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.580" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:32:52.575" endtime="20200630 06:32:52.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.581" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:32:52.581" endtime="20200630 06:32:52.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.582" endtime="20200630 06:32:52.582"></status>
</kw>
<msg timestamp="20200630 06:32:52.582" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:32:52.575" endtime="20200630 06:32:52.582"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.586" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:32:52.584" endtime="20200630 06:32:52.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.597" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:32:52.596" endtime="20200630 06:32:52.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.597" endtime="20200630 06:32:52.598"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.583" endtime="20200630 06:32:52.598"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.583" endtime="20200630 06:32:52.598"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.575" endtime="20200630 06:32:52.598"></status>
</kw>
<status status="PASS" starttime="20200630 06:32:52.574" endtime="20200630 06:32:52.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:32:52.601" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:32:52.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:32:52.650" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.599" endtime="20200630 06:32:52.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:32:52.652" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  19654      0 --:--:-- --:--:-- --:--:-- 20090
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x263af20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.8) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQLL1XuDSwcLCc4anLTpMTJgBXDYBFi53PydkPi73FYUCEa9zQTXK2GQ63Dr3mktuE/3zL9oY5wazZZOjtAL0cy0rq124WjTbkmjb23sZ5x5k1CwWoMuJIGcVvMk45doqmbelhSM7MCbZsaqLzyeHqChX0tBtD2Mbjk78tH2uO+V6WYznihd6ay+g7ZK2N1G8MW1fJMj9sTpX6vht+Tlek0mNjizssWBe6/QO/dMRZ7etsw0syX8fWpoBAKiae5fMmQbh27J83sabr9rQggy7D6E0Egi/kd7AW+HPtNL+N39GWQWzsAZrYMS+slWyt7dmX5imCbY37fLhxWC/dd6Ey5cgwekgdIwgc+gAwIBEqKBxwSBxGfn6bdDJp791Hsz6bK81Lj9OBfPaGdTjzLzjGsuo9wnIl5GNT22rh52wAJC4C4TgmZ9Ig1emR03e7/XHKxAgKzdyMRkpIduTS6J/ZUgCl6qGX0a2etOjuc8lY7TNI7mADHfkDa0hU3LMKYJqqXjuAQzEuRCKj0oE9tvZ8Al9fY8g+cLOjCLfAd2MctSF1nouRFyMzboDQEhIyNTYWIyl47bfp4jIPvap0TiJFd/iHYJVWhF1FwPM2PWxMf9SMlbP5tFNh4=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Date: Tue, 30 Jun 2020 06:32:52 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0K0iAFjzETWJiaqMZXVbRfbgJSbvUFWCXdqc3Jx093+AkK0gA53zPoTkD57OmNmEmVFicPWMtYUwMne/6x9q+LMg
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534772643&amp;s=/mKZdeT71pjUpP22jfk8OgZPoAdP0448URLzeSFaBLo="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 05:16:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  53448      0 --:--:-- --:--:-- --:--:-- 53448
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.650" endtime="20200630 06:32:52.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:32:52.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:32:52.652" endtime="20200630 06:32:52.653"></status>
</kw>
<msg timestamp="20200630 06:32:52.653" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:32:52.598" endtime="20200630 06:32:52.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 06:32:52.653" endtime="20200630 06:32:52.654"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:32:52.573" endtime="20200630 06:32:52.654" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 06:32:22.889" endtime="20200630 06:32:52.658"></status>
</suite>
<status status="PASS" starttime="20200630 06:32:22.858" endtime="20200630 06:32:52.663"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
