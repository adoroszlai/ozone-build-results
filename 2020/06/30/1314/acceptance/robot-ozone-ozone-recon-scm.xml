<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 05:59:28.917" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:28.969" endtime="20200630 05:59:28.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:28.973" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:37.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:37.317" level="INFO">${output} = 2020-06-30 05:59:30,414 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 05:59:30,577 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 05:59:28.970" endtime="20200630 05:59:37.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:37.318" level="INFO">2020-06-30 05:59:30,414 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 05:59:30,577 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 05:59:30,577 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 05:59:31,780 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 05:59:31,781 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 05:59:31,781 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 05:59:31,781 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 05:59:31,782 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 05:59:31,782 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 05:59:31,782 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 05:59:31,798 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 05:59:31,808 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 05:59:31,856 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-64734, with hadoop as owner.
2020-06-30 05:59:31,931 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-64734/bucket-0-70904, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:59:32,590 [pool-2-thread-7] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 05:59:32,812 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,010
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,120
Average Time spent in key write: 00:00:00,667
Total bytes written: 10250
Total Execution time: 00:00:06,190
***************************************************</msg>
<status status="PASS" starttime="20200630 05:59:37.317" endtime="20200630 05:59:37.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:37.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:37.318" endtime="20200630 05:59:37.319"></status>
</kw>
<status status="PASS" starttime="20200630 05:59:28.969" endtime="20200630 05:59:37.319"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 05:59:28.968" endtime="20200630 05:59:37.319" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:37.322" endtime="20200630 05:59:37.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:37.325" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:37.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:37.528" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:37.323" endtime="20200630 05:59:37.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:37.529" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    391      0 --:--:-- --:--:-- --:--:--   392
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 05:59:37.528" endtime="20200630 05:59:37.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:37.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:37.529" endtime="20200630 05:59:37.530"></status>
</kw>
<msg timestamp="20200630 05:59:37.530" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:37.322" endtime="20200630 05:59:37.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:37.530" endtime="20200630 05:59:37.530"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:37.536" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:37.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:37.577" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:37.531" endtime="20200630 05:59:37.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:37.578" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0  82416      0 --:--:-- --:--:-- --:--:-- 84205
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 05:59:37.578" endtime="20200630 05:59:37.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:37.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:37.579" endtime="20200630 05:59:37.579"></status>
</kw>
<msg timestamp="20200630 05:59:37.579" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:37.531" endtime="20200630 05:59:37.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 05:59:37.580" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0  82416      0 --:--:-- --:--:-- --:--:-- 84205
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 05:59:37.580" endtime="20200630 05:59:37.581"></status>
</kw>
<status status="FAIL" starttime="20200630 05:59:37.321" endtime="20200630 05:59:37.581"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:47.582" endtime="20200630 05:59:47.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:47.586" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:47.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:47.601" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:47.583" endtime="20200630 05:59:47.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:47.602" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8597      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 05:59:47.602" endtime="20200630 05:59:47.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:47.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:47.602" endtime="20200630 05:59:47.603"></status>
</kw>
<msg timestamp="20200630 05:59:47.603" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:47.583" endtime="20200630 05:59:47.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:47.603" endtime="20200630 05:59:47.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:47.607" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:47.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:47.622" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:47.604" endtime="20200630 05:59:47.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:47.622" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   279k      0 --:--:-- --:--:-- --:--:--  310k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 05:59:47.622" endtime="20200630 05:59:47.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:47.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:47.623" endtime="20200630 05:59:47.623"></status>
</kw>
<msg timestamp="20200630 05:59:47.624" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:47.604" endtime="20200630 05:59:47.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 05:59:47.625" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   279k      0 --:--:-- --:--:-- --:--:--  310k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 05:59:47.624" endtime="20200630 05:59:47.625"></status>
</kw>
<status status="FAIL" starttime="20200630 05:59:47.581" endtime="20200630 05:59:47.625"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:57.626" endtime="20200630 05:59:57.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:57.629" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:57.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:57.643" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:57.627" endtime="20200630 05:59:57.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:57.644" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  11654      0 --:--:-- --:--:-- --:--:-- 12833
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 05:59:57.643" endtime="20200630 05:59:57.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:57.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:57.644" endtime="20200630 05:59:57.645"></status>
</kw>
<msg timestamp="20200630 05:59:57.645" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:57.627" endtime="20200630 05:59:57.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:59:57.646" endtime="20200630 05:59:57.646"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:59:57.649" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:59:57.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:59:57.665" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:57.647" endtime="20200630 05:59:57.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:59:57.666" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   244k      0 --:--:-- --:--:-- --:--:--  254k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 05:59:57.666" endtime="20200630 05:59:57.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:59:57.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:59:57.667" endtime="20200630 05:59:57.667"></status>
</kw>
<msg timestamp="20200630 05:59:57.668" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 05:59:57.646" endtime="20200630 05:59:57.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 05:59:57.669" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Date: Tue, 30 Jun 2020 05:59:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   244k      0 --:--:-- --:--:-- --:--:--  254k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 05:59:57.668" endtime="20200630 05:59:57.669"></status>
</kw>
<status status="FAIL" starttime="20200630 05:59:57.625" endtime="20200630 05:59:57.669"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:07.671" endtime="20200630 06:00:07.671"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:07.674" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:07.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:07.697" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:07.672" endtime="20200630 06:00:07.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:07.698" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6451      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200630 06:00:07.697" endtime="20200630 06:00:07.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:07.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:07.698" endtime="20200630 06:00:07.699"></status>
</kw>
<msg timestamp="20200630 06:00:07.699" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:07.671" endtime="20200630 06:00:07.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:07.699" endtime="20200630 06:00:07.700"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:07.703" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:07.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:07.722" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:07.700" endtime="20200630 06:00:07.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:07.723" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   221k      0 --:--:-- --:--:-- --:--:--  232k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200630 06:00:07.722" endtime="20200630 06:00:07.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:07.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:07.723" endtime="20200630 06:00:07.724"></status>
</kw>
<msg timestamp="20200630 06:00:07.724" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:07.700" endtime="20200630 06:00:07.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 06:00:07.725" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2863
&lt; 
{ [data not shown]

100  2863  100  2863    0     0   221k      0 --:--:-- --:--:-- --:--:--  232k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 06:00:07.724" endtime="20200630 06:00:07.725"></status>
</kw>
<status status="FAIL" starttime="20200630 06:00:07.669" endtime="20200630 06:00:07.726"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.727" endtime="20200630 06:00:17.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.730" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.746" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.728" endtime="20200630 06:00:17.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.747" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  18891      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200630 06:00:17.747" endtime="20200630 06:00:17.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.747" endtime="20200630 06:00:17.748"></status>
</kw>
<msg timestamp="20200630 06:00:17.748" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.727" endtime="20200630 06:00:17.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.749" endtime="20200630 06:00:17.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.753" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.771" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.750" endtime="20200630 06:00:17.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.772" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3008
&lt; 
{ [data not shown]

100  3008  100  3008    0     0   220k      0 --:--:-- --:--:-- --:--:--  225k
* Connection #0 to host recon left intact
[{"volume":"vol-2-95562","bucket":"bucket-2-15164","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-0-33336","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-3-25427","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-0-03475","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-4-65190","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-2-82687","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-1-36249","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-1-75055","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-3-21469","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-4-94248","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-2-19689","fileSize":16384,"count":5},{"volume":"vol-1-78512","bucket":"bucket-0-93036","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-0-63529","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-0-26644","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-4-68919","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-1-14315","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-4-23017","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-1-61787","fileSize":16384,"count":5},{"volume":"vol-2-95562","bucket":"bucket-3-88718","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-2-11564","fileSize":16384,"count":5},{"volume":"vol-3-92444","bucket":"bucket-3-76586","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-4-29654","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-3-42127","fileSize":16384,"count":5},{"volume":"vol-4-39304","bucket":"bucket-1-87738","fileSize":16384,"count":5},{"volume":"vol-0-14067","bucket":"bucket-2-48665","fileSize":16384,"count":5},{"volume":"21023-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21023-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21023-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-70276","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-12426","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-25122","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-12426","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-52220","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-56383","fileSize":1024,"count":1},{"volume":"vol-0-64734","bucket":"bucket-0-70904","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-53658","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 06:00:17.771" endtime="20200630 06:00:17.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.772" endtime="20200630 06:00:17.773"></status>
</kw>
<msg timestamp="20200630 06:00:17.773" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.750" endtime="20200630 06:00:17.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.773" endtime="20200630 06:00:17.774"></status>
</kw>
<status status="PASS" starttime="20200630 06:00:17.726" endtime="20200630 06:00:17.774"></status>
</kw>
<status status="PASS" starttime="20200630 05:59:37.321" endtime="20200630 06:00:17.774"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 05:59:37.320" endtime="20200630 06:00:17.774" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.779" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.820" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.777" endtime="20200630 06:00:17.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.821" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0  48447      0 --:--:-- --:--:-- --:--:-- 48685
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"3ce5620a-5f48-4244-8d66-7ee833eaedf7","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1593496803489,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25662795776},"pipelines":[{"pipelineID":"6d54d742-c163-4889-9467-2962fb339ea2","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"2cebe231-fde5-49c9-bd96-72c27801f188","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":2},{"uuid":"857cfd37-7b9d-49fc-b9e1-cfe0c854fb4d","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1593496803553,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25662795776},"pipelines":[{"pipelineID":"15a2247c-5483-4578-931b-e3e139b99650","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"2cebe231-fde5-49c9-bd96-72c27801f188","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"e24142fc-ad70-4a6e-95b1-cf0fad423ecc","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1593496803464,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25662795776},"pipelines":[{"pipelineID":"b0c99e5b-cb7d-4fd2-8b9d-ec0b0197f4ea","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"2cebe231-fde5-49c9-bd96-72c27801f188","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200630 06:00:17.821" endtime="20200630 06:00:17.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.822" endtime="20200630 06:00:17.822"></status>
</kw>
<msg timestamp="20200630 06:00:17.823" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.776" endtime="20200630 06:00:17.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.823" endtime="20200630 06:00:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.824" endtime="20200630 06:00:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.824" endtime="20200630 06:00:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.825" endtime="20200630 06:00:17.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.828" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.857" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.826" endtime="20200630 06:00:17.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.858" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1248
&lt; 
{ [data not shown]

100  1248  100  1248    0     0  53800      0 --:--:-- --:--:-- --:--:-- 52000
100  1248  100  1248    0     0  52733      0 --:--:-- --:--:-- --:--:-- 52000
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"b0c99e5b-cb7d-4fd2-8b9d-ec0b0197f4ea","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1090187,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"15a2247c-5483-4578-931b-e3e139b99650","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1089547,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6d54d742-c163-4889-9467-2962fb339ea2","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1090446,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"2cebe231-fde5-49c9-bd96-72c27801f188","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default","ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1089532,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 06:00:17.858" endtime="20200630 06:00:17.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.858" endtime="20200630 06:00:17.859"></status>
</kw>
<msg timestamp="20200630 06:00:17.859" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.825" endtime="20200630 06:00:17.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.860" endtime="20200630 06:00:17.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.860" endtime="20200630 06:00:17.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.861" endtime="20200630 06:00:17.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.862" endtime="20200630 06:00:17.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.863" endtime="20200630 06:00:17.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.863" endtime="20200630 06:00:17.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.867" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.888" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.864" endtime="20200630 06:00:17.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.889" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  11746      0 --:--:-- --:--:-- --:--:-- 12400
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76988387328},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200630 06:00:17.888" endtime="20200630 06:00:17.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.889" endtime="20200630 06:00:17.890"></status>
</kw>
<msg timestamp="20200630 06:00:17.890" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.864" endtime="20200630 06:00:17.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.890" endtime="20200630 06:00:17.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.891" endtime="20200630 06:00:17.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.891" endtime="20200630 06:00:17.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.897" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.923" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.892" endtime="20200630 06:00:17.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.924" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  20645      0 --:--:-- --:--:-- --:--:-- 22000
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1593495784907,"lastReportTimestamp":1593496744817},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1593495785151,"lastReportTimestamp":1593496773512},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1593495785302,"lastReportTimestamp":1593496773563}]</msg>
<status status="PASS" starttime="20200630 06:00:17.923" endtime="20200630 06:00:17.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.924" endtime="20200630 06:00:17.925"></status>
</kw>
<msg timestamp="20200630 06:00:17.925" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.892" endtime="20200630 06:00:17.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.926" endtime="20200630 06:00:17.926"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:00:17.775" endtime="20200630 06:00:17.926" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.931" endtime="20200630 06:00:17.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:00:17.935" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:00:17.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:00:17.955" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.933" endtime="20200630 06:00:17.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:00:17.956" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.2...
* Connected to recon (172.23.0.2) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Date: Tue, 30 Jun 2020 06:00:17 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Tue, 30 Jun 2020 05:16:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   163k      0 --:--:-- --:--:-- --:--:--  170k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.955" endtime="20200630 06:00:17.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:00:17.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:00:17.956" endtime="20200630 06:00:17.956"></status>
</kw>
<msg timestamp="20200630 06:00:17.957" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 06:00:17.932" endtime="20200630 06:00:17.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 06:00:17.957" endtime="20200630 06:00:17.957"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:00:17.928" endtime="20200630 06:00:17.958" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 05:59:28.944" endtime="20200630 06:00:17.960"></status>
</suite>
<status status="PASS" starttime="20200630 05:59:28.917" endtime="20200630 06:00:17.964"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
