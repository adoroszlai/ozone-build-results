<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 06:33:14.189" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:14.257" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:14.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:14.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:14.253" endtime="20200630 06:33:14.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:14.261" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:14.260" endtime="20200630 06:33:14.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:14.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:14.261" endtime="20200630 06:33:14.262"></status>
</kw>
<msg timestamp="20200630 06:33:14.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:14.253" endtime="20200630 06:33:14.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:14.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:14.262" endtime="20200630 06:33:14.264"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:14.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:14.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:14.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:14.265" endtime="20200630 06:33:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:14.278" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:14.277" endtime="20200630 06:33:14.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:14.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:14.278" endtime="20200630 06:33:14.279"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:14.264" endtime="20200630 06:33:14.279"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:14.264" endtime="20200630 06:33:14.279"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:14.252" endtime="20200630 06:33:14.279"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:14.252" endtime="20200630 06:33:14.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:14.281" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.324" level="INFO">${output} = 2020-06-30 06:33:15,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 06:33:16,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 06:33:14.280" endtime="20200630 06:33:23.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.325" level="INFO">2020-06-30 06:33:15,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 06:33:16,024 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 06:33:16,024 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 06:33:17,667 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 06:33:17,668 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 06:33:17,690 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 06:33:17,702 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-30 06:33:17,731 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-46087, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 06:33:17,769 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-46087/bucket-0-74819, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 06:33:18,380 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 06:33:18,706 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,029
Average Time spent in key write: 00:00:00,110
Total bytes written: 2050
Total Execution time: 00:00:06,640
***************************************************</msg>
<status status="PASS" starttime="20200630 06:33:23.324" endtime="20200630 06:33:23.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.325" endtime="20200630 06:33:23.326"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:14.279" endtime="20200630 06:33:23.326"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:14.250" endtime="20200630 06:33:23.326" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.338" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.336" endtime="20200630 06:33:23.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.344" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.343" endtime="20200630 06:33:23.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.344" endtime="20200630 06:33:23.344"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.336" endtime="20200630 06:33:23.345"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.335" endtime="20200630 06:33:23.345"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.347" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.373" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 06:33:23.345" endtime="20200630 06:33:23.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.374" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 06:33:23.373" endtime="20200630 06:33:23.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.374" endtime="20200630 06:33:23.375"></status>
</kw>
<msg timestamp="20200630 06:33:23.375" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 06:33:23.345" endtime="20200630 06:33:23.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.375" endtime="20200630 06:33:23.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.380" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.377" endtime="20200630 06:33:23.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.384" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:23.383" endtime="20200630 06:33:23.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.384" endtime="20200630 06:33:23.384"></status>
</kw>
<msg timestamp="20200630 06:33:23.385" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.377" endtime="20200630 06:33:23.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:23.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:23.385" endtime="20200630 06:33:23.386"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.389" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.387" endtime="20200630 06:33:23.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.402" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.401" endtime="20200630 06:33:23.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.402" endtime="20200630 06:33:23.403"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.386" endtime="20200630 06:33:23.403"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.386" endtime="20200630 06:33:23.403"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.376" endtime="20200630 06:33:23.403"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.376" endtime="20200630 06:33:23.403"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.406" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.436" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 06:33:23.404" endtime="20200630 06:33:23.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.437" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x9e9f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaBoG8tv+KI5Ka29mI3Dn3/H2vsOpsk9CxtXR6q071fO/0Dqeg26wXg+WVdHPV8ARsywDSyGYytc63bqFCQQM3DGETCiAvnjPk2dfrFoQrRRGRLfBsSr/iiT1ZhBH2PelzEZAgWEviR6o/xV+psnk22UldV6t9FxHYH1mjOmWdg0gUooBeGrhyvu0+5SUUKuKadweecVnEVokDJrzz8TrEAVdYGHwMHR5JnO6xxjyPi8qjcackPoH6P43B3F7HdLo2QJjx6zHT051yt5fQ8JaSda/liPWeom/rXPf8RuifJlZE4+P1pq+1B40Uw7HplmqE19ZaMy5+elT5XBFTGl4ogmS3YTxBapIHWMIHToAMCARKigcsEgchkLd5P+macErSCIf7K7xe3nXEEXAIB17bmk7K+dmUi2H9d/zPo78iSrW0tGKhEmYQYtUR16Bc9pDbVuhwnr5j8dKcGVoGptVPOOSfUrUalzRj8Y0eFLgMDRA6Hl8N5TT8axoVQbPRVLEQWHHNdVNPeVpEkdHJvA1NYTk2cFq738H4jBYvpBzTAUqPoT9h6cgim/XPcAD2fsQjtp5qNerG9fHNbRGgUTUVL9CFZG5FTWDqmZwD8lXlYXh7rqzec+OyqMs5DwzVaZg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCN0hvs7J78mkObi5oqGNn7s67jjOMW0qpXPXC8z1Ijz/fTeR3ZB34fPKYR8vt1rmeyqq2X4LBODrvwTTWWBmqnVHv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803428&amp;s=dZfey7us45fCoBwOf+YLxKzmwDxQQnA/DwXBC0qlR5g="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 05:10:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 06:33:23 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCN0hvs7J78mkObi5oqGNn7s67jjOMW0qpXPXC8z1Ijz/fTeR3ZB34fPKYR8vt1rmeyqq2X4LBODrvwTTWWBmqnVHv
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803428&amp;s=dZfey7us45fCoBwOf+YLxKzmwDxQQnA/DwXBC0qlR5g="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 05:10:58 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200630 06:33:23.436" endtime="20200630 06:33:23.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.438" endtime="20200630 06:33:23.439"></status>
</kw>
<msg timestamp="20200630 06:33:23.439" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 06:33:23.403" endtime="20200630 06:33:23.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.439" endtime="20200630 06:33:23.440"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.329" endtime="20200630 06:33:23.440"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:23.328" endtime="20200630 06:33:23.440" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.445" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.443" endtime="20200630 06:33:23.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.450" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.449" endtime="20200630 06:33:23.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.450" endtime="20200630 06:33:23.451"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.443" endtime="20200630 06:33:23.451"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.442" endtime="20200630 06:33:23.451"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.454" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.467" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.452" endtime="20200630 06:33:23.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.468" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200630 06:33:23.467" endtime="20200630 06:33:23.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.468" endtime="20200630 06:33:23.468"></status>
</kw>
<msg timestamp="20200630 06:33:23.469" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.451" endtime="20200630 06:33:23.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.469" endtime="20200630 06:33:23.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.473" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.475" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.471" endtime="20200630 06:33:23.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.476" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:23.475" endtime="20200630 06:33:23.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.476" endtime="20200630 06:33:23.476"></status>
</kw>
<msg timestamp="20200630 06:33:23.477" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.470" endtime="20200630 06:33:23.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:23.477" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:23.477" endtime="20200630 06:33:23.478"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.480" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.479" endtime="20200630 06:33:23.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.496" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.496" endtime="20200630 06:33:23.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.497" endtime="20200630 06:33:23.497"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.478" endtime="20200630 06:33:23.497"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.478" endtime="20200630 06:33:23.497"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.470" endtime="20200630 06:33:23.497"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.469" endtime="20200630 06:33:23.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.500" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.570" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.498" endtime="20200630 06:33:23.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.571" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x20dbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbw8Ztqn5zLahdICoKU7sulhlDolpq0hvpv4wV3cY60FxGyMmEkgkHZKsqt8Y7OFXYeubLTqlh2WVTpy9TUUklSdX0OTcZ8a2ENUiMM6/MakUqinoQpqvMqKV4BBXtYgrVgo0Ezxh1hV4tdCNt6ljSZC63xDY+FLKDprw0nWxpFmAe62Ct+KkaR+E2/AmRFcDNCBrZMyLYaNqYz6efwEwdqs7t7FrFRJMia7c/UzCG3BwyFi84jO2nrWJOAEdM7ONmnUg74OUI4hER12Yw4ildB8u4vFFUlUHRq9mSLFWB8+x35Kpo8B2El14BMX+T9xnr1+Kbn1bfzRahicOHjVMoJE+zV7mV5pIHWMIHToAMCARKigcsEgchOHekP+xrkydcHp+eX8+nE/xTbUo77fm5D4qCo/5TmkMybGSi2aeEkNPs4toOjBL0Q4re98Tw78wRUCH8FQ7XzcQi78mz32HVYY1b1DZeZKaiDAASUh+VA/mAZw9SGAqRGPfLtjXYuqosg88OVmMP5nb2fHAdRzmRZbdkLqi5nRAAKtuLaYoLzs7Vkx7OZ05GhmNzfwDMFl4MXWulRdO063P/CWdSheaOF8UJfP47OZaDlRDagX1bXqsiUOHBdNw8zls89uUbbLQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKorPSB8dXMMahJWMFXSd3PWHEx6+aD0AxDjNzOOJShzvtB28/6Hk3ox9CW/SFyVMEC1Q/M29i66kLL51Ecac+cx2
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803531&amp;s=TqjuG/MUXJHoO295AnuyYaZ2G9Hu1WY6qGfNwJq/OCQ="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593498803531.tgz"
&lt; Content-Length: 75428
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 06:33:23 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKorPSB8dXMMahJWMFXSd3PWHEx6+aD0AxDjNzOOJShzvtB28/6Hk3ox9CW/SFyVMEC1Q/M29i66kLL51Ecac+cx2
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803531&amp;s=TqjuG/MUXJHoO295AnuyYaZ2G9Hu1WY6qGfNwJq/OCQ="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593498803531.tgz"
Content-Length: 75428
</msg>
<status status="PASS" starttime="20200630 06:33:23.570" endtime="20200630 06:33:23.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.571" endtime="20200630 06:33:23.572"></status>
</kw>
<msg timestamp="20200630 06:33:23.572" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.498" endtime="20200630 06:33:23.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.572" endtime="20200630 06:33:23.572"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.442" endtime="20200630 06:33:23.573"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:23.441" endtime="20200630 06:33:23.573" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.578" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.576" endtime="20200630 06:33:23.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.582" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.582" endtime="20200630 06:33:23.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.582" endtime="20200630 06:33:23.583"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.575" endtime="20200630 06:33:23.583"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.575" endtime="20200630 06:33:23.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.587" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.599" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 06:33:23.584" endtime="20200630 06:33:23.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.600" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200630 06:33:23.599" endtime="20200630 06:33:23.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.601" endtime="20200630 06:33:23.601"></status>
</kw>
<msg timestamp="20200630 06:33:23.602" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 06:33:23.583" endtime="20200630 06:33:23.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.602" endtime="20200630 06:33:23.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.605" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.603" endtime="20200630 06:33:23.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.609" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:23.608" endtime="20200630 06:33:23.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.609" endtime="20200630 06:33:23.610"></status>
</kw>
<msg timestamp="20200630 06:33:23.610" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.603" endtime="20200630 06:33:23.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:23.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:23.610" endtime="20200630 06:33:23.611"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.614" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.612" endtime="20200630 06:33:23.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.625" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.624" endtime="20200630 06:33:23.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.625" endtime="20200630 06:33:23.625"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.611" endtime="20200630 06:33:23.626"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.611" endtime="20200630 06:33:23.626"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.603" endtime="20200630 06:33:23.626"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.602" endtime="20200630 06:33:23.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.630" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.663" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 06:33:23.626" endtime="20200630 06:33:23.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.664" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x21cdf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaerP0SEUtC68xYeXLuLfjJS37UuB/f6ApIb3RGf1Qpc+ttpJfua9ImDK+LXocnx5bvfn8xlhdHsAtme8pPJ2RDlt4anF5/5/m8aCzVN8zdIV5nimtc+lr5W9xuNMHbQL4QCvCpYMAMh53FBhq9HnOyZMJ9yzqEEfaPlUAwGx1wB7hvD7vgkzDL7OE95f/y/+wCSrg1T5/cfLwFMPYvBKzBKFDxQLy2hnXBbzkcJ1MViufvl/p6d+AO/IGbWRihiJPMzOE7kSTbsjG6nTcy++v8BoXm8bj5PdY2DUneTs9V1z//BzFkEA7HVFFMW+DgrnWNQxZ7hp9vcsl7UYtfn2zFaKMd2NXApIHWMIHToAMCARKigcsEgcgkW15iiT/d7lUrGJLysCKpLsvRaYuUbhdSBVT8NbSQxHJcahv+wbYApAB2NHdV5v8IoefvicX3X9qEzPi7DdPbKGjJEzg7TkmU5PMiP7IluAULCEMvtxN8IOm7NxCshNPtrYDXytOUBKuLN6YYagCXShq+WUSYz7voypl2Wx0MYE8uXG3iOLC84Vdmdz4/T6fMpOi2/1TqDfTPkIQNOQhf59hvk+/ruu/XlpKwWN1sQfst1bCX1kg5I4UT/sNQVq40nWuSz2vPDQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3oj1iLE5pewyMFJkjt2i5sPrisKA38mMtLNqLxu7A/mH9A0Y35wfvuKVC3cYR0Nph12WqSNPePOH7yd3bdt4L0F9
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803652&amp;s=G5DVWM7/ZFclDEEuo+rsQhc6xl7KDGvIO/7zB3JBuEk="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 06:33:23 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3oj1iLE5pewyMFJkjt2i5sPrisKA38mMtLNqLxu7A/mH9A0Y35wfvuKVC3cYR0Nph12WqSNPePOH7yd3bdt4L0F9
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803652&amp;s=G5DVWM7/ZFclDEEuo+rsQhc6xl7KDGvIO/7zB3JBuEk="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200630 06:33:23.663" endtime="20200630 06:33:23.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.664" endtime="20200630 06:33:23.665"></status>
</kw>
<msg timestamp="20200630 06:33:23.665" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 06:33:23.626" endtime="20200630 06:33:23.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.665" endtime="20200630 06:33:23.666"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.574" endtime="20200630 06:33:23.666"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:23.573" endtime="20200630 06:33:23.666" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.671" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.669" endtime="20200630 06:33:23.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.676" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.676" endtime="20200630 06:33:23.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.676" endtime="20200630 06:33:23.677"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.669" endtime="20200630 06:33:23.677"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.668" endtime="20200630 06:33:23.677"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.681" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.701" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 06:33:23.678" endtime="20200630 06:33:23.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.702" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 06:33:23.701" endtime="20200630 06:33:23.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.702" endtime="20200630 06:33:23.702"></status>
</kw>
<msg timestamp="20200630 06:33:23.703" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 06:33:23.678" endtime="20200630 06:33:23.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.703" endtime="20200630 06:33:23.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.708" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.709" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.705" endtime="20200630 06:33:23.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.710" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:23.709" endtime="20200630 06:33:23.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.710" endtime="20200630 06:33:23.711"></status>
</kw>
<msg timestamp="20200630 06:33:23.711" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.704" endtime="20200630 06:33:23.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:23.712" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:23.711" endtime="20200630 06:33:23.712"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.716" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.713" endtime="20200630 06:33:23.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.726" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.725" endtime="20200630 06:33:23.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.726" endtime="20200630 06:33:23.726"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.712" endtime="20200630 06:33:23.727"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.712" endtime="20200630 06:33:23.727"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.704" endtime="20200630 06:33:23.727"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.703" endtime="20200630 06:33:23.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.729" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.757" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 06:33:23.727" endtime="20200630 06:33:23.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.758" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x23fef20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.9) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGSVU5FB/sAO+UrJ2uEd7ByQJHVRIrVrprGZtJ/jhkL7MfNEDTPWIAVyGj2p1bOHjNhBsRIMTPxqVbjRM8dN+bbw48tga0NF94UmTBVGFJJiIMUaGexguMuorGGnmycLTP1Nbww9kBi8KY0sYEC+sAgAhXdUH+ez8tH3k6kOiwILw9rlPoWadO6zC/nnM7XVi1gw2P0Y5vH5fKzjHcOkpLO7ZtQpGV1/4p2Fkyx7zJeMiNwNM2iyzC5euEmAJsPgJtC+EVU99bDQt9ZIgmkumlvY7wBpbk1CpPC9NyjR3Z8LaFRYHDbxSacBDUwiSp+TvC1+Z9wfCLdG9VSzp2n3W5CJ+zGJwZWKSB1jCB06ADAgESooHLBIHIQ5gZfNcaG1o51zlr0Rq3S8FQlZcy+32dXwqq6+FdKMadnn4LImr3AtqRoSlKEbxs0XodZAnoC507pQs/mVD/hfW+XWTTun91e1uQGPnYxj+DYd4vJliHioJ4WmTzQZO1pEkh+tZW7hEJRp5q9gq7C4EWZBT9BwVaCWlxzz98yJQkC56xLElgoZ0YRsRs3wb5vbLSkawUr8v4azwKs1p/mWjL+xwoLo3Rgt2wKjvP+Lpc7ua77PB9Feuo4uok+hfuBV8cUFsxTHY=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCg2qL+njYoHkfKiIoGdghSNSxG9fhS+CtABwj8AtIjWg/3pMEzq8UhNp/log5Kr3BC831aYnyV16yX/AiOKQlhzmq
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803752&amp;s=uhvVN+D6RrlCAKNhicXHBI2DSMwPUDbYcQUQbmz5to0="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 05:10:34 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 06:33:23 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCg2qL+njYoHkfKiIoGdghSNSxG9fhS+CtABwj8AtIjWg/3pMEzq8UhNp/log5Kr3BC831aYnyV16yX/AiOKQlhzmq
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803752&amp;s=uhvVN+D6RrlCAKNhicXHBI2DSMwPUDbYcQUQbmz5to0="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 05:10:34 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200630 06:33:23.758" endtime="20200630 06:33:23.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.759" endtime="20200630 06:33:23.759"></status>
</kw>
<msg timestamp="20200630 06:33:23.759" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 06:33:23.727" endtime="20200630 06:33:23.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.760" endtime="20200630 06:33:23.760"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.668" endtime="20200630 06:33:23.760"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:23.667" endtime="20200630 06:33:23.760" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.765" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.763" endtime="20200630 06:33:23.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.769" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.769" endtime="20200630 06:33:23.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.770" endtime="20200630 06:33:23.770"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.762" endtime="20200630 06:33:23.770"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.762" endtime="20200630 06:33:23.770"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.774" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.793" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.771" endtime="20200630 06:33:23.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.794" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 06:33:23.793" endtime="20200630 06:33:23.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.795" endtime="20200630 06:33:23.795"></status>
</kw>
<msg timestamp="20200630 06:33:23.795" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.770" endtime="20200630 06:33:23.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.796" endtime="20200630 06:33:23.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.799" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.797" endtime="20200630 06:33:23.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.803" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 06:33:23.802" endtime="20200630 06:33:23.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.803" endtime="20200630 06:33:23.804"></status>
</kw>
<msg timestamp="20200630 06:33:23.804" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 06:33:23.797" endtime="20200630 06:33:23.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 06:33:23.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 06:33:23.804" endtime="20200630 06:33:23.804"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.809" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 06:33:23.806" endtime="20200630 06:33:23.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.824" level="INFO"></msg>
<status status="PASS" starttime="20200630 06:33:23.823" endtime="20200630 06:33:23.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.824" endtime="20200630 06:33:23.825"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.805" endtime="20200630 06:33:23.825"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.805" endtime="20200630 06:33:23.825"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.797" endtime="20200630 06:33:23.825"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.796" endtime="20200630 06:33:23.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 06:33:23.829" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 06:33:23.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 06:33:23.858" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.826" endtime="20200630 06:33:23.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 06:33:23.859" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xb05f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.8) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbDP2hV9yCPcwm+uetWSPRSIaBuZrMJPsuYosy8yauw0BoBoNBY2V6pzcMwdLjTXfj1CvgRmNQzeZRJddZwzexrJrFwRXqGnasX5JNqFP6l4anHpj6Y47xChCI+ehXRyrFkkm+cUKIXWAckDBef95PR5kpIIRS2SW6F8xSOkS0V4eE4o6P5V+S0D0hN3JwNot5L5sApJaHkAh87hI8KQpVB3LY7WR0w2CAlwlO1ldz/Xf/h106nMKH6aIPSlIw6gqb34m5+vpALLHpIbXiEYj11WCJKbseEB3YGq3YMw2EX2jK7I25Tyjy1D5b5mEmAJGOFn8KBrCLNuuANdTgXKgH08lPiQsrbpIHWMIHToAMCARKigcsEgcg/z4UMV/dWkg1XFZu+BGRGX3SBq/0sbUE5QgAlg4ceXtM7VuCNH82PZa9lGvZv41lXErtnLxGFBSNTFB+xsm9leMKtTW2KMTEJpMi2Rr2/zc55EYygEZszc+2JEHJnXx1jKlIqA00AQwBhobTSgXY/x+M0JsGzixiGG5oSP/hO0Nwj4fZKuFZSGSDfv05bcBy/9LrwIVUqiCaRu3NJUBmI+vuSgKaBja+SmbqkN+GCogl6ZzM2Bs3bTppoEs+GrlgKuaaMALcD7w==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Date: Tue, 30 Jun 2020 06:33:23 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCU3HrZWTQBPPDBbPgmi3WqL2snm63N0D+E3KATDYFBZ5ywV3WX1sWBi6p6hScSeXn8hZWRbS1rU5lc5iys9GuUdRG
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803849&amp;s=JOIrlyIG0fQc8E6NXyedegfmYJl4QX1Gx6EkG0KjWnQ="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 05:16:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 06:33:23 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 06:33:23 GMT
Date: Tue, 30 Jun 2020 06:33:23 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCU3HrZWTQBPPDBbPgmi3WqL2snm63N0D+E3KATDYFBZ5ywV3WX1sWBi6p6hScSeXn8hZWRbS1rU5lc5iys9GuUdRG
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593534803849&amp;s=JOIrlyIG0fQc8E6NXyedegfmYJl4QX1Gx6EkG0KjWnQ="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 05:16:00 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200630 06:33:23.858" endtime="20200630 06:33:23.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 06:33:23.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 06:33:23.859" endtime="20200630 06:33:23.860"></status>
</kw>
<msg timestamp="20200630 06:33:23.860" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.8...
* Connected to recon (172.26.0.8) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200630 06:33:23.826" endtime="20200630 06:33:23.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 06:33:23.860" endtime="20200630 06:33:23.861"></status>
</kw>
<status status="PASS" starttime="20200630 06:33:23.762" endtime="20200630 06:33:23.861"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 06:33:23.761" endtime="20200630 06:33:23.861" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 06:33:14.222" endtime="20200630 06:33:23.862"></status>
</suite>
<status status="PASS" starttime="20200630 06:33:14.190" endtime="20200630 06:33:23.864"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
