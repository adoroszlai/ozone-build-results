<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 05:42:26.864" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 05:42:26.922" endtime="20200630 05:42:26.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:42:26.927" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:42:27.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:42:27.007" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 05:42:26 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 05:10:22 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 05:42:26.923" endtime="20200630 05:42:27.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:42:27.008" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 05:42:26 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 05:10:22 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 05:42:27.008" endtime="20200630 05:42:27.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:42:27.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:42:27.009" endtime="20200630 05:42:27.009"></status>
</kw>
<msg timestamp="20200630 05:42:27.010" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 05:42:26 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 05:10:22 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 05:42:26.923" endtime="20200630 05:42:27.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 05:42:27.010" endtime="20200630 05:42:27.011"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 05:42:26.922" endtime="20200630 05:42:27.011" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:42:27.013" endtime="20200630 05:42:27.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:42:27.021" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:36.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:36.352" level="INFO">${output} = 2020-06-30 05:42:28,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 05:42:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 05:42:27.014" endtime="20200630 05:43:36.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:36.353" level="INFO">2020-06-30 05:42:28,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 05:42:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 05:42:28,770 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 05:42:30,968 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 05:42:30,969 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 05:42:30,975 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 05:42:30,976 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 05:42:30,986 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 05:42:31,028 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-14067, with hadoop as owner.
2020-06-30 05:42:31,351 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-78512, with hadoop as owner.
2020-06-30 05:42:31,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-95562, with hadoop as owner.
2020-06-30 05:42:31,378 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-92444, with hadoop as owner.
2020-06-30 05:42:31,388 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-39304, with hadoop as owner.
2020-06-30 05:42:31,400 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14067/bucket-0-26644, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,516 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78512/bucket-0-93036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,537 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95562/bucket-0-63529, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,550 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-92444/bucket-0-03475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39304/bucket-0-33336, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,573 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14067/bucket-1-14315, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,581 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78512/bucket-1-75055, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95562/bucket-1-36249, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-92444/bucket-1-61787, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39304/bucket-1-87738, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,611 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14067/bucket-2-48665, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,615 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78512/bucket-2-19689, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95562/bucket-2-15164, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,625 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-92444/bucket-2-82687, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,629 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39304/bucket-2-11564, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,638 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14067/bucket-3-42127, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,643 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78512/bucket-3-25427, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,647 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95562/bucket-3-88718, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-92444/bucket-3-76586, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39304/bucket-3-21469, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14067/bucket-4-23017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78512/bucket-4-65190, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,671 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95562/bucket-4-94248, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,675 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-92444/bucket-4-68919, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,684 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-39304/bucket-4-29654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 05:42:31,988 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 05:42:32,989 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 05:42:33,155 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 05:42:33,995 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 05:42:34,995 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 05:42:35,996 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-30 05:42:37,000 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-06-30 05:42:38,027 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-06-30 05:42:39,028 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 05:42:40,028 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 05:42:41,029 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 05:42:42,030 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-30 05:42:43,030 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-30 05:42:44,031 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-30 05:42:45,031 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-30 05:42:46,032 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-30 05:42:47,032 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-30 05:42:48,033 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 05:42:49,033 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-06-30 05:42:50,034 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-06-30 05:42:51,035 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-30 05:42:52,036 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 05:42:53,036 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-30 05:42:54,037 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-30 05:42:55,038 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 05:42:56,038 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 05:42:57,038 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 05:42:58,039 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-30 05:42:59,039 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-30 05:43:00,040 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-30 05:43:01,040 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 05:43:02,041 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 05:43:03,041 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-30 05:43:04,042 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 05:43:05,042 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 05:43:06,043 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 05:43:07,043 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-30 05:43:08,044 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-30 05:43:09,045 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-06-30 05:43:10,046 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-30 05:43:11,046 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-30 05:43:12,047 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 05:43:13,047 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 05:43:14,048 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 05:43:15,048 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 05:43:16,049 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-30 05:43:17,049 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 05:43:18,050 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 05:43:19,050 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 05:43:20,051 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-06-30 05:43:21,051 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-06-30 05:43:22,052 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-06-30 05:43:23,052 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-30 05:43:24,053 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-30 05:43:25,054 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-06-30 05:43:26,054 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 05:43:27,055 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 05:43:28,055 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 05:43:29,056 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,378
Average Time spent in bucket creation: 00:00:00,186
Average Time spent in key creation: 00:00:02,380
Average Time spent in key write: 00:00:01,137
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,074
***************************************************</msg>
<status status="PASS" starttime="20200630 05:43:36.353" endtime="20200630 05:43:36.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:36.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:36.354" endtime="20200630 05:43:36.354"></status>
</kw>
<msg timestamp="20200630 05:43:36.355" level="INFO">${result} = 2020-06-30 05:42:28,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 05:42:28,770 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 05:42:27.014" endtime="20200630 05:43:36.355"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:36.355" endtime="20200630 05:43:36.356"></status>
</kw>
<status status="PASS" starttime="20200630 05:43:36.355" endtime="20200630 05:43:36.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:36.356" endtime="20200630 05:43:36.357"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 05:42:27.011" endtime="20200630 05:43:36.357" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 05:42:26.895" endtime="20200630 05:43:36.358"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 05:43:36.368" level="INFO">${random} = 21023</msg>
<status status="PASS" starttime="20200630 05:43:36.367" endtime="20200630 05:43:36.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 05:43:36.368" level="INFO">${prefix} = 21023</msg>
<status status="PASS" starttime="20200630 05:43:36.368" endtime="20200630 05:43:36.368"></status>
</kw>
<status status="PASS" starttime="20200630 05:43:36.367" endtime="20200630 05:43:36.368"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:36.369" endtime="20200630 05:43:36.370"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:36.373" level="INFO">Running command 'ozone sh volume info o3://om:9862/21023-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:39.161" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:43:39.161" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21023-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 05:43:36.371" endtime="20200630 05:43:39.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:39.162" level="INFO">VOLUME_NOT_FOUND Volume 21023-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 05:43:39.162" endtime="20200630 05:43:39.163"></status>
</kw>
<msg timestamp="20200630 05:43:39.163" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21023-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 05:43:36.370" endtime="20200630 05:43:39.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:39.163" endtime="20200630 05:43:39.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:39.167" level="INFO">Running command 'ozone sh volume create o3://om:9862/21023-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:41.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:41.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:43:39.164" endtime="20200630 05:43:41.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:41.906" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:43:41.905" endtime="20200630 05:43:41.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:41.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:41.906" endtime="20200630 05:43:41.907"></status>
</kw>
<msg timestamp="20200630 05:43:41.907" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:43:39.163" endtime="20200630 05:43:41.907"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:41.907" endtime="20200630 05:43:41.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:41.911" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="21023-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:45.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:45.072" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 05:43:41.908" endtime="20200630 05:43:45.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:45.073" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:43:45.073" endtime="20200630 05:43:45.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:45.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:45.074" endtime="20200630 05:43:45.074"></status>
</kw>
<msg timestamp="20200630 05:43:45.074" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 05:43:41.908" endtime="20200630 05:43:45.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:45.075" endtime="20200630 05:43:45.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:45.078" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21023-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:48.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:48.237" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 05:43:45.076" endtime="20200630 05:43:48.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:48.239" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:43:48.238" endtime="20200630 05:43:48.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:48.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:48.239" endtime="20200630 05:43:48.240"></status>
</kw>
<msg timestamp="20200630 05:43:48.240" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:43:41.735Z",
  "modificationTime": "2020-06-30T05:43:41.735Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 05:43:45.075" endtime="20200630 05:43:48.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:48.241" endtime="20200630 05:43:48.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:48.245" level="INFO">Running command 'ozone sh volume update o3://om:9862/21023-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:51.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:51.162" level="INFO">${output} = {
  "metadata" : { },
  "name" : "21023-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:43:41.735Z",
  "modificationTime" : "2020-06-30T05:43:50.676Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 05:43:48.242" endtime="20200630 05:43:51.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:51.163" level="INFO">{
  "metadata" : { },
  "name" : "21023-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:43:41.735Z",
  "modificationTime" : "2020-06-30T05:43:50.676Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 05:43:51.162" endtime="20200630 05:43:51.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:51.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:51.163" endtime="20200630 05:43:51.164"></status>
</kw>
<status status="PASS" starttime="20200630 05:43:48.241" endtime="20200630 05:43:51.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:51.167" level="INFO">Running command 'ozone sh volume info o3://om:9862/21023-rpcwoport | jq -r '. | select(.name=="21023-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:54.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:54.353" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:43:51.165" endtime="20200630 05:43:54.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:54.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 05:43:54.353" endtime="20200630 05:43:54.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:54.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:54.354" endtime="20200630 05:43:54.355"></status>
</kw>
<msg timestamp="20200630 05:43:54.355" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:43:51.164" endtime="20200630 05:43:54.355"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 05:43:54.355" endtime="20200630 05:43:54.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:54.359" level="INFO">Running command 'ozone sh bucket create o3://om:9862/21023-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:43:57.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:43:57.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:43:54.357" endtime="20200630 05:43:57.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:43:57.197" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:43:57.196" endtime="20200630 05:43:57.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:43:57.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:43:57.198" endtime="20200630 05:43:57.198"></status>
</kw>
<status status="PASS" starttime="20200630 05:43:54.356" endtime="20200630 05:43:57.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:43:57.201" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21023-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:00.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:00.394" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 05:43:57.200" endtime="20200630 05:44:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:00.396" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 05:44:00.395" endtime="20200630 05:44:00.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:00.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:00.396" endtime="20200630 05:44:00.396"></status>
</kw>
<msg timestamp="20200630 05:44:00.397" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 05:43:57.199" endtime="20200630 05:44:00.397"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:00.397" endtime="20200630 05:44:00.397"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:00.400" level="INFO">Running command 'ozone sh bucket list o3://om:9862/21023-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:03.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:03.761" level="INFO">${output} = 21023-rpcwoport</msg>
<status status="PASS" starttime="20200630 05:44:00.398" endtime="20200630 05:44:03.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:03.762" level="INFO">21023-rpcwoport</msg>
<status status="PASS" starttime="20200630 05:44:03.762" endtime="20200630 05:44:03.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:03.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:03.763" endtime="20200630 05:44:03.763"></status>
</kw>
<msg timestamp="20200630 05:44:03.764" level="INFO">${result} = 21023-rpcwoport</msg>
<status status="PASS" starttime="20200630 05:44:00.397" endtime="20200630 05:44:03.764"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:03.764" endtime="20200630 05:44:03.764"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:03.769" level="INFO">Running command 'ozone sh key put o3://om:9862/21023-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:08.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:08.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:03.766" endtime="20200630 05:44:08.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:08.870" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:08.869" endtime="20200630 05:44:08.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:08.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:08.870" endtime="20200630 05:44:08.871"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:03.765" endtime="20200630 05:44:08.871"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:08.874" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:08.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:08.872" endtime="20200630 05:44:08.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:08.878" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:08.878" endtime="20200630 05:44:08.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:08.879" endtime="20200630 05:44:08.879"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:08.871" endtime="20200630 05:44:08.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:08.882" level="INFO">Running command 'ozone sh key get o3://om:9862/21023-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:13.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:13.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:08.880" endtime="20200630 05:44:13.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:13.487" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:13.486" endtime="20200630 05:44:13.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:13.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:13.487" endtime="20200630 05:44:13.488"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:08.879" endtime="20200630 05:44:13.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:13.491" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:13.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:13.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:13.489" endtime="20200630 05:44:13.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:13.496" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:13.495" endtime="20200630 05:44:13.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:13.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:13.496" endtime="20200630 05:44:13.496"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:13.488" endtime="20200630 05:44:13.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:13.499" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/21023-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:17.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:17.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:13.497" endtime="20200630 05:44:17.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:17.932" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:17.932" endtime="20200630 05:44:17.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:17.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:17.933" endtime="20200630 05:44:17.933"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:13.497" endtime="20200630 05:44:17.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:17.936" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:17.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:17.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:17.934" endtime="20200630 05:44:17.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:17.939" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:17.938" endtime="20200630 05:44:17.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:17.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:17.939" endtime="20200630 05:44:17.940"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:17.933" endtime="20200630 05:44:17.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:17.944" level="INFO">Running command 'ozone sh key get o3://om:9862/21023-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:22.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:22.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:17.940" endtime="20200630 05:44:22.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:22.432" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:22.432" endtime="20200630 05:44:22.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:22.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:22.433" endtime="20200630 05:44:22.433"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:17.940" endtime="20200630 05:44:22.434"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:22.437" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:22.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:22.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:22.434" endtime="20200630 05:44:22.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:22.440" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:22.439" endtime="20200630 05:44:22.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:22.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:22.440" endtime="20200630 05:44:22.441"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:22.434" endtime="20200630 05:44:22.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:22.445" level="INFO">Running command 'ozone sh key info o3://om:9862/21023-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:25.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:25.381" level="INFO">${output} = {
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:15.850Z",
  "modificationTime": "2020-06-30T05:44:17.542Z",...</msg>
<status status="PASS" starttime="20200630 05:44:22.442" endtime="20200630 05:44:25.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:25.382" level="INFO">{
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:15.850Z",
  "modificationTime": "2020-06-30T05:44:17.542Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431344408920200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:44:25.382" endtime="20200630 05:44:25.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:25.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:25.383" endtime="20200630 05:44:25.383"></status>
</kw>
<msg timestamp="20200630 05:44:25.383" level="INFO">${result} = {
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:15.850Z",
  "modificationTime": "2020-06-30T05:44:17.542Z",...</msg>
<status status="PASS" starttime="20200630 05:44:22.441" endtime="20200630 05:44:25.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:25.384" endtime="20200630 05:44:25.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:25.387" level="INFO">Running command 'ozone sh key delete o3://om:9862/21023-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:28.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:28.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:25.385" endtime="20200630 05:44:28.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:28.158" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:28.157" endtime="20200630 05:44:28.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:28.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:28.158" endtime="20200630 05:44:28.159"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:25.384" endtime="20200630 05:44:28.159"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:28.162" level="INFO">Running command 'ozone sh key cp o3://om:9862/21023-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:33.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:33.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:28.160" endtime="20200630 05:44:33.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:33.191" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:33.190" endtime="20200630 05:44:33.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:33.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:33.192" endtime="20200630 05:44:33.192"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:28.159" endtime="20200630 05:44:33.193"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:33.196" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:33.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:33.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:33.193" endtime="20200630 05:44:33.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:33.199" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:33.198" endtime="20200630 05:44:33.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:33.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:33.199" endtime="20200630 05:44:33.200"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:33.193" endtime="20200630 05:44:33.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:33.202" level="INFO">Running command 'ozone sh key get o3://om:9862/21023-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:37.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:37.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:33.201" endtime="20200630 05:44:37.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:37.858" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:37.857" endtime="20200630 05:44:37.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:37.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:37.858" endtime="20200630 05:44:37.858"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:33.200" endtime="20200630 05:44:37.859"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:37.861" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:37.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:37.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:37.859" endtime="20200630 05:44:37.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:37.865" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:37.864" endtime="20200630 05:44:37.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:37.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:37.865" endtime="20200630 05:44:37.865"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:37.859" endtime="20200630 05:44:37.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:37.868" level="INFO">Running command 'ozone sh key delete o3://om:9862/21023-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:40.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:40.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:37.866" endtime="20200630 05:44:40.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:40.518" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:40.517" endtime="20200630 05:44:40.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:40.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:40.518" endtime="20200630 05:44:40.518"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:37.866" endtime="20200630 05:44:40.519"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:40.522" level="INFO">Running command 'ozone sh key get o3://om:9862/21023-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:42.931" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:44:42.931" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:44:40.520" endtime="20200630 05:44:42.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:42.932" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:44:42.931" endtime="20200630 05:44:42.932"></status>
</kw>
<msg timestamp="20200630 05:44:42.932" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:44:40.519" endtime="20200630 05:44:42.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:42.932" endtime="20200630 05:44:42.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:42.937" level="INFO">Running command 'ozone sh key get --force o3://om:9862/21023-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:47.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:47.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:42.933" endtime="20200630 05:44:47.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:47.331" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:47.330" endtime="20200630 05:44:47.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:47.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:47.331" endtime="20200630 05:44:47.331"></status>
</kw>
<msg timestamp="20200630 05:44:47.332" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:44:42.933" endtime="20200630 05:44:47.332"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:47.332" endtime="20200630 05:44:47.332"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:47.335" level="INFO">Running command 'ozone sh key info o3://om:9862/21023-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:50.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:50.320" level="INFO">${output} = {
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:06.412Z",
  "modificationTime": "2020-06-30T05:44:08.470Z",
  "re...</msg>
<status status="PASS" starttime="20200630 05:44:47.333" endtime="20200630 05:44:50.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:50.321" level="INFO">{
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:06.412Z",
  "modificationTime": "2020-06-30T05:44:08.470Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431343790391420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:44:50.320" endtime="20200630 05:44:50.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:50.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:50.321" endtime="20200630 05:44:50.322"></status>
</kw>
<msg timestamp="20200630 05:44:50.322" level="INFO">${result} = {
  "volumeName": "21023-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:44:06.412Z",
  "modificationTime": "2020-06-30T05:44:08.470Z",
  "re...</msg>
<status status="PASS" starttime="20200630 05:44:47.332" endtime="20200630 05:44:50.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:50.322" endtime="20200630 05:44:50.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:50.327" level="INFO">Running command 'ozone sh key list o3://om:9862/21023-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:53.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:53.436" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 05:44:50.323" endtime="20200630 05:44:53.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:53.438" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 05:44:53.437" endtime="20200630 05:44:53.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:53.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:53.438" endtime="20200630 05:44:53.438"></status>
</kw>
<msg timestamp="20200630 05:44:53.439" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 05:44:50.323" endtime="20200630 05:44:53.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:53.439" endtime="20200630 05:44:53.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:53.444" level="INFO">Running command 'ozone sh key rename o3://om:9862/21023-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:56.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:56.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:53.440" endtime="20200630 05:44:56.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:56.229" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:44:56.229" endtime="20200630 05:44:56.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:56.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:56.230" endtime="20200630 05:44:56.230"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:53.440" endtime="20200630 05:44:56.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:56.233" level="INFO">Running command 'ozone sh key list o3://om:9862/21023-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:44:59.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:44:59.320" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 05:44:56.231" endtime="20200630 05:44:59.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:44:59.321" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 05:44:59.320" endtime="20200630 05:44:59.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:44:59.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:44:59.321" endtime="20200630 05:44:59.322"></status>
</kw>
<msg timestamp="20200630 05:44:59.322" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 05:44:56.231" endtime="20200630 05:44:59.322"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 05:44:59.322" endtime="20200630 05:44:59.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:44:59.327" level="INFO">Running command 'ozone sh key delete o3://om:9862/21023-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:02.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:02.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:44:59.323" endtime="20200630 05:45:02.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:02.139" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:45:02.138" endtime="20200630 05:45:02.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:02.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:02.139" endtime="20200630 05:45:02.140"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:59.323" endtime="20200630 05:45:02.140"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:03.765" endtime="20200630 05:45:02.141"></status>
</kw>
<status status="PASS" starttime="20200630 05:44:03.764" endtime="20200630 05:45:02.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:02.145" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/21023-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:04.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:04.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:45:02.142" endtime="20200630 05:45:04.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:04.935" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:45:04.934" endtime="20200630 05:45:04.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:04.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:04.935" endtime="20200630 05:45:04.936"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:02.141" endtime="20200630 05:45:04.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:04.939" level="INFO">Running command 'ozone sh volume delete o3://om:9862/21023-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:07.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:07.955" level="INFO">${output} = Volume 21023-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 05:45:04.937" endtime="20200630 05:45:07.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:07.956" level="INFO">Volume 21023-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 05:45:07.955" endtime="20200630 05:45:07.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:07.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:07.957" endtime="20200630 05:45:07.958"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:04.936" endtime="20200630 05:45:07.958"></status>
</kw>
<status status="PASS" starttime="20200630 05:43:36.370" endtime="20200630 05:45:07.958"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:43:36.368" endtime="20200630 05:45:07.959" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:07.961" endtime="20200630 05:45:07.961"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:07.965" level="INFO">Running command 'ozone sh volume create o3://om:9862/21023-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:10.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:10.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:45:07.962" endtime="20200630 05:45:10.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:10.764" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:45:10.763" endtime="20200630 05:45:10.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:10.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:10.764" endtime="20200630 05:45:10.765"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:07.962" endtime="20200630 05:45:10.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:10.769" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21023-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:13.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:13.601" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:10.765" endtime="20200630 05:45:13.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:13.603" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:13.602" endtime="20200630 05:45:13.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:13.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:13.603" endtime="20200630 05:45:13.604"></status>
</kw>
<msg timestamp="20200630 05:45:13.604" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:10.765" endtime="20200630 05:45:13.604"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:13.604" endtime="20200630 05:45:13.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:13.608" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/21023-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:16.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:16.153" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 05:45:13.606" endtime="20200630 05:45:16.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:16.154" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 05:45:16.154" endtime="20200630 05:45:16.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:16.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:16.155" endtime="20200630 05:45:16.156"></status>
</kw>
<msg timestamp="20200630 05:45:16.156" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 05:45:13.605" endtime="20200630 05:45:16.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:16.159" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21023-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:18.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:18.947" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:16.157" endtime="20200630 05:45:18.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:18.948" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:18.948" endtime="20200630 05:45:18.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:18.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:18.949" endtime="20200630 05:45:18.949"></status>
</kw>
<msg timestamp="20200630 05:45:18.950" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:16.156" endtime="20200630 05:45:18.950"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:18.950" endtime="20200630 05:45:18.951"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:18.954" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/21023-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:21.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:21.536" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 05:45:18.952" endtime="20200630 05:45:21.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:21.537" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 05:45:21.536" endtime="20200630 05:45:21.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:21.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:21.538" endtime="20200630 05:45:21.538"></status>
</kw>
<msg timestamp="20200630 05:45:21.538" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 05:45:18.951" endtime="20200630 05:45:21.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:21.542" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21023-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:24.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:24.615" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:21.539" endtime="20200630 05:45:24.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:24.616" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:24.615" endtime="20200630 05:45:24.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:24.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:24.616" endtime="20200630 05:45:24.617"></status>
</kw>
<msg timestamp="20200630 05:45:24.617" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:21.539" endtime="20200630 05:45:24.617"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:24.617" endtime="20200630 05:45:24.618"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:24.621" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/21023-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:27.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:27.271" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:24.619" endtime="20200630 05:45:27.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:27.272" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:27.271" endtime="20200630 05:45:27.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:27.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:27.273" endtime="20200630 05:45:27.273"></status>
</kw>
<msg timestamp="20200630 05:45:27.273" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:24.619" endtime="20200630 05:45:27.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:27.276" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21023-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:30.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:30.235" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 05:45:27.274" endtime="20200630 05:45:30.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:30.236" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:30.235" endtime="20200630 05:45:30.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:30.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:30.236" endtime="20200630 05:45:30.237"></status>
</kw>
<msg timestamp="20200630 05:45:30.237" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 05:45:27.274" endtime="20200630 05:45:30.237"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:30.237" endtime="20200630 05:45:30.238"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:30.238" endtime="20200630 05:45:30.239"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:07.961" endtime="20200630 05:45:30.239"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:45:07.960" endtime="20200630 05:45:30.239" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:30.241" endtime="20200630 05:45:30.241"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:30.245" level="INFO">Running command 'ozone sh bucket create o3://om:9862/21023-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:33.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:33.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:45:30.243" endtime="20200630 05:45:33.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:33.199" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:45:33.198" endtime="20200630 05:45:33.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:33.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:33.199" endtime="20200630 05:45:33.200"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:30.243" endtime="20200630 05:45:33.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:33.203" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21023-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:36.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:36.395" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:33.201" endtime="20200630 05:45:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:36.396" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:36.396" endtime="20200630 05:45:36.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:36.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:36.397" endtime="20200630 05:45:36.397"></status>
</kw>
<msg timestamp="20200630 05:45:36.398" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:33.200" endtime="20200630 05:45:36.398"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:36.398" endtime="20200630 05:45:36.398"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:36.403" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/21023-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:39.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:39.126" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 05:45:36.399" endtime="20200630 05:45:39.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:39.128" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 05:45:39.127" endtime="20200630 05:45:39.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:39.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:39.128" endtime="20200630 05:45:39.128"></status>
</kw>
<msg timestamp="20200630 05:45:39.129" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 05:45:36.399" endtime="20200630 05:45:39.129"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:39.133" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21023-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:42.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:42.019" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:39.130" endtime="20200630 05:45:42.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:42.020" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:42.019" endtime="20200630 05:45:42.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:42.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:42.020" endtime="20200630 05:45:42.021"></status>
</kw>
<msg timestamp="20200630 05:45:42.021" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:39.129" endtime="20200630 05:45:42.021"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:42.022" endtime="20200630 05:45:42.023"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:42.026" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/21023-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:44.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:44.629" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:45:42.024" endtime="20200630 05:45:44.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:44.630" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:45:44.629" endtime="20200630 05:45:44.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:44.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:44.630" endtime="20200630 05:45:44.631"></status>
</kw>
<msg timestamp="20200630 05:45:44.631" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:45:42.023" endtime="20200630 05:45:44.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:44.634" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21023-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:47.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:47.728" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:44.632" endtime="20200630 05:45:47.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:47.729" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:47.728" endtime="20200630 05:45:47.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:47.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:47.729" endtime="20200630 05:45:47.730"></status>
</kw>
<msg timestamp="20200630 05:45:47.730" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:44.631" endtime="20200630 05:45:47.730"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:47.730" endtime="20200630 05:45:47.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:47.734" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/21023-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:50.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:50.387" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:47.732" endtime="20200630 05:45:50.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:50.388" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:50.387" endtime="20200630 05:45:50.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:50.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:50.388" endtime="20200630 05:45:50.389"></status>
</kw>
<msg timestamp="20200630 05:45:50.389" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:45:47.731" endtime="20200630 05:45:50.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:50.392" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21023-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:53.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:53.299" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 05:45:50.390" endtime="20200630 05:45:53.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:53.301" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:45:53.300" endtime="20200630 05:45:53.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:53.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:53.301" endtime="20200630 05:45:53.301"></status>
</kw>
<msg timestamp="20200630 05:45:53.302" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 05:45:50.389" endtime="20200630 05:45:53.302"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:53.302" endtime="20200630 05:45:53.302"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:53.303" endtime="20200630 05:45:53.303"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:30.241" endtime="20200630 05:45:53.303"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:45:30.240" endtime="20200630 05:45:53.304" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:45:53.305" endtime="20200630 05:45:53.306"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:53.309" level="INFO">Running command 'ozone sh key put o3://om:9862/21023-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:45:58.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:45:58.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:45:53.307" endtime="20200630 05:45:58.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:45:58.246" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:45:58.245" endtime="20200630 05:45:58.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:45:58.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:45:58.246" endtime="20200630 05:45:58.247"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:53.306" endtime="20200630 05:45:58.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:45:58.249" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21023-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:01.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:01.214" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:58.248" endtime="20200630 05:46:01.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:01.215" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:46:01.215" endtime="20200630 05:46:01.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:01.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:01.216" endtime="20200630 05:46:01.216"></status>
</kw>
<msg timestamp="20200630 05:46:01.216" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:45:58.247" endtime="20200630 05:46:01.216"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:01.217" endtime="20200630 05:46:01.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:01.221" level="INFO">Running command 'ozone sh key addacl o3://om:9862/21023-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:04.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:04.151" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 05:46:01.218" endtime="20200630 05:46:04.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:04.152" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 05:46:04.151" endtime="20200630 05:46:04.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:04.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:04.152" endtime="20200630 05:46:04.153"></status>
</kw>
<msg timestamp="20200630 05:46:04.153" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 05:46:01.217" endtime="20200630 05:46:04.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:04.157" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21023-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:07.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:07.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:46:04.154" endtime="20200630 05:46:07.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:07.091" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:46:07.090" endtime="20200630 05:46:07.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:07.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:07.092" endtime="20200630 05:46:07.092"></status>
</kw>
<msg timestamp="20200630 05:46:07.092" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:46:04.154" endtime="20200630 05:46:07.092"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:07.093" endtime="20200630 05:46:07.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:07.097" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/21023-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:09.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:09.773" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:46:07.094" endtime="20200630 05:46:09.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:09.775" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:46:09.773" endtime="20200630 05:46:09.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:09.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:09.775" endtime="20200630 05:46:09.775"></status>
</kw>
<msg timestamp="20200630 05:46:09.776" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 05:46:07.094" endtime="20200630 05:46:09.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:09.779" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21023-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:12.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:12.629" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:46:09.777" endtime="20200630 05:46:12.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:12.631" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:46:12.630" endtime="20200630 05:46:12.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:12.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:12.631" endtime="20200630 05:46:12.632"></status>
</kw>
<msg timestamp="20200630 05:46:12.632" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 05:46:09.776" endtime="20200630 05:46:12.632"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:12.632" endtime="20200630 05:46:12.633"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:12.636" level="INFO">Running command 'ozone sh key setacl o3://om:9862/21023-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:15.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:15.748" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:46:12.634" endtime="20200630 05:46:15.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:15.749" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:46:15.748" endtime="20200630 05:46:15.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:15.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:15.749" endtime="20200630 05:46:15.750"></status>
</kw>
<msg timestamp="20200630 05:46:15.750" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 05:46:12.633" endtime="20200630 05:46:15.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:15.753" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21023-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:18.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:18.638" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 05:46:15.751" endtime="20200630 05:46:18.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:18.640" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 05:46:18.639" endtime="20200630 05:46:18.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:18.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:18.640" endtime="20200630 05:46:18.641"></status>
</kw>
<msg timestamp="20200630 05:46:18.641" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 05:46:15.750" endtime="20200630 05:46:18.641"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:18.641" endtime="20200630 05:46:18.642"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:18.642" endtime="20200630 05:46:18.643"></status>
</kw>
<status status="PASS" starttime="20200630 05:45:53.306" endtime="20200630 05:46:18.643"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:45:53.304" endtime="20200630 05:46:18.643" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:18.644" endtime="20200630 05:46:18.645"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:18.649" level="INFO">Running command 'ozone sh volume info o3:///21023-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:21.345" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:46:21.345" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21023-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 05:46:18.647" endtime="20200630 05:46:21.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:21.346" level="INFO">VOLUME_NOT_FOUND Volume 21023-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 05:46:21.345" endtime="20200630 05:46:21.346"></status>
</kw>
<msg timestamp="20200630 05:46:21.346" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21023-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 05:46:18.646" endtime="20200630 05:46:21.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:21.347" endtime="20200630 05:46:21.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:21.350" level="INFO">Running command 'ozone sh volume create o3:///21023-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:23.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:23.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:21.348" endtime="20200630 05:46:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:23.928" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:23.926" endtime="20200630 05:46:23.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:23.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:23.928" endtime="20200630 05:46:23.930"></status>
</kw>
<msg timestamp="20200630 05:46:23.930" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:46:21.347" endtime="20200630 05:46:23.930"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:23.930" endtime="20200630 05:46:23.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:23.934" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="21023-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:26.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:26.977" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 05:46:23.932" endtime="20200630 05:46:26.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:26.978" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:46:26.977" endtime="20200630 05:46:26.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:26.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:26.978" endtime="20200630 05:46:26.979"></status>
</kw>
<msg timestamp="20200630 05:46:26.979" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 05:46:23.931" endtime="20200630 05:46:26.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:26.979" endtime="20200630 05:46:26.980"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:26.982" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21023-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:29.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:29.848" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 05:46:26.980" endtime="20200630 05:46:29.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:29.850" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:46:29.849" endtime="20200630 05:46:29.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:29.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:29.850" endtime="20200630 05:46:29.851"></status>
</kw>
<msg timestamp="20200630 05:46:29.851" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:46:23.835Z",
  "modificationTime": "2020-06-30T05:46:23.835Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 05:46:26.980" endtime="20200630 05:46:29.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:29.851" endtime="20200630 05:46:29.851"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:29.856" level="INFO">Running command 'ozone sh volume update o3:///21023-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:32.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:32.814" level="INFO">${output} = {
  "metadata" : { },
  "name" : "21023-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:46:23.835Z",
  "modificationTime" : "2020-06-30T05:46:32.461Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 05:46:29.852" endtime="20200630 05:46:32.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:32.815" level="INFO">{
  "metadata" : { },
  "name" : "21023-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:46:23.835Z",
  "modificationTime" : "2020-06-30T05:46:32.461Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 05:46:32.814" endtime="20200630 05:46:32.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:32.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:32.815" endtime="20200630 05:46:32.816"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:29.852" endtime="20200630 05:46:32.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:32.821" level="INFO">Running command 'ozone sh volume info o3:///21023-rpcwport | jq -r '. | select(.name=="21023-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:35.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:35.886" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:46:32.817" endtime="20200630 05:46:35.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:35.887" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 05:46:35.886" endtime="20200630 05:46:35.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:35.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:35.887" endtime="20200630 05:46:35.887"></status>
</kw>
<msg timestamp="20200630 05:46:35.888" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:46:32.816" endtime="20200630 05:46:35.888"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:35.888" endtime="20200630 05:46:35.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:35.891" level="INFO">Running command 'ozone sh bucket create o3:///21023-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:39.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:39.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:35.889" endtime="20200630 05:46:39.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:39.112" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:39.111" endtime="20200630 05:46:39.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:39.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:39.112" endtime="20200630 05:46:39.113"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:35.889" endtime="20200630 05:46:39.113"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:39.116" level="INFO">Running command 'ozone sh bucket info o3:///21023-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:42.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:42.243" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 05:46:39.114" endtime="20200630 05:46:42.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:42.245" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 05:46:42.244" endtime="20200630 05:46:42.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:42.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:42.245" endtime="20200630 05:46:42.245"></status>
</kw>
<msg timestamp="20200630 05:46:42.246" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 05:46:39.113" endtime="20200630 05:46:42.246"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:42.246" endtime="20200630 05:46:42.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:42.250" level="INFO">Running command 'ozone sh bucket list o3:///21023-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:45.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:45.358" level="INFO">${output} = 21023-rpcwport</msg>
<status status="PASS" starttime="20200630 05:46:42.247" endtime="20200630 05:46:45.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:45.359" level="INFO">21023-rpcwport</msg>
<status status="PASS" starttime="20200630 05:46:45.358" endtime="20200630 05:46:45.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:45.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:45.360" endtime="20200630 05:46:45.360"></status>
</kw>
<msg timestamp="20200630 05:46:45.360" level="INFO">${result} = 21023-rpcwport</msg>
<status status="PASS" starttime="20200630 05:46:42.247" endtime="20200630 05:46:45.360"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 05:46:45.360" endtime="20200630 05:46:45.361"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:45.366" level="INFO">Running command 'ozone sh key put o3:///21023-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:50.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:50.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:45.362" endtime="20200630 05:46:50.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:50.276" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:50.275" endtime="20200630 05:46:50.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:50.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:50.277" endtime="20200630 05:46:50.277"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:45.362" endtime="20200630 05:46:50.278"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:50.280" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:50.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:50.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:50.278" endtime="20200630 05:46:50.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:50.284" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:50.283" endtime="20200630 05:46:50.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:50.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:50.284" endtime="20200630 05:46:50.285"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:50.278" endtime="20200630 05:46:50.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:50.288" level="INFO">Running command 'ozone sh key get o3:///21023-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:55.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:55.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:50.286" endtime="20200630 05:46:55.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:55.086" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:55.085" endtime="20200630 05:46:55.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:55.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:55.086" endtime="20200630 05:46:55.087"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:50.285" endtime="20200630 05:46:55.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:55.090" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:46:55.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:46:55.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:55.088" endtime="20200630 05:46:55.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:46:55.094" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:46:55.093" endtime="20200630 05:46:55.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:46:55.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:46:55.094" endtime="20200630 05:46:55.094"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:55.087" endtime="20200630 05:46:55.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:46:55.097" level="INFO">Running command 'ozone sh key put -t RATIS o3:///21023-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:00.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:00.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:46:55.095" endtime="20200630 05:47:00.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:00.047" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:00.047" endtime="20200630 05:47:00.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:00.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:00.048" endtime="20200630 05:47:00.048"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:55.095" endtime="20200630 05:47:00.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:00.051" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:00.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:00.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:00.049" endtime="20200630 05:47:00.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:00.056" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:00.055" endtime="20200630 05:47:00.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:00.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:00.056" endtime="20200630 05:47:00.057"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:00.049" endtime="20200630 05:47:00.058"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:00.060" level="INFO">Running command 'ozone sh key get o3:///21023-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:04.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:04.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:00.059" endtime="20200630 05:47:04.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:04.795" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:04.794" endtime="20200630 05:47:04.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:04.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:04.796" endtime="20200630 05:47:04.796"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:00.058" endtime="20200630 05:47:04.796"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:04.799" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:04.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:04.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:04.797" endtime="20200630 05:47:04.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:04.804" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:04.804" endtime="20200630 05:47:04.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:04.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:04.804" endtime="20200630 05:47:04.805"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:04.797" endtime="20200630 05:47:04.805"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:04.810" level="INFO">Running command 'ozone sh key info o3:///21023-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:07.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:07.765" level="INFO">${output} = {
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:57.749Z",
  "modificationTime": "2020-06-30T05:46:59.654Z",
...</msg>
<status status="PASS" starttime="20200630 05:47:04.806" endtime="20200630 05:47:07.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:07.768" level="INFO">{
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:57.749Z",
  "modificationTime": "2020-06-30T05:46:59.654Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431355019067520,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:47:07.766" endtime="20200630 05:47:07.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:07.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:07.769" endtime="20200630 05:47:07.770"></status>
</kw>
<msg timestamp="20200630 05:47:07.770" level="INFO">${result} = {
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:57.749Z",
  "modificationTime": "2020-06-30T05:46:59.654Z",
...</msg>
<status status="PASS" starttime="20200630 05:47:04.805" endtime="20200630 05:47:07.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:07.770" endtime="20200630 05:47:07.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:07.773" level="INFO">Running command 'ozone sh key delete o3:///21023-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:10.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:10.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:07.771" endtime="20200630 05:47:10.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:10.586" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:10.585" endtime="20200630 05:47:10.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:10.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:10.586" endtime="20200630 05:47:10.587"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:07.771" endtime="20200630 05:47:10.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:10.591" level="INFO">Running command 'ozone sh key cp o3:///21023-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:15.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:15.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:10.588" endtime="20200630 05:47:15.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:15.478" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:15.477" endtime="20200630 05:47:15.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:15.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:15.478" endtime="20200630 05:47:15.479"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:10.587" endtime="20200630 05:47:15.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:15.483" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:15.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:15.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:15.480" endtime="20200630 05:47:15.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:15.486" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:15.485" endtime="20200630 05:47:15.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:15.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:15.486" endtime="20200630 05:47:15.486"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:15.479" endtime="20200630 05:47:15.487"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:15.489" level="INFO">Running command 'ozone sh key get o3:///21023-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:20.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:20.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:15.487" endtime="20200630 05:47:20.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:20.363" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:20.363" endtime="20200630 05:47:20.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:20.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:20.364" endtime="20200630 05:47:20.364"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:15.487" endtime="20200630 05:47:20.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:20.368" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:20.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:20.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:20.366" endtime="20200630 05:47:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:20.372" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:20.371" endtime="20200630 05:47:20.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:20.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:20.372" endtime="20200630 05:47:20.372"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:20.365" endtime="20200630 05:47:20.372"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:20.376" level="INFO">Running command 'ozone sh key delete o3:///21023-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:22.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:22.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:20.373" endtime="20200630 05:47:22.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:22.983" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:22.983" endtime="20200630 05:47:22.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:22.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:22.984" endtime="20200630 05:47:22.984"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:20.373" endtime="20200630 05:47:22.985"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:22.989" level="INFO">Running command 'ozone sh key get o3:///21023-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:25.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:47:25.669" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:47:22.986" endtime="20200630 05:47:25.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:25.671" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:47:25.670" endtime="20200630 05:47:25.671"></status>
</kw>
<msg timestamp="20200630 05:47:25.671" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:47:22.985" endtime="20200630 05:47:25.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:25.671" endtime="20200630 05:47:25.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:25.674" level="INFO">Running command 'ozone sh key get --force o3:///21023-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:30.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:30.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:25.672" endtime="20200630 05:47:30.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:30.112" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:30.111" endtime="20200630 05:47:30.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:30.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:30.112" endtime="20200630 05:47:30.113"></status>
</kw>
<msg timestamp="20200630 05:47:30.113" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:47:25.672" endtime="20200630 05:47:30.113"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:30.113" endtime="20200630 05:47:30.114"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:30.116" level="INFO">Running command 'ozone sh key info o3:///21023-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:33.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:33.197" level="INFO">${output} = {
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:47.984Z",
  "modificationTime": "2020-06-30T05:46:49.776Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 05:47:30.114" endtime="20200630 05:47:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:33.199" level="INFO">{
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:47.984Z",
  "modificationTime": "2020-06-30T05:46:49.776Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431354379239550,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:47:33.198" endtime="20200630 05:47:33.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:33.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:33.199" endtime="20200630 05:47:33.200"></status>
</kw>
<msg timestamp="20200630 05:47:33.200" level="INFO">${result} = {
  "volumeName": "21023-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:46:47.984Z",
  "modificationTime": "2020-06-30T05:46:49.776Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 05:47:30.114" endtime="20200630 05:47:33.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:33.200" endtime="20200630 05:47:33.201"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:33.204" level="INFO">Running command 'ozone sh key list o3:///21023-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:36.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:36.316" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 05:47:33.202" endtime="20200630 05:47:36.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:36.317" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 05:47:36.316" endtime="20200630 05:47:36.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:36.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:36.318" endtime="20200630 05:47:36.318"></status>
</kw>
<msg timestamp="20200630 05:47:36.318" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 05:47:33.201" endtime="20200630 05:47:36.318"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:36.319" endtime="20200630 05:47:36.319"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:36.323" level="INFO">Running command 'ozone sh key rename o3:///21023-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:39.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:39.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:36.320" endtime="20200630 05:47:39.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:39.044" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:39.043" endtime="20200630 05:47:39.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:39.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:39.044" endtime="20200630 05:47:39.044"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:36.319" endtime="20200630 05:47:39.045"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:39.049" level="INFO">Running command 'ozone sh key list o3:///21023-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:41.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:41.884" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 05:47:39.046" endtime="20200630 05:47:41.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:41.886" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 05:47:41.885" endtime="20200630 05:47:41.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:41.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:41.886" endtime="20200630 05:47:41.886"></status>
</kw>
<msg timestamp="20200630 05:47:41.887" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 05:47:39.045" endtime="20200630 05:47:41.887"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:41.887" endtime="20200630 05:47:41.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:41.890" level="INFO">Running command 'ozone sh key delete o3:///21023-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:44.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:44.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:41.888" endtime="20200630 05:47:44.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:44.820" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:44.819" endtime="20200630 05:47:44.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:44.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:44.821" endtime="20200630 05:47:44.821"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:41.888" endtime="20200630 05:47:44.821"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:45.361" endtime="20200630 05:47:44.822"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:45.361" endtime="20200630 05:47:44.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:44.824" level="INFO">Running command 'ozone sh bucket delete o3:///21023-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:47.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:47.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:44.822" endtime="20200630 05:47:47.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:47.677" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:47.677" endtime="20200630 05:47:47.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:47.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:47.677" endtime="20200630 05:47:47.678"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:44.822" endtime="20200630 05:47:47.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:47.681" level="INFO">Running command 'ozone sh volume delete o3:///21023-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:50.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:50.312" level="INFO">${output} = Volume 21023-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 05:47:47.679" endtime="20200630 05:47:50.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:50.313" level="INFO">Volume 21023-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 05:47:50.312" endtime="20200630 05:47:50.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:50.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:50.313" endtime="20200630 05:47:50.314"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:47.678" endtime="20200630 05:47:50.314"></status>
</kw>
<status status="PASS" starttime="20200630 05:46:18.645" endtime="20200630 05:47:50.314"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:46:18.643" endtime="20200630 05:47:50.314" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:50.316" endtime="20200630 05:47:50.317"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:50.322" level="INFO">Running command 'ozone sh volume info /21023-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:52.935" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:47:52.935" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21023-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 05:47:50.319" endtime="20200630 05:47:52.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:52.937" level="INFO">VOLUME_NOT_FOUND Volume 21023-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 05:47:52.936" endtime="20200630 05:47:52.937"></status>
</kw>
<msg timestamp="20200630 05:47:52.937" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21023-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 05:47:50.318" endtime="20200630 05:47:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:52.938" endtime="20200630 05:47:52.938"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:52.941" level="INFO">Running command 'ozone sh volume create /21023-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:56.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:56.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:47:52.939" endtime="20200630 05:47:56.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:56.285" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:47:56.284" endtime="20200630 05:47:56.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:56.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:56.286" endtime="20200630 05:47:56.286"></status>
</kw>
<msg timestamp="20200630 05:47:56.286" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:47:52.938" endtime="20200630 05:47:56.286"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:56.287" endtime="20200630 05:47:56.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:56.291" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="21023-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:47:59.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:47:59.355" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 05:47:56.288" endtime="20200630 05:47:59.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:47:59.357" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:47:59.356" endtime="20200630 05:47:59.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:47:59.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:47:59.357" endtime="20200630 05:47:59.358"></status>
</kw>
<msg timestamp="20200630 05:47:59.358" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 05:47:56.287" endtime="20200630 05:47:59.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:47:59.358" endtime="20200630 05:47:59.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:47:59.362" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21023-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:02.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:02.393" level="INFO">${output} = {
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 05:47:59.360" endtime="20200630 05:48:02.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:02.394" level="INFO">{
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 05:48:02.393" endtime="20200630 05:48:02.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:02.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:02.394" endtime="20200630 05:48:02.395"></status>
</kw>
<msg timestamp="20200630 05:48:02.395" level="INFO">${result} = {
  "metadata": {},
  "name": "21023-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T05:47:56.100Z",
  "modificationTime": "2020-06-30T05:47:56.100Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 05:47:59.359" endtime="20200630 05:48:02.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:02.395" endtime="20200630 05:48:02.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:02.398" level="INFO">Running command 'ozone sh volume update /21023-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:05.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:05.534" level="INFO">${output} = {
  "metadata" : { },
  "name" : "21023-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:47:56.100Z",
  "modificationTime" : "2020-06-30T05:48:05.171Z",
  "a...</msg>
<status status="PASS" starttime="20200630 05:48:02.396" endtime="20200630 05:48:05.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:05.536" level="INFO">{
  "metadata" : { },
  "name" : "21023-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T05:47:56.100Z",
  "modificationTime" : "2020-06-30T05:48:05.171Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 05:48:05.535" endtime="20200630 05:48:05.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:05.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:05.536" endtime="20200630 05:48:05.537"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:02.396" endtime="20200630 05:48:05.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:05.541" level="INFO">Running command 'ozone sh volume info /21023-rpcwoscheme | jq -r '. | select(.name=="21023-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:08.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:08.673" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:48:05.538" endtime="20200630 05:48:08.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:08.675" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 05:48:08.674" endtime="20200630 05:48:08.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:08.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:08.675" endtime="20200630 05:48:08.676"></status>
</kw>
<msg timestamp="20200630 05:48:08.677" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 05:48:05.537" endtime="20200630 05:48:08.677"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:08.677" endtime="20200630 05:48:08.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:08.682" level="INFO">Running command 'ozone sh bucket create /21023-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:11.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:11.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:08.679" endtime="20200630 05:48:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:11.712" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:11.711" endtime="20200630 05:48:11.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:11.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:11.712" endtime="20200630 05:48:11.713"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:08.678" endtime="20200630 05:48:11.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:11.716" level="INFO">Running command 'ozone sh bucket info /21023-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:14.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:14.595" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 05:48:11.714" endtime="20200630 05:48:14.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:14.597" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 05:48:14.596" endtime="20200630 05:48:14.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:14.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:14.597" endtime="20200630 05:48:14.597"></status>
</kw>
<msg timestamp="20200630 05:48:14.598" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 05:48:11.713" endtime="20200630 05:48:14.598"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:14.598" endtime="20200630 05:48:14.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:14.602" level="INFO">Running command 'ozone sh bucket list /21023-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:17.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:17.446" level="INFO">${output} = 21023-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 05:48:14.599" endtime="20200630 05:48:17.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:17.447" level="INFO">21023-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 05:48:17.447" endtime="20200630 05:48:17.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:17.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:17.448" endtime="20200630 05:48:17.448"></status>
</kw>
<msg timestamp="20200630 05:48:17.449" level="INFO">${result} = 21023-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 05:48:14.598" endtime="20200630 05:48:17.449"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:17.449" endtime="20200630 05:48:17.449"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:17.454" level="INFO">Running command 'ozone sh key put /21023-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:22.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:22.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:17.451" endtime="20200630 05:48:22.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:22.359" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:22.358" endtime="20200630 05:48:22.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:22.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:22.359" endtime="20200630 05:48:22.360"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:17.450" endtime="20200630 05:48:22.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:22.363" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:22.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:22.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:22.361" endtime="20200630 05:48:22.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:22.367" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:22.366" endtime="20200630 05:48:22.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:22.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:22.367" endtime="20200630 05:48:22.367"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:22.360" endtime="20200630 05:48:22.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:22.370" level="INFO">Running command 'ozone sh key get /21023-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:27.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:27.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:22.368" endtime="20200630 05:48:27.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:27.300" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:27.299" endtime="20200630 05:48:27.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:27.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:27.300" endtime="20200630 05:48:27.301"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:22.368" endtime="20200630 05:48:27.301"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:27.304" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:27.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:27.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:27.302" endtime="20200630 05:48:27.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:27.308" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:27.307" endtime="20200630 05:48:27.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:27.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:27.308" endtime="20200630 05:48:27.308"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:27.302" endtime="20200630 05:48:27.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:27.311" level="INFO">Running command 'ozone sh key put -t RATIS /21023-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:32.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:32.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:27.309" endtime="20200630 05:48:32.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:32.286" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:32.286" endtime="20200630 05:48:32.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:32.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:32.287" endtime="20200630 05:48:32.287"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:27.309" endtime="20200630 05:48:32.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:32.292" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:32.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:32.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:32.288" endtime="20200630 05:48:32.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:32.295" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:32.294" endtime="20200630 05:48:32.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:32.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:32.295" endtime="20200630 05:48:32.296"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:32.288" endtime="20200630 05:48:32.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:32.300" level="INFO">Running command 'ozone sh key get /21023-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:37.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:37.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:32.297" endtime="20200630 05:48:37.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:37.051" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:37.050" endtime="20200630 05:48:37.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:37.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:37.052" endtime="20200630 05:48:37.052"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:32.296" endtime="20200630 05:48:37.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:37.055" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:37.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:37.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:37.053" endtime="20200630 05:48:37.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:37.059" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:37.058" endtime="20200630 05:48:37.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:37.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:37.059" endtime="20200630 05:48:37.060"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:37.053" endtime="20200630 05:48:37.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:37.063" level="INFO">Running command 'ozone sh key info /21023-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:39.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:39.962" level="INFO">${output} = {
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:30.071Z",
  "modificationTime": "2020-06-30T05:48:31.904Z...</msg>
<status status="PASS" starttime="20200630 05:48:37.061" endtime="20200630 05:48:39.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:39.963" level="INFO">{
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:30.071Z",
  "modificationTime": "2020-06-30T05:48:31.904Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431361069482110,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:48:39.962" endtime="20200630 05:48:39.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:39.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:39.964" endtime="20200630 05:48:39.964"></status>
</kw>
<msg timestamp="20200630 05:48:39.964" level="INFO">${result} = {
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:30.071Z",
  "modificationTime": "2020-06-30T05:48:31.904Z...</msg>
<status status="PASS" starttime="20200630 05:48:37.060" endtime="20200630 05:48:39.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:39.965" endtime="20200630 05:48:39.965"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:39.968" level="INFO">Running command 'ozone sh key delete /21023-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:42.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:42.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:39.966" endtime="20200630 05:48:42.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:42.627" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:42.627" endtime="20200630 05:48:42.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:42.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:42.628" endtime="20200630 05:48:42.628"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:39.965" endtime="20200630 05:48:42.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:42.631" level="INFO">Running command 'ozone sh key cp /21023-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:47.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:47.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:42.629" endtime="20200630 05:48:47.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:47.891" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:47.890" endtime="20200630 05:48:47.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:47.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:47.891" endtime="20200630 05:48:47.891"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:42.629" endtime="20200630 05:48:47.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:47.895" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:47.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:47.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:47.892" endtime="20200630 05:48:47.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:47.899" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:47.898" endtime="20200630 05:48:47.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:47.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:47.899" endtime="20200630 05:48:47.901"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:47.892" endtime="20200630 05:48:47.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:47.904" level="INFO">Running command 'ozone sh key get /21023-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:52.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:52.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:47.902" endtime="20200630 05:48:52.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:52.625" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:52.624" endtime="20200630 05:48:52.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:52.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:52.625" endtime="20200630 05:48:52.626"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:47.901" endtime="20200630 05:48:52.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:52.629" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:52.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:52.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:52.627" endtime="20200630 05:48:52.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:52.632" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:52.632" endtime="20200630 05:48:52.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:52.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:52.633" endtime="20200630 05:48:52.633"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:52.626" endtime="20200630 05:48:52.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:52.637" level="INFO">Running command 'ozone sh key delete /21023-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:55.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:48:55.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:52.634" endtime="20200630 05:48:55.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:55.247" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:48:55.246" endtime="20200630 05:48:55.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:48:55.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:48:55.247" endtime="20200630 05:48:55.248"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:52.634" endtime="20200630 05:48:55.248"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:55.252" level="INFO">Running command 'ozone sh key get /21023-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:48:57.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 05:48:57.793" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:48:55.249" endtime="20200630 05:48:57.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:48:57.794" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:48:57.793" endtime="20200630 05:48:57.794"></status>
</kw>
<msg timestamp="20200630 05:48:57.794" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 05:48:55.248" endtime="20200630 05:48:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:48:57.794" endtime="20200630 05:48:57.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:48:57.798" level="INFO">Running command 'ozone sh key get --force /21023-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:02.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:02.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:48:57.796" endtime="20200630 05:49:02.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:02.344" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:49:02.343" endtime="20200630 05:49:02.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:02.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:02.344" endtime="20200630 05:49:02.345"></status>
</kw>
<msg timestamp="20200630 05:49:02.345" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 05:48:57.795" endtime="20200630 05:49:02.345"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 05:49:02.345" endtime="20200630 05:49:02.346"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:02.351" level="INFO">Running command 'ozone sh key info /21023-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:05.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:05.560" level="INFO">${output} = {
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:20.012Z",
  "modificationTime": "2020-06-30T05:48:21.876Z",
  "...</msg>
<status status="PASS" starttime="20200630 05:49:02.349" endtime="20200630 05:49:05.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:05.561" level="INFO">{
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:20.012Z",
  "modificationTime": "2020-06-30T05:48:21.876Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104431360410124420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 05:49:05.560" endtime="20200630 05:49:05.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:05.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:05.561" endtime="20200630 05:49:05.562"></status>
</kw>
<msg timestamp="20200630 05:49:05.562" level="INFO">${result} = {
  "volumeName": "21023-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T05:48:20.012Z",
  "modificationTime": "2020-06-30T05:48:21.876Z",
  "...</msg>
<status status="PASS" starttime="20200630 05:49:02.346" endtime="20200630 05:49:05.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 05:49:05.562" endtime="20200630 05:49:05.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:05.567" level="INFO">Running command 'ozone sh key list /21023-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:08.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:08.357" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 05:49:05.564" endtime="20200630 05:49:08.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:08.358" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 05:49:08.358" endtime="20200630 05:49:08.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:08.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:08.358" endtime="20200630 05:49:08.359"></status>
</kw>
<msg timestamp="20200630 05:49:08.359" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 05:49:05.563" endtime="20200630 05:49:08.359"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 05:49:08.359" endtime="20200630 05:49:08.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:08.362" level="INFO">Running command 'ozone sh key rename /21023-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:10.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:10.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:49:08.360" endtime="20200630 05:49:10.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:10.795" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:49:10.795" endtime="20200630 05:49:10.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:10.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:10.795" endtime="20200630 05:49:10.796"></status>
</kw>
<status status="PASS" starttime="20200630 05:49:08.360" endtime="20200630 05:49:10.796"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:10.799" level="INFO">Running command 'ozone sh key list /21023-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:13.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:13.545" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 05:49:10.797" endtime="20200630 05:49:13.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:13.546" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 05:49:13.545" endtime="20200630 05:49:13.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:13.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:13.546" endtime="20200630 05:49:13.547"></status>
</kw>
<msg timestamp="20200630 05:49:13.547" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 05:49:10.796" endtime="20200630 05:49:13.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 05:49:13.547" endtime="20200630 05:49:13.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:13.550" level="INFO">Running command 'ozone sh key delete /21023-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:16.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:16.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:49:13.548" endtime="20200630 05:49:16.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:16.187" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:49:16.186" endtime="20200630 05:49:16.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:16.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:16.187" endtime="20200630 05:49:16.188"></status>
</kw>
<status status="PASS" starttime="20200630 05:49:13.548" endtime="20200630 05:49:16.188"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:17.450" endtime="20200630 05:49:16.188"></status>
</kw>
<status status="PASS" starttime="20200630 05:48:17.449" endtime="20200630 05:49:16.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:16.192" level="INFO">Running command 'ozone sh bucket delete /21023-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:18.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:18.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 05:49:16.189" endtime="20200630 05:49:18.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:18.974" level="INFO"></msg>
<status status="PASS" starttime="20200630 05:49:18.973" endtime="20200630 05:49:18.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:18.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:18.974" endtime="20200630 05:49:18.974"></status>
</kw>
<status status="PASS" starttime="20200630 05:49:16.188" endtime="20200630 05:49:18.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 05:49:18.977" level="INFO">Running command 'ozone sh volume delete /21023-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 05:49:21.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 05:49:21.368" level="INFO">${output} = Volume 21023-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 05:49:18.975" endtime="20200630 05:49:21.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 05:49:21.369" level="INFO">Volume 21023-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 05:49:21.368" endtime="20200630 05:49:21.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 05:49:21.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 05:49:21.369" endtime="20200630 05:49:21.370"></status>
</kw>
<status status="PASS" starttime="20200630 05:49:18.975" endtime="20200630 05:49:21.370"></status>
</kw>
<status status="PASS" starttime="20200630 05:47:50.317" endtime="20200630 05:49:21.370"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 05:47:50.315" endtime="20200630 05:49:21.370" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 05:43:36.361" endtime="20200630 05:49:21.372"></status>
</suite>
<status status="PASS" starttime="20200630 05:42:26.865" endtime="20200630 05:49:21.377"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
