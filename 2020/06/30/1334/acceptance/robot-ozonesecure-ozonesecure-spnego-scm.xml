<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 13:28:54.405" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:54.482" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:54.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:54.483" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:28:54.473" endtime="20200630 13:28:54.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:54.485" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:28:54.484" endtime="20200630 13:28:54.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:54.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:54.485" endtime="20200630 13:28:54.485"></status>
</kw>
<msg timestamp="20200630 13:28:54.486" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:28:54.473" endtime="20200630 13:28:54.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:28:54.487" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:28:54.486" endtime="20200630 13:28:54.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:54.491" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:54.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:54.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:28:54.488" endtime="20200630 13:28:54.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:54.504" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:28:54.504" endtime="20200630 13:28:54.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:54.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:54.504" endtime="20200630 13:28:54.505"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:54.488" endtime="20200630 13:28:54.505"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:54.487" endtime="20200630 13:28:54.505"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:54.472" endtime="20200630 13:28:54.505"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:54.471" endtime="20200630 13:28:54.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:54.509" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:04.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:04.899" level="INFO">${output} = 2020-06-30 13:28:56,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:28:56,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:28:54.506" endtime="20200630 13:29:04.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:04.901" level="INFO">2020-06-30 13:28:56,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:28:56,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:28:56,947 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 13:28:59,264 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 13:28:59,265 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 13:28:59,306 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 13:28:59,321 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-30 13:28:59,377 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-63812, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 13:28:59,420 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-63812/bucket-0-82304, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:28:59,986 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 13:29:00,331 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,030
Average Time spent in key write: 00:00:00,099
Total bytes written: 2050
Total Execution time: 00:00:06,889
***************************************************</msg>
<status status="PASS" starttime="20200630 13:29:04.900" endtime="20200630 13:29:04.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:04.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:04.901" endtime="20200630 13:29:04.902"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:54.506" endtime="20200630 13:29:04.902"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:28:54.470" endtime="20200630 13:29:04.902" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:04.907" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:04.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:04.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:04.905" endtime="20200630 13:29:04.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:04.912" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:04.912" endtime="20200630 13:29:04.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:04.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:04.912" endtime="20200630 13:29:04.913"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.905" endtime="20200630 13:29:04.913"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.904" endtime="20200630 13:29:04.913"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:04.917" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:04.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:04.948" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 13:29:04.914" endtime="20200630 13:29:04.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:04.950" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 13:29:04.948" endtime="20200630 13:29:04.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:04.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:04.950" endtime="20200630 13:29:04.950"></status>
</kw>
<msg timestamp="20200630 13:29:04.951" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 13:29:04.913" endtime="20200630 13:29:04.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:04.951" endtime="20200630 13:29:04.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:04.955" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:04.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:04.963" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:29:04.953" endtime="20200630 13:29:04.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:04.964" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:29:04.964" endtime="20200630 13:29:04.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:04.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:04.965" endtime="20200630 13:29:04.965"></status>
</kw>
<msg timestamp="20200630 13:29:04.966" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:29:04.952" endtime="20200630 13:29:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:29:04.967" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:29:04.966" endtime="20200630 13:29:04.967"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:04.970" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:04.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:04.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:04.968" endtime="20200630 13:29:04.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:04.998" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:04.998" endtime="20200630 13:29:04.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:04.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:04.999" endtime="20200630 13:29:04.999"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.967" endtime="20200630 13:29:05.000"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.967" endtime="20200630 13:29:05.000"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.952" endtime="20200630 13:29:05.000"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.952" endtime="20200630 13:29:05.000"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.003" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.036" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 13:29:05.001" endtime="20200630 13:29:05.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.039" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x191ef20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICagYJKoZIhvcSAQICAQBuggJZMIICVaADAgEFoQMCAQ6iBwMFACAAAACjggFmYYIBYjCCAV6gAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBLzCCASugAwIBEqEDAgECooIBHQSCARnCt7iwOjES1v5w7oozat3SV97KXjT5WNYIt9MNXJbVZDgOG9Uv56+x5o+V/9ExstOAkmOFVHFy7e3yrqABIzrK+DYE/9dElvmFV6BPQnsLw0/BDIsJy8g1as3Pl7EK+QROzkrRfEJ3losy8tSfqxnZUE11AKmfJ4nDxn9hd/zRpra1ma5VnqrQJPrFUf/T2X3LQvkxSu28D3sX6PxX3t9NoplqmB347tkPEXZjbruIXoV1udBXmPmnT/hIAfI86NK/CVunCjsm1GIz8esQPeV3/sKGCVaxfe3M65zyqS6TNJXcCLPKzmeu0tf0LcdWzpMS0jm1bbNQ8Iro5Y7WuHpIPw3OAfh3Icm1o9wpLmUSf8uMdnEw0uM8WKSB1TCB0qADAgESooHKBIHHS9esKZ0lKtvGoxt3XgqI7wXKMKYHg6hfPOxlMhJngMWF+uTYqIgJN/5z1wHYZLQeW8KZRZG9OXyFwMZ7jo1VtViiV23y0vb5zEVAMFhgslDovUipQXl/g5paRz2OFqmSufWez9DiCelpnvm1PH8jeen3gy8e6OXlx5pwDTmaYcw+KOwZXC2TuX8UhUJvnqlIGjLPorgdg/r2sbf+yLyTo2aXAXzRPTrJ0wGpr25USCYZB2bCaBXQtqvisISUa5RUlljrbGqjOQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBBMvMbI8iLMe7OBOOmaZivh2dwO9pGopWeLyhkr/u87ctUOHhRm7MuHuNAp+nhQSvCeUsuFHWPjgyg1YfykiTzOI=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745027&amp;s=8HbY2wc1mqJmmS7Ok+IlNezbzk+fMs9xbe2V+vT8ti8="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 11:59:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:29:05 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBBMvMbI8iLMe7OBOOmaZivh2dwO9pGopWeLyhkr/u87ctUOHhRm7MuHuNAp+nhQSvCeUsuFHWPjgyg1YfykiTzOI=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745027&amp;s=8HbY2wc1mqJmmS7Ok+IlNezbzk+fMs9xbe2V+vT8ti8="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 11:59:58 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200630 13:29:05.038" endtime="20200630 13:29:05.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.040" endtime="20200630 13:29:05.040"></status>
</kw>
<msg timestamp="20200630 13:29:05.041" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200630 13:29:05.000" endtime="20200630 13:29:05.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.041" endtime="20200630 13:29:05.042"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:04.904" endtime="20200630 13:29:05.043"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:29:04.903" endtime="20200630 13:29:05.043" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.050" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.046" endtime="20200630 13:29:05.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.054" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.053" endtime="20200630 13:29:05.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.054" endtime="20200630 13:29:05.055"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.046" endtime="20200630 13:29:05.055"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.045" endtime="20200630 13:29:05.055"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.058" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.072" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 13:29:05.056" endtime="20200630 13:29:05.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.073" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200630 13:29:05.073" endtime="20200630 13:29:05.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.074" endtime="20200630 13:29:05.074"></status>
</kw>
<msg timestamp="20200630 13:29:05.075" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 13:29:05.055" endtime="20200630 13:29:05.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.075" endtime="20200630 13:29:05.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.079" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.081" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.077" endtime="20200630 13:29:05.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.082" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:29:05.082" endtime="20200630 13:29:05.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.083" endtime="20200630 13:29:05.083"></status>
</kw>
<msg timestamp="20200630 13:29:05.083" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.076" endtime="20200630 13:29:05.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:29:05.084" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:29:05.084" endtime="20200630 13:29:05.084"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.087" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.085" endtime="20200630 13:29:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.113" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.113" endtime="20200630 13:29:05.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.114" endtime="20200630 13:29:05.114"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.085" endtime="20200630 13:29:05.115"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.084" endtime="20200630 13:29:05.115"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.076" endtime="20200630 13:29:05.115"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.075" endtime="20200630 13:29:05.115"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.119" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.252" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 13:29:05.116" endtime="20200630 13:29:05.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.253" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1e6af50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbefiWrrW6kooX3u/sRdmBs1YD3cQiVNnUWlO1hk99qOpSWdvuP/1zoZeIjkP94Jd1tu7Fsqeo4tQvPWzkuJOqclVUQ6pi/fk7ZMBPBH0oUJeMjOVkucxPCWrVm17jT0r7MdIX/5E6+oMx3SgFA99PML4y+zm/F17hdl+ecUeDkOD6eKftBt4UUq1SXazGVI8g2ksfi1E6ynOnvibX5vcvPaY0PRiit2W4JKFGvxmi66NJfuDp7UOgtENtk5hyXZsSm7SuQ29pUrOgbxD0HoRcOD7Hn2x+hwXHA2kHyzmJbdjtcFJU4TzuPJT9Duk1g8E9/cQojSaLbu5+dSNwmLrWZBEj9SpcepIHWMIHToAMCARKigcsEgcjYC+p9y8jdY3ID8qMpH/iGNxI4LyDq6IfnCbAIxa8JPRy/R0asnQf9B2IMhS1EXcN8HtCiSauzCD4/5QA7/eYgy0LUKliYpjrjndFPVRK8kUVXGsIvgQeCPFKtF8nd4kNlMgCN78VVijZ1ZAX+xcao9IH/Ct3YP3wcbp5WY7TWWsOGDRdSbmNw1glzQg1qktDv61XARi83T9VVfFxlPYPaVuon1OTwbJWnBSuxJYx/oOwaBTnhm8ns9aZCuD5rYeQfIBTE5XfrcQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3YT0hc3FQuAH03L45g6JtuLB+7HDZ+XguxJ4E8aFni6X/19nmFzZ8L341Q5nWejvPVHpU+ufa1DYNCriK8nklAJJ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745211&amp;s=KcaRGDFEACWmDtNo/jxZxb7AwZpMRyAhfStehL7ifuo="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593523745211.tgz"
&lt; Content-Length: 73442
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:29:05 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3YT0hc3FQuAH03L45g6JtuLB+7HDZ+XguxJ4E8aFni6X/19nmFzZ8L341Q5nWejvPVHpU+ufa1DYNCriK8nklAJJ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745211&amp;s=KcaRGDFEACWmDtNo/jxZxb7AwZpMRyAhfStehL7ifuo="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593523745211.tgz"
Content-Length: 73442
</msg>
<status status="PASS" starttime="20200630 13:29:05.252" endtime="20200630 13:29:05.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.253" endtime="20200630 13:29:05.254"></status>
</kw>
<msg timestamp="20200630 13:29:05.254" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200630 13:29:05.115" endtime="20200630 13:29:05.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.255" endtime="20200630 13:29:05.255"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.045" endtime="20200630 13:29:05.255"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:29:05.044" endtime="20200630 13:29:05.255" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.265" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.262" endtime="20200630 13:29:05.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.271" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.270" endtime="20200630 13:29:05.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.271" endtime="20200630 13:29:05.272"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.261" endtime="20200630 13:29:05.272"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.260" endtime="20200630 13:29:05.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.275" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.287" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.273" endtime="20200630 13:29:05.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.288" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200630 13:29:05.288" endtime="20200630 13:29:05.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.289" endtime="20200630 13:29:05.289"></status>
</kw>
<msg timestamp="20200630 13:29:05.290" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.272" endtime="20200630 13:29:05.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.290" endtime="20200630 13:29:05.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.295" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.292" endtime="20200630 13:29:05.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.297" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:29:05.297" endtime="20200630 13:29:05.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.297" endtime="20200630 13:29:05.298"></status>
</kw>
<msg timestamp="20200630 13:29:05.298" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.291" endtime="20200630 13:29:05.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:29:05.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:29:05.299" endtime="20200630 13:29:05.299"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.300" endtime="20200630 13:29:05.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.314" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.314" endtime="20200630 13:29:05.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.315" endtime="20200630 13:29:05.315"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.300" endtime="20200630 13:29:05.315"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.299" endtime="20200630 13:29:05.315"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.291" endtime="20200630 13:29:05.316"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.291" endtime="20200630 13:29:05.316"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.318" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.356" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.316" endtime="20200630 13:29:05.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.357" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x98ef50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbip3iCIvAUAXrfhwmMSthkB4fXGklgne+fP6JTTCMaxckxC2ab4yL1aliE4Kn7QftA8rSRjm+SAgw72nYaUUZL4Dg9wueWSL2YO7gqzrHxSM+xnUacvky2uxWLGvgjSkkA+mlqs0Xa0p21Q7KOE9r7Fw4XBF3iU+mszmGjiImoGyfzsjEpBrkKN93vW8PJ5qW+h4cyHu2uFWF+OOsiSRNxBfonW25THIXZULO1VVOBLKHkb48uRs+/X2rTg+w8JaZwmLq44GCtK7M8jji2zNNuVooi8W7/6O7FgXhqK2ycd6doElbwNlgsS/BxAY5v+gTz7L7OnqYScYFYtGW7WU+RQmxLI9lqpIHWMIHToAMCARKigcsEgcggJ/xqCGZkB9L99+bfIgzHjVn/pO2oNVRR2OiQlQFZ3OVmGwL55RDUXwZcKrY2tEml3JKaGT/ayX12dQPTk+K4MVJsbhtZwDYAR5t14sJDNqyPvzYfEpbQcVAESjFhIFiW/YAOKAu/OHUxLv/YSAQcIwJuNc7sntaulpHRRdnIctGBaFjPdy8erCsPrV5zxY01zLqZxpUCEOioqnt+B5HKiV0Q1JMmGtKtwGqKqhyggI821tH/fG3WQtoc/zb/w1tTlDy+t3BGHA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClqTDlsomNu8BacSXxrWz+SLreRuwkUMgfuyTeWNc6ejiqOJtFFi1sahO9F1j+2LdK4foxohQVu6LjSdx5MkGwYaH
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745338&amp;s=ICt0lziAjnldYvfpyny+8A3U03LAoUswNaXDmcbs2yc="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:29:05 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClqTDlsomNu8BacSXxrWz+SLreRuwkUMgfuyTeWNc6ejiqOJtFFi1sahO9F1j+2LdK4foxohQVu6LjSdx5MkGwYaH
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745338&amp;s=ICt0lziAjnldYvfpyny+8A3U03LAoUswNaXDmcbs2yc="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200630 13:29:05.356" endtime="20200630 13:29:05.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.358" endtime="20200630 13:29:05.358"></status>
</kw>
<msg timestamp="20200630 13:29:05.358" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.316" endtime="20200630 13:29:05.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.359" endtime="20200630 13:29:05.359"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.260" endtime="20200630 13:29:05.359"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:29:05.259" endtime="20200630 13:29:05.360" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.371" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.369" endtime="20200630 13:29:05.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.375" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.375" endtime="20200630 13:29:05.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.376" endtime="20200630 13:29:05.376"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.368" endtime="20200630 13:29:05.377"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.368" endtime="20200630 13:29:05.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.380" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.397" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 13:29:05.378" endtime="20200630 13:29:05.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.399" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 13:29:05.398" endtime="20200630 13:29:05.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.399" endtime="20200630 13:29:05.399"></status>
</kw>
<msg timestamp="20200630 13:29:05.400" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 13:29:05.377" endtime="20200630 13:29:05.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.400" endtime="20200630 13:29:05.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.404" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.406" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.402" endtime="20200630 13:29:05.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.407" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:29:05.407" endtime="20200630 13:29:05.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.408" endtime="20200630 13:29:05.408"></status>
</kw>
<msg timestamp="20200630 13:29:05.408" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.401" endtime="20200630 13:29:05.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:29:05.409" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:29:05.408" endtime="20200630 13:29:05.409"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.410" endtime="20200630 13:29:05.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.425" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.424" endtime="20200630 13:29:05.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.425" endtime="20200630 13:29:05.426"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.410" endtime="20200630 13:29:05.426"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.409" endtime="20200630 13:29:05.426"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.401" endtime="20200630 13:29:05.426"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.401" endtime="20200630 13:29:05.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.430" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.459" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 13:29:05.427" endtime="20200630 13:29:05.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.461" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x2275f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.7) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGZYv0uXfxmU7xQpvsp61VJHREsJ/6KWOCt+tHuDbss7+7bNdapetVgIbdKBidbxFqLkDcxv1FV9fANJEhxzWsIeI9dYnp7i5VWj2rGIYYIEDj7CTq0zifqr3mO18xCLiUO8aLxrSuxwfisEnDO7M4DKkS5/iprB6E1/0CPfsh9Ah9zZxfKdGAxr/yr6UlOfNGYPLdzcoA+CQyY7RK+2JjvoXn/s9q6Rn5K6lnC1/iqWY1SzQa9ZKINdWF5Yrk303iVA1BS0t/ovhw6E2QshjPdEG5vf8dayWfPB3JMB70mcxGWhEWNOWp1GSEOlvKuk8wNIUgApy9cSX78x9/CeTLK2REYkYGJ6SB1jCB06ADAgESooHLBIHIQHbIXlurhOwqsFIg5k8969ojOeWDOvhHtuJMG1EN6WwAqlUhSsnf6dftG+/7+lVjvyUH6aQTCvTw4GD0iAOCbZJZL1GZNK7OdjZWajuycZzF4Wx5d5OPQxdzr/TvnrSxVGUX2q90/5trbu9mNH375Ts1WXSMDkB4Xl0DibIDC67GNCoIJqpcFPZQXoVUN6JQTTV2V9kbXWJ43nZMSN8AGIt79gvazT/gIDul/PCFwvqPPp4v4kDTKJj1emPz26pGmbecCWYg8ro=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCm1mxMNjSAHgjo7CwEztVcZOKBCKmtOaq9C3rvY4jhOHNw75nFD6M6O78Qkpna3vLh1T0NVPk1sBUJRttxqSlN3MY
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745455&amp;s=l+RlGIeuVo+toqcReZMucjp2pXGkXPHNB/qnOUR4vsE="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 11:59:30 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:29:05 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCm1mxMNjSAHgjo7CwEztVcZOKBCKmtOaq9C3rvY4jhOHNw75nFD6M6O78Qkpna3vLh1T0NVPk1sBUJRttxqSlN3MY
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745455&amp;s=l+RlGIeuVo+toqcReZMucjp2pXGkXPHNB/qnOUR4vsE="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 11:59:30 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200630 13:29:05.460" endtime="20200630 13:29:05.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.461" endtime="20200630 13:29:05.461"></status>
</kw>
<msg timestamp="20200630 13:29:05.462" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.7...
* Connected to scm (172.26.0.7) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200630 13:29:05.426" endtime="20200630 13:29:05.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.462" endtime="20200630 13:29:05.463"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.367" endtime="20200630 13:29:05.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:29:05.367" endtime="20200630 13:29:05.463" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.469" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.466" endtime="20200630 13:29:05.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.473" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.472" endtime="20200630 13:29:05.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.473" endtime="20200630 13:29:05.473"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.466" endtime="20200630 13:29:05.474"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.465" endtime="20200630 13:29:05.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.477" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.493" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.474" endtime="20200630 13:29:05.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.494" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200630 13:29:05.494" endtime="20200630 13:29:05.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.495" endtime="20200630 13:29:05.495"></status>
</kw>
<msg timestamp="20200630 13:29:05.496" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.474" endtime="20200630 13:29:05.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.496" endtime="20200630 13:29:05.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.501" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.507" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.498" endtime="20200630 13:29:05.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.508" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:29:05.508" endtime="20200630 13:29:05.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.508" endtime="20200630 13:29:05.509"></status>
</kw>
<msg timestamp="20200630 13:29:05.509" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:29:05.498" endtime="20200630 13:29:05.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:29:05.510" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:29:05.510" endtime="20200630 13:29:05.510"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.514" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:29:05.511" endtime="20200630 13:29:05.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.526" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:29:05.526" endtime="20200630 13:29:05.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.527" endtime="20200630 13:29:05.527"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.511" endtime="20200630 13:29:05.527"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.510" endtime="20200630 13:29:05.528"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.497" endtime="20200630 13:29:05.528"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.496" endtime="20200630 13:29:05.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:29:05.531" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:29:05.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:29:05.559" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.528" endtime="20200630 13:29:05.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:29:05.560" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x15a7f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.10) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZRdqra1Yhdpy7z1+EahyfrkdTMclJiihfFNq6RTf8xKF/r5B3d1bCVDJEwqu5dj/mCNMAaokw0HDCfXT7KR+foB2+HxY5NziMLLidg/C7z+Nj7UjSnwl7T3N0amZT1qk4kg2IduPb0L50nI2fkLgbC1XmxL/EIdWneKFxHmHSRP2DitWfTpCVXRumh1HStUrPZIbIzEpLb0qK18p6V0L8MVNb+60BeyV6i5/noe2BFTD5AaH8mjUUjvzaHTBqZXHgzQlgeHYp8n17lrAnmKOO7sFGkFMPexkt1jb7kP9qVAvn1wutCLNqhp69+DuyKD+dkxPIjRgFSRDZLfmw26TnE3Mr5OqsVpIHWMIHToAMCARKigcsEgcj2hKiNyX70H+PH4n0hnrK469+ZJk2hYbRKklSRwFF7sl+LY6876h6hACipXUt18SmCLeXMbxNMM0mXeFOOmf6tDhhF6FrWZAgwLtrtbLl87KJg124SbGFaFjJvnfm6vnySTyqa6IIJ8pWXNHoxgLEuuPlFrZJtR/s7Q6PqPgbC+Yrjh0fqbJwreZ5o8Wtww+k8vtB2Ramcs48B3GnwmFHccrEbXHXAguN8B/3RRr0/bsxZET2bF0qiuFGIOiBh4NuefGLWIkjwwA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Date: Tue, 30 Jun 2020 13:29:05 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHovrYEsg9L/8m4bWGkHIXaF0qwFxxTPwzo7OlFct1BRfK+w6giEktfTnmzBb4TiKeY55xbOgMkhPKIWl4oUPzbe9
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745552&amp;s=VaLQCAoHVvobbWjXihVeE2As76k2cq+Rj0UXNhUwG84="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 12:05:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:29:05 GMT
Cache-Control: no-cache
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Tue, 30 Jun 2020 13:29:05 GMT
Date: Tue, 30 Jun 2020 13:29:05 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHovrYEsg9L/8m4bWGkHIXaF0qwFxxTPwzo7OlFct1BRfK+w6giEktfTnmzBb4TiKeY55xbOgMkhPKIWl4oUPzbe9
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559745552&amp;s=VaLQCAoHVvobbWjXihVeE2As76k2cq+Rj0UXNhUwG84="; Path=/; HttpOnly
Last-Modified: Tue, 30 Jun 2020 12:05:04 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200630 13:29:05.559" endtime="20200630 13:29:05.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:29:05.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:29:05.560" endtime="20200630 13:29:05.561"></status>
</kw>
<msg timestamp="20200630 13:29:05.561" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200630 13:29:05.528" endtime="20200630 13:29:05.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:29:05.561" endtime="20200630 13:29:05.561"></status>
</kw>
<status status="PASS" starttime="20200630 13:29:05.465" endtime="20200630 13:29:05.562"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:29:05.464" endtime="20200630 13:29:05.562" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 13:28:54.437" endtime="20200630 13:29:05.563"></status>
</suite>
<status status="PASS" starttime="20200630 13:28:54.406" endtime="20200630 13:29:05.566"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
