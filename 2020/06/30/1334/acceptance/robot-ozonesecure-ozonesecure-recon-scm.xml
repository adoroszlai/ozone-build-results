<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 13:27:29.668" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:29.733" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:29.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:29.734" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:27:29.728" endtime="20200630 13:27:29.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:29.735" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:27:29.735" endtime="20200630 13:27:29.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:29.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:29.736" endtime="20200630 13:27:29.736"></status>
</kw>
<msg timestamp="20200630 13:27:29.736" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:27:29.728" endtime="20200630 13:27:29.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200630 13:27:29.737" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200630 13:27:29.736" endtime="20200630 13:27:29.738"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:29.741" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:29.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:29.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:27:29.739" endtime="20200630 13:27:29.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:29.758" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:27:29.758" endtime="20200630 13:27:29.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:29.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:29.758" endtime="20200630 13:27:29.759"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:29.738" endtime="20200630 13:27:29.759"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:29.738" endtime="20200630 13:27:29.759"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:29.727" endtime="20200630 13:27:29.759"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:29.727" endtime="20200630 13:27:29.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:29.763" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:38.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:38.708" level="INFO">${output} = 2020-06-30 13:27:31,269 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:27:31,475 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:27:29.760" endtime="20200630 13:27:38.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:38.709" level="INFO">2020-06-30 13:27:31,269 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:27:31,475 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:27:31,475 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-30 13:27:33,016 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-30 13:27:33,016 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 13:27:33,016 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 13:27:33,017 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-30 13:27:33,017 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-30 13:27:33,017 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 13:27:33,017 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 13:27:33,057 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 13:27:33,061 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-30 13:27:33,110 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-44177, with testuser/scm@EXAMPLE.COM as owner.
2020-06-30 13:27:33,154 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-44177/bucket-0-08686, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:27:33,679 [pool-2-thread-7] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 13:27:34,070 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,010
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,154
Average Time spent in key write: 00:00:00,472
Total bytes written: 10250
Total Execution time: 00:00:06,544
***************************************************</msg>
<status status="PASS" starttime="20200630 13:27:38.708" endtime="20200630 13:27:38.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:38.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:38.709" endtime="20200630 13:27:38.710"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:29.760" endtime="20200630 13:27:38.710"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:27:29.726" endtime="20200630 13:27:38.710" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:38.718" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:38.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:38.719" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:27:38.715" endtime="20200630 13:27:38.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:38.720" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:27:38.720" endtime="20200630 13:27:38.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:38.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:38.721" endtime="20200630 13:27:38.721"></status>
</kw>
<msg timestamp="20200630 13:27:38.721" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:27:38.714" endtime="20200630 13:27:38.721"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:38.726" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:38.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:38.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:27:38.723" endtime="20200630 13:27:38.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:38.748" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:27:38.748" endtime="20200630 13:27:38.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:38.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:38.749" endtime="20200630 13:27:38.749"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:38.722" endtime="20200630 13:27:38.749"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:38.722" endtime="20200630 13:27:38.750"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:38.713" endtime="20200630 13:27:38.750"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:38.713" endtime="20200630 13:27:38.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:38.763" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:38.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:38.981" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:38.750" endtime="20200630 13:27:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:38.982" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:38 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    370      0 --:--:-- --:--:-- --:--:--   371
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 13:27:38.981" endtime="20200630 13:27:38.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:38.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:38.982" endtime="20200630 13:27:38.983"></status>
</kw>
<msg timestamp="20200630 13:27:38.983" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:38.750" endtime="20200630 13:27:38.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:27:38.984" endtime="20200630 13:27:38.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:38.988" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:39.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:39.029" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:38.985" endtime="20200630 13:27:39.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:39.030" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0  91403      0 --:--:-- --:--:-- --:--:--  104k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 13:27:39.030" endtime="20200630 13:27:39.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:39.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:39.031" endtime="20200630 13:27:39.033"></status>
</kw>
<msg timestamp="20200630 13:27:39.033" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:38.984" endtime="20200630 13:27:39.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 13:27:39.034" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0  91403      0 --:--:-- --:--:-- --:--:--  104k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 13:27:39.034" endtime="20200630 13:27:39.035"></status>
</kw>
<status status="FAIL" starttime="20200630 13:27:38.713" endtime="20200630 13:27:39.035"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:49.041" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:49.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:49.043" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:27:49.038" endtime="20200630 13:27:49.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:49.044" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:27:49.043" endtime="20200630 13:27:49.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:49.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:49.044" endtime="20200630 13:27:49.045"></status>
</kw>
<msg timestamp="20200630 13:27:49.045" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:27:49.037" endtime="20200630 13:27:49.045"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:49.049" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:49.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:49.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:27:49.046" endtime="20200630 13:27:49.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:49.062" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:27:49.061" endtime="20200630 13:27:49.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:49.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:49.062" endtime="20200630 13:27:49.063"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:49.046" endtime="20200630 13:27:49.063"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:49.045" endtime="20200630 13:27:49.063"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:49.037" endtime="20200630 13:27:49.063"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:49.036" endtime="20200630 13:27:49.063"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:49.067" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:49.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:49.086" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:49.064" endtime="20200630 13:27:49.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:49.087" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   5653      0 --:--:-- --:--:-- --:--:--  5923
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 13:27:49.086" endtime="20200630 13:27:49.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:49.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:49.087" endtime="20200630 13:27:49.088"></status>
</kw>
<msg timestamp="20200630 13:27:49.088" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:49.063" endtime="20200630 13:27:49.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:27:49.088" endtime="20200630 13:27:49.089"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:49.092" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:49.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:49.107" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:49.090" endtime="20200630 13:27:49.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:49.109" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   366k      0 --:--:-- --:--:-- --:--:--  391k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 13:27:49.108" endtime="20200630 13:27:49.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:49.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:49.109" endtime="20200630 13:27:49.110"></status>
</kw>
<msg timestamp="20200630 13:27:49.110" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:49.089" endtime="20200630 13:27:49.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 13:27:49.111" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   366k      0 --:--:-- --:--:-- --:--:--  391k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 13:27:49.110" endtime="20200630 13:27:49.111"></status>
</kw>
<status status="FAIL" starttime="20200630 13:27:49.035" endtime="20200630 13:27:49.111"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:59.181" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:59.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:59.238" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:27:59.173" endtime="20200630 13:27:59.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:59.239" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:27:59.238" endtime="20200630 13:27:59.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:59.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:59.239" endtime="20200630 13:27:59.240"></status>
</kw>
<msg timestamp="20200630 13:27:59.240" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:27:59.172" endtime="20200630 13:27:59.240"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:59.245" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:59.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:59.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:27:59.241" endtime="20200630 13:27:59.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:59.266" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:27:59.266" endtime="20200630 13:27:59.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:59.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:59.267" endtime="20200630 13:27:59.267"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:59.241" endtime="20200630 13:27:59.267"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:59.240" endtime="20200630 13:27:59.268"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:59.172" endtime="20200630 13:27:59.268"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:59.171" endtime="20200630 13:27:59.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:59.271" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:59.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:59.361" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:59.268" endtime="20200630 13:27:59.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:59.362" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    932      0 --:--:-- --:--:-- --:--:--  5923
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 13:27:59.361" endtime="20200630 13:27:59.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:59.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:59.362" endtime="20200630 13:27:59.364"></status>
</kw>
<msg timestamp="20200630 13:27:59.365" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:59.268" endtime="20200630 13:27:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:27:59.365" endtime="20200630 13:27:59.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:27:59.370" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:27:59.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:27:59.393" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:59.367" endtime="20200630 13:27:59.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:27:59.395" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   226k      0 --:--:-- --:--:-- --:--:--  240k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 13:27:59.394" endtime="20200630 13:27:59.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:27:59.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:27:59.395" endtime="20200630 13:27:59.395"></status>
</kw>
<msg timestamp="20200630 13:27:59.396" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:27:59.366" endtime="20200630 13:27:59.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 13:27:59.397" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Date: Tue, 30 Jun 2020 13:27:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   226k      0 --:--:-- --:--:-- --:--:--  240k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 13:27:59.396" endtime="20200630 13:27:59.397"></status>
</kw>
<status status="FAIL" starttime="20200630 13:27:59.136" endtime="20200630 13:27:59.398"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:09.405" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:09.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:09.406" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:28:09.401" endtime="20200630 13:28:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:09.407" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:28:09.407" endtime="20200630 13:28:09.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:09.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:09.408" endtime="20200630 13:28:09.409"></status>
</kw>
<msg timestamp="20200630 13:28:09.409" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:28:09.401" endtime="20200630 13:28:09.409"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:09.413" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:09.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:09.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:28:09.410" endtime="20200630 13:28:09.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:09.425" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:28:09.424" endtime="20200630 13:28:09.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:09.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:09.426" endtime="20200630 13:28:09.427"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:09.409" endtime="20200630 13:28:09.427"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:09.409" endtime="20200630 13:28:09.428"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:09.401" endtime="20200630 13:28:09.428"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:09.399" endtime="20200630 13:28:09.428"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:09.432" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:09.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:09.455" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:09.429" endtime="20200630 13:28:09.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:09.456" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7154      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 13:28:09.455" endtime="20200630 13:28:09.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:09.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:09.456" endtime="20200630 13:28:09.457"></status>
</kw>
<msg timestamp="20200630 13:28:09.457" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:09.428" endtime="20200630 13:28:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:09.457" endtime="20200630 13:28:09.458"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:09.462" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:09.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:09.484" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:09.459" endtime="20200630 13:28:09.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:09.486" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   266k      0 --:--:-- --:--:-- --:--:--  284k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 13:28:09.485" endtime="20200630 13:28:09.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:09.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:09.486" endtime="20200630 13:28:09.486"></status>
</kw>
<msg timestamp="20200630 13:28:09.487" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:09.458" endtime="20200630 13:28:09.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 13:28:09.488" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   266k      0 --:--:-- --:--:-- --:--:--  284k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 13:28:09.487" endtime="20200630 13:28:09.488"></status>
</kw>
<status status="FAIL" starttime="20200630 13:28:09.398" endtime="20200630 13:28:09.488"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:19.495" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:19.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:19.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:28:19.490" endtime="20200630 13:28:19.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:19.496" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:28:19.496" endtime="20200630 13:28:19.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:19.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:19.497" endtime="20200630 13:28:19.497"></status>
</kw>
<msg timestamp="20200630 13:28:19.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:28:19.490" endtime="20200630 13:28:19.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:19.502" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:19.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:19.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:28:19.499" endtime="20200630 13:28:19.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:19.513" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:28:19.512" endtime="20200630 13:28:19.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:19.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:19.513" endtime="20200630 13:28:19.514"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:19.498" endtime="20200630 13:28:19.514"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:19.498" endtime="20200630 13:28:19.514"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:19.490" endtime="20200630 13:28:19.515"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:19.489" endtime="20200630 13:28:19.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:19.518" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:19.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:19.536" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:19.515" endtime="20200630 13:28:19.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:19.537" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7632      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200630 13:28:19.536" endtime="20200630 13:28:19.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:19.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:19.537" endtime="20200630 13:28:19.538"></status>
</kw>
<msg timestamp="20200630 13:28:19.538" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:19.515" endtime="20200630 13:28:19.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:19.538" endtime="20200630 13:28:19.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:19.541" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:19.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:19.554" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:19.539" endtime="20200630 13:28:19.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:19.555" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   466k      0 --:--:-- --:--:-- --:--:--  521k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200630 13:28:19.555" endtime="20200630 13:28:19.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:19.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:19.556" endtime="20200630 13:28:19.556"></status>
</kw>
<msg timestamp="20200630 13:28:19.557" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:19.539" endtime="20200630 13:28:19.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200630 13:28:19.558" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   466k      0 --:--:-- --:--:-- --:--:--  521k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200630 13:28:19.557" endtime="20200630 13:28:19.558"></status>
</kw>
<status status="FAIL" starttime="20200630 13:28:19.489" endtime="20200630 13:28:19.558"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.567" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:28:29.561" endtime="20200630 13:28:29.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.568" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:28:29.567" endtime="20200630 13:28:29.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.568" endtime="20200630 13:28:29.568"></status>
</kw>
<msg timestamp="20200630 13:28:29.569" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:28:29.560" endtime="20200630 13:28:29.569"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.572" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:28:29.570" endtime="20200630 13:28:29.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.584" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:28:29.584" endtime="20200630 13:28:29.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.584" endtime="20200630 13:28:29.585"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.569" endtime="20200630 13:28:29.585"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.569" endtime="20200630 13:28:29.586"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.560" endtime="20200630 13:28:29.586"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.559" endtime="20200630 13:28:29.586"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.590" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.610" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.587" endtime="20200630 13:28:29.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.611" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  17780      0 --:--:-- --:--:-- --:--:-- 18200
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200630 13:28:29.611" endtime="20200630 13:28:29.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.611" endtime="20200630 13:28:29.612"></status>
</kw>
<msg timestamp="20200630 13:28:29.612" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.586" endtime="20200630 13:28:29.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.612" endtime="20200630 13:28:29.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.617" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.633" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.613" endtime="20200630 13:28:29.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.634" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3285
&lt; 
{ [data not shown]

100  3285  100  3285    0     0   300k      0 --:--:-- --:--:-- --:--:--  320k
* Connection #0 to host recon left intact
[{"volume":"vol-2-28234","bucket":"bucket-1-87946","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-2-17609","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-0-54766","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-2-55962","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-2-49850","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-1-11195","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-0-33348","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-0-00519","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-1-18204","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-3-09721","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-3-77151","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-1-77531","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-4-68911","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-1-17266","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-4-42596","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-3-63089","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-2-90587","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-0-85984","fileSize":16384,"count":5},{"volume":"vol-3-36188","bucket":"bucket-2-74400","fileSize":16384,"count":5},{"volume":"vol-0-11892","bucket":"bucket-4-14955","fileSize":16384,"count":5},{"volume":"vol-1-20170","bucket":"bucket-3-63987","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-3-76045","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-0-08800","fileSize":16384,"count":5},{"volume":"vol-4-26318","bucket":"bucket-4-83862","fileSize":16384,"count":5},{"volume":"vol-2-28234","bucket":"bucket-4-69529","fileSize":16384,"count":5},{"volume":"73251-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"73251-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"73251-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest369","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":32768,"count":0},{"volume":"fstest2","bucket":"bucket3-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-26277","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-82229","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-01877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-82229","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-34516","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-08195","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44422","fileSize":1024,"count":2},{"volume":"vol-0-44177","bucket":"bucket-0-08686","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200630 13:28:29.634" endtime="20200630 13:28:29.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.635" endtime="20200630 13:28:29.635"></status>
</kw>
<msg timestamp="20200630 13:28:29.635" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.613" endtime="20200630 13:28:29.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.636" endtime="20200630 13:28:29.636"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.559" endtime="20200630 13:28:29.636"></status>
</kw>
<status status="PASS" starttime="20200630 13:27:38.712" endtime="20200630 13:28:29.636"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:27:38.711" endtime="20200630 13:28:29.637" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.642" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.686" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.639" endtime="20200630 13:28:29.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.687" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  49156      0 --:--:-- --:--:-- --:--:-- 50333
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"fa506b53-ea07-4db0-a06b-932a7aad0a69","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593523684664,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25439371264},"pipelines":[{"pipelineID":"1ff90d96-a60c-45ba-a04d-13e6c4587f98","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"f8a25f7d-a51a-4502-8a29-7666fdc79c4b","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"ee449ca3-8f1a-4296-aefa-ae05f9f0195c","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593523684783,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25439404032},"pipelines":[{"pipelineID":"1ff90d96-a60c-45ba-a04d-13e6c4587f98","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"6ca45ea7-17b2-44bd-b910-2ca6fcf90690","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"6e037161-f909-4878-94bf-a3b22180dba6","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593523684755,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25439371264},"pipelines":[{"pipelineID":"e6a661a6-c762-4d93-8668-36fccd644341","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"1ff90d96-a60c-45ba-a04d-13e6c4587f98","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200630 13:28:29.686" endtime="20200630 13:28:29.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.688" endtime="20200630 13:28:29.689"></status>
</kw>
<msg timestamp="20200630 13:28:29.689" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.639" endtime="20200630 13:28:29.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.690" endtime="20200630 13:28:29.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.690" endtime="20200630 13:28:29.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.691" endtime="20200630 13:28:29.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.691" endtime="20200630 13:28:29.692"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.695" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.729" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.693" endtime="20200630 13:28:29.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.731" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  48830      0 --:--:-- --:--:-- --:--:-- 50666
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"e6a661a6-c762-4d93-8668-36fccd644341","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1457617,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"1ff90d96-a60c-45ba-a04d-13e6c4587f98","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1456638,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"6ca45ea7-17b2-44bd-b910-2ca6fcf90690","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1456659,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f8a25f7d-a51a-4502-8a29-7666fdc79c4b","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1457245,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200630 13:28:29.730" endtime="20200630 13:28:29.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.731" endtime="20200630 13:28:29.732"></status>
</kw>
<msg timestamp="20200630 13:28:29.732" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.692" endtime="20200630 13:28:29.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.732" endtime="20200630 13:28:29.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.733" endtime="20200630 13:28:29.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.733" endtime="20200630 13:28:29.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.734" endtime="20200630 13:28:29.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.734" endtime="20200630 13:28:29.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.735" endtime="20200630 13:28:29.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.739" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.761" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.736" endtime="20200630 13:28:29.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.762" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  11000      0 --:--:-- --:--:-- --:--:-- 11625
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76318146560},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200630 13:28:29.762" endtime="20200630 13:28:29.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.763" endtime="20200630 13:28:29.763"></status>
</kw>
<msg timestamp="20200630 13:28:29.763" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.735" endtime="20200630 13:28:29.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.764" endtime="20200630 13:28:29.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.764" endtime="20200630 13:28:29.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.765" endtime="20200630 13:28:29.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.769" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.807" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.766" endtime="20200630 13:28:29.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.808" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  16879      0 --:--:-- --:--:-- --:--:-- 17461
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593522285377,"lastReportTimestamp":1593523635151},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593522285746,"lastReportTimestamp":1593523684665},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593522285628,"lastReportTimestamp":1593523639499}]</msg>
<status status="PASS" starttime="20200630 13:28:29.807" endtime="20200630 13:28:29.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.808" endtime="20200630 13:28:29.809"></status>
</kw>
<msg timestamp="20200630 13:28:29.809" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.766" endtime="20200630 13:28:29.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.809" endtime="20200630 13:28:29.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:28:29.638" endtime="20200630 13:28:29.810" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.819" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.822" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200630 13:28:29.817" endtime="20200630 13:28:29.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.823" level="INFO">scm</msg>
<status status="PASS" starttime="20200630 13:28:29.822" endtime="20200630 13:28:29.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.823" endtime="20200630 13:28:29.824"></status>
</kw>
<msg timestamp="20200630 13:28:29.824" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200630 13:28:29.816" endtime="20200630 13:28:29.824"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.828" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:28:29.825" endtime="20200630 13:28:29.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.839" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:28:29.839" endtime="20200630 13:28:29.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.840" endtime="20200630 13:28:29.840"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.825" endtime="20200630 13:28:29.840"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.824" endtime="20200630 13:28:29.840"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.816" endtime="20200630 13:28:29.841"></status>
</kw>
<status status="PASS" starttime="20200630 13:28:29.815" endtime="20200630 13:28:29.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:28:29.843" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:28:29.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:28:29.896" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.841" endtime="20200630 13:28:29.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:28:29.897" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.10...
* Connected to recon (172.26.0.10) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  15858      0 --:--:-- --:--:-- --:--:-- 16370
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x2578f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.10) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQK++HHA2ZoWVDtTwOyHYGFrlD7l/Ue34aYqGB571Y2rUkUfzflyldDrh4ElYo568aysXNeLHSOZiJ231dEhTvX1B0TYdzbJBBmvQh+pvmWdCsvhYTv0uqSKXpi616kzEdZSzxJcT5Qds+vIe33KgxM8JvHq5zW+Vuy3Q8aR/69a1BMvkD1yRND1awOcv61/HBg1vDcvb45NCLtLt+UTYPDlFKRfLinOBZqCw+FyG/yhkBeHOKk9tA0U9Rgmul+zFkub1TdRPNeKkM9pGtdGF5Qyb6HOpSHpuobpl2HaLmUCHmRufcOmy4F673/7Hd5BhuTRy9QN4ywzjrYezhEPpQ9J9aWkgdIwgc+gAwIBEqKBxwSBxLcs7AV7ahY9EDvKWu6sH4RR+5W2+FI4k5jeCF84p5VKvihJdZhEyMGObsdLpXRXf4Xj1F48JwO+DhISOaDN1rGHKS9QM8FuTgRKIJJNWFOHkWCbvyha0SuaCoHYmyAybW1z1kr1w55vRtXwitMSGOh6F6gS0nkVAQ2lVKq21UYOjnt1X04qn+m0IilG6F6ac6DdUgCJv68PTf3i6oeghH+TdHYy8lDs3jQgpiFATKUZjhBTyEtytQMOLq/MpsAnWTYbc1Y=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Date: Tue, 30 Jun 2020 13:28:29 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCk37lJwgIRuJmd43k9gmIIuUyAwurL1jLsOZMBrjDYo8prq/dITouMS158mQzZ9Q7GkbHw3Fw/Z7btVzM6Mk0mtB1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593559709890&amp;s=sP8gBz9sn4kuKtppwTIi63jvIUYltTtC3uVsvcVNAB4="; Path=/; HttpOnly
&lt; Last-Modified: Tue, 30 Jun 2020 12:05:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  49543      0 --:--:-- --:--:-- --:--:-- 49543
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.897" endtime="20200630 13:28:29.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:28:29.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:28:29.898" endtime="20200630 13:28:29.898"></status>
</kw>
<msg timestamp="20200630 13:28:29.899" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200630 13:28:29.841" endtime="20200630 13:28:29.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200630 13:28:29.899" endtime="20200630 13:28:29.900"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:28:29.814" endtime="20200630 13:28:29.900" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200630 13:27:29.699" endtime="20200630 13:28:29.901"></status>
</suite>
<status status="PASS" starttime="20200630 13:27:29.669" endtime="20200630 13:28:29.904"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
