<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 12:52:51.268" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:52:51.333" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:52:59.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:52:59.891" level="INFO">${output} = 2020-06-30 12:52:52,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:52:53,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:52:51.327" endtime="20200630 12:52:59.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:52:59.893" level="INFO">2020-06-30 12:52:52,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:52:53,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 12:52:53,003 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 12:52:54,256 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 12:52:54,257 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 12:52:54,265 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 12:52:54,276 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:52:54,324 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-73086, with hadoop as owner.
2020-06-30 12:52:54,372 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-73086/bucket-0-95537, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:52:54,966 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 12:52:55,277 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,069
Average Time spent in bucket creation: 00:00:00,055
Average Time spent in key creation: 00:00:00,107
Average Time spent in key write: 00:00:00,661
Total bytes written: 10240
Total Execution time: 00:00:06,177
***************************************************</msg>
<status status="PASS" starttime="20200630 12:52:59.891" endtime="20200630 12:52:59.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:52:59.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:52:59.893" endtime="20200630 12:52:59.893"></status>
</kw>
<msg timestamp="20200630 12:52:59.894" level="INFO">${result} = 2020-06-30 12:52:52,781 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:52:53,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:52:51.326" endtime="20200630 12:52:59.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:52:59.895" endtime="20200630 12:52:59.895"></status>
</kw>
<status status="PASS" starttime="20200630 12:52:59.894" endtime="20200630 12:52:59.895"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:52:51.326" endtime="20200630 12:52:59.895" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:52:59.901" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:53:06.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:53:06.208" level="INFO">${output} = 2020-06-30 12:53:02,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:02,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:52:59.898" endtime="20200630 12:53:06.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:53:06.209" level="INFO">2020-06-30 12:53:02,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:02,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 12:53:02,321 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 12:53:02,502 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kimqi9ejor
2020-06-30 12:53:02,519 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:03,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:03,590 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 12:53:03,637 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:53:04,375 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 12:53:04,520 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:05,521 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 12:53:05,862 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1640.731966, max=1640.731966, mean=1640.731966, stddev=0.0, median=1640.731966, p75=1640.731966, p95=1640.731966, p98=1640.731966, p99=1640.731966, p999=1640.731966, mean_rate=0.45922552435494324, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 12:53:05,863 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 12:53:05,871 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 12:53:05,871 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 12:53:06.208" endtime="20200630 12:53:06.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:53:06.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:53:06.209" endtime="20200630 12:53:06.210"></status>
</kw>
<msg timestamp="20200630 12:53:06.210" level="INFO">${result} = 2020-06-30 12:53:02,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:02,318 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:52:59.897" endtime="20200630 12:53:06.210"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:53:06.211" endtime="20200630 12:53:06.211"></status>
</kw>
<status status="PASS" starttime="20200630 12:53:06.210" endtime="20200630 12:53:06.211"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:52:59.896" endtime="20200630 12:53:06.211" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:53:06.216" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:53:10.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:53:10.454" level="INFO">${output} = 2020-06-30 12:53:07,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:08,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:53:06.213" endtime="20200630 12:53:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:53:10.455" level="INFO">2020-06-30 12:53:07,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:08,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 12:53:08,036 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 12:53:08,203 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jqeepn1h3n
2020-06-30 12:53:08,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:09,230 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:10,238 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 12:53:10,412 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=85.71209, max=85.71209, mean=85.71209, stddev=0.0, median=85.71209, p75=85.71209, p95=85.71209, p98=85.71209, p99=85.71209, p999=85.71209, mean_rate=0.8950670153680679, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 12:53:10,419 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 12:53:10,420 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 12:53:10,420 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 12:53:10.455" endtime="20200630 12:53:10.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:53:10.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:53:10.456" endtime="20200630 12:53:10.457"></status>
</kw>
<msg timestamp="20200630 12:53:10.457" level="INFO">${result} = 2020-06-30 12:53:07,795 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:08,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:53:06.213" endtime="20200630 12:53:10.457"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:53:10.458" endtime="20200630 12:53:10.458"></status>
</kw>
<status status="PASS" starttime="20200630 12:53:10.457" endtime="20200630 12:53:10.458"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:53:06.212" endtime="20200630 12:53:10.458" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:53:10.464" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:53:16.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:53:16.044" level="INFO">${output} = 2020-06-30 12:53:12,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:13,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:53:10.460" endtime="20200630 12:53:16.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:53:16.045" level="INFO">2020-06-30 12:53:12,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:13,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 12:53:13,532 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 12:53:13,731 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ifexd78va6
2020-06-30 12:53:13,754 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:14,758 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 12:53:15,760 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 12:53:16,001 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.941186, max=18.941186, mean=18.941186, stddev=0.0, median=18.941186, p75=18.941186, p95=18.941186, p98=18.941186, p99=18.941186, p999=18.941186, mean_rate=0.884375165394738, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 12:53:16,001 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 12:53:16,018 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 12:53:16,018 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 12:53:16.044" endtime="20200630 12:53:16.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:53:16.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:53:16.045" endtime="20200630 12:53:16.046"></status>
</kw>
<msg timestamp="20200630 12:53:16.046" level="INFO">${result} = 2020-06-30 12:53:12,952 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:53:13,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:53:10.460" endtime="20200630 12:53:16.046"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:53:16.047" endtime="20200630 12:53:16.048"></status>
</kw>
<status status="PASS" starttime="20200630 12:53:16.047" endtime="20200630 12:53:16.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:53:10.459" endtime="20200630 12:53:16.048" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 12:52:51.300" endtime="20200630 12:53:16.049"></status>
</suite>
<status status="PASS" starttime="20200630 12:52:51.269" endtime="20200630 12:53:16.053"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
