<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 12:32:49.019" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 12:32:49.078" endtime="20200630 12:32:49.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:32:49.083" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:32:49.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:32:49.173" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 12:32:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 11:59:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 12:32:49.079" endtime="20200630 12:32:49.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:32:49.177" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 12:32:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 11:59:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 12:32:49.174" endtime="20200630 12:32:49.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:32:49.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:32:49.177" endtime="20200630 12:32:49.179"></status>
</kw>
<msg timestamp="20200630 12:32:49.179" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 12:32:49 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 11:59:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 12:32:49.079" endtime="20200630 12:32:49.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 12:32:49.180" endtime="20200630 12:32:49.181"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:32:49.078" endtime="20200630 12:32:49.181" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:32:49.182" endtime="20200630 12:32:49.183"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:32:49.193" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:05.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:05.111" level="INFO">${output} = 2020-06-30 12:32:50,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:32:51,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:32:49.183" endtime="20200630 12:34:05.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:05.112" level="INFO">2020-06-30 12:32:50,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:32:51,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 12:32:51,455 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 12:32:54,235 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 12:32:54,236 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 12:32:54,236 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 12:32:54,236 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 12:32:54,236 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 12:32:54,236 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 12:32:54,237 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 12:32:54,247 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 12:32:54,251 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 12:32:54,263 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 12:32:54,300 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-36370, with hadoop as owner.
2020-06-30 12:32:54,745 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-15905, with hadoop as owner.
2020-06-30 12:32:54,756 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-90541, with hadoop as owner.
2020-06-30 12:32:54,764 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-81779, with hadoop as owner.
2020-06-30 12:32:54,771 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-40204, with hadoop as owner.
2020-06-30 12:32:54,791 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36370/bucket-0-32258, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,877 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-15905/bucket-0-48390, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,888 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90541/bucket-0-21112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,901 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81779/bucket-0-36808, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,911 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40204/bucket-0-50622, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,919 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36370/bucket-1-41741, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,927 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-15905/bucket-1-32580, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,932 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90541/bucket-1-10934, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81779/bucket-1-51570, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,941 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40204/bucket-1-10751, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,944 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36370/bucket-2-74659, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,949 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-15905/bucket-2-98775, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,954 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90541/bucket-2-10225, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,969 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81779/bucket-2-60977, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,980 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40204/bucket-2-92663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36370/bucket-3-97875, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:54,995 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-15905/bucket-3-09639, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,003 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90541/bucket-3-36897, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,011 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81779/bucket-3-46875, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,015 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40204/bucket-3-47117, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,020 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-36370/bucket-4-19801, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,027 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-15905/bucket-4-97919, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,033 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90541/bucket-4-24941, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,044 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-81779/bucket-4-74713, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,051 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40204/bucket-4-49815, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 12:32:55,268 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 12:32:56,268 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 12:32:56,552 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 12:32:57,269 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 12:32:58,270 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 12:32:59,270 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 12:33:00,271 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-30 12:33:01,271 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-30 12:33:02,275 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 12:33:03,527 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-30 12:33:04,528 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-30 12:33:05,529 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-30 12:33:06,529 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-30 12:33:07,530 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-30 12:33:08,530 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-30 12:33:09,531 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-30 12:33:10,532 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-30 12:33:11,532 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-30 12:33:12,533 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-30 12:33:13,533 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 12:33:14,538 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 12:33:15,548 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-06-30 12:33:16,556 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-06-30 12:33:17,556 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-30 12:33:18,557 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-30 12:33:19,557 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 12:33:20,558 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-30 12:33:21,558 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-30 12:33:22,559 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-06-30 12:33:23,559 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-30 12:33:24,560 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-30 12:33:25,560 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-30 12:33:26,582 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-30 12:33:27,602 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-30 12:33:28,603 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 12:33:29,603 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 12:33:30,604 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 12:33:31,604 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-30 12:33:32,605 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-30 12:33:33,606 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-30 12:33:34,606 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-30 12:33:35,607 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-30 12:33:36,607 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 12:33:37,611 [Thread-7] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-30 12:33:38,621 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 12:33:39,621 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-30 12:33:40,622 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-30 12:33:41,622 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-30 12:33:42,623 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-30 12:33:43,623 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-30 12:33:44,623 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-30 12:33:45,624 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 12:33:46,624 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-30 12:33:47,625 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-06-30 12:33:48,648 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-30 12:33:49,660 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-30 12:33:50,661 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-06-30 12:33:51,662 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-06-30 12:33:52,662 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 12:33:53,663 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-30 12:33:54,663 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-06-30 12:33:55,664 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-06-30 12:33:56,664 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-06-30 12:33:57,665 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-06-30 12:33:58,666 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-06-30 12:33:59,666 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,489
Average Time spent in bucket creation: 00:00:00,193
Average Time spent in key creation: 00:00:02,682
Average Time spent in key write: 00:00:01,279
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:12,386
***************************************************</msg>
<status status="PASS" starttime="20200630 12:34:05.111" endtime="20200630 12:34:05.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:05.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:05.112" endtime="20200630 12:34:05.113"></status>
</kw>
<msg timestamp="20200630 12:34:05.113" level="INFO">${result} = 2020-06-30 12:32:50,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 12:32:51,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 12:32:49.183" endtime="20200630 12:34:05.113"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:05.114" endtime="20200630 12:34:05.114"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:05.113" endtime="20200630 12:34:05.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:05.115" endtime="20200630 12:34:05.115"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 12:32:49.182" endtime="20200630 12:34:05.115" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 12:32:49.053" endtime="20200630 12:34:05.116"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 12:34:05.126" level="INFO">${random} = 07540</msg>
<status status="PASS" starttime="20200630 12:34:05.125" endtime="20200630 12:34:05.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 12:34:05.126" level="INFO">${prefix} = 07540</msg>
<status status="PASS" starttime="20200630 12:34:05.126" endtime="20200630 12:34:05.126"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:05.125" endtime="20200630 12:34:05.127"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:05.127" endtime="20200630 12:34:05.128"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:05.132" level="INFO">Running command 'ozone sh volume info o3://om:9862/07540-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:08.083" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:34:08.083" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07540-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 12:34:05.129" endtime="20200630 12:34:08.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:08.084" level="INFO">VOLUME_NOT_FOUND Volume 07540-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 12:34:08.083" endtime="20200630 12:34:08.084"></status>
</kw>
<msg timestamp="20200630 12:34:08.085" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07540-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 12:34:05.128" endtime="20200630 12:34:08.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:08.085" endtime="20200630 12:34:08.085"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:08.089" level="INFO">Running command 'ozone sh volume create o3://om:9862/07540-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:10.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:10.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:08.086" endtime="20200630 12:34:10.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:10.863" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:10.862" endtime="20200630 12:34:10.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:10.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:10.863" endtime="20200630 12:34:10.864"></status>
</kw>
<msg timestamp="20200630 12:34:10.864" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:34:08.085" endtime="20200630 12:34:10.864"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:10.864" endtime="20200630 12:34:10.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:10.869" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="07540-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:15.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:15.125" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 12:34:10.865" endtime="20200630 12:34:15.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:15.127" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:34:15.126" endtime="20200630 12:34:15.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:15.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:15.127" endtime="20200630 12:34:15.127"></status>
</kw>
<msg timestamp="20200630 12:34:15.128" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 12:34:10.865" endtime="20200630 12:34:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:15.128" endtime="20200630 12:34:15.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:15.132" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="07540-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:18.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:18.104" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 12:34:15.129" endtime="20200630 12:34:18.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:18.105" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:34:18.104" endtime="20200630 12:34:18.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:18.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:18.105" endtime="20200630 12:34:18.106"></status>
</kw>
<msg timestamp="20200630 12:34:18.106" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:34:10.740Z",
  "modificationTime": "2020-06-30T12:34:10.740Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 12:34:15.128" endtime="20200630 12:34:18.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:18.106" endtime="20200630 12:34:18.106"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:18.110" level="INFO">Running command 'ozone sh volume update o3://om:9862/07540-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:21.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:21.062" level="INFO">${output} = {
  "metadata" : { },
  "name" : "07540-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:34:10.740Z",
  "modificationTime" : "2020-06-30T12:34:20.580Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 12:34:18.107" endtime="20200630 12:34:21.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:21.064" level="INFO">{
  "metadata" : { },
  "name" : "07540-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:34:10.740Z",
  "modificationTime" : "2020-06-30T12:34:20.580Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 12:34:21.063" endtime="20200630 12:34:21.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:21.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:21.064" endtime="20200630 12:34:21.065"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:18.107" endtime="20200630 12:34:21.065"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:21.069" level="INFO">Running command 'ozone sh volume info o3://om:9862/07540-rpcwoport | jq -r '. | select(.name=="07540-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:24.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:24.727" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:34:21.066" endtime="20200630 12:34:24.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:24.733" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 12:34:24.728" endtime="20200630 12:34:24.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:24.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:24.733" endtime="20200630 12:34:24.733"></status>
</kw>
<msg timestamp="20200630 12:34:24.734" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:34:21.065" endtime="20200630 12:34:24.734"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:24.734" endtime="20200630 12:34:24.734"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:24.738" level="INFO">Running command 'ozone sh bucket create o3://om:9862/07540-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:27.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:27.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:24.735" endtime="20200630 12:34:27.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:27.519" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:27.518" endtime="20200630 12:34:27.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:27.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:27.520" endtime="20200630 12:34:27.520"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:24.734" endtime="20200630 12:34:27.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:27.523" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07540-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:30.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:30.847" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 12:34:27.521" endtime="20200630 12:34:30.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:30.848" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 12:34:30.848" endtime="20200630 12:34:30.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:30.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:30.849" endtime="20200630 12:34:30.849"></status>
</kw>
<msg timestamp="20200630 12:34:30.849" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 12:34:27.521" endtime="20200630 12:34:30.849"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:30.850" endtime="20200630 12:34:30.850"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:30.854" level="INFO">Running command 'ozone sh bucket list o3://om:9862/07540-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:33.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:33.906" level="INFO">${output} = 07540-rpcwoport</msg>
<status status="PASS" starttime="20200630 12:34:30.851" endtime="20200630 12:34:33.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:33.907" level="INFO">07540-rpcwoport</msg>
<status status="PASS" starttime="20200630 12:34:33.906" endtime="20200630 12:34:33.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:33.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:33.907" endtime="20200630 12:34:33.908"></status>
</kw>
<msg timestamp="20200630 12:34:33.908" level="INFO">${result} = 07540-rpcwoport</msg>
<status status="PASS" starttime="20200630 12:34:30.850" endtime="20200630 12:34:33.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:33.908" endtime="20200630 12:34:33.909"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:33.914" level="INFO">Running command 'ozone sh key put o3://om:9862/07540-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:40.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:40.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:33.910" endtime="20200630 12:34:40.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:40.355" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:40.354" endtime="20200630 12:34:40.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:40.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:40.355" endtime="20200630 12:34:40.356"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:33.910" endtime="20200630 12:34:40.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:40.358" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:40.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:40.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:40.356" endtime="20200630 12:34:40.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:40.362" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:40.362" endtime="20200630 12:34:40.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:40.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:40.362" endtime="20200630 12:34:40.363"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:40.356" endtime="20200630 12:34:40.363"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:40.367" level="INFO">Running command 'ozone sh key get o3://om:9862/07540-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:44.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:44.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:40.364" endtime="20200630 12:34:44.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:44.895" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:44.894" endtime="20200630 12:34:44.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:44.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:44.895" endtime="20200630 12:34:44.896"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:40.363" endtime="20200630 12:34:44.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:44.900" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:44.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:44.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:44.897" endtime="20200630 12:34:44.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:44.903" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:44.903" endtime="20200630 12:34:44.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:44.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:44.904" endtime="20200630 12:34:44.904"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:44.897" endtime="20200630 12:34:44.904"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:44.907" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/07540-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:51.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:51.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:44.905" endtime="20200630 12:34:51.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:51.252" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:51.251" endtime="20200630 12:34:51.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:51.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:51.252" endtime="20200630 12:34:51.253"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:44.905" endtime="20200630 12:34:51.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:51.256" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:51.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:51.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:51.254" endtime="20200630 12:34:51.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:51.260" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:51.259" endtime="20200630 12:34:51.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:51.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:51.260" endtime="20200630 12:34:51.261"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:51.253" endtime="20200630 12:34:51.261"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:51.264" level="INFO">Running command 'ozone sh key get o3://om:9862/07540-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:55.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:55.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:51.261" endtime="20200630 12:34:55.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:55.916" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:55.915" endtime="20200630 12:34:55.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:55.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:55.916" endtime="20200630 12:34:55.916"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:51.261" endtime="20200630 12:34:55.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:55.921" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:55.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:55.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:55.917" endtime="20200630 12:34:55.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:55.923" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:34:55.922" endtime="20200630 12:34:55.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:55.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:55.923" endtime="20200630 12:34:55.924"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:55.917" endtime="20200630 12:34:55.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:55.927" level="INFO">Running command 'ozone sh key info o3://om:9862/07540-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:34:59.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:34:59.359" level="INFO">${output} = {
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:48.856Z",
  "modificationTime": "2020-06-30T12:34:50.806Z",...</msg>
<status status="PASS" starttime="20200630 12:34:55.925" endtime="20200630 12:34:59.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:34:59.360" level="INFO">{
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:48.856Z",
  "modificationTime": "2020-06-30T12:34:50.806Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432958757601400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:34:59.360" endtime="20200630 12:34:59.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:34:59.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:34:59.361" endtime="20200630 12:34:59.362"></status>
</kw>
<msg timestamp="20200630 12:34:59.362" level="INFO">${result} = {
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:48.856Z",
  "modificationTime": "2020-06-30T12:34:50.806Z",...</msg>
<status status="PASS" starttime="20200630 12:34:55.924" endtime="20200630 12:34:59.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 12:34:59.362" endtime="20200630 12:34:59.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:34:59.367" level="INFO">Running command 'ozone sh key delete o3://om:9862/07540-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:02.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:02.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:34:59.363" endtime="20200630 12:35:02.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:02.748" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:02.747" endtime="20200630 12:35:02.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:02.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:02.748" endtime="20200630 12:35:02.748"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:59.363" endtime="20200630 12:35:02.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:02.753" level="INFO">Running command 'ozone sh key cp o3://om:9862/07540-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:07.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:07.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:02.750" endtime="20200630 12:35:07.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:07.994" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:07.993" endtime="20200630 12:35:07.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:07.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:07.994" endtime="20200630 12:35:07.995"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:02.749" endtime="20200630 12:35:07.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:07.999" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:08.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:08.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:07.996" endtime="20200630 12:35:08.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:08.002" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:08.001" endtime="20200630 12:35:08.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:08.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:08.002" endtime="20200630 12:35:08.003"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:07.995" endtime="20200630 12:35:08.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:08.005" level="INFO">Running command 'ozone sh key get o3://om:9862/07540-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:13.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:13.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:08.004" endtime="20200630 12:35:13.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:13.815" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:13.815" endtime="20200630 12:35:13.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:13.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:13.816" endtime="20200630 12:35:13.816"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:08.003" endtime="20200630 12:35:13.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:13.819" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:13.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:13.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:13.817" endtime="20200630 12:35:13.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:13.823" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:13.822" endtime="20200630 12:35:13.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:13.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:13.823" endtime="20200630 12:35:13.823"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:13.816" endtime="20200630 12:35:13.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:13.826" level="INFO">Running command 'ozone sh key delete o3://om:9862/07540-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:16.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:16.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:13.824" endtime="20200630 12:35:16.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:16.426" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:16.425" endtime="20200630 12:35:16.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:16.426" endtime="20200630 12:35:16.426"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:13.824" endtime="20200630 12:35:16.427"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:16.431" level="INFO">Running command 'ozone sh key get o3://om:9862/07540-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:19.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:35:19.126" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:35:16.427" endtime="20200630 12:35:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:19.127" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:35:19.126" endtime="20200630 12:35:19.127"></status>
</kw>
<msg timestamp="20200630 12:35:19.127" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:35:16.427" endtime="20200630 12:35:19.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:19.128" endtime="20200630 12:35:19.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:19.131" level="INFO">Running command 'ozone sh key get --force o3://om:9862/07540-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:25.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:25.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:19.129" endtime="20200630 12:35:25.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:25.421" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:25.420" endtime="20200630 12:35:25.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:25.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:25.421" endtime="20200630 12:35:25.421"></status>
</kw>
<msg timestamp="20200630 12:35:25.422" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:35:19.128" endtime="20200630 12:35:25.422"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:25.422" endtime="20200630 12:35:25.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:25.425" level="INFO">Running command 'ozone sh key info o3://om:9862/07540-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:28.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:28.790" level="INFO">${output} = {
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:37.995Z",
  "modificationTime": "2020-06-30T12:34:39.853Z",
  "re...</msg>
<status status="PASS" starttime="20200630 12:35:25.423" endtime="20200630 12:35:28.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:28.791" level="INFO">{
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:37.995Z",
  "modificationTime": "2020-06-30T12:34:39.853Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432958045618300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:35:28.790" endtime="20200630 12:35:28.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:28.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:28.792" endtime="20200630 12:35:28.792"></status>
</kw>
<msg timestamp="20200630 12:35:28.792" level="INFO">${result} = {
  "volumeName": "07540-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:34:37.995Z",
  "modificationTime": "2020-06-30T12:34:39.853Z",
  "re...</msg>
<status status="PASS" starttime="20200630 12:35:25.422" endtime="20200630 12:35:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:28.793" endtime="20200630 12:35:28.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:28.797" level="INFO">Running command 'ozone sh key list o3://om:9862/07540-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:31.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:31.937" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 12:35:28.794" endtime="20200630 12:35:31.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:31.939" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 12:35:31.938" endtime="20200630 12:35:31.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:31.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:31.939" endtime="20200630 12:35:31.940"></status>
</kw>
<msg timestamp="20200630 12:35:31.940" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 12:35:28.793" endtime="20200630 12:35:31.940"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:31.940" endtime="20200630 12:35:31.941"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:31.945" level="INFO">Running command 'ozone sh key rename o3://om:9862/07540-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:35.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:35.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:31.942" endtime="20200630 12:35:35.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:35.839" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:35.838" endtime="20200630 12:35:35.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:35.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:35.839" endtime="20200630 12:35:35.840"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:31.941" endtime="20200630 12:35:35.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:35.843" level="INFO">Running command 'ozone sh key list o3://om:9862/07540-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:38.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:38.843" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 12:35:35.841" endtime="20200630 12:35:38.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:38.844" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 12:35:38.844" endtime="20200630 12:35:38.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:38.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:38.844" endtime="20200630 12:35:38.845"></status>
</kw>
<msg timestamp="20200630 12:35:38.845" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 12:35:35.840" endtime="20200630 12:35:38.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:38.845" endtime="20200630 12:35:38.846"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:38.848" level="INFO">Running command 'ozone sh key delete o3://om:9862/07540-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:41.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:41.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:38.846" endtime="20200630 12:35:41.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:41.674" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:41.673" endtime="20200630 12:35:41.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:41.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:41.674" endtime="20200630 12:35:41.675"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:38.846" endtime="20200630 12:35:41.675"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:33.909" endtime="20200630 12:35:41.675"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:33.909" endtime="20200630 12:35:41.675"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:41.679" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/07540-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:44.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:44.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:41.676" endtime="20200630 12:35:44.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:44.399" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:44.399" endtime="20200630 12:35:44.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:44.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:44.400" endtime="20200630 12:35:44.400"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:41.675" endtime="20200630 12:35:44.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:44.404" level="INFO">Running command 'ozone sh volume delete o3://om:9862/07540-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:48.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:48.289" level="INFO">${output} = Volume 07540-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 12:35:44.401" endtime="20200630 12:35:48.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:48.291" level="INFO">Volume 07540-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 12:35:48.290" endtime="20200630 12:35:48.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:48.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:48.291" endtime="20200630 12:35:48.292"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:44.401" endtime="20200630 12:35:48.292"></status>
</kw>
<status status="PASS" starttime="20200630 12:34:05.128" endtime="20200630 12:35:48.292"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:34:05.127" endtime="20200630 12:35:48.292" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:48.294" endtime="20200630 12:35:48.294"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:48.297" level="INFO">Running command 'ozone sh volume create o3://om:9862/07540-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:51.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:51.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:35:48.295" endtime="20200630 12:35:51.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:51.018" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:35:51.017" endtime="20200630 12:35:51.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:51.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:51.018" endtime="20200630 12:35:51.019"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:48.295" endtime="20200630 12:35:51.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:51.023" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07540-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:54.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:54.092" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:35:51.019" endtime="20200630 12:35:54.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:54.093" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:35:54.092" endtime="20200630 12:35:54.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:54.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:54.093" endtime="20200630 12:35:54.094"></status>
</kw>
<msg timestamp="20200630 12:35:54.094" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:35:51.019" endtime="20200630 12:35:54.094"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:35:54.094" endtime="20200630 12:35:54.095"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:54.099" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/07540-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:35:57.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:35:57.033" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 12:35:54.096" endtime="20200630 12:35:57.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:35:57.034" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 12:35:57.034" endtime="20200630 12:35:57.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:35:57.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:35:57.035" endtime="20200630 12:35:57.036"></status>
</kw>
<msg timestamp="20200630 12:35:57.036" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 12:35:54.095" endtime="20200630 12:35:57.036"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:35:57.039" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07540-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:00.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:00.773" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:35:57.037" endtime="20200630 12:36:00.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:00.774" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:00.773" endtime="20200630 12:36:00.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:00.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:00.774" endtime="20200630 12:36:00.775"></status>
</kw>
<msg timestamp="20200630 12:36:00.775" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:35:57.036" endtime="20200630 12:36:00.775"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:00.776" endtime="20200630 12:36:00.777"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:00.780" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/07540-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:03.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:03.672" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 12:36:00.778" endtime="20200630 12:36:03.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:03.673" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 12:36:03.672" endtime="20200630 12:36:03.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:03.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:03.674" endtime="20200630 12:36:03.674"></status>
</kw>
<msg timestamp="20200630 12:36:03.674" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 12:36:00.777" endtime="20200630 12:36:03.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:03.678" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07540-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:06.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:06.604" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:03.675" endtime="20200630 12:36:06.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:06.605" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:06.604" endtime="20200630 12:36:06.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:06.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:06.605" endtime="20200630 12:36:06.606"></status>
</kw>
<msg timestamp="20200630 12:36:06.606" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:03.674" endtime="20200630 12:36:06.606"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:06.606" endtime="20200630 12:36:06.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:06.611" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/07540-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:09.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:09.237" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:06.608" endtime="20200630 12:36:09.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:09.239" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:09.238" endtime="20200630 12:36:09.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:09.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:09.239" endtime="20200630 12:36:09.239"></status>
</kw>
<msg timestamp="20200630 12:36:09.240" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:06.607" endtime="20200630 12:36:09.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:09.243" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07540-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:13.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:13.574" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 12:36:09.241" endtime="20200630 12:36:13.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:13.575" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:13.574" endtime="20200630 12:36:13.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:13.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:13.575" endtime="20200630 12:36:13.576"></status>
</kw>
<msg timestamp="20200630 12:36:13.576" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 12:36:09.240" endtime="20200630 12:36:13.576"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:13.576" endtime="20200630 12:36:13.577"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:13.577" endtime="20200630 12:36:13.578"></status>
</kw>
<status status="PASS" starttime="20200630 12:35:48.294" endtime="20200630 12:36:13.578"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:35:48.293" endtime="20200630 12:36:13.578" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:13.580" endtime="20200630 12:36:13.580"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:13.585" level="INFO">Running command 'ozone sh bucket create o3://om:9862/07540-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:16.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:16.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:36:13.582" endtime="20200630 12:36:16.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:16.372" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:36:16.371" endtime="20200630 12:36:16.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:16.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:16.373" endtime="20200630 12:36:16.373"></status>
</kw>
<status status="PASS" starttime="20200630 12:36:13.582" endtime="20200630 12:36:16.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:16.377" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07540-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:19.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:19.419" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:16.374" endtime="20200630 12:36:19.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:19.420" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:19.420" endtime="20200630 12:36:19.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:19.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:19.421" endtime="20200630 12:36:19.421"></status>
</kw>
<msg timestamp="20200630 12:36:19.422" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:16.373" endtime="20200630 12:36:19.422"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:19.422" endtime="20200630 12:36:19.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:19.426" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/07540-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:22.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:22.620" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 12:36:19.423" endtime="20200630 12:36:22.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:22.621" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 12:36:22.620" endtime="20200630 12:36:22.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:22.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:22.621" endtime="20200630 12:36:22.622"></status>
</kw>
<msg timestamp="20200630 12:36:22.622" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 12:36:19.422" endtime="20200630 12:36:22.622"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:22.625" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07540-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:26.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:26.362" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:22.623" endtime="20200630 12:36:26.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:26.363" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:26.362" endtime="20200630 12:36:26.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:26.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:26.363" endtime="20200630 12:36:26.364"></status>
</kw>
<msg timestamp="20200630 12:36:26.364" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:22.622" endtime="20200630 12:36:26.364"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:26.364" endtime="20200630 12:36:26.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:26.369" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/07540-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:29.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:29.140" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:26.366" endtime="20200630 12:36:29.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:29.141" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:29.141" endtime="20200630 12:36:29.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:29.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:29.142" endtime="20200630 12:36:29.142"></status>
</kw>
<msg timestamp="20200630 12:36:29.142" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:26.366" endtime="20200630 12:36:29.142"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:29.147" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07540-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:32.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:32.021" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:29.143" endtime="20200630 12:36:32.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:32.022" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:32.021" endtime="20200630 12:36:32.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:32.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:32.022" endtime="20200630 12:36:32.022"></status>
</kw>
<msg timestamp="20200630 12:36:32.023" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:29.143" endtime="20200630 12:36:32.023"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:32.023" endtime="20200630 12:36:32.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:32.027" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/07540-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:35.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:35.929" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:32.025" endtime="20200630 12:36:35.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:35.930" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:35.930" endtime="20200630 12:36:35.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:35.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:35.931" endtime="20200630 12:36:35.931"></status>
</kw>
<msg timestamp="20200630 12:36:35.931" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:36:32.024" endtime="20200630 12:36:35.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:35.936" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07540-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:39.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:39.126" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 12:36:35.933" endtime="20200630 12:36:39.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:39.127" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:39.126" endtime="20200630 12:36:39.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:39.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:39.127" endtime="20200630 12:36:39.128"></status>
</kw>
<msg timestamp="20200630 12:36:39.128" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 12:36:35.932" endtime="20200630 12:36:39.128"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:39.128" endtime="20200630 12:36:39.129"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:39.129" endtime="20200630 12:36:39.130"></status>
</kw>
<status status="PASS" starttime="20200630 12:36:13.581" endtime="20200630 12:36:39.130"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:36:13.579" endtime="20200630 12:36:39.131" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:39.132" endtime="20200630 12:36:39.132"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:39.136" level="INFO">Running command 'ozone sh key put o3://om:9862/07540-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:44.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:44.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:36:39.134" endtime="20200630 12:36:44.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:44.356" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:36:44.355" endtime="20200630 12:36:44.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:44.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:44.356" endtime="20200630 12:36:44.357"></status>
</kw>
<status status="PASS" starttime="20200630 12:36:39.133" endtime="20200630 12:36:44.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:44.360" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07540-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:48.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:48.416" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:44.358" endtime="20200630 12:36:48.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:48.417" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:48.416" endtime="20200630 12:36:48.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:48.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:48.417" endtime="20200630 12:36:48.418"></status>
</kw>
<msg timestamp="20200630 12:36:48.418" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:44.357" endtime="20200630 12:36:48.418"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:48.418" endtime="20200630 12:36:48.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:48.423" level="INFO">Running command 'ozone sh key addacl o3://om:9862/07540-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:51.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:51.292" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 12:36:48.420" endtime="20200630 12:36:51.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:51.293" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 12:36:51.293" endtime="20200630 12:36:51.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:51.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:51.294" endtime="20200630 12:36:51.294"></status>
</kw>
<msg timestamp="20200630 12:36:51.294" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 12:36:48.419" endtime="20200630 12:36:51.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:51.297" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07540-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:54.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:54.160" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:51.295" endtime="20200630 12:36:54.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:54.161" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:36:54.160" endtime="20200630 12:36:54.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:54.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:54.161" endtime="20200630 12:36:54.162"></status>
</kw>
<msg timestamp="20200630 12:36:54.162" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:51.295" endtime="20200630 12:36:54.162"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:36:54.162" endtime="20200630 12:36:54.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:54.167" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/07540-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:36:57.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:36:57.582" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:54.164" endtime="20200630 12:36:57.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:36:57.583" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:57.582" endtime="20200630 12:36:57.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:36:57.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:36:57.583" endtime="20200630 12:36:57.583"></status>
</kw>
<msg timestamp="20200630 12:36:57.584" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 12:36:54.163" endtime="20200630 12:36:57.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:36:57.587" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07540-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:01.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:01.131" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:57.585" endtime="20200630 12:37:01.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:01.132" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:37:01.131" endtime="20200630 12:37:01.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:01.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:01.132" endtime="20200630 12:37:01.132"></status>
</kw>
<msg timestamp="20200630 12:37:01.133" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 12:36:57.584" endtime="20200630 12:37:01.133"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:01.133" endtime="20200630 12:37:01.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:01.137" level="INFO">Running command 'ozone sh key setacl o3://om:9862/07540-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:03.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:03.849" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:37:01.134" endtime="20200630 12:37:03.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:03.850" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:37:03.850" endtime="20200630 12:37:03.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:03.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:03.851" endtime="20200630 12:37:03.851"></status>
</kw>
<msg timestamp="20200630 12:37:03.852" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 12:37:01.133" endtime="20200630 12:37:03.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:03.855" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07540-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:06.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:06.869" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 12:37:03.852" endtime="20200630 12:37:06.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:06.871" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 12:37:06.870" endtime="20200630 12:37:06.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:06.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:06.871" endtime="20200630 12:37:06.871"></status>
</kw>
<msg timestamp="20200630 12:37:06.872" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 12:37:03.852" endtime="20200630 12:37:06.872"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:06.872" endtime="20200630 12:37:06.872"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:06.873" endtime="20200630 12:37:06.873"></status>
</kw>
<status status="PASS" starttime="20200630 12:36:39.133" endtime="20200630 12:37:06.874"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:36:39.131" endtime="20200630 12:37:06.874" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:06.875" endtime="20200630 12:37:06.876"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:06.880" level="INFO">Running command 'ozone sh volume info o3:///07540-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:10.855" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:37:10.855" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07540-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 12:37:06.877" endtime="20200630 12:37:10.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:10.856" level="INFO">VOLUME_NOT_FOUND Volume 07540-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 12:37:10.855" endtime="20200630 12:37:10.856"></status>
</kw>
<msg timestamp="20200630 12:37:10.857" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07540-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 12:37:06.877" endtime="20200630 12:37:10.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:10.857" endtime="20200630 12:37:10.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:10.862" level="INFO">Running command 'ozone sh volume create o3:///07540-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:13.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:13.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:10.858" endtime="20200630 12:37:13.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:13.494" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:13.493" endtime="20200630 12:37:13.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:13.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:13.494" endtime="20200630 12:37:13.494"></status>
</kw>
<msg timestamp="20200630 12:37:13.495" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:37:10.857" endtime="20200630 12:37:13.495"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:13.495" endtime="20200630 12:37:13.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:13.500" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="07540-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:16.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:16.440" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 12:37:13.497" endtime="20200630 12:37:16.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:16.442" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:37:16.441" endtime="20200630 12:37:16.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:16.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:16.442" endtime="20200630 12:37:16.442"></status>
</kw>
<msg timestamp="20200630 12:37:16.443" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 12:37:13.496" endtime="20200630 12:37:16.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:16.443" endtime="20200630 12:37:16.443"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:16.447" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="07540-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:19.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:19.315" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 12:37:16.444" endtime="20200630 12:37:19.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:19.316" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:37:19.315" endtime="20200630 12:37:19.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:19.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:19.316" endtime="20200630 12:37:19.317"></status>
</kw>
<msg timestamp="20200630 12:37:19.317" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:37:13.355Z",
  "modificationTime": "2020-06-30T12:37:13.355Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 12:37:16.444" endtime="20200630 12:37:19.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:19.317" endtime="20200630 12:37:19.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:19.321" level="INFO">Running command 'ozone sh volume update o3:///07540-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:23.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:23.567" level="INFO">${output} = {
  "metadata" : { },
  "name" : "07540-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:37:13.355Z",
  "modificationTime" : "2020-06-30T12:37:23.041Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 12:37:19.318" endtime="20200630 12:37:23.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:23.568" level="INFO">{
  "metadata" : { },
  "name" : "07540-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:37:13.355Z",
  "modificationTime" : "2020-06-30T12:37:23.041Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 12:37:23.567" endtime="20200630 12:37:23.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:23.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:23.568" endtime="20200630 12:37:23.569"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:19.318" endtime="20200630 12:37:23.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:23.574" level="INFO">Running command 'ozone sh volume info o3:///07540-rpcwport | jq -r '. | select(.name=="07540-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:26.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:26.690" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:37:23.570" endtime="20200630 12:37:26.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:26.691" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 12:37:26.691" endtime="20200630 12:37:26.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:26.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:26.692" endtime="20200630 12:37:26.692"></status>
</kw>
<msg timestamp="20200630 12:37:26.692" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:37:23.569" endtime="20200630 12:37:26.692"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:26.692" endtime="20200630 12:37:26.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:26.696" level="INFO">Running command 'ozone sh bucket create o3:///07540-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:29.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:29.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:26.693" endtime="20200630 12:37:29.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:29.488" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:29.487" endtime="20200630 12:37:29.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:29.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:29.488" endtime="20200630 12:37:29.489"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:26.693" endtime="20200630 12:37:29.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:29.492" level="INFO">Running command 'ozone sh bucket info o3:///07540-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:33.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:33.161" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 12:37:29.490" endtime="20200630 12:37:33.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:33.163" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 12:37:33.162" endtime="20200630 12:37:33.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:33.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:33.163" endtime="20200630 12:37:33.163"></status>
</kw>
<msg timestamp="20200630 12:37:33.164" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 12:37:29.489" endtime="20200630 12:37:33.164"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:33.164" endtime="20200630 12:37:33.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:33.167" level="INFO">Running command 'ozone sh bucket list o3:///07540-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:36.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:36.785" level="INFO">${output} = 07540-rpcwport</msg>
<status status="PASS" starttime="20200630 12:37:33.165" endtime="20200630 12:37:36.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:36.786" level="INFO">07540-rpcwport</msg>
<status status="PASS" starttime="20200630 12:37:36.786" endtime="20200630 12:37:36.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:36.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:36.787" endtime="20200630 12:37:36.787"></status>
</kw>
<msg timestamp="20200630 12:37:36.788" level="INFO">${result} = 07540-rpcwport</msg>
<status status="PASS" starttime="20200630 12:37:33.164" endtime="20200630 12:37:36.788"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 12:37:36.788" endtime="20200630 12:37:36.788"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:36.792" level="INFO">Running command 'ozone sh key put o3:///07540-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:41.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:41.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:36.790" endtime="20200630 12:37:41.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:41.715" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:41.714" endtime="20200630 12:37:41.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:41.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:41.716" endtime="20200630 12:37:41.716"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:36.789" endtime="20200630 12:37:41.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:41.721" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:41.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:41.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:41.718" endtime="20200630 12:37:41.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:41.725" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:41.725" endtime="20200630 12:37:41.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:41.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:41.725" endtime="20200630 12:37:41.726"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:41.717" endtime="20200630 12:37:41.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:41.730" level="INFO">Running command 'ozone sh key get o3:///07540-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:48.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:48.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:41.727" endtime="20200630 12:37:48.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:48.087" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:48.086" endtime="20200630 12:37:48.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:48.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:48.087" endtime="20200630 12:37:48.088"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:41.726" endtime="20200630 12:37:48.088"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:48.091" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:48.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:48.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:48.089" endtime="20200630 12:37:48.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:48.094" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:48.094" endtime="20200630 12:37:48.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:48.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:48.095" endtime="20200630 12:37:48.095"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:48.088" endtime="20200630 12:37:48.095"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:48.099" level="INFO">Running command 'ozone sh key put -t RATIS o3:///07540-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:52.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:52.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:48.096" endtime="20200630 12:37:52.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:52.859" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:52.858" endtime="20200630 12:37:52.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:52.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:52.859" endtime="20200630 12:37:52.859"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:48.096" endtime="20200630 12:37:52.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:52.864" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:52.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:52.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:52.860" endtime="20200630 12:37:52.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:52.866" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:52.866" endtime="20200630 12:37:52.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:52.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:52.867" endtime="20200630 12:37:52.867"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:52.860" endtime="20200630 12:37:52.868"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:52.871" level="INFO">Running command 'ozone sh key get o3:///07540-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:58.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:58.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:52.868" endtime="20200630 12:37:58.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:58.164" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:58.164" endtime="20200630 12:37:58.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:58.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:58.165" endtime="20200630 12:37:58.165"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:52.868" endtime="20200630 12:37:58.165"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:58.168" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:37:58.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:37:58.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:37:58.166" endtime="20200630 12:37:58.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:37:58.172" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:37:58.171" endtime="20200630 12:37:58.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:37:58.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:37:58.172" endtime="20200630 12:37:58.173"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:58.166" endtime="20200630 12:37:58.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:37:58.177" level="INFO">Running command 'ozone sh key info o3:///07540-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:01.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:01.256" level="INFO">${output} = {
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:50.718Z",
  "modificationTime": "2020-06-30T12:37:52.465Z",
...</msg>
<status status="PASS" starttime="20200630 12:37:58.174" endtime="20200630 12:38:01.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:01.257" level="INFO">{
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:50.718Z",
  "modificationTime": "2020-06-30T12:37:52.465Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432970676109440,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:38:01.257" endtime="20200630 12:38:01.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:01.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:01.258" endtime="20200630 12:38:01.258"></status>
</kw>
<msg timestamp="20200630 12:38:01.258" level="INFO">${result} = {
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:50.718Z",
  "modificationTime": "2020-06-30T12:37:52.465Z",
...</msg>
<status status="PASS" starttime="20200630 12:37:58.173" endtime="20200630 12:38:01.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:01.259" endtime="20200630 12:38:01.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:01.263" level="INFO">Running command 'ozone sh key delete o3:///07540-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:04.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:04.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:01.260" endtime="20200630 12:38:04.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:04.083" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:04.082" endtime="20200630 12:38:04.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:04.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:04.083" endtime="20200630 12:38:04.083"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:01.259" endtime="20200630 12:38:04.084"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:04.088" level="INFO">Running command 'ozone sh key cp o3:///07540-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:10.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:10.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:04.084" endtime="20200630 12:38:10.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:10.671" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:10.670" endtime="20200630 12:38:10.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:10.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:10.671" endtime="20200630 12:38:10.672"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:04.084" endtime="20200630 12:38:10.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:10.675" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:10.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:10.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:10.672" endtime="20200630 12:38:10.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:10.679" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:10.678" endtime="20200630 12:38:10.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:10.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:10.679" endtime="20200630 12:38:10.680"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:10.672" endtime="20200630 12:38:10.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:10.683" level="INFO">Running command 'ozone sh key get o3:///07540-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:15.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:15.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:10.681" endtime="20200630 12:38:15.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:15.503" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:15.502" endtime="20200630 12:38:15.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:15.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:15.503" endtime="20200630 12:38:15.504"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:10.680" endtime="20200630 12:38:15.504"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:15.506" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:15.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:15.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:15.504" endtime="20200630 12:38:15.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:15.510" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:15.509" endtime="20200630 12:38:15.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:15.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:15.511" endtime="20200630 12:38:15.512"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:15.504" endtime="20200630 12:38:15.512"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:15.515" level="INFO">Running command 'ozone sh key delete o3:///07540-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:19.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:19.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:15.513" endtime="20200630 12:38:19.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:19.169" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:19.168" endtime="20200630 12:38:19.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:19.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:19.169" endtime="20200630 12:38:19.170"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:15.512" endtime="20200630 12:38:19.170"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:19.388" level="INFO">Running command 'ozone sh key get o3:///07540-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:22.079" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:38:22.079" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:38:19.171" endtime="20200630 12:38:22.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:22.080" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:38:22.079" endtime="20200630 12:38:22.080"></status>
</kw>
<msg timestamp="20200630 12:38:22.080" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:38:19.170" endtime="20200630 12:38:22.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:22.081" endtime="20200630 12:38:22.081"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:22.085" level="INFO">Running command 'ozone sh key get --force o3:///07540-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:27.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:27.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:22.082" endtime="20200630 12:38:27.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:27.331" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:27.330" endtime="20200630 12:38:27.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:27.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:27.331" endtime="20200630 12:38:27.332"></status>
</kw>
<msg timestamp="20200630 12:38:27.332" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:38:22.081" endtime="20200630 12:38:27.332"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:27.332" endtime="20200630 12:38:27.332"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:27.335" level="INFO">Running command 'ozone sh key info o3:///07540-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:31.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:31.682" level="INFO">${output} = {
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:39.440Z",
  "modificationTime": "2020-06-30T12:37:41.293Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 12:38:27.333" endtime="20200630 12:38:31.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:31.684" level="INFO">{
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:39.440Z",
  "modificationTime": "2020-06-30T12:37:41.293Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432969937059970,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:38:31.683" endtime="20200630 12:38:31.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:31.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:31.684" endtime="20200630 12:38:31.684"></status>
</kw>
<msg timestamp="20200630 12:38:31.685" level="INFO">${result} = {
  "volumeName": "07540-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:37:39.440Z",
  "modificationTime": "2020-06-30T12:37:41.293Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 12:38:27.333" endtime="20200630 12:38:31.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:31.685" endtime="20200630 12:38:31.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:31.689" level="INFO">Running command 'ozone sh key list o3:///07540-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:34.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:34.682" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 12:38:31.686" endtime="20200630 12:38:34.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:34.683" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 12:38:34.682" endtime="20200630 12:38:34.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:34.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:34.683" endtime="20200630 12:38:34.684"></status>
</kw>
<msg timestamp="20200630 12:38:34.684" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 12:38:31.685" endtime="20200630 12:38:34.684"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:34.684" endtime="20200630 12:38:34.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:34.689" level="INFO">Running command 'ozone sh key rename o3:///07540-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:37.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:37.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:34.685" endtime="20200630 12:38:37.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:37.556" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:37.555" endtime="20200630 12:38:37.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:37.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:37.556" endtime="20200630 12:38:37.557"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:34.685" endtime="20200630 12:38:37.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:37.559" level="INFO">Running command 'ozone sh key list o3:///07540-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:40.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:40.612" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 12:38:37.557" endtime="20200630 12:38:40.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:40.613" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 12:38:40.612" endtime="20200630 12:38:40.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:40.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:40.613" endtime="20200630 12:38:40.614"></status>
</kw>
<msg timestamp="20200630 12:38:40.614" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 12:38:37.557" endtime="20200630 12:38:40.614"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:40.614" endtime="20200630 12:38:40.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:40.618" level="INFO">Running command 'ozone sh key delete o3:///07540-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:44.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:44.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:40.616" endtime="20200630 12:38:44.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:44.756" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:44.755" endtime="20200630 12:38:44.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:44.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:44.757" endtime="20200630 12:38:44.757"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:40.615" endtime="20200630 12:38:44.757"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:36.789" endtime="20200630 12:38:44.758"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:36.788" endtime="20200630 12:38:44.758"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:44.761" level="INFO">Running command 'ozone sh bucket delete o3:///07540-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:47.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:47.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:44.758" endtime="20200630 12:38:47.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:47.631" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:47.631" endtime="20200630 12:38:47.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:47.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:47.631" endtime="20200630 12:38:47.632"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:44.758" endtime="20200630 12:38:47.632"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:47.635" level="INFO">Running command 'ozone sh volume delete o3:///07540-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:50.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:50.278" level="INFO">${output} = Volume 07540-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 12:38:47.633" endtime="20200630 12:38:50.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:50.279" level="INFO">Volume 07540-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 12:38:50.279" endtime="20200630 12:38:50.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:50.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:50.280" endtime="20200630 12:38:50.280"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:47.632" endtime="20200630 12:38:50.281"></status>
</kw>
<status status="PASS" starttime="20200630 12:37:06.876" endtime="20200630 12:38:50.281"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:37:06.874" endtime="20200630 12:38:50.281" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:50.283" endtime="20200630 12:38:50.283"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:50.287" level="INFO">Running command 'ozone sh volume info /07540-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:53.055" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:38:53.055" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07540-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 12:38:50.285" endtime="20200630 12:38:53.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:53.056" level="INFO">VOLUME_NOT_FOUND Volume 07540-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 12:38:53.056" endtime="20200630 12:38:53.057"></status>
</kw>
<msg timestamp="20200630 12:38:53.057" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07540-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 12:38:50.284" endtime="20200630 12:38:53.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:53.057" endtime="20200630 12:38:53.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:53.060" level="INFO">Running command 'ozone sh volume create /07540-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:56.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:56.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:38:53.058" endtime="20200630 12:38:56.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:56.733" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:38:56.732" endtime="20200630 12:38:56.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:56.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:56.733" endtime="20200630 12:38:56.733"></status>
</kw>
<msg timestamp="20200630 12:38:56.734" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:38:53.057" endtime="20200630 12:38:56.734"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:56.734" endtime="20200630 12:38:56.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:56.739" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="07540-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:38:59.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:38:59.894" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 12:38:56.735" endtime="20200630 12:38:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:38:59.896" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:38:59.895" endtime="20200630 12:38:59.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:38:59.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:38:59.896" endtime="20200630 12:38:59.897"></status>
</kw>
<msg timestamp="20200630 12:38:59.897" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 12:38:56.735" endtime="20200630 12:38:59.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:38:59.897" endtime="20200630 12:38:59.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:38:59.901" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="07540-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:03.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:03.140" level="INFO">${output} = {
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 12:38:59.898" endtime="20200630 12:39:03.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:03.141" level="INFO">{
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 12:39:03.141" endtime="20200630 12:39:03.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:03.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:03.142" endtime="20200630 12:39:03.142"></status>
</kw>
<msg timestamp="20200630 12:39:03.143" level="INFO">${result} = {
  "metadata": {},
  "name": "07540-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T12:38:56.582Z",
  "modificationTime": "2020-06-30T12:38:56.582Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 12:38:59.898" endtime="20200630 12:39:03.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:39:03.143" endtime="20200630 12:39:03.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:03.146" level="INFO">Running command 'ozone sh volume update /07540-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:07.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:07.570" level="INFO">${output} = {
  "metadata" : { },
  "name" : "07540-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:38:56.582Z",
  "modificationTime" : "2020-06-30T12:39:07.172Z",
  "a...</msg>
<status status="PASS" starttime="20200630 12:39:03.144" endtime="20200630 12:39:07.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:07.571" level="INFO">{
  "metadata" : { },
  "name" : "07540-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T12:38:56.582Z",
  "modificationTime" : "2020-06-30T12:39:07.172Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 12:39:07.571" endtime="20200630 12:39:07.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:07.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:07.572" endtime="20200630 12:39:07.572"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:03.144" endtime="20200630 12:39:07.572"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:07.575" level="INFO">Running command 'ozone sh volume info /07540-rpcwoscheme | jq -r '. | select(.name=="07540-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:10.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:10.519" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:39:07.573" endtime="20200630 12:39:10.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:10.520" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 12:39:10.520" endtime="20200630 12:39:10.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:10.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:10.521" endtime="20200630 12:39:10.521"></status>
</kw>
<msg timestamp="20200630 12:39:10.521" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 12:39:07.572" endtime="20200630 12:39:10.521"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 12:39:10.521" endtime="20200630 12:39:10.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:10.526" level="INFO">Running command 'ozone sh bucket create /07540-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:13.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:13.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:10.523" endtime="20200630 12:39:13.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:13.292" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:13.291" endtime="20200630 12:39:13.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:13.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:13.293" endtime="20200630 12:39:13.293"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:10.522" endtime="20200630 12:39:13.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:13.298" level="INFO">Running command 'ozone sh bucket info /07540-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:17.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:17.597" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 12:39:13.295" endtime="20200630 12:39:17.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:17.598" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 12:39:17.597" endtime="20200630 12:39:17.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:17.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:17.598" endtime="20200630 12:39:17.599"></status>
</kw>
<msg timestamp="20200630 12:39:17.599" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 12:39:13.294" endtime="20200630 12:39:17.599"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 12:39:17.599" endtime="20200630 12:39:17.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:17.603" level="INFO">Running command 'ozone sh bucket list /07540-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:20.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:20.623" level="INFO">${output} = 07540-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 12:39:17.601" endtime="20200630 12:39:20.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:20.625" level="INFO">07540-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 12:39:20.624" endtime="20200630 12:39:20.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:20.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:20.625" endtime="20200630 12:39:20.626"></status>
</kw>
<msg timestamp="20200630 12:39:20.626" level="INFO">${result} = 07540-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 12:39:17.600" endtime="20200630 12:39:20.626"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 12:39:20.626" endtime="20200630 12:39:20.627"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:20.630" level="INFO">Running command 'ozone sh key put /07540-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:25.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:25.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:20.628" endtime="20200630 12:39:25.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:25.659" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:25.659" endtime="20200630 12:39:25.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:25.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:25.660" endtime="20200630 12:39:25.660"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:20.628" endtime="20200630 12:39:25.660"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:25.663" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:25.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:25.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:25.661" endtime="20200630 12:39:25.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:25.667" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:25.666" endtime="20200630 12:39:25.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:25.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:25.667" endtime="20200630 12:39:25.668"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:25.661" endtime="20200630 12:39:25.668"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:25.671" level="INFO">Running command 'ozone sh key get /07540-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:32.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:32.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:25.669" endtime="20200630 12:39:32.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:32.155" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:32.155" endtime="20200630 12:39:32.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:32.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:32.156" endtime="20200630 12:39:32.156"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:25.668" endtime="20200630 12:39:32.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:32.159" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:32.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:32.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:32.157" endtime="20200630 12:39:32.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:32.163" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:32.162" endtime="20200630 12:39:32.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:32.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:32.163" endtime="20200630 12:39:32.163"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:32.156" endtime="20200630 12:39:32.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:32.167" level="INFO">Running command 'ozone sh key put -t RATIS /07540-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:37.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:37.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:32.164" endtime="20200630 12:39:37.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:37.034" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:37.033" endtime="20200630 12:39:37.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:37.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:37.034" endtime="20200630 12:39:37.034"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:32.164" endtime="20200630 12:39:37.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:37.037" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:37.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:37.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:37.035" endtime="20200630 12:39:37.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:37.041" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:37.040" endtime="20200630 12:39:37.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:37.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:37.041" endtime="20200630 12:39:37.042"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:37.035" endtime="20200630 12:39:37.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:37.046" level="INFO">Running command 'ozone sh key get /07540-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:43.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:43.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:37.042" endtime="20200630 12:39:43.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:43.397" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:43.396" endtime="20200630 12:39:43.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:43.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:43.397" endtime="20200630 12:39:43.398"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:37.042" endtime="20200630 12:39:43.398"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:43.401" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:43.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:43.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:43.399" endtime="20200630 12:39:43.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:43.404" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:43.404" endtime="20200630 12:39:43.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:43.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:43.405" endtime="20200630 12:39:43.405"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:43.398" endtime="20200630 12:39:43.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:43.409" level="INFO">Running command 'ozone sh key info /07540-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:46.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:46.687" level="INFO">${output} = {
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:34.785Z",
  "modificationTime": "2020-06-30T12:39:36.499Z...</msg>
<status status="PASS" starttime="20200630 12:39:43.406" endtime="20200630 12:39:46.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:46.688" level="INFO">{
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:34.785Z",
  "modificationTime": "2020-06-30T12:39:36.499Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432977496309890,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:39:46.688" endtime="20200630 12:39:46.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:46.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:46.689" endtime="20200630 12:39:46.689"></status>
</kw>
<msg timestamp="20200630 12:39:46.689" level="INFO">${result} = {
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:34.785Z",
  "modificationTime": "2020-06-30T12:39:36.499Z...</msg>
<status status="PASS" starttime="20200630 12:39:43.406" endtime="20200630 12:39:46.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 12:39:46.690" endtime="20200630 12:39:46.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:46.693" level="INFO">Running command 'ozone sh key delete /07540-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:49.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:49.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:46.691" endtime="20200630 12:39:49.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:49.647" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:49.647" endtime="20200630 12:39:49.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:49.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:49.648" endtime="20200630 12:39:49.648"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:46.690" endtime="20200630 12:39:49.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:49.651" level="INFO">Running command 'ozone sh key cp /07540-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:56.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:56.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:49.649" endtime="20200630 12:39:56.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:56.259" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:56.258" endtime="20200630 12:39:56.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:56.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:56.259" endtime="20200630 12:39:56.260"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:49.648" endtime="20200630 12:39:56.260"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:56.263" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:39:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:39:56.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:56.261" endtime="20200630 12:39:56.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:39:56.266" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:39:56.265" endtime="20200630 12:39:56.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:39:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:39:56.266" endtime="20200630 12:39:56.267"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:56.260" endtime="20200630 12:39:56.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:39:56.271" level="INFO">Running command 'ozone sh key get /07540-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:01.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:01.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:39:56.268" endtime="20200630 12:40:01.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:01.173" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:01.172" endtime="20200630 12:40:01.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:01.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:01.173" endtime="20200630 12:40:01.174"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:56.268" endtime="20200630 12:40:01.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:01.177" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:01.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:01.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:01.175" endtime="20200630 12:40:01.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:01.181" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:01.180" endtime="20200630 12:40:01.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:01.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:01.181" endtime="20200630 12:40:01.181"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:01.174" endtime="20200630 12:40:01.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:01.184" level="INFO">Running command 'ozone sh key delete /07540-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:05.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:05.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:01.182" endtime="20200630 12:40:05.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:05.588" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:05.588" endtime="20200630 12:40:05.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:05.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:05.589" endtime="20200630 12:40:05.589"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:01.182" endtime="20200630 12:40:05.589"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:05.592" level="INFO">Running command 'ozone sh key get /07540-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:08.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 12:40:08.561" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:40:05.590" endtime="20200630 12:40:08.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:08.562" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:40:08.561" endtime="20200630 12:40:08.562"></status>
</kw>
<msg timestamp="20200630 12:40:08.562" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 12:40:05.590" endtime="20200630 12:40:08.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:40:08.562" endtime="20200630 12:40:08.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:08.566" level="INFO">Running command 'ozone sh key get --force /07540-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:13.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:13.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:08.564" endtime="20200630 12:40:13.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:13.747" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:13.747" endtime="20200630 12:40:13.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:13.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:13.748" endtime="20200630 12:40:13.748"></status>
</kw>
<msg timestamp="20200630 12:40:13.749" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 12:40:08.563" endtime="20200630 12:40:13.749"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 12:40:13.749" endtime="20200630 12:40:13.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:13.752" level="INFO">Running command 'ozone sh key info /07540-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:18.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:18.102" level="INFO">${output} = {
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:23.334Z",
  "modificationTime": "2020-06-30T12:39:25.146Z",
  "...</msg>
<status status="PASS" starttime="20200630 12:40:13.750" endtime="20200630 12:40:18.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:18.103" level="INFO">{
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:23.334Z",
  "modificationTime": "2020-06-30T12:39:25.146Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104432976745857150,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 12:40:18.102" endtime="20200630 12:40:18.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:18.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:18.103" endtime="20200630 12:40:18.104"></status>
</kw>
<msg timestamp="20200630 12:40:18.104" level="INFO">${result} = {
  "volumeName": "07540-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T12:39:23.334Z",
  "modificationTime": "2020-06-30T12:39:25.146Z",
  "...</msg>
<status status="PASS" starttime="20200630 12:40:13.749" endtime="20200630 12:40:18.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 12:40:18.105" endtime="20200630 12:40:18.105"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:18.109" level="INFO">Running command 'ozone sh key list /07540-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:21.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:21.196" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 12:40:18.106" endtime="20200630 12:40:21.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:21.197" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 12:40:21.196" endtime="20200630 12:40:21.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:21.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:21.197" endtime="20200630 12:40:21.198"></status>
</kw>
<msg timestamp="20200630 12:40:21.198" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 12:40:18.105" endtime="20200630 12:40:21.198"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 12:40:21.198" endtime="20200630 12:40:21.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:21.202" level="INFO">Running command 'ozone sh key rename /07540-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:23.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:23.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:21.199" endtime="20200630 12:40:23.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:23.905" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:23.904" endtime="20200630 12:40:23.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:23.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:23.905" endtime="20200630 12:40:23.906"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:21.199" endtime="20200630 12:40:23.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:23.909" level="INFO">Running command 'ozone sh key list /07540-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:26.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:26.853" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 12:40:23.907" endtime="20200630 12:40:26.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:26.854" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 12:40:26.853" endtime="20200630 12:40:26.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:26.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:26.854" endtime="20200630 12:40:26.855"></status>
</kw>
<msg timestamp="20200630 12:40:26.855" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 12:40:23.906" endtime="20200630 12:40:26.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 12:40:26.855" endtime="20200630 12:40:26.856"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:26.860" level="INFO">Running command 'ozone sh key delete /07540-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:31.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:31.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:26.857" endtime="20200630 12:40:31.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:31.024" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:31.023" endtime="20200630 12:40:31.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:31.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:31.024" endtime="20200630 12:40:31.025"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:26.856" endtime="20200630 12:40:31.025"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:20.627" endtime="20200630 12:40:31.025"></status>
</kw>
<status status="PASS" starttime="20200630 12:39:20.627" endtime="20200630 12:40:31.026"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:31.030" level="INFO">Running command 'ozone sh bucket delete /07540-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:33.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:33.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 12:40:31.027" endtime="20200630 12:40:33.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:33.792" level="INFO"></msg>
<status status="PASS" starttime="20200630 12:40:33.791" endtime="20200630 12:40:33.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:33.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:33.792" endtime="20200630 12:40:33.793"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:31.026" endtime="20200630 12:40:33.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 12:40:33.797" level="INFO">Running command 'ozone sh volume delete /07540-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 12:40:36.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 12:40:36.325" level="INFO">${output} = Volume 07540-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 12:40:33.794" endtime="20200630 12:40:36.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 12:40:36.326" level="INFO">Volume 07540-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 12:40:36.325" endtime="20200630 12:40:36.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 12:40:36.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 12:40:36.326" endtime="20200630 12:40:36.327"></status>
</kw>
<status status="PASS" starttime="20200630 12:40:33.793" endtime="20200630 12:40:36.327"></status>
</kw>
<status status="PASS" starttime="20200630 12:38:50.284" endtime="20200630 12:40:36.327"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 12:38:50.282" endtime="20200630 12:40:36.328" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 12:34:05.119" endtime="20200630 12:40:36.329"></status>
</suite>
<status status="PASS" starttime="20200630 12:32:49.020" endtime="20200630 12:40:36.334"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
