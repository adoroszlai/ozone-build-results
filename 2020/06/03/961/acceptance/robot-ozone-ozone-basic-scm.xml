<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200603 22:47:06.378" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200603 22:47:06.441" endtime="20200603 22:47:06.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:47:06.445" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:47:06.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:47:06.537" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 03 Jun 2020 22:47:06 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 03 Jun 2020 22:21:02 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200603 22:47:06.442" endtime="20200603 22:47:06.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:47:06.538" level="INFO">HTTP/1.1 200 OK
Date: Wed, 03 Jun 2020 22:47:06 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 03 Jun 2020 22:21:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200603 22:47:06.538" endtime="20200603 22:47:06.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:47:06.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:47:06.539" endtime="20200603 22:47:06.539"></status>
</kw>
<msg timestamp="20200603 22:47:06.540" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 03 Jun 2020 22:47:06 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 03 Jun 2020 22:21:02 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200603 22:47:06.441" endtime="20200603 22:47:06.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200603 22:47:06.540" endtime="20200603 22:47:06.540"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:47:06.440" endtime="20200603 22:47:06.540" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:47:06.542" endtime="20200603 22:47:06.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:47:06.546" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:18.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:18.617" level="INFO">${output} = 2020-06-03 22:47:07,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:47:07,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:47:06.543" endtime="20200603 22:48:18.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:18.619" level="INFO">2020-06-03 22:47:07,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:47:07,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:47:07,677 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:47:08,876 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-03 22:47:08,877 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-03 22:47:08,879 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-03 22:47:08,884 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-03 22:47:08,903 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-03 22:47:08,937 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-05208, with hadoop as owner.
2020-06-03 22:47:09,060 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-51806, with hadoop as owner.
2020-06-03 22:47:09,074 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-06643, with hadoop as owner.
2020-06-03 22:47:09,082 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-02546, with hadoop as owner.
2020-06-03 22:47:09,097 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-99264, with hadoop as owner.
2020-06-03 22:47:09,108 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05208/bucket-0-70932, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,132 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51806/bucket-0-56404, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,140 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-06643/bucket-0-38092, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-02546/bucket-0-26573, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,153 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99264/bucket-0-71978, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,168 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05208/bucket-1-16070, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,173 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51806/bucket-1-58433, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,178 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-06643/bucket-1-36621, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-02546/bucket-1-97333, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,197 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99264/bucket-1-74032, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,203 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05208/bucket-2-37437, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,209 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51806/bucket-2-76910, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-06643/bucket-2-42282, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,229 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-02546/bucket-2-63826, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,233 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99264/bucket-2-38633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,239 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05208/bucket-3-46654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,247 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51806/bucket-3-79486, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-06643/bucket-3-01769, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,260 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-02546/bucket-3-06865, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,265 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99264/bucket-3-75361, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,269 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05208/bucket-4-36418, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,274 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51806/bucket-4-48559, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,278 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-06643/bucket-4-87648, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,283 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-02546/bucket-4-97819, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,287 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-99264/bucket-4-04501, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:47:09,859 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-03 22:47:09,906 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-03 22:47:10,907 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-03 22:47:11,919 [Thread-5] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-06-03 22:47:12,920 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-03 22:47:13,920 [Thread-5] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-06-03 22:47:14,921 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-03 22:47:15,922 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-03 22:47:16,922 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-03 22:47:17,923 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-03 22:47:18,923 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-03 22:47:19,924 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-03 22:47:20,924 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-06-03 22:47:21,925 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-06-03 22:47:22,926 [Thread-5] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-06-03 22:47:23,926 [Thread-5] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-06-03 22:47:24,927 [Thread-5] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-03 22:47:25,927 [Thread-5] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-03 22:47:26,928 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-03 22:47:27,928 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-03 22:47:28,929 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-03 22:47:29,930 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-03 22:47:30,931 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-03 22:47:31,931 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-03 22:47:32,932 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-03 22:47:33,932 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-03 22:47:34,933 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-03 22:47:35,933 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-03 22:47:36,934 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-03 22:47:37,934 [Thread-5] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-03 22:47:38,935 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-03 22:47:39,935 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-03 22:47:40,936 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-03 22:47:41,937 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-03 22:47:42,938 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-03 22:47:43,938 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-03 22:47:44,938 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-03 22:47:45,939 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-03 22:47:46,944 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-03 22:47:47,944 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-03 22:47:48,945 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-03 22:47:49,945 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-03 22:47:50,946 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-03 22:47:51,946 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-03 22:47:52,947 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-03 22:47:53,947 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-03 22:47:54,948 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-03 22:47:55,948 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-03 22:47:56,949 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-03 22:47:57,949 [Thread-5] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-06-03 22:47:58,950 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-06-03 22:47:59,950 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-06-03 22:48:00,951 [Thread-5] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-06-03 22:48:01,951 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-03 22:48:02,951 [Thread-5] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-03 22:48:03,952 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-03 22:48:04,952 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-03 22:48:05,953 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-03 22:48:06,953 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-03 22:48:07,954 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-03 22:48:08,955 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-03 22:48:09,955 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-06-03 22:48:10,956 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-06-03 22:48:11,956 [Thread-5] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-06-03 22:48:12,957 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-03 22:48:13,957 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,183
Average Time spent in bucket creation: 00:00:00,129
Average Time spent in key creation: 00:00:01,604
Average Time spent in key write: 00:00:00,679
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:10,441
***************************************************</msg>
<status status="PASS" starttime="20200603 22:48:18.618" endtime="20200603 22:48:18.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:18.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:18.619" endtime="20200603 22:48:18.620"></status>
</kw>
<msg timestamp="20200603 22:48:18.620" level="INFO">${result} = 2020-06-03 22:47:07,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:47:07,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:47:06.543" endtime="20200603 22:48:18.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:18.621" endtime="20200603 22:48:18.621"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:18.620" endtime="20200603 22:48:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:18.622" endtime="20200603 22:48:18.622"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:47:06.541" endtime="20200603 22:48:18.622" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200603 22:47:06.410" endtime="20200603 22:48:18.623"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200603 22:48:18.632" level="INFO">${random} = 48353</msg>
<status status="PASS" starttime="20200603 22:48:18.631" endtime="20200603 22:48:18.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200603 22:48:18.632" level="INFO">${prefix} = 48353</msg>
<status status="PASS" starttime="20200603 22:48:18.632" endtime="20200603 22:48:18.632"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:18.631" endtime="20200603 22:48:18.632"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:18.633" endtime="20200603 22:48:18.633"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:18.636" level="INFO">Running command 'ozone sh volume info o3://om:9862/48353-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:20.443" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:48:20.443" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48353-rpcwoport is not found</msg>
<status status="PASS" starttime="20200603 22:48:18.634" endtime="20200603 22:48:20.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:20.445" level="INFO">VOLUME_NOT_FOUND Volume 48353-rpcwoport is not found</msg>
<status status="PASS" starttime="20200603 22:48:20.444" endtime="20200603 22:48:20.445"></status>
</kw>
<msg timestamp="20200603 22:48:20.445" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48353-rpcwoport is not found</msg>
<status status="PASS" starttime="20200603 22:48:18.634" endtime="20200603 22:48:20.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:20.445" endtime="20200603 22:48:20.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:20.451" level="INFO">Running command 'ozone sh volume create o3://om:9862/48353-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:22.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:22.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:20.447" endtime="20200603 22:48:22.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:22.365" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:22.364" endtime="20200603 22:48:22.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:22.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:22.365" endtime="20200603 22:48:22.366"></status>
</kw>
<msg timestamp="20200603 22:48:22.366" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:48:20.446" endtime="20200603 22:48:22.366"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:22.366" endtime="20200603 22:48:22.367"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:22.370" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="48353-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:24.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:24.438" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200603 22:48:22.368" endtime="20200603 22:48:24.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:24.439" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:48:24.438" endtime="20200603 22:48:24.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:24.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:24.439" endtime="20200603 22:48:24.440"></status>
</kw>
<msg timestamp="20200603 22:48:24.440" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200603 22:48:22.367" endtime="20200603 22:48:24.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:24.440" endtime="20200603 22:48:24.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:24.444" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48353-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:26.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:26.385" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200603 22:48:24.441" endtime="20200603 22:48:26.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:26.386" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:48:26.385" endtime="20200603 22:48:26.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:26.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:26.386" endtime="20200603 22:48:26.386"></status>
</kw>
<msg timestamp="20200603 22:48:26.387" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:48:22.235Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200603 22:48:24.441" endtime="20200603 22:48:26.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:26.387" endtime="20200603 22:48:26.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:26.390" level="INFO">Running command 'ozone sh volume update o3://om:9862/48353-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:28.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:28.566" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48353-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:48:22.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200603 22:48:26.388" endtime="20200603 22:48:28.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:28.567" level="INFO">{
  "metadata" : { },
  "name" : "48353-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:48:22.235Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200603 22:48:28.566" endtime="20200603 22:48:28.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:28.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:28.568" endtime="20200603 22:48:28.568"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:26.387" endtime="20200603 22:48:28.568"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:28.572" level="INFO">Running command 'ozone sh volume info o3://om:9862/48353-rpcwoport | jq -r '. | select(.name=="48353-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:30.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:30.598" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:48:28.569" endtime="20200603 22:48:30.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:30.600" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200603 22:48:30.599" endtime="20200603 22:48:30.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:30.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:30.600" endtime="20200603 22:48:30.600"></status>
</kw>
<msg timestamp="20200603 22:48:30.601" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:48:28.569" endtime="20200603 22:48:30.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:30.601" endtime="20200603 22:48:30.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:30.605" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48353-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:32.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:32.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:30.602" endtime="20200603 22:48:32.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:32.438" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:32.437" endtime="20200603 22:48:32.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:32.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:32.438" endtime="20200603 22:48:32.439"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:30.602" endtime="20200603 22:48:32.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:32.443" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48353-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:34.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:34.604" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200603 22:48:32.440" endtime="20200603 22:48:34.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:34.605" level="INFO">DISK</msg>
<status status="PASS" starttime="20200603 22:48:34.604" endtime="20200603 22:48:34.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:34.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:34.605" endtime="20200603 22:48:34.606"></status>
</kw>
<msg timestamp="20200603 22:48:34.606" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200603 22:48:32.439" endtime="20200603 22:48:34.606"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:34.606" endtime="20200603 22:48:34.606"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:34.610" level="INFO">Running command 'ozone sh bucket list o3://om:9862/48353-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:36.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:36.581" level="INFO">${output} = 48353-rpcwoport</msg>
<status status="PASS" starttime="20200603 22:48:34.607" endtime="20200603 22:48:36.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:36.582" level="INFO">48353-rpcwoport</msg>
<status status="PASS" starttime="20200603 22:48:36.581" endtime="20200603 22:48:36.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:36.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:36.582" endtime="20200603 22:48:36.583"></status>
</kw>
<msg timestamp="20200603 22:48:36.583" level="INFO">${result} = 48353-rpcwoport</msg>
<status status="PASS" starttime="20200603 22:48:34.607" endtime="20200603 22:48:36.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:36.584" endtime="20200603 22:48:36.584"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:36.589" level="INFO">Running command 'ozone sh key put o3://om:9862/48353-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:40.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:40.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:36.586" endtime="20200603 22:48:40.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:40.174" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:40.173" endtime="20200603 22:48:40.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:40.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:40.174" endtime="20200603 22:48:40.175"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:36.585" endtime="20200603 22:48:40.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:40.178" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:40.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:40.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:40.176" endtime="20200603 22:48:40.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:40.181" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:40.181" endtime="20200603 22:48:40.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:40.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:40.182" endtime="20200603 22:48:40.182"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:40.176" endtime="20200603 22:48:40.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:40.185" level="INFO">Running command 'ozone sh key get o3://om:9862/48353-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:43.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:43.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:40.183" endtime="20200603 22:48:43.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:43.760" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:43.759" endtime="20200603 22:48:43.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:43.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:43.760" endtime="20200603 22:48:43.761"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:40.182" endtime="20200603 22:48:43.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:43.763" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:43.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:43.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:43.761" endtime="20200603 22:48:43.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:43.768" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:43.767" endtime="20200603 22:48:43.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:43.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:43.768" endtime="20200603 22:48:43.769"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:43.761" endtime="20200603 22:48:43.769"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:43.771" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/48353-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:47.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:47.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:43.769" endtime="20200603 22:48:47.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:47.502" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:47.502" endtime="20200603 22:48:47.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:47.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:47.503" endtime="20200603 22:48:47.503"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:43.769" endtime="20200603 22:48:47.504"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:47.506" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:47.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:47.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:47.504" endtime="20200603 22:48:47.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:47.511" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:47.510" endtime="20200603 22:48:47.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:47.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:47.511" endtime="20200603 22:48:47.512"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:47.504" endtime="20200603 22:48:47.512"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:47.519" level="INFO">Running command 'ozone sh key get o3://om:9862/48353-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:51.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:51.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:47.513" endtime="20200603 22:48:51.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:51.151" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:51.150" endtime="20200603 22:48:51.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:51.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:51.151" endtime="20200603 22:48:51.151"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:47.512" endtime="20200603 22:48:51.152"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:51.155" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:51.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:51.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:51.152" endtime="20200603 22:48:51.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:51.158" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:51.158" endtime="20200603 22:48:51.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:51.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:51.159" endtime="20200603 22:48:51.159"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:51.152" endtime="20200603 22:48:51.160"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:51.163" level="INFO">Running command 'ozone sh key info o3://om:9862/48353-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:53.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:53.651" level="INFO">${output} = {
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:45.582Z",
  "modificationTime": "2020-06-03T22:48:47.047Z",...</msg>
<status status="PASS" starttime="20200603 22:48:51.161" endtime="20200603 22:48:53.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:53.652" level="INFO">{
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:45.582Z",
  "modificationTime": "2020-06-03T22:48:47.047Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282490508345470,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:48:53.652" endtime="20200603 22:48:53.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:53.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:53.653" endtime="20200603 22:48:53.653"></status>
</kw>
<msg timestamp="20200603 22:48:53.654" level="INFO">${result} = {
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:45.582Z",
  "modificationTime": "2020-06-03T22:48:47.047Z",...</msg>
<status status="PASS" starttime="20200603 22:48:51.160" endtime="20200603 22:48:53.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200603 22:48:53.654" endtime="20200603 22:48:53.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:53.658" level="INFO">Running command 'ozone sh key delete o3://om:9862/48353-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:55.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:55.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:53.655" endtime="20200603 22:48:55.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:55.717" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:55.717" endtime="20200603 22:48:55.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:55.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:55.718" endtime="20200603 22:48:55.718"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:53.654" endtime="20200603 22:48:55.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:55.723" level="INFO">Running command 'ozone sh key cp o3://om:9862/48353-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:59.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:59.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:55.720" endtime="20200603 22:48:59.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:59.815" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:59.814" endtime="20200603 22:48:59.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:59.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:59.815" endtime="20200603 22:48:59.816"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:55.719" endtime="20200603 22:48:59.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:59.819" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:48:59.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:48:59.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:59.817" endtime="20200603 22:48:59.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:48:59.822" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:48:59.822" endtime="20200603 22:48:59.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:48:59.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:48:59.823" endtime="20200603 22:48:59.823"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:59.816" endtime="20200603 22:48:59.823"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:48:59.827" level="INFO">Running command 'ozone sh key get o3://om:9862/48353-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:03.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:03.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:48:59.824" endtime="20200603 22:49:03.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:03.268" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:03.267" endtime="20200603 22:49:03.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:03.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:03.268" endtime="20200603 22:49:03.269"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:59.824" endtime="20200603 22:49:03.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:03.273" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:03.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:03.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:03.270" endtime="20200603 22:49:03.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:03.275" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:03.275" endtime="20200603 22:49:03.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:03.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:03.275" endtime="20200603 22:49:03.276"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:03.269" endtime="20200603 22:49:03.276"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:03.279" level="INFO">Running command 'ozone sh key delete o3://om:9862/48353-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:05.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:05.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:03.277" endtime="20200603 22:49:05.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:05.179" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:05.179" endtime="20200603 22:49:05.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:05.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:05.180" endtime="20200603 22:49:05.180"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:03.276" endtime="20200603 22:49:05.181"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:05.186" level="INFO">Running command 'ozone sh key get o3://om:9862/48353-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:06.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:49:06.993" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:49:05.182" endtime="20200603 22:49:06.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:06.994" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:49:06.994" endtime="20200603 22:49:06.995"></status>
</kw>
<msg timestamp="20200603 22:49:06.995" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:49:05.181" endtime="20200603 22:49:06.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:06.995" endtime="20200603 22:49:06.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:07.000" level="INFO">Running command 'ozone sh key get --force o3://om:9862/48353-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:10.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:10.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:06.997" endtime="20200603 22:49:10.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:10.674" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:10.674" endtime="20200603 22:49:10.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:10.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:10.674" endtime="20200603 22:49:10.675"></status>
</kw>
<msg timestamp="20200603 22:49:10.675" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:49:06.996" endtime="20200603 22:49:10.676"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:10.676" endtime="20200603 22:49:10.676"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:10.679" level="INFO">Running command 'ozone sh key info o3://om:9862/48353-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:12.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:12.818" level="INFO">${output} = {
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:38.326Z",
  "modificationTime": "2020-06-03T22:48:39.801Z",
  "re...</msg>
<status status="PASS" starttime="20200603 22:49:10.677" endtime="20200603 22:49:12.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:12.819" level="INFO">{
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:38.326Z",
  "modificationTime": "2020-06-03T22:48:39.801Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282490032947330,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:49:12.818" endtime="20200603 22:49:12.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:12.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:12.819" endtime="20200603 22:49:12.820"></status>
</kw>
<msg timestamp="20200603 22:49:12.821" level="INFO">${result} = {
  "volumeName": "48353-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:48:38.326Z",
  "modificationTime": "2020-06-03T22:48:39.801Z",
  "re...</msg>
<status status="PASS" starttime="20200603 22:49:10.676" endtime="20200603 22:49:12.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:12.821" endtime="20200603 22:49:12.821"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:12.825" level="INFO">Running command 'ozone sh key list o3://om:9862/48353-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:14.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:14.853" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200603 22:49:12.822" endtime="20200603 22:49:14.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:14.854" level="INFO">key1</msg>
<status status="PASS" starttime="20200603 22:49:14.853" endtime="20200603 22:49:14.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:14.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:14.854" endtime="20200603 22:49:14.855"></status>
</kw>
<msg timestamp="20200603 22:49:14.855" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200603 22:49:12.821" endtime="20200603 22:49:14.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:14.855" endtime="20200603 22:49:14.856"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:14.860" level="INFO">Running command 'ozone sh key rename o3://om:9862/48353-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:16.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:16.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:14.856" endtime="20200603 22:49:16.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:16.676" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:16.674" endtime="20200603 22:49:16.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:16.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:16.676" endtime="20200603 22:49:16.677"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:14.856" endtime="20200603 22:49:16.677"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:16.681" level="INFO">Running command 'ozone sh key list o3://om:9862/48353-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:18.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:18.750" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200603 22:49:16.678" endtime="20200603 22:49:18.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:18.751" level="INFO">key2</msg>
<status status="PASS" starttime="20200603 22:49:18.750" endtime="20200603 22:49:18.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:18.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:18.752" endtime="20200603 22:49:18.752"></status>
</kw>
<msg timestamp="20200603 22:49:18.752" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200603 22:49:16.677" endtime="20200603 22:49:18.752"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:18.752" endtime="20200603 22:49:18.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:18.757" level="INFO">Running command 'ozone sh key delete o3://om:9862/48353-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:20.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:20.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:18.754" endtime="20200603 22:49:20.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:20.493" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:20.493" endtime="20200603 22:49:20.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:20.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:20.494" endtime="20200603 22:49:20.495"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:18.753" endtime="20200603 22:49:20.495"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:36.585" endtime="20200603 22:49:20.495"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:36.584" endtime="20200603 22:49:20.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:20.499" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/48353-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:22.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:22.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:20.496" endtime="20200603 22:49:22.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:22.299" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:22.298" endtime="20200603 22:49:22.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:22.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:22.299" endtime="20200603 22:49:22.299"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:20.495" endtime="20200603 22:49:22.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:22.302" level="INFO">Running command 'ozone sh volume delete o3://om:9862/48353-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:24.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:24.057" level="INFO">${output} = Volume 48353-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200603 22:49:22.300" endtime="20200603 22:49:24.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:24.059" level="INFO">Volume 48353-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200603 22:49:24.058" endtime="20200603 22:49:24.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:24.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:24.059" endtime="20200603 22:49:24.059"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:22.300" endtime="20200603 22:49:24.060"></status>
</kw>
<status status="PASS" starttime="20200603 22:48:18.633" endtime="20200603 22:49:24.060"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:48:18.632" endtime="20200603 22:49:24.060" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:24.061" endtime="20200603 22:49:24.062"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:24.066" level="INFO">Running command 'ozone sh volume create o3://om:9862/48353-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:25.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:25.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:24.063" endtime="20200603 22:49:25.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:25.886" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:25.885" endtime="20200603 22:49:25.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:25.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:25.886" endtime="20200603 22:49:25.886"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:24.062" endtime="20200603 22:49:25.887"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:25.891" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48353-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:27.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:27.841" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:25.887" endtime="20200603 22:49:27.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:27.842" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:27.841" endtime="20200603 22:49:27.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:27.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:27.843" endtime="20200603 22:49:27.843"></status>
</kw>
<msg timestamp="20200603 22:49:27.843" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:25.887" endtime="20200603 22:49:27.844"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:27.844" endtime="20200603 22:49:27.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:27.849" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/48353-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:29.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:29.731" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200603 22:49:27.845" endtime="20200603 22:49:29.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:29.732" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200603 22:49:29.731" endtime="20200603 22:49:29.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:29.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:29.732" endtime="20200603 22:49:29.733"></status>
</kw>
<msg timestamp="20200603 22:49:29.734" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200603 22:49:27.845" endtime="20200603 22:49:29.734"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:29.737" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48353-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:31.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:31.722" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:29.735" endtime="20200603 22:49:31.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:31.723" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:31.722" endtime="20200603 22:49:31.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:31.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:31.723" endtime="20200603 22:49:31.724"></status>
</kw>
<msg timestamp="20200603 22:49:31.724" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:29.734" endtime="20200603 22:49:31.724"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:31.724" endtime="20200603 22:49:31.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:31.729" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/48353-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:33.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:33.547" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200603 22:49:31.726" endtime="20200603 22:49:33.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:33.549" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200603 22:49:33.548" endtime="20200603 22:49:33.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:33.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:33.549" endtime="20200603 22:49:33.549"></status>
</kw>
<msg timestamp="20200603 22:49:33.550" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200603 22:49:31.725" endtime="20200603 22:49:33.550"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:33.553" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48353-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:35.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:35.496" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:33.550" endtime="20200603 22:49:35.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:35.498" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:35.497" endtime="20200603 22:49:35.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:35.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:35.498" endtime="20200603 22:49:35.498"></status>
</kw>
<msg timestamp="20200603 22:49:35.499" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:33.550" endtime="20200603 22:49:35.499"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:35.499" endtime="20200603 22:49:35.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:35.504" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/48353-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:37.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:37.339" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:35.501" endtime="20200603 22:49:37.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:37.341" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:37.340" endtime="20200603 22:49:37.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:37.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:37.341" endtime="20200603 22:49:37.341"></status>
</kw>
<msg timestamp="20200603 22:49:37.342" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:35.500" endtime="20200603 22:49:37.342"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:37.345" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48353-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:39.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:39.396" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200603 22:49:37.342" endtime="20200603 22:49:39.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:39.397" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:39.397" endtime="20200603 22:49:39.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:39.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:39.398" endtime="20200603 22:49:39.398"></status>
</kw>
<msg timestamp="20200603 22:49:39.398" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200603 22:49:37.342" endtime="20200603 22:49:39.398"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:39.398" endtime="20200603 22:49:39.399"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:39.399" endtime="20200603 22:49:39.400"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:24.062" endtime="20200603 22:49:39.400"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:49:24.060" endtime="20200603 22:49:39.401" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:39.402" endtime="20200603 22:49:39.403"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:39.407" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48353-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:41.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:41.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:39.405" endtime="20200603 22:49:41.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:41.390" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:41.390" endtime="20200603 22:49:41.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:41.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:41.391" endtime="20200603 22:49:41.391"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:39.405" endtime="20200603 22:49:41.392"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:41.396" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48353-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:43.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:43.383" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:41.392" endtime="20200603 22:49:43.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:43.384" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:43.384" endtime="20200603 22:49:43.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:43.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:43.385" endtime="20200603 22:49:43.386"></status>
</kw>
<msg timestamp="20200603 22:49:43.386" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:41.392" endtime="20200603 22:49:43.386"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:43.386" endtime="20200603 22:49:43.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:43.389" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/48353-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:45.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:45.381" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200603 22:49:43.387" endtime="20200603 22:49:45.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:45.382" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200603 22:49:45.381" endtime="20200603 22:49:45.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:45.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:45.382" endtime="20200603 22:49:45.383"></status>
</kw>
<msg timestamp="20200603 22:49:45.383" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200603 22:49:43.387" endtime="20200603 22:49:45.383"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:45.387" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48353-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:47.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:47.402" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:45.384" endtime="20200603 22:49:47.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:47.403" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:47.403" endtime="20200603 22:49:47.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:47.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:47.404" endtime="20200603 22:49:47.404"></status>
</kw>
<msg timestamp="20200603 22:49:47.404" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:45.383" endtime="20200603 22:49:47.404"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:47.405" endtime="20200603 22:49:47.406"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:47.410" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/48353-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:49.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:49.120" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:49:47.407" endtime="20200603 22:49:49.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:49.121" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:49:49.120" endtime="20200603 22:49:49.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:49.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:49.121" endtime="20200603 22:49:49.122"></status>
</kw>
<msg timestamp="20200603 22:49:49.122" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:49:47.406" endtime="20200603 22:49:49.122"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:49.126" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48353-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:51.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:51.100" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:49.123" endtime="20200603 22:49:51.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:51.101" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:51.101" endtime="20200603 22:49:51.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:51.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:51.102" endtime="20200603 22:49:51.102"></status>
</kw>
<msg timestamp="20200603 22:49:51.102" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:49.122" endtime="20200603 22:49:51.103"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:51.103" endtime="20200603 22:49:51.104"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:51.107" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/48353-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:53.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:53.000" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:51.104" endtime="20200603 22:49:53.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:53.002" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:53.001" endtime="20200603 22:49:53.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:53.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:53.002" endtime="20200603 22:49:53.002"></status>
</kw>
<msg timestamp="20200603 22:49:53.003" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:49:51.104" endtime="20200603 22:49:53.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:53.006" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48353-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:55.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:55.053" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200603 22:49:53.003" endtime="20200603 22:49:55.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:55.054" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:49:55.053" endtime="20200603 22:49:55.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:55.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:55.054" endtime="20200603 22:49:55.055"></status>
</kw>
<msg timestamp="20200603 22:49:55.055" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200603 22:49:53.003" endtime="20200603 22:49:55.055"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:55.055" endtime="20200603 22:49:55.056"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:55.056" endtime="20200603 22:49:55.057"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:39.403" endtime="20200603 22:49:55.057"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:49:39.402" endtime="20200603 22:49:55.058" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:49:55.059" endtime="20200603 22:49:55.059"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:55.064" level="INFO">Running command 'ozone sh key put o3://om:9862/48353-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:49:58.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:49:58.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:49:55.060" endtime="20200603 22:49:58.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:49:58.656" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:49:58.656" endtime="20200603 22:49:58.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:49:58.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:49:58.656" endtime="20200603 22:49:58.657"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:55.060" endtime="20200603 22:49:58.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:49:58.660" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48353-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:00.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:00.653" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:58.658" endtime="20200603 22:50:00.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:00.655" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:50:00.654" endtime="20200603 22:50:00.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:00.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:00.655" endtime="20200603 22:50:00.655"></status>
</kw>
<msg timestamp="20200603 22:50:00.656" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:49:58.657" endtime="20200603 22:50:00.656"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:00.656" endtime="20200603 22:50:00.656"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:00.659" level="INFO">Running command 'ozone sh key addacl o3://om:9862/48353-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:02.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:02.479" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200603 22:50:00.657" endtime="20200603 22:50:02.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:02.481" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200603 22:50:02.480" endtime="20200603 22:50:02.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:02.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:02.481" endtime="20200603 22:50:02.482"></status>
</kw>
<msg timestamp="20200603 22:50:02.482" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200603 22:50:00.657" endtime="20200603 22:50:02.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:02.485" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48353-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:04.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:04.545" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:50:02.483" endtime="20200603 22:50:04.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:04.546" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:50:04.545" endtime="20200603 22:50:04.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:04.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:04.546" endtime="20200603 22:50:04.547"></status>
</kw>
<msg timestamp="20200603 22:50:04.547" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:50:02.482" endtime="20200603 22:50:04.547"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:04.548" endtime="20200603 22:50:04.549"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:04.553" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/48353-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:06.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:06.474" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:50:04.550" endtime="20200603 22:50:06.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:06.475" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:50:06.474" endtime="20200603 22:50:06.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:06.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:06.475" endtime="20200603 22:50:06.476"></status>
</kw>
<msg timestamp="20200603 22:50:06.476" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200603 22:50:04.549" endtime="20200603 22:50:06.476"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:06.480" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48353-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:08.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:08.560" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:50:06.477" endtime="20200603 22:50:08.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:08.561" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:50:08.560" endtime="20200603 22:50:08.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:08.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:08.561" endtime="20200603 22:50:08.562"></status>
</kw>
<msg timestamp="20200603 22:50:08.562" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200603 22:50:06.476" endtime="20200603 22:50:08.562"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:08.562" endtime="20200603 22:50:08.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:08.567" level="INFO">Running command 'ozone sh key setacl o3://om:9862/48353-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:10.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:10.422" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:50:08.564" endtime="20200603 22:50:10.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:10.423" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:50:10.422" endtime="20200603 22:50:10.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:10.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:10.424" endtime="20200603 22:50:10.424"></status>
</kw>
<msg timestamp="20200603 22:50:10.425" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200603 22:50:08.563" endtime="20200603 22:50:10.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:10.427" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48353-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:12.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:12.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200603 22:50:10.425" endtime="20200603 22:50:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:12.379" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200603 22:50:12.378" endtime="20200603 22:50:12.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:12.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:12.379" endtime="20200603 22:50:12.379"></status>
</kw>
<msg timestamp="20200603 22:50:12.380" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200603 22:50:10.425" endtime="20200603 22:50:12.380"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:12.380" endtime="20200603 22:50:12.381"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:12.381" endtime="20200603 22:50:12.382"></status>
</kw>
<status status="PASS" starttime="20200603 22:49:55.059" endtime="20200603 22:50:12.382"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:49:55.058" endtime="20200603 22:50:12.382" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:12.384" endtime="20200603 22:50:12.385"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:12.388" level="INFO">Running command 'ozone sh volume info o3:///48353-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:14.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:50:14.333" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48353-rpcwport is not found</msg>
<status status="PASS" starttime="20200603 22:50:12.386" endtime="20200603 22:50:14.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:14.334" level="INFO">VOLUME_NOT_FOUND Volume 48353-rpcwport is not found</msg>
<status status="PASS" starttime="20200603 22:50:14.333" endtime="20200603 22:50:14.334"></status>
</kw>
<msg timestamp="20200603 22:50:14.334" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48353-rpcwport is not found</msg>
<status status="PASS" starttime="20200603 22:50:12.386" endtime="20200603 22:50:14.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:14.334" endtime="20200603 22:50:14.334"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:14.338" level="INFO">Running command 'ozone sh volume create o3:///48353-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:16.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:16.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:14.335" endtime="20200603 22:50:16.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:16.209" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:16.209" endtime="20200603 22:50:16.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:16.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:16.209" endtime="20200603 22:50:16.210"></status>
</kw>
<msg timestamp="20200603 22:50:16.210" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:50:14.335" endtime="20200603 22:50:16.210"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:16.210" endtime="20200603 22:50:16.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:16.215" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="48353-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:18.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:18.252" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200603 22:50:16.212" endtime="20200603 22:50:18.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:18.253" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:50:18.253" endtime="20200603 22:50:18.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:18.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:18.254" endtime="20200603 22:50:18.254"></status>
</kw>
<msg timestamp="20200603 22:50:18.254" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200603 22:50:16.211" endtime="20200603 22:50:18.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:18.255" endtime="20200603 22:50:18.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:18.258" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48353-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:20.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:20.224" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200603 22:50:18.256" endtime="20200603 22:50:20.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:20.226" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:50:20.225" endtime="20200603 22:50:20.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:20.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:20.226" endtime="20200603 22:50:20.226"></status>
</kw>
<msg timestamp="20200603 22:50:20.227" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:50:16.087Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200603 22:50:18.255" endtime="20200603 22:50:20.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:20.227" endtime="20200603 22:50:20.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:20.230" level="INFO">Running command 'ozone sh volume update o3:///48353-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:22.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:22.286" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48353-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:50:16.087Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200603 22:50:20.228" endtime="20200603 22:50:22.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:22.288" level="INFO">{
  "metadata" : { },
  "name" : "48353-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:50:16.087Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200603 22:50:22.287" endtime="20200603 22:50:22.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:22.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:22.288" endtime="20200603 22:50:22.288"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:20.227" endtime="20200603 22:50:22.289"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:22.293" level="INFO">Running command 'ozone sh volume info o3:///48353-rpcwport | jq -r '. | select(.name=="48353-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:24.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:24.143" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:50:22.289" endtime="20200603 22:50:24.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:24.145" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200603 22:50:24.144" endtime="20200603 22:50:24.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:24.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:24.145" endtime="20200603 22:50:24.146"></status>
</kw>
<msg timestamp="20200603 22:50:24.146" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:50:22.289" endtime="20200603 22:50:24.146"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:24.146" endtime="20200603 22:50:24.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:24.150" level="INFO">Running command 'ozone sh bucket create o3:///48353-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:26.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:26.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:24.147" endtime="20200603 22:50:26.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:26.012" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:26.011" endtime="20200603 22:50:26.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:26.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:26.012" endtime="20200603 22:50:26.012"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:24.147" endtime="20200603 22:50:26.013"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:26.017" level="INFO">Running command 'ozone sh bucket info o3:///48353-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:27.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:27.920" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200603 22:50:26.013" endtime="20200603 22:50:27.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:27.921" level="INFO">DISK</msg>
<status status="PASS" starttime="20200603 22:50:27.921" endtime="20200603 22:50:27.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:27.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:27.922" endtime="20200603 22:50:27.923"></status>
</kw>
<msg timestamp="20200603 22:50:27.923" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200603 22:50:26.013" endtime="20200603 22:50:27.923"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:27.923" endtime="20200603 22:50:27.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:27.927" level="INFO">Running command 'ozone sh bucket list o3:///48353-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:30.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:30.005" level="INFO">${output} = 48353-rpcwport</msg>
<status status="PASS" starttime="20200603 22:50:27.925" endtime="20200603 22:50:30.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:30.006" level="INFO">48353-rpcwport</msg>
<status status="PASS" starttime="20200603 22:50:30.006" endtime="20200603 22:50:30.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:30.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:30.007" endtime="20200603 22:50:30.008"></status>
</kw>
<msg timestamp="20200603 22:50:30.008" level="INFO">${result} = 48353-rpcwport</msg>
<status status="PASS" starttime="20200603 22:50:27.924" endtime="20200603 22:50:30.008"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:30.008" endtime="20200603 22:50:30.009"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:30.014" level="INFO">Running command 'ozone sh key put o3:///48353-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:33.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:33.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:30.011" endtime="20200603 22:50:33.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:33.691" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:33.691" endtime="20200603 22:50:33.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:33.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:33.692" endtime="20200603 22:50:33.692"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:30.010" endtime="20200603 22:50:33.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:33.695" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:33.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:33.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:33.693" endtime="20200603 22:50:33.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:33.699" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:33.698" endtime="20200603 22:50:33.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:33.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:33.699" endtime="20200603 22:50:33.700"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:33.693" endtime="20200603 22:50:33.700"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:33.704" level="INFO">Running command 'ozone sh key get o3:///48353-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:37.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:37.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:33.701" endtime="20200603 22:50:37.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:37.052" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:37.052" endtime="20200603 22:50:37.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:37.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:37.053" endtime="20200603 22:50:37.053"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:33.700" endtime="20200603 22:50:37.053"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:37.056" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:37.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:37.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:37.054" endtime="20200603 22:50:37.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:37.059" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:37.058" endtime="20200603 22:50:37.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:37.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:37.059" endtime="20200603 22:50:37.059"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:37.053" endtime="20200603 22:50:37.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:37.063" level="INFO">Running command 'ozone sh key put -t RATIS o3:///48353-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:40.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:40.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:37.060" endtime="20200603 22:50:40.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:40.687" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:40.686" endtime="20200603 22:50:40.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:40.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:40.688" endtime="20200603 22:50:40.688"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:37.060" endtime="20200603 22:50:40.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:40.692" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:40.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:40.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:40.689" endtime="20200603 22:50:40.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:40.695" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:40.694" endtime="20200603 22:50:40.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:40.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:40.695" endtime="20200603 22:50:40.696"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:40.688" endtime="20200603 22:50:40.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:40.699" level="INFO">Running command 'ozone sh key get o3:///48353-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:44.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:44.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:40.696" endtime="20200603 22:50:44.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:44.172" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:44.171" endtime="20200603 22:50:44.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:44.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:44.172" endtime="20200603 22:50:44.173"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:40.696" endtime="20200603 22:50:44.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:44.176" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:44.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:44.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:44.173" endtime="20200603 22:50:44.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:44.180" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:44.179" endtime="20200603 22:50:44.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:44.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:44.180" endtime="20200603 22:50:44.180"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:44.173" endtime="20200603 22:50:44.180"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:44.183" level="INFO">Running command 'ozone sh key info o3:///48353-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:46.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:46.121" level="INFO">${output} = {
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:38.769Z",
  "modificationTime": "2020-06-03T22:50:40.228Z",
...</msg>
<status status="PASS" starttime="20200603 22:50:44.181" endtime="20200603 22:50:46.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:46.122" level="INFO">{
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:38.769Z",
  "modificationTime": "2020-06-03T22:50:40.228Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282497926234240,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:50:46.121" endtime="20200603 22:50:46.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:46.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:46.122" endtime="20200603 22:50:46.122"></status>
</kw>
<msg timestamp="20200603 22:50:46.123" level="INFO">${result} = {
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:38.769Z",
  "modificationTime": "2020-06-03T22:50:40.228Z",
...</msg>
<status status="PASS" starttime="20200603 22:50:44.181" endtime="20200603 22:50:46.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:46.123" endtime="20200603 22:50:46.123"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:46.127" level="INFO">Running command 'ozone sh key delete o3:///48353-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:47.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:47.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:46.124" endtime="20200603 22:50:47.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:47.833" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:47.833" endtime="20200603 22:50:47.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:47.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:47.834" endtime="20200603 22:50:47.834"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:46.123" endtime="20200603 22:50:47.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:47.837" level="INFO">Running command 'ozone sh key cp o3:///48353-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:51.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:51.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:47.835" endtime="20200603 22:50:51.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:51.820" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:51.819" endtime="20200603 22:50:51.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:51.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:51.820" endtime="20200603 22:50:51.820"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:47.835" endtime="20200603 22:50:51.820"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:51.823" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:51.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:51.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:51.821" endtime="20200603 22:50:51.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:51.827" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:51.826" endtime="20200603 22:50:51.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:51.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:51.828" endtime="20200603 22:50:51.828"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:51.821" endtime="20200603 22:50:51.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:51.831" level="INFO">Running command 'ozone sh key get o3:///48353-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:55.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:55.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:51.829" endtime="20200603 22:50:55.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:55.256" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:55.255" endtime="20200603 22:50:55.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:55.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:55.256" endtime="20200603 22:50:55.257"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:51.829" endtime="20200603 22:50:55.257"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:55.260" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:55.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:55.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:55.258" endtime="20200603 22:50:55.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:55.263" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:55.262" endtime="20200603 22:50:55.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:55.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:55.263" endtime="20200603 22:50:55.264"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:55.257" endtime="20200603 22:50:55.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:55.267" level="INFO">Running command 'ozone sh key delete o3:///48353-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:57.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:50:57.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:55.265" endtime="20200603 22:50:57.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:57.111" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:50:57.110" endtime="20200603 22:50:57.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:50:57.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:50:57.111" endtime="20200603 22:50:57.112"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:55.264" endtime="20200603 22:50:57.112"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:57.117" level="INFO">Running command 'ozone sh key get o3:///48353-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:50:58.825" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:50:58.825" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:50:57.113" endtime="20200603 22:50:58.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:50:58.827" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:50:58.826" endtime="20200603 22:50:58.827"></status>
</kw>
<msg timestamp="20200603 22:50:58.828" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:50:57.112" endtime="20200603 22:50:58.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:50:58.828" endtime="20200603 22:50:58.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:50:58.831" level="INFO">Running command 'ozone sh key get --force o3:///48353-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:02.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:02.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:50:58.829" endtime="20200603 22:51:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:02.207" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:02.206" endtime="20200603 22:51:02.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:02.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:02.207" endtime="20200603 22:51:02.207"></status>
</kw>
<msg timestamp="20200603 22:51:02.208" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:50:58.829" endtime="20200603 22:51:02.208"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:02.208" endtime="20200603 22:51:02.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:02.211" level="INFO">Running command 'ozone sh key info o3:///48353-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:04.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:04.185" level="INFO">${output} = {
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:31.741Z",
  "modificationTime": "2020-06-03T22:50:33.238Z",
  "rep...</msg>
<status status="PASS" starttime="20200603 22:51:02.209" endtime="20200603 22:51:04.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:04.186" level="INFO">{
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:31.741Z",
  "modificationTime": "2020-06-03T22:50:33.238Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282497465778300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:51:04.185" endtime="20200603 22:51:04.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:04.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:04.186" endtime="20200603 22:51:04.186"></status>
</kw>
<msg timestamp="20200603 22:51:04.187" level="INFO">${result} = {
  "volumeName": "48353-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:50:31.741Z",
  "modificationTime": "2020-06-03T22:50:33.238Z",
  "rep...</msg>
<status status="PASS" starttime="20200603 22:51:02.208" endtime="20200603 22:51:04.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:04.187" endtime="20200603 22:51:04.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:04.191" level="INFO">Running command 'ozone sh key list o3:///48353-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:06.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:06.229" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200603 22:51:04.189" endtime="20200603 22:51:06.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:06.230" level="INFO">key1</msg>
<status status="PASS" starttime="20200603 22:51:06.230" endtime="20200603 22:51:06.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:06.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:06.231" endtime="20200603 22:51:06.232"></status>
</kw>
<msg timestamp="20200603 22:51:06.232" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200603 22:51:04.188" endtime="20200603 22:51:06.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:06.232" endtime="20200603 22:51:06.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:06.237" level="INFO">Running command 'ozone sh key rename o3:///48353-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:08.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:08.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:06.233" endtime="20200603 22:51:08.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:08.134" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:08.133" endtime="20200603 22:51:08.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:08.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:08.134" endtime="20200603 22:51:08.135"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:06.233" endtime="20200603 22:51:08.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:08.138" level="INFO">Running command 'ozone sh key list o3:///48353-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:10.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:10.123" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200603 22:51:08.136" endtime="20200603 22:51:10.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:10.125" level="INFO">key2</msg>
<status status="PASS" starttime="20200603 22:51:10.124" endtime="20200603 22:51:10.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:10.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:10.125" endtime="20200603 22:51:10.126"></status>
</kw>
<msg timestamp="20200603 22:51:10.126" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200603 22:51:08.135" endtime="20200603 22:51:10.126"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:10.130" endtime="20200603 22:51:10.131"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:10.134" level="INFO">Running command 'ozone sh key delete o3:///48353-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:12.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:12.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:10.131" endtime="20200603 22:51:12.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:12.020" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:12.020" endtime="20200603 22:51:12.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:12.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:12.021" endtime="20200603 22:51:12.021"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:10.131" endtime="20200603 22:51:12.021"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:30.009" endtime="20200603 22:51:12.022"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:30.009" endtime="20200603 22:51:12.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:12.026" level="INFO">Running command 'ozone sh bucket delete o3:///48353-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:13.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:13.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:12.022" endtime="20200603 22:51:13.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:13.892" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:13.891" endtime="20200603 22:51:13.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:13.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:13.892" endtime="20200603 22:51:13.892"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:12.022" endtime="20200603 22:51:13.893"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:13.896" level="INFO">Running command 'ozone sh volume delete o3:///48353-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:15.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:15.726" level="INFO">${output} = Volume 48353-rpcwport is deleted</msg>
<status status="PASS" starttime="20200603 22:51:13.893" endtime="20200603 22:51:15.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:15.727" level="INFO">Volume 48353-rpcwport is deleted</msg>
<status status="PASS" starttime="20200603 22:51:15.726" endtime="20200603 22:51:15.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:15.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:15.727" endtime="20200603 22:51:15.728"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:13.893" endtime="20200603 22:51:15.728"></status>
</kw>
<status status="PASS" starttime="20200603 22:50:12.385" endtime="20200603 22:51:15.728"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:50:12.383" endtime="20200603 22:51:15.729" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:15.730" endtime="20200603 22:51:15.730"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:15.735" level="INFO">Running command 'ozone sh volume info /48353-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:17.425" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:51:17.425" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48353-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200603 22:51:15.732" endtime="20200603 22:51:17.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:17.426" level="INFO">VOLUME_NOT_FOUND Volume 48353-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200603 22:51:17.426" endtime="20200603 22:51:17.427"></status>
</kw>
<msg timestamp="20200603 22:51:17.427" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48353-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200603 22:51:15.731" endtime="20200603 22:51:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:17.427" endtime="20200603 22:51:17.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:17.431" level="INFO">Running command 'ozone sh volume create /48353-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:19.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:19.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:17.428" endtime="20200603 22:51:19.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:19.329" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:19.328" endtime="20200603 22:51:19.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:19.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:19.329" endtime="20200603 22:51:19.330"></status>
</kw>
<msg timestamp="20200603 22:51:19.330" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:51:17.428" endtime="20200603 22:51:19.330"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:19.330" endtime="20200603 22:51:19.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:19.334" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="48353-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:21.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:21.327" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200603 22:51:19.332" endtime="20200603 22:51:21.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:21.329" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:51:21.328" endtime="20200603 22:51:21.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:21.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:21.329" endtime="20200603 22:51:21.330"></status>
</kw>
<msg timestamp="20200603 22:51:21.330" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200603 22:51:19.331" endtime="20200603 22:51:21.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:21.330" endtime="20200603 22:51:21.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:21.335" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48353-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:23.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:23.241" level="INFO">${output} = {
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200603 22:51:21.331" endtime="20200603 22:51:23.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:23.242" level="INFO">{
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200603 22:51:23.241" endtime="20200603 22:51:23.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:23.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:23.242" endtime="20200603 22:51:23.243"></status>
</kw>
<msg timestamp="20200603 22:51:23.244" level="INFO">${result} = {
  "metadata": {},
  "name": "48353-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-03T22:51:19.210Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200603 22:51:21.331" endtime="20200603 22:51:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:23.244" endtime="20200603 22:51:23.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:23.247" level="INFO">Running command 'ozone sh volume update /48353-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:25.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:25.305" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48353-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:51:19.210Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200603 22:51:23.245" endtime="20200603 22:51:25.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:25.306" level="INFO">{
  "metadata" : { },
  "name" : "48353-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-03T22:51:19.210Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200603 22:51:25.306" endtime="20200603 22:51:25.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:25.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:25.307" endtime="20200603 22:51:25.307"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:23.245" endtime="20200603 22:51:25.307"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:25.312" level="INFO">Running command 'ozone sh volume info /48353-rpcwoscheme | jq -r '. | select(.name=="48353-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:27.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:27.342" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:51:25.309" endtime="20200603 22:51:27.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:27.343" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200603 22:51:27.342" endtime="20200603 22:51:27.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:27.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:27.343" endtime="20200603 22:51:27.344"></status>
</kw>
<msg timestamp="20200603 22:51:27.344" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200603 22:51:25.308" endtime="20200603 22:51:27.344"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:27.344" endtime="20200603 22:51:27.345"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:27.348" level="INFO">Running command 'ozone sh bucket create /48353-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:29.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:29.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:27.345" endtime="20200603 22:51:29.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:29.282" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:29.281" endtime="20200603 22:51:29.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:29.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:29.282" endtime="20200603 22:51:29.283"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:27.345" endtime="20200603 22:51:29.283"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:29.287" level="INFO">Running command 'ozone sh bucket info /48353-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:31.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:31.197" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200603 22:51:29.284" endtime="20200603 22:51:31.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:31.198" level="INFO">DISK</msg>
<status status="PASS" starttime="20200603 22:51:31.197" endtime="20200603 22:51:31.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:31.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:31.198" endtime="20200603 22:51:31.199"></status>
</kw>
<msg timestamp="20200603 22:51:31.199" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200603 22:51:29.283" endtime="20200603 22:51:31.199"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:31.199" endtime="20200603 22:51:31.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:31.203" level="INFO">Running command 'ozone sh bucket list /48353-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:33.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:33.268" level="INFO">${output} = 48353-rpcwoscheme</msg>
<status status="PASS" starttime="20200603 22:51:31.200" endtime="20200603 22:51:33.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:33.270" level="INFO">48353-rpcwoscheme</msg>
<status status="PASS" starttime="20200603 22:51:33.269" endtime="20200603 22:51:33.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:33.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:33.270" endtime="20200603 22:51:33.270"></status>
</kw>
<msg timestamp="20200603 22:51:33.271" level="INFO">${result} = 48353-rpcwoscheme</msg>
<status status="PASS" starttime="20200603 22:51:31.200" endtime="20200603 22:51:33.271"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:33.271" endtime="20200603 22:51:33.271"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:33.275" level="INFO">Running command 'ozone sh key put /48353-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:36.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:36.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:33.273" endtime="20200603 22:51:36.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:36.982" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:36.982" endtime="20200603 22:51:36.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:36.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:36.982" endtime="20200603 22:51:36.983"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:33.272" endtime="20200603 22:51:36.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:36.986" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:36.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:36.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:36.984" endtime="20200603 22:51:36.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:36.989" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:36.989" endtime="20200603 22:51:36.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:36.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:36.989" endtime="20200603 22:51:36.990"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:36.983" endtime="20200603 22:51:36.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:36.993" level="INFO">Running command 'ozone sh key get /48353-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:40.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:40.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:36.991" endtime="20200603 22:51:40.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:40.561" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:40.561" endtime="20200603 22:51:40.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:40.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:40.562" endtime="20200603 22:51:40.562"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:36.991" endtime="20200603 22:51:40.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:40.565" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:40.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:40.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:40.563" endtime="20200603 22:51:40.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:40.569" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:40.569" endtime="20200603 22:51:40.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:40.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:40.569" endtime="20200603 22:51:40.570"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:40.563" endtime="20200603 22:51:40.570"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:40.573" level="INFO">Running command 'ozone sh key put -t RATIS /48353-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:44.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:44.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:40.571" endtime="20200603 22:51:44.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:44.145" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:44.144" endtime="20200603 22:51:44.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:44.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:44.145" endtime="20200603 22:51:44.146"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:40.570" endtime="20200603 22:51:44.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:44.149" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:44.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:44.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:44.147" endtime="20200603 22:51:44.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:44.153" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:44.152" endtime="20200603 22:51:44.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:44.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:44.153" endtime="20200603 22:51:44.153"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:44.146" endtime="20200603 22:51:44.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:44.156" level="INFO">Running command 'ozone sh key get /48353-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:47.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:47.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:44.154" endtime="20200603 22:51:47.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:47.584" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:47.584" endtime="20200603 22:51:47.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:47.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:47.584" endtime="20200603 22:51:47.585"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:44.153" endtime="20200603 22:51:47.585"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:47.593" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:47.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:47.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:47.586" endtime="20200603 22:51:47.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:47.598" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:47.597" endtime="20200603 22:51:47.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:47.598" endtime="20200603 22:51:47.598"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:47.585" endtime="20200603 22:51:47.599"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:47.601" level="INFO">Running command 'ozone sh key info /48353-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:49.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:49.696" level="INFO">${output} = {
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:42.293Z",
  "modificationTime": "2020-06-03T22:51:43.787Z...</msg>
<status status="PASS" starttime="20200603 22:51:47.600" endtime="20200603 22:51:49.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:49.697" level="INFO">{
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:42.293Z",
  "modificationTime": "2020-06-03T22:51:43.787Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282502089408640,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:51:49.696" endtime="20200603 22:51:49.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:49.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:49.697" endtime="20200603 22:51:49.698"></status>
</kw>
<msg timestamp="20200603 22:51:49.698" level="INFO">${result} = {
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:42.293Z",
  "modificationTime": "2020-06-03T22:51:43.787Z...</msg>
<status status="PASS" starttime="20200603 22:51:47.599" endtime="20200603 22:51:49.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200603 22:51:49.699" endtime="20200603 22:51:49.699"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:49.702" level="INFO">Running command 'ozone sh key delete /48353-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:51.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:51.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:49.700" endtime="20200603 22:51:51.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:51.526" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:51.525" endtime="20200603 22:51:51.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:51.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:51.526" endtime="20200603 22:51:51.527"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:49.699" endtime="20200603 22:51:51.527"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:51.530" level="INFO">Running command 'ozone sh key cp /48353-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:55.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:51.528" endtime="20200603 22:51:55.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:55.222" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:55.221" endtime="20200603 22:51:55.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:55.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:55.222" endtime="20200603 22:51:55.223"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:51.527" endtime="20200603 22:51:55.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:55.226" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:55.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:55.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:55.224" endtime="20200603 22:51:55.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:55.230" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:55.229" endtime="20200603 22:51:55.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:55.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:55.230" endtime="20200603 22:51:55.231"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:55.223" endtime="20200603 22:51:55.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:55.234" level="INFO">Running command 'ozone sh key get /48353-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:58.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:58.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:55.232" endtime="20200603 22:51:58.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:58.660" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:58.659" endtime="20200603 22:51:58.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:58.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:58.660" endtime="20200603 22:51:58.660"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:55.231" endtime="20200603 22:51:58.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:58.663" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:51:58.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:51:58.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:58.661" endtime="20200603 22:51:58.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:51:58.667" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:51:58.666" endtime="20200603 22:51:58.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:51:58.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:51:58.667" endtime="20200603 22:51:58.667"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:58.661" endtime="20200603 22:51:58.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:51:58.670" level="INFO">Running command 'ozone sh key delete /48353-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:00.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:00.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:51:58.668" endtime="20200603 22:52:00.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:00.499" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:52:00.498" endtime="20200603 22:52:00.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:00.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:00.499" endtime="20200603 22:52:00.500"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:58.668" endtime="20200603 22:52:00.500"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:00.503" level="INFO">Running command 'ozone sh key get /48353-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:02.247" level="INFO">${rc} = 255</msg>
<msg timestamp="20200603 22:52:02.247" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:52:00.501" endtime="20200603 22:52:02.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:02.248" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:52:02.247" endtime="20200603 22:52:02.248"></status>
</kw>
<msg timestamp="20200603 22:52:02.248" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200603 22:52:00.500" endtime="20200603 22:52:02.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:52:02.249" endtime="20200603 22:52:02.249"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:02.252" level="INFO">Running command 'ozone sh key get --force /48353-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:05.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:05.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:52:02.250" endtime="20200603 22:52:05.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:05.582" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:52:05.581" endtime="20200603 22:52:05.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:05.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:05.582" endtime="20200603 22:52:05.582"></status>
</kw>
<msg timestamp="20200603 22:52:05.583" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200603 22:52:02.249" endtime="20200603 22:52:05.583"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200603 22:52:05.583" endtime="20200603 22:52:05.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:05.587" level="INFO">Running command 'ozone sh key info /48353-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:07.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:07.480" level="INFO">${output} = {
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:35.069Z",
  "modificationTime": "2020-06-03T22:51:36.526Z",
  "...</msg>
<status status="PASS" starttime="20200603 22:52:05.584" endtime="20200603 22:52:07.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:07.481" level="INFO">{
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:35.069Z",
  "modificationTime": "2020-06-03T22:51:36.526Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104282501615976580,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200603 22:52:07.480" endtime="20200603 22:52:07.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:07.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:07.482" endtime="20200603 22:52:07.482"></status>
</kw>
<msg timestamp="20200603 22:52:07.483" level="INFO">${result} = {
  "volumeName": "48353-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-03T22:51:35.069Z",
  "modificationTime": "2020-06-03T22:51:36.526Z",
  "...</msg>
<status status="PASS" starttime="20200603 22:52:05.584" endtime="20200603 22:52:07.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200603 22:52:07.483" endtime="20200603 22:52:07.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:07.488" level="INFO">Running command 'ozone sh key list /48353-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:09.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:09.548" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200603 22:52:07.485" endtime="20200603 22:52:09.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:09.549" level="INFO">key1</msg>
<status status="PASS" starttime="20200603 22:52:09.548" endtime="20200603 22:52:09.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:09.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:09.549" endtime="20200603 22:52:09.550"></status>
</kw>
<msg timestamp="20200603 22:52:09.550" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200603 22:52:07.483" endtime="20200603 22:52:09.550"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:52:09.550" endtime="20200603 22:52:09.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:09.555" level="INFO">Running command 'ozone sh key rename /48353-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:11.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:11.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:52:09.551" endtime="20200603 22:52:11.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:11.302" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:52:11.301" endtime="20200603 22:52:11.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:11.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:11.302" endtime="20200603 22:52:11.302"></status>
</kw>
<status status="PASS" starttime="20200603 22:52:09.551" endtime="20200603 22:52:11.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:11.307" level="INFO">Running command 'ozone sh key list /48353-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:13.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:13.270" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200603 22:52:11.303" endtime="20200603 22:52:13.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:13.272" level="INFO">key2</msg>
<status status="PASS" starttime="20200603 22:52:13.271" endtime="20200603 22:52:13.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:13.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:13.272" endtime="20200603 22:52:13.272"></status>
</kw>
<msg timestamp="20200603 22:52:13.272" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200603 22:52:11.303" endtime="20200603 22:52:13.273"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200603 22:52:13.273" endtime="20200603 22:52:13.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:13.277" level="INFO">Running command 'ozone sh key delete /48353-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:14.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:14.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:52:13.274" endtime="20200603 22:52:14.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:14.897" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:52:14.896" endtime="20200603 22:52:14.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:14.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:14.897" endtime="20200603 22:52:14.898"></status>
</kw>
<status status="PASS" starttime="20200603 22:52:13.273" endtime="20200603 22:52:14.898"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:33.272" endtime="20200603 22:52:14.898"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:33.271" endtime="20200603 22:52:14.898"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:14.903" level="INFO">Running command 'ozone sh bucket delete /48353-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:16.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:16.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200603 22:52:14.899" endtime="20200603 22:52:16.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:16.611" level="INFO"></msg>
<status status="PASS" starttime="20200603 22:52:16.610" endtime="20200603 22:52:16.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:16.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:16.611" endtime="20200603 22:52:16.612"></status>
</kw>
<status status="PASS" starttime="20200603 22:52:14.898" endtime="20200603 22:52:16.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:52:16.616" level="INFO">Running command 'ozone sh volume delete /48353-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:52:18.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:52:18.337" level="INFO">${output} = Volume 48353-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200603 22:52:16.613" endtime="20200603 22:52:18.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:52:18.338" level="INFO">Volume 48353-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200603 22:52:18.337" endtime="20200603 22:52:18.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:52:18.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:52:18.338" endtime="20200603 22:52:18.339"></status>
</kw>
<status status="PASS" starttime="20200603 22:52:16.612" endtime="20200603 22:52:18.339"></status>
</kw>
<status status="PASS" starttime="20200603 22:51:15.730" endtime="20200603 22:52:18.339"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200603 22:51:15.729" endtime="20200603 22:52:18.340" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200603 22:48:18.624" endtime="20200603 22:52:18.341"></status>
</suite>
<status status="PASS" starttime="20200603 22:47:06.378" endtime="20200603 22:52:18.346"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
