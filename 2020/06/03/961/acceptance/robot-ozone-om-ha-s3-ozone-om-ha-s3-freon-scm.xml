<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200603 22:42:30.887" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:42:30.955" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:42:38.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:42:38.336" level="INFO">${output} = 2020-06-03 22:42:31,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:32,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:30.950" endtime="20200603 22:42:38.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:42:38.337" level="INFO">2020-06-03 22:42:31,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:32,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:42:32,098 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:42:32,866 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-03 22:42:32,867 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-03 22:42:32,867 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-03 22:42:32,867 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-03 22:42:32,867 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-03 22:42:32,868 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-03 22:42:32,868 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-03 22:42:32,876 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-03 22:42:32,887 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:32,917 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-46606, with hadoop as owner.
2020-06-03 22:42:32,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-46606/bucket-0-88455, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:42:33,473 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-03 22:42:33,892 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,040
Average Time spent in bucket creation: 00:00:00,013
Average Time spent in key creation: 00:00:00,052
Average Time spent in key write: 00:00:00,637
Total bytes written: 10240
Total Execution time: 00:00:05,707
***************************************************</msg>
<status status="PASS" starttime="20200603 22:42:38.336" endtime="20200603 22:42:38.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:42:38.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:42:38.337" endtime="20200603 22:42:38.338"></status>
</kw>
<msg timestamp="20200603 22:42:38.338" level="INFO">${result} = 2020-06-03 22:42:31,943 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:32,098 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:30.949" endtime="20200603 22:42:38.338"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:42:38.339" endtime="20200603 22:42:38.339"></status>
</kw>
<status status="PASS" starttime="20200603 22:42:38.338" endtime="20200603 22:42:38.340"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:42:30.948" endtime="20200603 22:42:38.340" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:42:38.345" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:42:43.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:42:43.099" level="INFO">${output} = 2020-06-03 22:42:39,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:39,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:38.342" endtime="20200603 22:42:43.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:42:43.100" level="INFO">2020-06-03 22:42:39,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:39,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:42:39,447 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:42:39,623 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gxygr3ipyy
2020-06-03 22:42:39,636 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:40,208 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-03 22:42:40,241 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:42:40,643 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:40,797 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-03 22:42:41,643 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:42,643 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:42:42,774 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1359.767098, max=1359.767098, mean=1359.767098, stddev=0.0, median=1359.767098, p75=1359.767098, p95=1359.767098, p98=1359.767098, p99=1359.767098, p999=1359.767098, mean_rate=0.4024722463047528, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:42:42,774 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-03 22:42:42,775 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:42:42,775 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:42:43.099" endtime="20200603 22:42:43.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:42:43.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:42:43.100" endtime="20200603 22:42:43.101"></status>
</kw>
<msg timestamp="20200603 22:42:43.101" level="INFO">${result} = 2020-06-03 22:42:39,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:39,447 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:38.341" endtime="20200603 22:42:43.101"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:42:43.102" endtime="20200603 22:42:43.102"></status>
</kw>
<status status="PASS" starttime="20200603 22:42:43.101" endtime="20200603 22:42:43.102"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:42:38.340" endtime="20200603 22:42:43.102" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:42:43.107" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:42:46.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:42:46.092" level="INFO">${output} = 2020-06-03 22:42:44,091 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:44,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:43.104" endtime="20200603 22:42:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:42:46.094" level="INFO">2020-06-03 22:42:44,091 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:44,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:42:44,291 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:42:44,507 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xdvh5johef
2020-06-03 22:42:44,527 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:45,531 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:42:46,083 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=63.775447, max=63.775447, mean=63.775447, stddev=0.0, median=63.775447, p75=63.775447, p95=63.775447, p98=63.775447, p99=63.775447, p999=63.775447, mean_rate=0.9760363792183409, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:42:46,083 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-03 22:42:46,084 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:42:46,084 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:42:46.093" endtime="20200603 22:42:46.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:42:46.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:42:46.094" endtime="20200603 22:42:46.094"></status>
</kw>
<msg timestamp="20200603 22:42:46.095" level="INFO">${result} = 2020-06-03 22:42:44,091 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:44,291 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:43.104" endtime="20200603 22:42:46.095"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:42:46.096" endtime="20200603 22:42:46.096"></status>
</kw>
<status status="PASS" starttime="20200603 22:42:46.095" endtime="20200603 22:42:46.096"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:42:43.103" endtime="20200603 22:42:46.096" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:42:46.102" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:42:49.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:42:49.123" level="INFO">${output} = 2020-06-03 22:42:47,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:47,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:46.099" endtime="20200603 22:42:49.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:42:49.124" level="INFO">2020-06-03 22:42:47,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:47,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:42:47,279 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:42:47,474 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xjg9huesvz
2020-06-03 22:42:47,495 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:42:48,504 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:42:49,114 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=23.532991, max=23.532991, mean=23.532991, stddev=0.0, median=23.532991, p75=23.532991, p95=23.532991, p98=23.532991, p99=23.532991, p999=23.532991, mean_rate=0.9860931072148998, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:42:49,115 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-03 22:42:49,115 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:42:49,115 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:42:49.123" endtime="20200603 22:42:49.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:42:49.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:42:49.124" endtime="20200603 22:42:49.125"></status>
</kw>
<msg timestamp="20200603 22:42:49.125" level="INFO">${result} = 2020-06-03 22:42:47,116 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:42:47,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:42:46.098" endtime="20200603 22:42:49.125"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:42:49.126" endtime="20200603 22:42:49.126"></status>
</kw>
<status status="PASS" starttime="20200603 22:42:49.125" endtime="20200603 22:42:49.126"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:42:46.097" endtime="20200603 22:42:49.126" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200603 22:42:30.918" endtime="20200603 22:42:49.128"></status>
</suite>
<status status="PASS" starttime="20200603 22:42:30.888" endtime="20200603 22:42:49.132"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
