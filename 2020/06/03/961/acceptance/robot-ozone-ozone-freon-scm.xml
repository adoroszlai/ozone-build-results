<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200603 22:59:15.622" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:59:15.684" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:59:22.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:59:22.859" level="INFO">${output} = 2020-06-03 22:59:16,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:16,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:15.680" endtime="20200603 22:59:22.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:59:22.860" level="INFO">2020-06-03 22:59:16,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:16,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:59:16,730 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:59:17,400 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-03 22:59:17,400 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-03 22:59:17,401 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-03 22:59:17,401 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-03 22:59:17,401 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-03 22:59:17,401 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-03 22:59:17,401 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-03 22:59:17,403 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-03 22:59:17,413 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:59:17,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-35410, with hadoop as owner.
2020-06-03 22:59:17,472 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-35410/bucket-0-02790, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:59:18,029 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-03 22:59:18,415 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,040
Average Time spent in bucket creation: 00:00:00,010
Average Time spent in key creation: 00:00:00,044
Average Time spent in key write: 00:00:00,685
Total bytes written: 10240
Total Execution time: 00:00:05,633
***************************************************</msg>
<status status="PASS" starttime="20200603 22:59:22.859" endtime="20200603 22:59:22.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:59:22.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:59:22.860" endtime="20200603 22:59:22.861"></status>
</kw>
<msg timestamp="20200603 22:59:22.861" level="INFO">${result} = 2020-06-03 22:59:16,590 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:16,730 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:15.679" endtime="20200603 22:59:22.861"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:59:22.862" endtime="20200603 22:59:22.863"></status>
</kw>
<status status="PASS" starttime="20200603 22:59:22.862" endtime="20200603 22:59:22.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:59:15.678" endtime="20200603 22:59:22.863" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:59:22.867" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:59:27.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:59:27.285" level="INFO">${output} = 2020-06-03 22:59:23,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:23,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:22.865" endtime="20200603 22:59:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:59:27.287" level="INFO">2020-06-03 22:59:23,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:23,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:59:23,936 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:59:24,106 [main] INFO freon.BaseFreonGenerator: Executing test with prefix migfo6wliy
2020-06-03 22:59:24,125 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:59:24,777 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-03 22:59:24,794 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-03 22:59:25,136 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:59:25,306 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-03 22:59:26,136 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:59:26,950 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1287.096838, max=1287.096838, mean=1287.096838, stddev=0.0, median=1287.096838, p75=1287.096838, p95=1287.096838, p98=1287.096838, p99=1287.096838, p999=1287.096838, mean_rate=0.46777165995855596, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:59:26,951 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-03 22:59:26,958 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:59:26,958 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:59:27.286" endtime="20200603 22:59:27.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:59:27.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:59:27.287" endtime="20200603 22:59:27.288"></status>
</kw>
<msg timestamp="20200603 22:59:27.288" level="INFO">${result} = 2020-06-03 22:59:23,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:23,936 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:22.864" endtime="20200603 22:59:27.288"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:59:27.289" endtime="20200603 22:59:27.289"></status>
</kw>
<status status="PASS" starttime="20200603 22:59:27.288" endtime="20200603 22:59:27.289"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:59:22.864" endtime="20200603 22:59:27.289" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:59:27.294" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:59:30.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:59:30.541" level="INFO">${output} = 2020-06-03 22:59:28,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:28,459 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:27.292" endtime="20200603 22:59:30.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:59:30.542" level="INFO">2020-06-03 22:59:28,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:28,459 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:59:28,459 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:59:28,667 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zdg6fgqikv
2020-06-03 22:59:28,688 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:59:29,700 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:59:30,530 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=38.275687, max=38.275687, mean=38.275687, stddev=0.0, median=38.275687, p75=38.275687, p95=38.275687, p98=38.275687, p99=38.275687, p999=38.275687, mean_rate=0.8984172724860542, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:59:30,531 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-03 22:59:30,531 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:59:30,531 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:59:30.541" endtime="20200603 22:59:30.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:59:30.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:59:30.542" endtime="20200603 22:59:30.543"></status>
</kw>
<msg timestamp="20200603 22:59:30.543" level="INFO">${result} = 2020-06-03 22:59:28,296 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:28,459 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:27.291" endtime="20200603 22:59:30.543"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:59:30.544" endtime="20200603 22:59:30.544"></status>
</kw>
<status status="PASS" starttime="20200603 22:59:30.543" endtime="20200603 22:59:30.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:59:27.290" endtime="20200603 22:59:30.544" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200603 22:59:30.550" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200603 22:59:33.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200603 22:59:33.806" level="INFO">${output} = 2020-06-03 22:59:31,598 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:31,855 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:30.546" endtime="20200603 22:59:33.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200603 22:59:33.807" level="INFO">2020-06-03 22:59:31,598 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:31,855 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-03 22:59:31,855 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-03 22:59:32,052 [main] INFO freon.BaseFreonGenerator: Executing test with prefix k4zimopbta
2020-06-03 22:59:32,095 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-03 22:59:33,109 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-03 22:59:33,796 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.560319, max=8.560319, mean=8.560319, stddev=0.0, median=8.560319, p75=8.560319, p95=8.560319, p98=8.560319, p99=8.560319, p999=8.560319, mean_rate=0.8973570366641035, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-03 22:59:33,797 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-03 22:59:33,797 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-03 22:59:33,797 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200603 22:59:33.807" endtime="20200603 22:59:33.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200603 22:59:33.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200603 22:59:33.808" endtime="20200603 22:59:33.808"></status>
</kw>
<msg timestamp="20200603 22:59:33.809" level="INFO">${result} = 2020-06-03 22:59:31,598 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-03 22:59:31,855 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200603 22:59:30.546" endtime="20200603 22:59:33.809"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200603 22:59:33.809" endtime="20200603 22:59:33.810"></status>
</kw>
<status status="PASS" starttime="20200603 22:59:33.809" endtime="20200603 22:59:33.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200603 22:59:30.545" endtime="20200603 22:59:33.810" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200603 22:59:15.653" endtime="20200603 22:59:33.811"></status>
</suite>
<status status="PASS" starttime="20200603 22:59:15.623" endtime="20200603 22:59:33.815"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
