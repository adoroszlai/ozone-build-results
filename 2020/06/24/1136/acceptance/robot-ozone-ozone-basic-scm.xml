<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200624 01:12:02.806" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200624 01:12:02.851" endtime="20200624 01:12:02.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:12:02.855" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:12:02.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:12:02.945" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 24 Jun 2020 01:12:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 24 Jun 2020 00:46:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200624 01:12:02.852" endtime="20200624 01:12:02.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:12:02.946" level="INFO">HTTP/1.1 200 OK
Date: Wed, 24 Jun 2020 01:12:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 24 Jun 2020 00:46:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200624 01:12:02.946" endtime="20200624 01:12:02.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:12:02.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:12:02.947" endtime="20200624 01:12:02.947"></status>
</kw>
<msg timestamp="20200624 01:12:02.947" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 24 Jun 2020 01:12:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 24 Jun 2020 00:46:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200624 01:12:02.852" endtime="20200624 01:12:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200624 01:12:02.947" endtime="20200624 01:12:02.948"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:12:02.851" endtime="20200624 01:12:02.948" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:12:02.950" endtime="20200624 01:12:02.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:12:02.953" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:06.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:06.150" level="INFO">${output} = 2020-06-24 01:12:03,828 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:12:04,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:12:02.951" endtime="20200624 01:13:06.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:06.151" level="INFO">2020-06-24 01:12:03,828 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:12:04,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-24 01:12:04,035 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-24 01:12:05,064 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-24 01:12:05,065 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-24 01:12:05,065 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-24 01:12:05,065 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-24 01:12:05,066 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-24 01:12:05,066 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-24 01:12:05,066 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-24 01:12:05,067 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-24 01:12:05,068 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-24 01:12:05,074 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-24 01:12:05,118 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79392, with hadoop as owner.
2020-06-24 01:12:05,213 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-36369, with hadoop as owner.
2020-06-24 01:12:05,219 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-00271, with hadoop as owner.
2020-06-24 01:12:05,224 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-58494, with hadoop as owner.
2020-06-24 01:12:05,232 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-54028, with hadoop as owner.
2020-06-24 01:12:05,241 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79392/bucket-0-43585, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,263 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-36369/bucket-0-92175, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00271/bucket-0-38097, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58494/bucket-0-30262, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,280 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-54028/bucket-0-11028, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,284 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79392/bucket-1-14136, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,288 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-36369/bucket-1-88983, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00271/bucket-1-17935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,295 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58494/bucket-1-50036, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,304 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-54028/bucket-1-92333, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,307 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79392/bucket-2-76190, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,311 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-36369/bucket-2-88763, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00271/bucket-2-59393, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,318 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58494/bucket-2-21323, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,324 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-54028/bucket-2-92230, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,332 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79392/bucket-3-70401, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-36369/bucket-3-53257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,339 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00271/bucket-3-16143, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,341 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58494/bucket-3-51201, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,345 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-54028/bucket-3-30789, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79392/bucket-4-57278, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,353 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-36369/bucket-4-46129, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,360 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-00271/bucket-4-11841, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,364 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58494/bucket-4-72291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,368 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-54028/bucket-4-43832, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:12:05,920 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-24 01:12:06,083 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-24 01:12:07,084 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-24 01:12:08,089 [Thread-5] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-06-24 01:12:09,090 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-24 01:12:10,092 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-24 01:12:11,092 [Thread-5] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-06-24 01:12:12,093 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-24 01:12:13,093 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-24 01:12:14,094 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-24 01:12:15,094 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-24 01:12:16,095 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-24 01:12:17,095 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-24 01:12:18,099 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-24 01:12:19,099 [Thread-5] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-24 01:12:20,100 [Thread-5] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-24 01:12:21,109 [Thread-5] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-06-24 01:12:22,110 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-24 01:12:23,110 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-24 01:12:24,113 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-24 01:12:25,113 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-24 01:12:26,114 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-24 01:12:27,116 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-24 01:12:28,116 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-24 01:12:29,117 [Thread-5] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-06-24 01:12:30,121 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-24 01:12:31,122 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-24 01:12:32,122 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-24 01:12:33,123 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-24 01:12:34,123 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-24 01:12:35,124 [Thread-5] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-06-24 01:12:36,127 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-24 01:12:37,127 [Thread-5] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-24 01:12:38,128 [Thread-5] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-24 01:12:39,128 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-24 01:12:40,129 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-24 01:12:41,130 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-24 01:12:42,130 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-24 01:12:43,131 [Thread-5] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-06-24 01:12:44,131 [Thread-5] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-06-24 01:12:45,131 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-24 01:12:46,132 [Thread-5] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-06-24 01:12:47,132 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-24 01:12:48,133 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-24 01:12:49,134 [Thread-5] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-06-24 01:12:50,134 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-24 01:12:51,135 [Thread-5] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-24 01:12:52,135 [Thread-5] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-06-24 01:12:53,135 [Thread-5] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-06-24 01:12:54,136 [Thread-5] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-06-24 01:12:55,136 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-24 01:12:56,137 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-24 01:12:57,137 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-24 01:12:58,138 [Thread-5] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-06-24 01:12:59,138 [Thread-5] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-06-24 01:13:00,139 [Thread-5] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-06-24 01:13:01,139 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,123
Average Time spent in bucket creation: 00:00:00,088
Average Time spent in key creation: 00:00:01,473
Average Time spent in key write: 00:00:00,659
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:01,637
***************************************************</msg>
<status status="PASS" starttime="20200624 01:13:06.150" endtime="20200624 01:13:06.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:06.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:06.151" endtime="20200624 01:13:06.152"></status>
</kw>
<msg timestamp="20200624 01:13:06.152" level="INFO">${result} = 2020-06-24 01:12:03,828 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:12:04,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:12:02.950" endtime="20200624 01:13:06.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:06.152" endtime="20200624 01:13:06.153"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:06.152" endtime="20200624 01:13:06.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:06.153" endtime="20200624 01:13:06.153"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:12:02.949" endtime="20200624 01:13:06.153" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200624 01:12:02.830" endtime="20200624 01:13:06.155"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200624 01:13:06.163" level="INFO">${random} = 18778</msg>
<status status="PASS" starttime="20200624 01:13:06.162" endtime="20200624 01:13:06.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200624 01:13:06.163" level="INFO">${prefix} = 18778</msg>
<status status="PASS" starttime="20200624 01:13:06.163" endtime="20200624 01:13:06.163"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:06.162" endtime="20200624 01:13:06.163"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:06.164" endtime="20200624 01:13:06.164"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:06.167" level="INFO">Running command 'ozone sh volume info o3://om:9862/18778-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:07.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:13:07.832" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18778-rpcwoport is not found</msg>
<status status="PASS" starttime="20200624 01:13:06.165" endtime="20200624 01:13:07.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:07.833" level="INFO">VOLUME_NOT_FOUND Volume 18778-rpcwoport is not found</msg>
<status status="PASS" starttime="20200624 01:13:07.832" endtime="20200624 01:13:07.833"></status>
</kw>
<msg timestamp="20200624 01:13:07.833" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18778-rpcwoport is not found</msg>
<status status="PASS" starttime="20200624 01:13:06.165" endtime="20200624 01:13:07.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:07.833" endtime="20200624 01:13:07.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:07.838" level="INFO">Running command 'ozone sh volume create o3://om:9862/18778-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:09.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:09.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:07.834" endtime="20200624 01:13:09.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:09.537" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:09.536" endtime="20200624 01:13:09.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:09.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:09.537" endtime="20200624 01:13:09.537"></status>
</kw>
<msg timestamp="20200624 01:13:09.537" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:13:07.834" endtime="20200624 01:13:09.537"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:09.538" endtime="20200624 01:13:09.538"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:09.542" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="18778-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:11.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:11.563" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200624 01:13:09.539" endtime="20200624 01:13:11.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:11.564" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:13:11.563" endtime="20200624 01:13:11.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:11.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:11.564" endtime="20200624 01:13:11.565"></status>
</kw>
<msg timestamp="20200624 01:13:11.565" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200624 01:13:09.538" endtime="20200624 01:13:11.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:11.565" endtime="20200624 01:13:11.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:11.568" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18778-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:13.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:13.559" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200624 01:13:11.566" endtime="20200624 01:13:13.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:13.560" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:13:13.559" endtime="20200624 01:13:13.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:13.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:13.561" endtime="20200624 01:13:13.561"></status>
</kw>
<msg timestamp="20200624 01:13:13.561" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:13:09.422Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200624 01:13:11.566" endtime="20200624 01:13:13.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:13.562" endtime="20200624 01:13:13.562"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:13.566" level="INFO">Running command 'ozone sh volume update o3://om:9862/18778-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:15.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:15.324" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18778-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:13:09.422Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200624 01:13:13.562" endtime="20200624 01:13:15.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:15.325" level="INFO">{
  "metadata" : { },
  "name" : "18778-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:13:09.422Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200624 01:13:15.324" endtime="20200624 01:13:15.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:15.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:15.325" endtime="20200624 01:13:15.326"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:13.562" endtime="20200624 01:13:15.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:15.329" level="INFO">Running command 'ozone sh volume info o3://om:9862/18778-rpcwoport | jq -r '. | select(.name=="18778-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:17.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:17.123" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:13:15.327" endtime="20200624 01:13:17.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:17.125" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200624 01:13:17.124" endtime="20200624 01:13:17.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:17.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:17.125" endtime="20200624 01:13:17.125"></status>
</kw>
<msg timestamp="20200624 01:13:17.126" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:13:15.326" endtime="20200624 01:13:17.126"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:17.126" endtime="20200624 01:13:17.126"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:17.129" level="INFO">Running command 'ozone sh bucket create o3://om:9862/18778-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:18.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:17.127" endtime="20200624 01:13:18.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:18.931" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:18.930" endtime="20200624 01:13:18.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:18.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:18.931" endtime="20200624 01:13:18.932"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:17.126" endtime="20200624 01:13:18.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:18.935" level="INFO">Running command 'ozone sh bucket info o3://om:9862/18778-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:20.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:20.817" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200624 01:13:18.933" endtime="20200624 01:13:20.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:20.818" level="INFO">DISK</msg>
<status status="PASS" starttime="20200624 01:13:20.817" endtime="20200624 01:13:20.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:20.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:20.818" endtime="20200624 01:13:20.818"></status>
</kw>
<msg timestamp="20200624 01:13:20.819" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200624 01:13:18.932" endtime="20200624 01:13:20.819"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:20.819" endtime="20200624 01:13:20.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:20.823" level="INFO">Running command 'ozone sh bucket list o3://om:9862/18778-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:22.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:22.731" level="INFO">${output} = 18778-rpcwoport</msg>
<status status="PASS" starttime="20200624 01:13:20.820" endtime="20200624 01:13:22.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:22.732" level="INFO">18778-rpcwoport</msg>
<status status="PASS" starttime="20200624 01:13:22.732" endtime="20200624 01:13:22.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:22.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:22.732" endtime="20200624 01:13:22.733"></status>
</kw>
<msg timestamp="20200624 01:13:22.733" level="INFO">${result} = 18778-rpcwoport</msg>
<status status="PASS" starttime="20200624 01:13:20.819" endtime="20200624 01:13:22.733"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:22.733" endtime="20200624 01:13:22.734"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:22.738" level="INFO">Running command 'ozone sh key put o3://om:9862/18778-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:25.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:25.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:22.735" endtime="20200624 01:13:25.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:25.993" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:25.992" endtime="20200624 01:13:25.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:25.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:25.993" endtime="20200624 01:13:25.994"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:22.735" endtime="20200624 01:13:25.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:25.997" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:25.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:25.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:25.995" endtime="20200624 01:13:25.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:26.000" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:25.999" endtime="20200624 01:13:26.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:26.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:26.000" endtime="20200624 01:13:26.001"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:25.994" endtime="20200624 01:13:26.001"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:26.003" level="INFO">Running command 'ozone sh key get o3://om:9862/18778-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:29.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:29.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:26.002" endtime="20200624 01:13:29.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:29.090" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:29.089" endtime="20200624 01:13:29.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:29.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:29.090" endtime="20200624 01:13:29.091"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:26.001" endtime="20200624 01:13:29.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:29.093" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:29.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:29.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:29.091" endtime="20200624 01:13:29.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:29.098" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:29.097" endtime="20200624 01:13:29.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:29.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:29.098" endtime="20200624 01:13:29.098"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:29.091" endtime="20200624 01:13:29.099"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:29.101" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/18778-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:32.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:32.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:29.099" endtime="20200624 01:13:32.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:32.368" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:32.367" endtime="20200624 01:13:32.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:32.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:32.368" endtime="20200624 01:13:32.368"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:29.099" endtime="20200624 01:13:32.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:32.371" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:32.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:32.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:32.369" endtime="20200624 01:13:32.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:32.374" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:32.373" endtime="20200624 01:13:32.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:32.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:32.374" endtime="20200624 01:13:32.375"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:32.368" endtime="20200624 01:13:32.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:32.378" level="INFO">Running command 'ozone sh key get o3://om:9862/18778-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:35.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:35.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:32.376" endtime="20200624 01:13:35.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:35.466" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:35.465" endtime="20200624 01:13:35.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:35.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:35.466" endtime="20200624 01:13:35.467"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:32.375" endtime="20200624 01:13:35.467"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:35.470" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:35.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:35.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:35.467" endtime="20200624 01:13:35.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:35.473" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:35.472" endtime="20200624 01:13:35.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:35.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:35.473" endtime="20200624 01:13:35.473"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:35.467" endtime="20200624 01:13:35.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:35.476" level="INFO">Running command 'ozone sh key info o3://om:9862/18778-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:37.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:37.533" level="INFO">${output} = {
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:30.645Z",
  "modificationTime": "2020-06-24T01:13:31.918Z",...</msg>
<status status="PASS" starttime="20200624 01:13:35.474" endtime="20200624 01:13:37.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:37.534" level="INFO">{
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:30.645Z",
  "modificationTime": "2020-06-24T01:13:31.918Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396305900175490,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:13:37.533" endtime="20200624 01:13:37.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:37.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:37.534" endtime="20200624 01:13:37.535"></status>
</kw>
<msg timestamp="20200624 01:13:37.535" level="INFO">${result} = {
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:30.645Z",
  "modificationTime": "2020-06-24T01:13:31.918Z",...</msg>
<status status="PASS" starttime="20200624 01:13:35.474" endtime="20200624 01:13:37.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:37.535" endtime="20200624 01:13:37.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:37.539" level="INFO">Running command 'ozone sh key delete o3://om:9862/18778-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:39.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:39.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:37.536" endtime="20200624 01:13:39.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:39.259" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:39.258" endtime="20200624 01:13:39.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:39.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:39.259" endtime="20200624 01:13:39.260"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:37.536" endtime="20200624 01:13:39.260"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:39.264" level="INFO">Running command 'ozone sh key cp o3://om:9862/18778-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:42.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:42.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:39.260" endtime="20200624 01:13:42.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:42.859" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:42.859" endtime="20200624 01:13:42.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:42.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:42.860" endtime="20200624 01:13:42.860"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:39.260" endtime="20200624 01:13:42.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:42.863" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:42.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:42.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:42.861" endtime="20200624 01:13:42.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:42.867" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:42.866" endtime="20200624 01:13:42.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:42.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:42.867" endtime="20200624 01:13:42.867"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:42.860" endtime="20200624 01:13:42.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:42.870" level="INFO">Running command 'ozone sh key get o3://om:9862/18778-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:46.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:46.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:42.868" endtime="20200624 01:13:46.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:46.529" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:46.528" endtime="20200624 01:13:46.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:46.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:46.529" endtime="20200624 01:13:46.529"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:42.867" endtime="20200624 01:13:46.530"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:46.533" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:46.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:46.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:46.530" endtime="20200624 01:13:46.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:46.535" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:46.535" endtime="20200624 01:13:46.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:46.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:46.536" endtime="20200624 01:13:46.536"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:46.530" endtime="20200624 01:13:46.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:46.540" level="INFO">Running command 'ozone sh key delete o3://om:9862/18778-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:48.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:48.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:46.537" endtime="20200624 01:13:48.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:48.291" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:48.291" endtime="20200624 01:13:48.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:48.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:48.291" endtime="20200624 01:13:48.292"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:46.536" endtime="20200624 01:13:48.292"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:48.296" level="INFO">Running command 'ozone sh key get o3://om:9862/18778-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:49.851" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:13:49.851" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:13:48.293" endtime="20200624 01:13:49.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:49.852" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:13:49.851" endtime="20200624 01:13:49.852"></status>
</kw>
<msg timestamp="20200624 01:13:49.852" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:13:48.292" endtime="20200624 01:13:49.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:49.852" endtime="20200624 01:13:49.853"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:49.855" level="INFO">Running command 'ozone sh key get --force o3://om:9862/18778-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:53.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:53.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:49.853" endtime="20200624 01:13:53.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:53.312" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:53.311" endtime="20200624 01:13:53.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:53.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:53.312" endtime="20200624 01:13:53.312"></status>
</kw>
<msg timestamp="20200624 01:13:53.313" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:13:49.853" endtime="20200624 01:13:53.313"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:53.313" endtime="20200624 01:13:53.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:53.317" level="INFO">Running command 'ozone sh key info o3://om:9862/18778-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:55.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:55.288" level="INFO">${output} = {
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:24.347Z",
  "modificationTime": "2020-06-24T01:13:25.642Z",
  "re...</msg>
<status status="PASS" starttime="20200624 01:13:53.314" endtime="20200624 01:13:55.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:55.289" level="INFO">{
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:24.347Z",
  "modificationTime": "2020-06-24T01:13:25.642Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396305488019580,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:13:55.288" endtime="20200624 01:13:55.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:55.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:55.289" endtime="20200624 01:13:55.290"></status>
</kw>
<msg timestamp="20200624 01:13:55.290" level="INFO">${result} = {
  "volumeName": "18778-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:13:24.347Z",
  "modificationTime": "2020-06-24T01:13:25.642Z",
  "re...</msg>
<status status="PASS" starttime="20200624 01:13:53.313" endtime="20200624 01:13:55.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:55.290" endtime="20200624 01:13:55.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:55.293" level="INFO">Running command 'ozone sh key list o3://om:9862/18778-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:57.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:57.198" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200624 01:13:55.291" endtime="20200624 01:13:57.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:57.199" level="INFO">key1</msg>
<status status="PASS" starttime="20200624 01:13:57.199" endtime="20200624 01:13:57.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:57.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:57.200" endtime="20200624 01:13:57.200"></status>
</kw>
<msg timestamp="20200624 01:13:57.200" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200624 01:13:55.291" endtime="20200624 01:13:57.200"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:13:57.201" endtime="20200624 01:13:57.201"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:57.204" level="INFO">Running command 'ozone sh key rename o3://om:9862/18778-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:13:59.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:13:59.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:13:57.202" endtime="20200624 01:13:59.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:13:59.028" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:13:59.027" endtime="20200624 01:13:59.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:13:59.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:13:59.028" endtime="20200624 01:13:59.029"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:57.201" endtime="20200624 01:13:59.030"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:13:59.034" level="INFO">Running command 'ozone sh key list o3://om:9862/18778-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:00.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:00.973" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200624 01:13:59.030" endtime="20200624 01:14:00.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:00.974" level="INFO">key2</msg>
<status status="PASS" starttime="20200624 01:14:00.974" endtime="20200624 01:14:00.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:00.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:00.975" endtime="20200624 01:14:00.975"></status>
</kw>
<msg timestamp="20200624 01:14:00.976" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200624 01:13:59.030" endtime="20200624 01:14:00.976"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:00.976" endtime="20200624 01:14:00.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:00.980" level="INFO">Running command 'ozone sh key delete o3://om:9862/18778-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:02.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:02.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:00.977" endtime="20200624 01:14:02.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:02.726" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:02.725" endtime="20200624 01:14:02.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:02.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:02.726" endtime="20200624 01:14:02.727"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:00.976" endtime="20200624 01:14:02.727"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:22.734" endtime="20200624 01:14:02.727"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:22.734" endtime="20200624 01:14:02.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:02.730" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/18778-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:04.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:04.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:02.728" endtime="20200624 01:14:04.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:04.379" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:04.378" endtime="20200624 01:14:04.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:04.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:04.379" endtime="20200624 01:14:04.379"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:02.727" endtime="20200624 01:14:04.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:04.383" level="INFO">Running command 'ozone sh volume delete o3://om:9862/18778-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:06.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:06.061" level="INFO">${output} = Volume 18778-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200624 01:14:04.380" endtime="20200624 01:14:06.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:06.062" level="INFO">Volume 18778-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200624 01:14:06.061" endtime="20200624 01:14:06.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:06.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:06.062" endtime="20200624 01:14:06.063"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:04.380" endtime="20200624 01:14:06.063"></status>
</kw>
<status status="PASS" starttime="20200624 01:13:06.164" endtime="20200624 01:14:06.063"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:13:06.163" endtime="20200624 01:14:06.064" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:06.067" endtime="20200624 01:14:06.067"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:06.075" level="INFO">Running command 'ozone sh volume create o3://om:9862/18778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:07.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:07.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:06.068" endtime="20200624 01:14:07.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:07.710" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:07.709" endtime="20200624 01:14:07.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:07.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:07.710" endtime="20200624 01:14:07.710"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:06.068" endtime="20200624 01:14:07.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:07.714" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:09.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:09.721" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:07.711" endtime="20200624 01:14:09.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:09.722" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:09.721" endtime="20200624 01:14:09.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:09.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:09.722" endtime="20200624 01:14:09.722"></status>
</kw>
<msg timestamp="20200624 01:14:09.723" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:07.711" endtime="20200624 01:14:09.723"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:09.723" endtime="20200624 01:14:09.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:09.726" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/18778-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:11.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:11.352" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:09.724" endtime="20200624 01:14:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:11.353" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:11.353" endtime="20200624 01:14:11.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:11.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:11.354" endtime="20200624 01:14:11.354"></status>
</kw>
<msg timestamp="20200624 01:14:11.355" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:09.724" endtime="20200624 01:14:11.355"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:11.358" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:13.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:13.168" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:11.355" endtime="20200624 01:14:13.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:13.169" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:13.168" endtime="20200624 01:14:13.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:13.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:13.169" endtime="20200624 01:14:13.170"></status>
</kw>
<msg timestamp="20200624 01:14:13.170" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:11.355" endtime="20200624 01:14:13.170"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:13.170" endtime="20200624 01:14:13.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:13.175" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/18778-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:14.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:14.747" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200624 01:14:13.172" endtime="20200624 01:14:14.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:14.748" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200624 01:14:14.747" endtime="20200624 01:14:14.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:14.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:14.748" endtime="20200624 01:14:14.749"></status>
</kw>
<msg timestamp="20200624 01:14:14.749" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200624 01:14:13.171" endtime="20200624 01:14:14.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:14.754" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:16.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:16.633" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:14.750" endtime="20200624 01:14:16.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:16.634" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:16.633" endtime="20200624 01:14:16.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:16.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:16.634" endtime="20200624 01:14:16.635"></status>
</kw>
<msg timestamp="20200624 01:14:16.635" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:14.749" endtime="20200624 01:14:16.635"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:16.635" endtime="20200624 01:14:16.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:16.640" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/18778-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:18.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:18.261" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:16.637" endtime="20200624 01:14:18.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:18.262" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:18.261" endtime="20200624 01:14:18.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:18.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:18.262" endtime="20200624 01:14:18.263"></status>
</kw>
<msg timestamp="20200624 01:14:18.263" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:16.636" endtime="20200624 01:14:18.263"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:18.267" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18778-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:20.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:20.151" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200624 01:14:18.264" endtime="20200624 01:14:20.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:20.153" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:20.152" endtime="20200624 01:14:20.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:20.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:20.154" endtime="20200624 01:14:20.154"></status>
</kw>
<msg timestamp="20200624 01:14:20.155" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200624 01:14:18.263" endtime="20200624 01:14:20.155"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:20.155" endtime="20200624 01:14:20.155"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:20.155" endtime="20200624 01:14:20.156"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:06.067" endtime="20200624 01:14:20.156"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:14:06.066" endtime="20200624 01:14:20.157" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:20.158" endtime="20200624 01:14:20.158"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:20.162" level="INFO">Running command 'ozone sh bucket create o3://om:9862/18778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:21.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:21.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:20.160" endtime="20200624 01:14:21.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:21.780" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:21.779" endtime="20200624 01:14:21.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:21.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:21.780" endtime="20200624 01:14:21.781"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:20.160" endtime="20200624 01:14:21.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:21.785" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:23.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:23.572" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:21.782" endtime="20200624 01:14:23.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:23.573" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:23.573" endtime="20200624 01:14:23.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:23.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:23.574" endtime="20200624 01:14:23.574"></status>
</kw>
<msg timestamp="20200624 01:14:23.574" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:21.781" endtime="20200624 01:14:23.574"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:23.574" endtime="20200624 01:14:23.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:23.578" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/18778-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:25.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:25.304" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200624 01:14:23.576" endtime="20200624 01:14:25.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:25.305" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200624 01:14:25.304" endtime="20200624 01:14:25.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:25.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:25.305" endtime="20200624 01:14:25.305"></status>
</kw>
<msg timestamp="20200624 01:14:25.305" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200624 01:14:23.575" endtime="20200624 01:14:25.305"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:25.308" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:27.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:27.025" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:25.306" endtime="20200624 01:14:27.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:27.026" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:27.025" endtime="20200624 01:14:27.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:27.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:27.026" endtime="20200624 01:14:27.026"></status>
</kw>
<msg timestamp="20200624 01:14:27.027" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:25.305" endtime="20200624 01:14:27.027"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:27.027" endtime="20200624 01:14:27.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:27.031" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/18778-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:28.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:28.636" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:27.028" endtime="20200624 01:14:28.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:28.637" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:28.637" endtime="20200624 01:14:28.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:28.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:28.638" endtime="20200624 01:14:28.638"></status>
</kw>
<msg timestamp="20200624 01:14:28.638" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:27.028" endtime="20200624 01:14:28.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:28.643" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:30.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:30.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:28.639" endtime="20200624 01:14:30.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:30.477" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:30.477" endtime="20200624 01:14:30.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:30.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:30.478" endtime="20200624 01:14:30.478"></status>
</kw>
<msg timestamp="20200624 01:14:30.478" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:28.639" endtime="20200624 01:14:30.478"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:30.478" endtime="20200624 01:14:30.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:30.482" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/18778-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:32.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:32.097" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:30.480" endtime="20200624 01:14:32.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:32.098" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:32.098" endtime="20200624 01:14:32.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:32.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:32.099" endtime="20200624 01:14:32.099"></status>
</kw>
<msg timestamp="20200624 01:14:32.099" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:30.479" endtime="20200624 01:14:32.099"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:32.103" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18778-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:33.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:33.890" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200624 01:14:32.100" endtime="20200624 01:14:33.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:33.891" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:33.891" endtime="20200624 01:14:33.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:33.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:33.892" endtime="20200624 01:14:33.892"></status>
</kw>
<msg timestamp="20200624 01:14:33.892" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200624 01:14:32.099" endtime="20200624 01:14:33.892"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:33.892" endtime="20200624 01:14:33.893"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:33.893" endtime="20200624 01:14:33.893"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:20.159" endtime="20200624 01:14:33.894"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:14:20.157" endtime="20200624 01:14:33.894" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:33.895" endtime="20200624 01:14:33.895"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:33.898" level="INFO">Running command 'ozone sh key put o3://om:9862/18778-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:37.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:37.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:33.896" endtime="20200624 01:14:37.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:37.242" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:37.241" endtime="20200624 01:14:37.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:37.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:37.242" endtime="20200624 01:14:37.243"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:33.896" endtime="20200624 01:14:37.243"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:37.246" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:39.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:39.140" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:37.244" endtime="20200624 01:14:39.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:39.141" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:39.140" endtime="20200624 01:14:39.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:39.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:39.141" endtime="20200624 01:14:39.142"></status>
</kw>
<msg timestamp="20200624 01:14:39.142" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:37.243" endtime="20200624 01:14:39.142"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:39.142" endtime="20200624 01:14:39.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:39.145" level="INFO">Running command 'ozone sh key addacl o3://om:9862/18778-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:40.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:40.871" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:39.143" endtime="20200624 01:14:40.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:40.872" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:40.871" endtime="20200624 01:14:40.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:40.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:40.872" endtime="20200624 01:14:40.873"></status>
</kw>
<msg timestamp="20200624 01:14:40.873" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200624 01:14:39.143" endtime="20200624 01:14:40.873"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:40.877" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:42.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:42.740" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:40.874" endtime="20200624 01:14:42.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:42.741" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:42.740" endtime="20200624 01:14:42.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:42.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:42.741" endtime="20200624 01:14:42.741"></status>
</kw>
<msg timestamp="20200624 01:14:42.742" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:40.873" endtime="20200624 01:14:42.742"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:42.742" endtime="20200624 01:14:42.743"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:42.746" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/18778-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:44.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:44.545" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:42.743" endtime="20200624 01:14:44.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:44.546" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:44.545" endtime="20200624 01:14:44.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:44.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:44.546" endtime="20200624 01:14:44.546"></status>
</kw>
<msg timestamp="20200624 01:14:44.547" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200624 01:14:42.743" endtime="20200624 01:14:44.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:44.550" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:46.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:46.311" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:44.547" endtime="20200624 01:14:46.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:46.312" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:46.311" endtime="20200624 01:14:46.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:46.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:46.312" endtime="20200624 01:14:46.312"></status>
</kw>
<msg timestamp="20200624 01:14:46.313" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200624 01:14:44.547" endtime="20200624 01:14:46.313"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:46.313" endtime="20200624 01:14:46.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:46.316" level="INFO">Running command 'ozone sh key setacl o3://om:9862/18778-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:47.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:47.978" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:46.314" endtime="20200624 01:14:47.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:47.979" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:47.978" endtime="20200624 01:14:47.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:47.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:47.979" endtime="20200624 01:14:47.980"></status>
</kw>
<msg timestamp="20200624 01:14:47.980" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200624 01:14:46.313" endtime="20200624 01:14:47.980"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:47.983" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18778-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:49.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:49.719" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200624 01:14:47.981" endtime="20200624 01:14:49.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:49.721" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200624 01:14:49.720" endtime="20200624 01:14:49.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:49.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:49.721" endtime="20200624 01:14:49.721"></status>
</kw>
<msg timestamp="20200624 01:14:49.722" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200624 01:14:47.980" endtime="20200624 01:14:49.722"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:49.722" endtime="20200624 01:14:49.722"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:49.722" endtime="20200624 01:14:49.723"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:33.895" endtime="20200624 01:14:49.723"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:14:33.894" endtime="20200624 01:14:49.723" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:49.724" endtime="20200624 01:14:49.724"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:49.728" level="INFO">Running command 'ozone sh volume info o3:///18778-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:51.232" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:14:51.232" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18778-rpcwport is not found</msg>
<status status="PASS" starttime="20200624 01:14:49.726" endtime="20200624 01:14:51.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:51.233" level="INFO">VOLUME_NOT_FOUND Volume 18778-rpcwport is not found</msg>
<status status="PASS" starttime="20200624 01:14:51.232" endtime="20200624 01:14:51.233"></status>
</kw>
<msg timestamp="20200624 01:14:51.233" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18778-rpcwport is not found</msg>
<status status="PASS" starttime="20200624 01:14:49.725" endtime="20200624 01:14:51.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:51.234" endtime="20200624 01:14:51.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:51.237" level="INFO">Running command 'ozone sh volume create o3:///18778-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:52.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:52.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:51.235" endtime="20200624 01:14:52.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:52.897" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:14:52.896" endtime="20200624 01:14:52.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:52.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:52.897" endtime="20200624 01:14:52.897"></status>
</kw>
<msg timestamp="20200624 01:14:52.898" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:14:51.234" endtime="20200624 01:14:52.898"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:52.898" endtime="20200624 01:14:52.898"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:52.902" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="18778-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:54.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:54.698" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200624 01:14:52.899" endtime="20200624 01:14:54.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:54.699" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:14:54.698" endtime="20200624 01:14:54.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:54.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:54.699" endtime="20200624 01:14:54.700"></status>
</kw>
<msg timestamp="20200624 01:14:54.700" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200624 01:14:52.898" endtime="20200624 01:14:54.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:54.700" endtime="20200624 01:14:54.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:54.704" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18778-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:56.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:56.355" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200624 01:14:54.701" endtime="20200624 01:14:56.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:56.356" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:14:56.355" endtime="20200624 01:14:56.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:56.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:56.356" endtime="20200624 01:14:56.357"></status>
</kw>
<msg timestamp="20200624 01:14:56.357" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:14:52.782Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200624 01:14:54.701" endtime="20200624 01:14:56.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:56.357" endtime="20200624 01:14:56.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:56.363" level="INFO">Running command 'ozone sh volume update o3:///18778-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:58.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:58.096" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18778-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:14:52.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200624 01:14:56.360" endtime="20200624 01:14:58.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:58.097" level="INFO">{
  "metadata" : { },
  "name" : "18778-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:14:52.782Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200624 01:14:58.097" endtime="20200624 01:14:58.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:58.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:58.098" endtime="20200624 01:14:58.098"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:56.359" endtime="20200624 01:14:58.098"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:58.102" level="INFO">Running command 'ozone sh volume info o3:///18778-rpcwport | jq -r '. | select(.name=="18778-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:14:59.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:14:59.812" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:14:58.099" endtime="20200624 01:14:59.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:14:59.813" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200624 01:14:59.813" endtime="20200624 01:14:59.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:14:59.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:14:59.814" endtime="20200624 01:14:59.814"></status>
</kw>
<msg timestamp="20200624 01:14:59.814" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:14:58.098" endtime="20200624 01:14:59.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200624 01:14:59.814" endtime="20200624 01:14:59.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:14:59.818" level="INFO">Running command 'ozone sh bucket create o3:///18778-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:01.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:01.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:14:59.815" endtime="20200624 01:15:01.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:01.489" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:01.488" endtime="20200624 01:15:01.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:01.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:01.489" endtime="20200624 01:15:01.489"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:59.815" endtime="20200624 01:15:01.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:01.492" level="INFO">Running command 'ozone sh bucket info o3:///18778-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:03.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:03.385" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200624 01:15:01.490" endtime="20200624 01:15:03.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:03.386" level="INFO">DISK</msg>
<status status="PASS" starttime="20200624 01:15:03.386" endtime="20200624 01:15:03.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:03.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:03.386" endtime="20200624 01:15:03.387"></status>
</kw>
<msg timestamp="20200624 01:15:03.387" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200624 01:15:01.489" endtime="20200624 01:15:03.387"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:03.387" endtime="20200624 01:15:03.388"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:03.391" level="INFO">Running command 'ozone sh bucket list o3:///18778-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:05.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:05.187" level="INFO">${output} = 18778-rpcwport</msg>
<status status="PASS" starttime="20200624 01:15:03.388" endtime="20200624 01:15:05.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:05.188" level="INFO">18778-rpcwport</msg>
<status status="PASS" starttime="20200624 01:15:05.188" endtime="20200624 01:15:05.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:05.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:05.188" endtime="20200624 01:15:05.189"></status>
</kw>
<msg timestamp="20200624 01:15:05.189" level="INFO">${result} = 18778-rpcwport</msg>
<status status="PASS" starttime="20200624 01:15:03.388" endtime="20200624 01:15:05.189"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:05.189" endtime="20200624 01:15:05.189"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:05.194" level="INFO">Running command 'ozone sh key put o3:///18778-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:08.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:08.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:05.191" endtime="20200624 01:15:08.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:08.635" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:08.634" endtime="20200624 01:15:08.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:08.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:08.636" endtime="20200624 01:15:08.636"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:05.190" endtime="20200624 01:15:08.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:08.640" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:08.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:08.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:08.637" endtime="20200624 01:15:08.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:08.642" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:08.642" endtime="20200624 01:15:08.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:08.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:08.643" endtime="20200624 01:15:08.643"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:08.636" endtime="20200624 01:15:08.643"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:08.647" level="INFO">Running command 'ozone sh key get o3:///18778-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:11.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:11.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:08.644" endtime="20200624 01:15:11.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:11.682" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:11.681" endtime="20200624 01:15:11.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:11.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:11.682" endtime="20200624 01:15:11.682"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:08.643" endtime="20200624 01:15:11.682"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:11.685" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:11.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:11.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:11.683" endtime="20200624 01:15:11.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:11.688" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:11.688" endtime="20200624 01:15:11.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:11.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:11.689" endtime="20200624 01:15:11.689"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:11.683" endtime="20200624 01:15:11.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:11.692" level="INFO">Running command 'ozone sh key put -t RATIS o3:///18778-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:15.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:15.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:11.690" endtime="20200624 01:15:15.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:15.052" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:15.051" endtime="20200624 01:15:15.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:15.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:15.052" endtime="20200624 01:15:15.052"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:11.689" endtime="20200624 01:15:15.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:15.055" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:15.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:15.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:15.053" endtime="20200624 01:15:15.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:15.059" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:15.059" endtime="20200624 01:15:15.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:15.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:15.060" endtime="20200624 01:15:15.060"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:15.053" endtime="20200624 01:15:15.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:15.063" level="INFO">Running command 'ozone sh key get o3:///18778-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:18.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:18.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:15.061" endtime="20200624 01:15:18.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:18.188" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:18.187" endtime="20200624 01:15:18.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:18.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:18.188" endtime="20200624 01:15:18.188"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:15.061" endtime="20200624 01:15:18.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:18.191" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:18.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:18.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:18.189" endtime="20200624 01:15:18.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:18.194" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:18.194" endtime="20200624 01:15:18.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:18.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:18.195" endtime="20200624 01:15:18.195"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:18.189" endtime="20200624 01:15:18.195"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:18.199" level="INFO">Running command 'ozone sh key info o3:///18778-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:20.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:20.038" level="INFO">${output} = {
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:13.197Z",
  "modificationTime": "2020-06-24T01:15:14.592Z",
...</msg>
<status status="PASS" starttime="20200624 01:15:18.196" endtime="20200624 01:15:20.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:20.039" level="INFO">{
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:13.197Z",
  "modificationTime": "2020-06-24T01:15:14.592Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396312621613180,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:15:20.038" endtime="20200624 01:15:20.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:20.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:20.039" endtime="20200624 01:15:20.039"></status>
</kw>
<msg timestamp="20200624 01:15:20.040" level="INFO">${result} = {
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:13.197Z",
  "modificationTime": "2020-06-24T01:15:14.592Z",
...</msg>
<status status="PASS" starttime="20200624 01:15:18.195" endtime="20200624 01:15:20.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:20.040" endtime="20200624 01:15:20.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:20.043" level="INFO">Running command 'ozone sh key delete o3:///18778-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:21.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:21.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:20.041" endtime="20200624 01:15:21.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:21.692" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:21.691" endtime="20200624 01:15:21.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:21.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:21.692" endtime="20200624 01:15:21.693"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:20.040" endtime="20200624 01:15:21.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:21.696" level="INFO">Running command 'ozone sh key cp o3:///18778-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:25.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:25.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:21.694" endtime="20200624 01:15:25.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:25.156" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:25.155" endtime="20200624 01:15:25.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:25.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:25.156" endtime="20200624 01:15:25.156"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:21.693" endtime="20200624 01:15:25.157"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:25.159" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:25.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:25.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:25.157" endtime="20200624 01:15:25.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:25.163" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:25.162" endtime="20200624 01:15:25.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:25.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:25.163" endtime="20200624 01:15:25.163"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:25.157" endtime="20200624 01:15:25.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:25.167" level="INFO">Running command 'ozone sh key get o3:///18778-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:28.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:28.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:25.164" endtime="20200624 01:15:28.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:28.279" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:28.278" endtime="20200624 01:15:28.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:28.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:28.279" endtime="20200624 01:15:28.280"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:25.164" endtime="20200624 01:15:28.280"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:28.284" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:28.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:28.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:28.281" endtime="20200624 01:15:28.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:28.285" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:28.285" endtime="20200624 01:15:28.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:28.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:28.286" endtime="20200624 01:15:28.286"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:28.280" endtime="20200624 01:15:28.286"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:28.289" level="INFO">Running command 'ozone sh key delete o3:///18778-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:29.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:29.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:28.287" endtime="20200624 01:15:29.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:29.868" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:29.867" endtime="20200624 01:15:29.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:29.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:29.868" endtime="20200624 01:15:29.868"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:28.286" endtime="20200624 01:15:29.869"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:29.871" level="INFO">Running command 'ozone sh key get o3:///18778-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:31.574" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:15:31.574" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:15:29.870" endtime="20200624 01:15:31.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:31.575" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:15:31.575" endtime="20200624 01:15:31.576"></status>
</kw>
<msg timestamp="20200624 01:15:31.576" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:15:29.869" endtime="20200624 01:15:31.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:31.576" endtime="20200624 01:15:31.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:31.579" level="INFO">Running command 'ozone sh key get --force o3:///18778-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:34.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:34.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:31.577" endtime="20200624 01:15:34.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:34.566" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:34.565" endtime="20200624 01:15:34.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:34.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:34.566" endtime="20200624 01:15:34.567"></status>
</kw>
<msg timestamp="20200624 01:15:34.567" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:15:31.577" endtime="20200624 01:15:34.567"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:34.567" endtime="20200624 01:15:34.567"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:34.570" level="INFO">Running command 'ozone sh key info o3:///18778-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:36.397" level="INFO">${output} = {
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:06.773Z",
  "modificationTime": "2020-06-24T01:15:08.175Z",
  "rep...</msg>
<status status="PASS" starttime="20200624 01:15:34.568" endtime="20200624 01:15:36.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:36.399" level="INFO">{
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:06.773Z",
  "modificationTime": "2020-06-24T01:15:08.175Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396312200609920,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:15:36.398" endtime="20200624 01:15:36.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:36.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:36.399" endtime="20200624 01:15:36.399"></status>
</kw>
<msg timestamp="20200624 01:15:36.399" level="INFO">${result} = {
  "volumeName": "18778-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:15:06.773Z",
  "modificationTime": "2020-06-24T01:15:08.175Z",
  "rep...</msg>
<status status="PASS" starttime="20200624 01:15:34.568" endtime="20200624 01:15:36.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:36.400" endtime="20200624 01:15:36.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:36.404" level="INFO">Running command 'ozone sh key list o3:///18778-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:38.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:38.191" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200624 01:15:36.401" endtime="20200624 01:15:38.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:38.192" level="INFO">key1</msg>
<status status="PASS" starttime="20200624 01:15:38.192" endtime="20200624 01:15:38.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:38.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:38.193" endtime="20200624 01:15:38.193"></status>
</kw>
<msg timestamp="20200624 01:15:38.193" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200624 01:15:36.400" endtime="20200624 01:15:38.193"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:38.193" endtime="20200624 01:15:38.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:38.197" level="INFO">Running command 'ozone sh key rename o3:///18778-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:39.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:39.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:38.194" endtime="20200624 01:15:39.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:39.769" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:39.769" endtime="20200624 01:15:39.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:39.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:39.770" endtime="20200624 01:15:39.770"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:38.194" endtime="20200624 01:15:39.770"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:39.774" level="INFO">Running command 'ozone sh key list o3:///18778-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:41.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:41.635" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200624 01:15:39.771" endtime="20200624 01:15:41.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:41.636" level="INFO">key2</msg>
<status status="PASS" starttime="20200624 01:15:41.635" endtime="20200624 01:15:41.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:41.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:41.636" endtime="20200624 01:15:41.636"></status>
</kw>
<msg timestamp="20200624 01:15:41.637" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200624 01:15:39.770" endtime="20200624 01:15:41.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:41.637" endtime="20200624 01:15:41.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:41.641" level="INFO">Running command 'ozone sh key delete o3:///18778-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:43.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:43.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:41.638" endtime="20200624 01:15:43.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:43.352" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:43.351" endtime="20200624 01:15:43.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:43.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:43.352" endtime="20200624 01:15:43.353"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:41.638" endtime="20200624 01:15:43.353"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:05.190" endtime="20200624 01:15:43.353"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:05.190" endtime="20200624 01:15:43.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:43.356" level="INFO">Running command 'ozone sh bucket delete o3:///18778-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:44.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:44.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:43.354" endtime="20200624 01:15:44.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:44.935" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:44.934" endtime="20200624 01:15:44.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:44.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:44.935" endtime="20200624 01:15:44.936"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:43.353" endtime="20200624 01:15:44.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:44.940" level="INFO">Running command 'ozone sh volume delete o3:///18778-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:46.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:46.564" level="INFO">${output} = Volume 18778-rpcwport is deleted</msg>
<status status="PASS" starttime="20200624 01:15:44.937" endtime="20200624 01:15:46.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:46.564" level="INFO">Volume 18778-rpcwport is deleted</msg>
<status status="PASS" starttime="20200624 01:15:46.564" endtime="20200624 01:15:46.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:46.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:46.565" endtime="20200624 01:15:46.565"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:44.936" endtime="20200624 01:15:46.565"></status>
</kw>
<status status="PASS" starttime="20200624 01:14:49.725" endtime="20200624 01:15:46.565"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:14:49.724" endtime="20200624 01:15:46.566" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:46.567" endtime="20200624 01:15:46.567"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:46.570" level="INFO">Running command 'ozone sh volume info /18778-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:48.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:15:48.208" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18778-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200624 01:15:46.568" endtime="20200624 01:15:48.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:48.209" level="INFO">VOLUME_NOT_FOUND Volume 18778-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200624 01:15:48.208" endtime="20200624 01:15:48.209"></status>
</kw>
<msg timestamp="20200624 01:15:48.209" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18778-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200624 01:15:46.568" endtime="20200624 01:15:48.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:48.210" endtime="20200624 01:15:48.210"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:48.214" level="INFO">Running command 'ozone sh volume create /18778-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:49.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:49.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:48.211" endtime="20200624 01:15:49.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:49.815" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:49.815" endtime="20200624 01:15:49.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:49.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:49.816" endtime="20200624 01:15:49.816"></status>
</kw>
<msg timestamp="20200624 01:15:49.816" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:15:48.210" endtime="20200624 01:15:49.816"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:49.817" endtime="20200624 01:15:49.817"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:49.820" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="18778-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:51.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:51.563" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200624 01:15:49.817" endtime="20200624 01:15:51.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:51.564" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:15:51.563" endtime="20200624 01:15:51.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:51.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:51.564" endtime="20200624 01:15:51.565"></status>
</kw>
<msg timestamp="20200624 01:15:51.565" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200624 01:15:49.817" endtime="20200624 01:15:51.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:51.565" endtime="20200624 01:15:51.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:51.569" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18778-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:53.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:53.328" level="INFO">${output} = {
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200624 01:15:51.566" endtime="20200624 01:15:53.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:53.329" level="INFO">{
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200624 01:15:53.329" endtime="20200624 01:15:53.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:53.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:53.329" endtime="20200624 01:15:53.330"></status>
</kw>
<msg timestamp="20200624 01:15:53.330" level="INFO">${result} = {
  "metadata": {},
  "name": "18778-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-24T01:15:49.701Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200624 01:15:51.566" endtime="20200624 01:15:53.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:53.330" endtime="20200624 01:15:53.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:53.335" level="INFO">Running command 'ozone sh volume update /18778-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:55.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:55.199" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18778-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:15:49.701Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200624 01:15:53.331" endtime="20200624 01:15:55.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:55.200" level="INFO">{
  "metadata" : { },
  "name" : "18778-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-24T01:15:49.701Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200624 01:15:55.199" endtime="20200624 01:15:55.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:55.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:55.200" endtime="20200624 01:15:55.200"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:53.331" endtime="20200624 01:15:55.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:55.205" level="INFO">Running command 'ozone sh volume info /18778-rpcwoscheme | jq -r '. | select(.name=="18778-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:57.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:57.104" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:15:55.201" endtime="20200624 01:15:57.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:57.105" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200624 01:15:57.105" endtime="20200624 01:15:57.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:57.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:57.106" endtime="20200624 01:15:57.106"></status>
</kw>
<msg timestamp="20200624 01:15:57.106" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200624 01:15:55.201" endtime="20200624 01:15:57.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200624 01:15:57.106" endtime="20200624 01:15:57.107"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:57.110" level="INFO">Running command 'ozone sh bucket create /18778-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:15:58.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:15:58.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:15:57.108" endtime="20200624 01:15:58.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:15:58.741" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:15:58.740" endtime="20200624 01:15:58.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:15:58.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:15:58.741" endtime="20200624 01:15:58.741"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:57.107" endtime="20200624 01:15:58.741"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:15:58.744" level="INFO">Running command 'ozone sh bucket info /18778-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:00.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:00.766" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200624 01:15:58.742" endtime="20200624 01:16:00.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:00.767" level="INFO">DISK</msg>
<status status="PASS" starttime="20200624 01:16:00.766" endtime="20200624 01:16:00.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:00.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:00.767" endtime="20200624 01:16:00.767"></status>
</kw>
<msg timestamp="20200624 01:16:00.768" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200624 01:15:58.742" endtime="20200624 01:16:00.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:00.768" endtime="20200624 01:16:00.768"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:00.772" level="INFO">Running command 'ozone sh bucket list /18778-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:02.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:02.483" level="INFO">${output} = 18778-rpcwoscheme</msg>
<status status="PASS" starttime="20200624 01:16:00.769" endtime="20200624 01:16:02.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:02.484" level="INFO">18778-rpcwoscheme</msg>
<status status="PASS" starttime="20200624 01:16:02.484" endtime="20200624 01:16:02.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:02.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:02.485" endtime="20200624 01:16:02.485"></status>
</kw>
<msg timestamp="20200624 01:16:02.485" level="INFO">${result} = 18778-rpcwoscheme</msg>
<status status="PASS" starttime="20200624 01:16:00.768" endtime="20200624 01:16:02.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:02.485" endtime="20200624 01:16:02.486"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:02.489" level="INFO">Running command 'ozone sh key put /18778-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:05.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:05.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:02.487" endtime="20200624 01:16:05.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:05.649" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:05.648" endtime="20200624 01:16:05.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:05.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:05.649" endtime="20200624 01:16:05.650"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:02.487" endtime="20200624 01:16:05.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:05.652" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:05.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:05.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:05.650" endtime="20200624 01:16:05.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:05.655" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:05.655" endtime="20200624 01:16:05.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:05.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:05.656" endtime="20200624 01:16:05.656"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:05.650" endtime="20200624 01:16:05.656"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:05.659" level="INFO">Running command 'ozone sh key get /18778-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:08.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:08.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:05.657" endtime="20200624 01:16:08.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:08.793" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:08.792" endtime="20200624 01:16:08.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:08.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:08.793" endtime="20200624 01:16:08.794"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:05.656" endtime="20200624 01:16:08.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:08.797" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:08.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:08.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:08.795" endtime="20200624 01:16:08.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:08.800" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:08.799" endtime="20200624 01:16:08.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:08.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:08.800" endtime="20200624 01:16:08.800"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:08.794" endtime="20200624 01:16:08.800"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:08.802" level="INFO">Running command 'ozone sh key put -t RATIS /18778-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:12.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:12.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:08.801" endtime="20200624 01:16:12.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:12.064" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:12.064" endtime="20200624 01:16:12.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:12.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:12.065" endtime="20200624 01:16:12.065"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:08.800" endtime="20200624 01:16:12.065"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:12.068" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:12.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:12.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:12.066" endtime="20200624 01:16:12.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:12.071" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:12.070" endtime="20200624 01:16:12.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:12.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:12.071" endtime="20200624 01:16:12.071"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:12.065" endtime="20200624 01:16:12.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:12.074" level="INFO">Running command 'ozone sh key get /18778-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:15.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:15.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:12.072" endtime="20200624 01:16:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:15.166" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:15.166" endtime="20200624 01:16:15.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:15.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:15.167" endtime="20200624 01:16:15.167"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:12.072" endtime="20200624 01:16:15.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:15.170" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:15.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:15.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:15.168" endtime="20200624 01:16:15.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:15.173" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:15.173" endtime="20200624 01:16:15.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:15.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:15.173" endtime="20200624 01:16:15.174"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:15.167" endtime="20200624 01:16:15.174"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:15.176" level="INFO">Running command 'ozone sh key info /18778-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:16.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:16.861" level="INFO">${output} = {
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:10.421Z",
  "modificationTime": "2020-06-24T01:16:11.714Z...</msg>
<status status="PASS" starttime="20200624 01:16:15.174" endtime="20200624 01:16:16.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:16.862" level="INFO">{
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:10.421Z",
  "modificationTime": "2020-06-24T01:16:11.714Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396316371845250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:16:16.861" endtime="20200624 01:16:16.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:16.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:16.862" endtime="20200624 01:16:16.863"></status>
</kw>
<msg timestamp="20200624 01:16:16.863" level="INFO">${result} = {
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:10.421Z",
  "modificationTime": "2020-06-24T01:16:11.714Z...</msg>
<status status="PASS" starttime="20200624 01:16:15.174" endtime="20200624 01:16:16.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:16.863" endtime="20200624 01:16:16.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:16.867" level="INFO">Running command 'ozone sh key delete /18778-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:18.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:18.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:16.864" endtime="20200624 01:16:18.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:18.300" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:18.299" endtime="20200624 01:16:18.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:18.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:18.300" endtime="20200624 01:16:18.301"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:16.864" endtime="20200624 01:16:18.301"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:18.304" level="INFO">Running command 'ozone sh key cp /18778-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:21.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:21.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:18.301" endtime="20200624 01:16:21.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:21.612" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:21.612" endtime="20200624 01:16:21.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:21.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:21.613" endtime="20200624 01:16:21.613"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:18.301" endtime="20200624 01:16:21.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:21.618" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:21.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:21.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:21.614" endtime="20200624 01:16:21.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:21.620" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:21.619" endtime="20200624 01:16:21.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:21.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:21.620" endtime="20200624 01:16:21.621"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:21.614" endtime="20200624 01:16:21.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:21.626" level="INFO">Running command 'ozone sh key get /18778-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:24.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:24.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:21.622" endtime="20200624 01:16:24.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:24.739" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:24.738" endtime="20200624 01:16:24.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:24.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:24.739" endtime="20200624 01:16:24.739"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:21.622" endtime="20200624 01:16:24.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:24.742" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:24.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:24.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:24.740" endtime="20200624 01:16:24.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:24.745" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:24.745" endtime="20200624 01:16:24.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:24.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:24.746" endtime="20200624 01:16:24.746"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:24.740" endtime="20200624 01:16:24.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:24.749" level="INFO">Running command 'ozone sh key delete /18778-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:26.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:26.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:24.747" endtime="20200624 01:16:26.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:26.343" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:26.342" endtime="20200624 01:16:26.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:26.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:26.343" endtime="20200624 01:16:26.344"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:24.746" endtime="20200624 01:16:26.344"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:26.348" level="INFO">Running command 'ozone sh key get /18778-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:27.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20200624 01:16:27.955" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:16:26.345" endtime="20200624 01:16:27.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:27.956" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:16:27.955" endtime="20200624 01:16:27.956"></status>
</kw>
<msg timestamp="20200624 01:16:27.956" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200624 01:16:26.344" endtime="20200624 01:16:27.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:27.956" endtime="20200624 01:16:27.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:27.959" level="INFO">Running command 'ozone sh key get --force /18778-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:30.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:30.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:27.957" endtime="20200624 01:16:30.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:30.817" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:30.817" endtime="20200624 01:16:30.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:30.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:30.817" endtime="20200624 01:16:30.818"></status>
</kw>
<msg timestamp="20200624 01:16:30.818" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200624 01:16:27.956" endtime="20200624 01:16:30.818"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:30.818" endtime="20200624 01:16:30.818"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:30.821" level="INFO">Running command 'ozone sh key info /18778-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:32.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:32.600" level="INFO">${output} = {
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:04.084Z",
  "modificationTime": "2020-06-24T01:16:05.302Z",
  "...</msg>
<status status="PASS" starttime="20200624 01:16:30.819" endtime="20200624 01:16:32.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:32.601" level="INFO">{
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:04.084Z",
  "modificationTime": "2020-06-24T01:16:05.302Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104396315956543620,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200624 01:16:32.601" endtime="20200624 01:16:32.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:32.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:32.601" endtime="20200624 01:16:32.602"></status>
</kw>
<msg timestamp="20200624 01:16:32.602" level="INFO">${result} = {
  "volumeName": "18778-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-24T01:16:04.084Z",
  "modificationTime": "2020-06-24T01:16:05.302Z",
  "...</msg>
<status status="PASS" starttime="20200624 01:16:30.818" endtime="20200624 01:16:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:32.602" endtime="20200624 01:16:32.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:32.606" level="INFO">Running command 'ozone sh key list /18778-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:34.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:34.300" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200624 01:16:32.603" endtime="20200624 01:16:34.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:34.301" level="INFO">key1</msg>
<status status="PASS" starttime="20200624 01:16:34.301" endtime="20200624 01:16:34.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:34.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:34.302" endtime="20200624 01:16:34.302"></status>
</kw>
<msg timestamp="20200624 01:16:34.302" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200624 01:16:32.602" endtime="20200624 01:16:34.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:34.303" endtime="20200624 01:16:34.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:34.305" level="INFO">Running command 'ozone sh key rename /18778-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:35.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:35.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:34.303" endtime="20200624 01:16:35.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:35.916" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:35.916" endtime="20200624 01:16:35.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:35.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:35.917" endtime="20200624 01:16:35.917"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:34.303" endtime="20200624 01:16:35.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:35.921" level="INFO">Running command 'ozone sh key list /18778-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:37.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:37.707" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200624 01:16:35.918" endtime="20200624 01:16:37.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:37.708" level="INFO">key2</msg>
<status status="PASS" starttime="20200624 01:16:37.707" endtime="20200624 01:16:37.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:37.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:37.708" endtime="20200624 01:16:37.709"></status>
</kw>
<msg timestamp="20200624 01:16:37.709" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200624 01:16:35.917" endtime="20200624 01:16:37.709"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200624 01:16:37.709" endtime="20200624 01:16:37.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:37.713" level="INFO">Running command 'ozone sh key delete /18778-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:39.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:39.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:37.710" endtime="20200624 01:16:39.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:39.220" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:39.220" endtime="20200624 01:16:39.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:39.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:39.221" endtime="20200624 01:16:39.221"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:37.709" endtime="20200624 01:16:39.221"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:02.486" endtime="20200624 01:16:39.221"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:02.486" endtime="20200624 01:16:39.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:39.224" level="INFO">Running command 'ozone sh bucket delete /18778-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:40.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:40.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200624 01:16:39.222" endtime="20200624 01:16:40.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:40.909" level="INFO"></msg>
<status status="PASS" starttime="20200624 01:16:40.908" endtime="20200624 01:16:40.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:40.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:40.909" endtime="20200624 01:16:40.910"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:39.222" endtime="20200624 01:16:40.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:16:40.914" level="INFO">Running command 'ozone sh volume delete /18778-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:16:42.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:16:42.419" level="INFO">${output} = Volume 18778-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200624 01:16:40.911" endtime="20200624 01:16:42.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:16:42.420" level="INFO">Volume 18778-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200624 01:16:42.419" endtime="20200624 01:16:42.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:16:42.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:16:42.420" endtime="20200624 01:16:42.421"></status>
</kw>
<status status="PASS" starttime="20200624 01:16:40.910" endtime="20200624 01:16:42.421"></status>
</kw>
<status status="PASS" starttime="20200624 01:15:46.567" endtime="20200624 01:16:42.421"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200624 01:15:46.566" endtime="20200624 01:16:42.421" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200624 01:13:06.157" endtime="20200624 01:16:42.423"></status>
</suite>
<status status="PASS" starttime="20200624 01:12:02.807" endtime="20200624 01:16:42.427"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
