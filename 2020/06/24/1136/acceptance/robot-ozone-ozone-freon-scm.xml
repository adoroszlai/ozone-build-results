<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200624 01:25:03.458" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:25:03.514" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:25:10.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:25:10.617" level="INFO">${output} = 2020-06-24 01:25:04,313 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:04,465 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:03.509" endtime="20200624 01:25:10.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:25:10.618" level="INFO">2020-06-24 01:25:04,313 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:04,465 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-24 01:25:04,466 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-24 01:25:05,143 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-24 01:25:05,144 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-24 01:25:05,145 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-24 01:25:05,152 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-24 01:25:05,186 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-16468, with hadoop as owner.
2020-06-24 01:25:05,199 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-16468/bucket-0-68831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:25:05,588 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-24 01:25:06,155 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,038
Average Time spent in bucket creation: 00:00:00,006
Average Time spent in key creation: 00:00:00,030
Average Time spent in key write: 00:00:00,490
Total bytes written: 10240
Total Execution time: 00:00:05,637
***************************************************</msg>
<status status="PASS" starttime="20200624 01:25:10.618" endtime="20200624 01:25:10.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:25:10.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:25:10.619" endtime="20200624 01:25:10.619"></status>
</kw>
<msg timestamp="20200624 01:25:10.620" level="INFO">${result} = 2020-06-24 01:25:04,313 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:04,465 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:03.509" endtime="20200624 01:25:10.620"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:25:10.620" endtime="20200624 01:25:10.620"></status>
</kw>
<status status="PASS" starttime="20200624 01:25:10.620" endtime="20200624 01:25:10.620"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:25:03.508" endtime="20200624 01:25:10.621" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:25:10.624" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:25:14.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:25:14.737" level="INFO">${output} = 2020-06-24 01:25:11,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:11,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:10.622" endtime="20200624 01:25:14.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:25:14.738" level="INFO">2020-06-24 01:25:11,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:11,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-24 01:25:11,541 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-24 01:25:11,683 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nszhrtu5n3
2020-06-24 01:25:11,695 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-24 01:25:12,252 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-24 01:25:12,270 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-24 01:25:12,698 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-24 01:25:12,784 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-24 01:25:13,699 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-24 01:25:14,411 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1254.108524, max=1254.108524, mean=1254.108524, stddev=0.0, median=1254.108524, p75=1254.108524, p95=1254.108524, p98=1254.108524, p99=1254.108524, p999=1254.108524, mean_rate=0.4696290384258087, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-24 01:25:14,411 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-24 01:25:14,412 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-24 01:25:14,412 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200624 01:25:14.737" endtime="20200624 01:25:14.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:25:14.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:25:14.738" endtime="20200624 01:25:14.739"></status>
</kw>
<msg timestamp="20200624 01:25:14.739" level="INFO">${result} = 2020-06-24 01:25:11,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:11,540 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:10.622" endtime="20200624 01:25:14.739"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:25:14.740" endtime="20200624 01:25:14.740"></status>
</kw>
<status status="PASS" starttime="20200624 01:25:14.739" endtime="20200624 01:25:14.740"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:25:10.621" endtime="20200624 01:25:14.740" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:25:14.745" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:25:17.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:25:17.561" level="INFO">${output} = 2020-06-24 01:25:15,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:15,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:14.742" endtime="20200624 01:25:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:25:17.562" level="INFO">2020-06-24 01:25:15,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:15,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-24 01:25:15,689 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-24 01:25:15,848 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ipdfkakcxn
2020-06-24 01:25:15,881 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-24 01:25:16,883 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-24 01:25:17,551 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=24.695313, max=24.695313, mean=24.695313, stddev=0.0, median=24.695313, p75=24.695313, p95=24.695313, p98=24.695313, p99=24.695313, p999=24.695313, mean_rate=0.9003320127353404, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-24 01:25:17,552 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-24 01:25:17,552 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-24 01:25:17,552 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200624 01:25:17.561" endtime="20200624 01:25:17.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:25:17.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:25:17.562" endtime="20200624 01:25:17.563"></status>
</kw>
<msg timestamp="20200624 01:25:17.563" level="INFO">${result} = 2020-06-24 01:25:15,556 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:15,689 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:14.741" endtime="20200624 01:25:17.563"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:25:17.563" endtime="20200624 01:25:17.564"></status>
</kw>
<status status="PASS" starttime="20200624 01:25:17.563" endtime="20200624 01:25:17.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:25:14.741" endtime="20200624 01:25:17.564" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200624 01:25:17.569" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200624 01:25:20.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200624 01:25:20.411" level="INFO">${output} = 2020-06-24 01:25:18,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:18,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:17.566" endtime="20200624 01:25:20.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200624 01:25:20.412" level="INFO">2020-06-24 01:25:18,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:18,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-24 01:25:18,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-24 01:25:18,696 [main] INFO freon.BaseFreonGenerator: Executing test with prefix w7uif8fpc1
2020-06-24 01:25:18,712 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-24 01:25:19,719 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-24 01:25:20,399 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=6.39753, max=6.39753, mean=6.39753, stddev=0.0, median=6.39753, p75=6.39753, p95=6.39753, p98=6.39753, p99=6.39753, p999=6.39753, mean_rate=0.8983731701643299, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-24 01:25:20,401 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-24 01:25:20,401 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-24 01:25:20,401 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200624 01:25:20.411" endtime="20200624 01:25:20.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200624 01:25:20.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200624 01:25:20.412" endtime="20200624 01:25:20.413"></status>
</kw>
<msg timestamp="20200624 01:25:20.413" level="INFO">${result} = 2020-06-24 01:25:18,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-24 01:25:18,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200624 01:25:17.565" endtime="20200624 01:25:20.413"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200624 01:25:20.413" endtime="20200624 01:25:20.414"></status>
</kw>
<status status="PASS" starttime="20200624 01:25:20.413" endtime="20200624 01:25:20.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200624 01:25:17.565" endtime="20200624 01:25:20.414" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200624 01:25:03.490" endtime="20200624 01:25:20.415"></status>
</suite>
<status status="PASS" starttime="20200624 01:25:03.459" endtime="20200624 01:25:20.418"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
