<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 17:59:51.331" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:51.376" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:51.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:51.377" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 17:59:51.373" endtime="20200613 17:59:51.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:51.378" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 17:59:51.378" endtime="20200613 17:59:51.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:51.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:51.378" endtime="20200613 17:59:51.379"></status>
</kw>
<msg timestamp="20200613 17:59:51.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 17:59:51.373" endtime="20200613 17:59:51.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 17:59:51.379" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 17:59:51.379" endtime="20200613 17:59:51.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:51.382" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:51.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:51.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:59:51.380" endtime="20200613 17:59:51.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:51.426" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:59:51.425" endtime="20200613 17:59:51.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:51.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:51.426" endtime="20200613 17:59:51.427"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:51.380" endtime="20200613 17:59:51.427"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:51.380" endtime="20200613 17:59:51.427"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:51.372" endtime="20200613 17:59:51.427"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:51.372" endtime="20200613 17:59:51.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:51.430" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:58.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:58.573" level="INFO">${output} = 2020-06-13 17:59:52,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:59:52,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:59:51.428" endtime="20200613 17:59:58.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:58.574" level="INFO">2020-06-13 17:59:52,070 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:59:52,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:59:52,172 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-13 17:59:53,063 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-13 17:59:53,064 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-13 17:59:53,064 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-13 17:59:53,064 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-13 17:59:53,065 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-13 17:59:53,065 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 17:59:53,065 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-13 17:59:53,077 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 17:59:53,091 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-13 17:59:53,113 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28867, with testuser/scm@EXAMPLE.COM as owner.
2020-06-13 17:59:53,132 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-28867/bucket-0-49802, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:59:53,439 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:59:54,094 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,072
Average Time spent in key write: 00:00:00,304
Total bytes written: 10250
Total Execution time: 00:00:05,921
***************************************************</msg>
<status status="PASS" starttime="20200613 17:59:58.573" endtime="20200613 17:59:58.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:58.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:58.575" endtime="20200613 17:59:58.575"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:51.427" endtime="20200613 17:59:58.575"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:59:51.372" endtime="20200613 17:59:58.575" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:58.581" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:58.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:58.582" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 17:59:58.578" endtime="20200613 17:59:58.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:58.582" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 17:59:58.582" endtime="20200613 17:59:58.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:58.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:58.582" endtime="20200613 17:59:58.583"></status>
</kw>
<msg timestamp="20200613 17:59:58.583" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 17:59:58.578" endtime="20200613 17:59:58.583"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:58.589" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:58.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:58.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:59:58.584" endtime="20200613 17:59:58.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:58.632" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:59:58.632" endtime="20200613 17:59:58.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:58.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:58.633" endtime="20200613 17:59:58.633"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:58.583" endtime="20200613 17:59:58.633"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:58.583" endtime="20200613 17:59:58.633"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:58.577" endtime="20200613 17:59:58.634"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:58.577" endtime="20200613 17:59:58.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:58.636" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:58.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:58.753" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:59:58.634" endtime="20200613 17:59:58.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:58.754" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    686      0 --:--:-- --:--:-- --:--:--   687
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200613 17:59:58.754" endtime="20200613 17:59:58.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:58.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:58.754" endtime="20200613 17:59:58.755"></status>
</kw>
<msg timestamp="20200613 17:59:58.755" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:59:58.634" endtime="20200613 17:59:58.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:59:58.755" endtime="20200613 17:59:58.755"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:59:58.758" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:59:58.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:59:58.791" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:59:58.756" endtime="20200613 17:59:58.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:59:58.791" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2972
&lt; 
{ [data not shown]

100  2972  100  2972    0     0   100k      0 --:--:-- --:--:-- --:--:--  103k
* Connection #0 to host recon left intact
[{"volume":"vol-0-46894","bucket":"bucket-0-49639","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-1-19466","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-3-16351","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-3-35047","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-3-77614","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-1-17981","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-3-46293","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-0-34338","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-4-27471","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-2-84119","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-4-26582","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-2-72174","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-0-43413","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-2-03367","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-4-65006","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-1-24244","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-0-20624","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-4-67228","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-1-13974","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-2-45228","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-0-34536","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-2-74116","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-4-02133","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-3-91088","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-1-33336","fileSize":16384,"count":5},{"volume":"76284-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"76284-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"76284-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest329","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-37916","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-13202","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-54510","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-13202","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-37118","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200613 17:59:58.791" endtime="20200613 17:59:58.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:59:58.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:59:58.792" endtime="20200613 17:59:58.792"></status>
</kw>
<msg timestamp="20200613 17:59:58.792" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:59:58.756" endtime="20200613 17:59:58.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200613 17:59:58.793" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Date: Sat, 13 Jun 2020 17:59:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2972
&lt; 
{ [data not shown]

100  2972  100  2972    0     0   100k      0 --:--:-- --:--:-- --:--:--  103k
* Connection #0 to host recon left intact
[{"volume":"vol-0-46894","bucket":"bucket-0-49639","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-1-19466","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-3-16351","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-3-35047","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-3-77614","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-1-17981","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-3-46293","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-0-34338","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-4-27471","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-2-84119","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-4-26582","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-2-72174","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-0-43413","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-2-03367","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-4-65006","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-1-24244","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-0-20624","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-4-67228","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-1-13974","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-2-45228","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-0-34536","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-2-74116","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-4-02133","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-3-91088","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-1-33336","fileSize":16384,"count":5},{"volume":"76284-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"76284-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"76284-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest329","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-37916","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-13202","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-54510","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-13202","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-37118","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200613 17:59:58.792" endtime="20200613 17:59:58.793"></status>
</kw>
<status status="FAIL" starttime="20200613 17:59:58.577" endtime="20200613 17:59:58.793"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.800" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.802" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:08.797" endtime="20200613 18:00:08.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.803" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:08.802" endtime="20200613 18:00:08.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.803" endtime="20200613 18:00:08.803"></status>
</kw>
<msg timestamp="20200613 18:00:08.803" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:08.796" endtime="20200613 18:00:08.803"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.806" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:08.804" endtime="20200613 18:00:08.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.849" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:08.848" endtime="20200613 18:00:08.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.849" endtime="20200613 18:00:08.849"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.804" endtime="20200613 18:00:08.849"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.804" endtime="20200613 18:00:08.850"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.796" endtime="20200613 18:00:08.850"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.795" endtime="20200613 18:00:08.850"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.851" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.864" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.850" endtime="20200613 18:00:08.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.865" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  28620      0 --:--:-- --:--:-- --:--:-- 30333
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200613 18:00:08.865" endtime="20200613 18:00:08.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.865" endtime="20200613 18:00:08.865"></status>
</kw>
<msg timestamp="20200613 18:00:08.866" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.850" endtime="20200613 18:00:08.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.866" endtime="20200613 18:00:08.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.868" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.879" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.866" endtime="20200613 18:00:08.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.879" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3184
&lt; 
{ [data not shown]

100  3184  100  3184    0     0   508k      0 --:--:-- --:--:-- --:--:--  518k
* Connection #0 to host recon left intact
[{"volume":"vol-0-46894","bucket":"bucket-0-49639","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-1-19466","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-3-16351","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-3-35047","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-3-77614","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-1-17981","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-3-46293","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-0-34338","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-4-27471","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-2-84119","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-4-26582","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-2-72174","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-0-43413","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-2-03367","fileSize":16384,"count":5},{"volume":"vol-1-39462","bucket":"bucket-4-65006","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-1-24244","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-0-20624","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-4-67228","fileSize":16384,"count":5},{"volume":"vol-4-94778","bucket":"bucket-1-13974","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-2-45228","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-0-34536","fileSize":16384,"count":5},{"volume":"vol-2-39994","bucket":"bucket-2-74116","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-4-02133","fileSize":16384,"count":5},{"volume":"vol-3-62553","bucket":"bucket-3-91088","fileSize":16384,"count":5},{"volume":"vol-0-46894","bucket":"bucket-1-33336","fileSize":16384,"count":5},{"volume":"76284-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"76284-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"76284-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest329","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-37916","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-13202","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-54510","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-13202","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-37118","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-47967","fileSize":1024,"count":2},{"volume":"vol-0-28867","bucket":"bucket-0-49802","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-60500","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200613 18:00:08.879" endtime="20200613 18:00:08.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.879" endtime="20200613 18:00:08.880"></status>
</kw>
<msg timestamp="20200613 18:00:08.880" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.866" endtime="20200613 18:00:08.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.880" endtime="20200613 18:00:08.880"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.794" endtime="20200613 18:00:08.880"></status>
</kw>
<status status="PASS" starttime="20200613 17:59:58.577" endtime="20200613 18:00:08.880"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:59:58.576" endtime="20200613 18:00:08.881" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.884" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.906" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.882" endtime="20200613 18:00:08.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.907" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0    98k      0 --:--:-- --:--:-- --:--:--  104k
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"488222cc-82ef-4f2c-8c69-681cc6c21b5a","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592071194223,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17014865920},"pipelines":[{"pipelineID":"13dce978-2b03-429f-9937-b8ab9ae2e381","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"10c8e5c1-bbeb-4e48-8176-7e313e0621f4","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"37d3385c-d285-42ee-8178-3c59345cec50","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592071194115,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17014865920},"pipelines":[{"pipelineID":"26e47cd1-b413-4ce2-b392-c04941f04c72","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"10c8e5c1-bbeb-4e48-8176-7e313e0621f4","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"d2e3acf6-e212-46e4-9244-1badf19dc2bd","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592071194094,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17014898688},"pipelines":[{"pipelineID":"b8980f6f-5f06-4017-b3c2-277c7fcc4eb3","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"10c8e5c1-bbeb-4e48-8176-7e313e0621f4","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200613 18:00:08.907" endtime="20200613 18:00:08.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.907" endtime="20200613 18:00:08.908"></status>
</kw>
<msg timestamp="20200613 18:00:08.908" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.882" endtime="20200613 18:00:08.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.908" endtime="20200613 18:00:08.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.908" endtime="20200613 18:00:08.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.908" endtime="20200613 18:00:08.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.909" endtime="20200613 18:00:08.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.912" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.926" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.909" endtime="20200613 18:00:08.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.927" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]

100  1364  100  1364    0     0   131k      0 --:--:-- --:--:-- --:--:--  133k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"b8980f6f-5f06-4017-b3c2-277c7fcc4eb3","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":681448,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"13dce978-2b03-429f-9937-b8ab9ae2e381","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":681393,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"26e47cd1-b413-4ce2-b392-c04941f04c72","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":681262,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"10c8e5c1-bbeb-4e48-8176-7e313e0621f4","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":681225,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200613 18:00:08.927" endtime="20200613 18:00:08.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.927" endtime="20200613 18:00:08.928"></status>
</kw>
<msg timestamp="20200613 18:00:08.928" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.909" endtime="20200613 18:00:08.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.928" endtime="20200613 18:00:08.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.928" endtime="20200613 18:00:08.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.929" endtime="20200613 18:00:08.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.929" endtime="20200613 18:00:08.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.929" endtime="20200613 18:00:08.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.929" endtime="20200613 18:00:08.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.932" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.941" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.930" endtime="20200613 18:00:08.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.942" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  37162      0 --:--:-- --:--:-- --:--:-- 46500
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":51044630528},"containers":4,"volumes":25,"buckets":52,"keys":168}</msg>
<status status="PASS" starttime="20200613 18:00:08.941" endtime="20200613 18:00:08.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.942" endtime="20200613 18:00:08.943"></status>
</kw>
<msg timestamp="20200613 18:00:08.943" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.930" endtime="20200613 18:00:08.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.943" endtime="20200613 18:00:08.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.943" endtime="20200613 18:00:08.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.944" endtime="20200613 18:00:08.944"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.946" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.961" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.944" endtime="20200613 18:00:08.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.962" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  42665      0 --:--:-- --:--:-- --:--:-- 45400
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1592070549959,"lastReportTimestamp":1592071149808},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1592070550038,"lastReportTimestamp":1592071119908},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1592070550027,"lastReportTimestamp":1592071149872}]</msg>
<status status="PASS" starttime="20200613 18:00:08.961" endtime="20200613 18:00:08.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.962" endtime="20200613 18:00:08.963"></status>
</kw>
<msg timestamp="20200613 18:00:08.963" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.944" endtime="20200613 18:00:08.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:08.963" endtime="20200613 18:00:08.963"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:08.881" endtime="20200613 18:00:08.963" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.969" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.970" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:08.966" endtime="20200613 18:00:08.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.971" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:08.970" endtime="20200613 18:00:08.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.971" endtime="20200613 18:00:08.971"></status>
</kw>
<msg timestamp="20200613 18:00:08.971" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:08.966" endtime="20200613 18:00:08.971"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.975" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:08.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:08.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:08.972" endtime="20200613 18:00:08.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:08.983" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:08.983" endtime="20200613 18:00:08.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:08.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:08.984" endtime="20200613 18:00:08.984"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.972" endtime="20200613 18:00:08.984"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.971" endtime="20200613 18:00:08.984"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.965" endtime="20200613 18:00:08.984"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:08.965" endtime="20200613 18:00:08.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:08.987" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:09.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:09.018" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.985" endtime="20200613 18:00:09.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:09.019" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  23319      0 --:--:-- --:--:-- --:--:-- 23263
100   442  100   442    0     0  23217      0 --:--:-- --:--:-- --:--:-- 23263
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x2429f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICZQYJKoZIhvcSAQICAQBuggJUMIICUKADAgEFoQMCAQ6iBwMFACAAAACjggFlYYIBYTCCAV2gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBKzCCASegAwIBEqEDAgECooIBGQSCARXN1fkswaQgxJWxZxy/hVmFtTrzRaFHju0MYo+wgAlx2IkTKKtsy5UXsbYjN5REFCQHx9rfzmJx9xAa0poy0H4aiLVSukF3XhJz2uTtuZJQVYH6y69Yir1clAp27tBTLs0nZbXMZlqWdgg1d0PBGxtM4i3P/2FpJ4pyXQd2MJgq9kIJqfqAqss9MLtP8dxJzux0FD4YHgEoNNWZkLQgFgWLZW4mRiO6UFvRjTlH/johOi5jG0lt8DdP5B5087+vn4Pi9QROHWehKQnc5TTw712KVE2wC3i7X5tOxnRikQR/95W6jXqYWnznV7B4OCW9AvtSt7A3aOW7AIivWJty4mWoeQAdRAzXVjPMAu43vkded1CA+E6JpIHRMIHOoAMCARKigcYEgcMOmt1zu1VqpYEgG0I9o1PbmfDrxpvZRT7dqNdPho6wud8YQPFGBOEZF9uxEOcCMydBNu/nTpxxFv/3QoPLnW/A6xvpnf3JZViFUXLDZw4KnPF/GPWBQKBWiQycvt2e1o+B0PsAyfUhddXwu5+O1vupFsg8Ln/lQB2DMpN4gIeAHESQFlkJ5efFZdXC7mlzMUD02qEkt8CwOxx2ToCHzsT0Db7+Bmc1iHkH3onQ4Q3rV6bsM76Wd1Uc1Uj7aYPq+AbJZxo=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:09 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 13 Jun 2020 18:00:09 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:09 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRB8SJ6WP37S6rhOofFP7qAeXslNG7JYRJ8mc/n8SQacutBtu2DWmvoCJ62//Uci3MDBFXEtvzNd6keuQILdWFy6YQ=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107209015&amp;s=jj0975X2nFpSh+M/VNryBQWvoBLpmCvK2f1Tp+TYcF8="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 13 Jun 2020 17:10:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  79863      0 --:--:-- --:--:-- --:--:-- 79863
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200613 18:00:09.018" endtime="20200613 18:00:09.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:09.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:09.019" endtime="20200613 18:00:09.020"></status>
</kw>
<msg timestamp="20200613 18:00:09.020" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 18:00:08.984" endtime="20200613 18:00:09.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:09.020" endtime="20200613 18:00:09.020"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:08.964" endtime="20200613 18:00:09.021" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200613 17:59:51.352" endtime="20200613 18:00:09.021"></status>
</suite>
<status status="PASS" starttime="20200613 17:59:51.332" endtime="20200613 18:00:09.023"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
