<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 18:00:13.531" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:13.571" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:13.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:13.573" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:13.568" endtime="20200613 18:00:13.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:13.574" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:13.573" endtime="20200613 18:00:13.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:13.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:13.574" endtime="20200613 18:00:13.574"></status>
</kw>
<msg timestamp="20200613 18:00:13.574" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:13.568" endtime="20200613 18:00:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:13.575" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:13.574" endtime="20200613 18:00:13.575"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:13.578" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:13.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:13.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:13.576" endtime="20200613 18:00:13.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:13.623" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:13.622" endtime="20200613 18:00:13.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:13.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:13.623" endtime="20200613 18:00:13.624"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:13.576" endtime="20200613 18:00:13.624"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:13.575" endtime="20200613 18:00:13.624"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:13.568" endtime="20200613 18:00:13.624"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:13.567" endtime="20200613 18:00:13.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:13.627" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.800" level="INFO">${output} = 2020-06-13 18:00:14,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 18:00:14,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 18:00:13.625" endtime="20200613 18:00:20.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.801" level="INFO">2020-06-13 18:00:14,336 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 18:00:14,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 18:00:14,442 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-13 18:00:15,274 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 18:00:15,275 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-13 18:00:15,282 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 18:00:15,287 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-13 18:00:15,315 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-68129, with testuser/scm@EXAMPLE.COM as owner.
2020-06-13 18:00:15,329 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-68129/bucket-0-60136, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 18:00:15,612 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 18:00:16,297 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,008
Average Time spent in key write: 00:00:00,061
Total bytes written: 2050
Total Execution time: 00:00:05,868
***************************************************</msg>
<status status="PASS" starttime="20200613 18:00:20.800" endtime="20200613 18:00:20.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.801" endtime="20200613 18:00:20.802"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:13.624" endtime="20200613 18:00:20.802"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:13.567" endtime="20200613 18:00:20.802" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.807" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:20.805" endtime="20200613 18:00:20.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.810" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:20.810" endtime="20200613 18:00:20.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.811" endtime="20200613 18:00:20.811"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.804" endtime="20200613 18:00:20.811"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.804" endtime="20200613 18:00:20.811"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.814" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.832" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200613 18:00:20.812" endtime="20200613 18:00:20.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.833" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200613 18:00:20.832" endtime="20200613 18:00:20.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.833" endtime="20200613 18:00:20.833"></status>
</kw>
<msg timestamp="20200613 18:00:20.833" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200613 18:00:20.811" endtime="20200613 18:00:20.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:20.834" endtime="20200613 18:00:20.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.838" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.840" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:20.835" endtime="20200613 18:00:20.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.841" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:20.840" endtime="20200613 18:00:20.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.841" endtime="20200613 18:00:20.841"></status>
</kw>
<msg timestamp="20200613 18:00:20.842" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:20.835" endtime="20200613 18:00:20.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:20.842" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:20.842" endtime="20200613 18:00:20.842"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.845" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:20.843" endtime="20200613 18:00:20.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.855" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:20.855" endtime="20200613 18:00:20.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.855" endtime="20200613 18:00:20.856"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.843" endtime="20200613 18:00:20.856"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.842" endtime="20200613 18:00:20.856"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.834" endtime="20200613 18:00:20.856"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.834" endtime="20200613 18:00:20.856"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.859" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.884" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200613 18:00:20.857" endtime="20200613 18:00:20.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.885" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x1158f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaKxhN3PkqpQqXeQ2IantSYZAAOOmSFGWJVQwNDMHywYr88MYiio2BgJCdWv/S/VSXK/oV8noThkGri9sbDMZ1SpdRjx8WfjjKmYgw4HKMURwmaQpPfbmmmFwUZuGYjycGsSEzT0f2i1tdffFzMIPvNfK1ZzAZMYxAeYJtydrcKobh1zt7n1DR1gjrXw9cnCvXxza2a4Jrx0RvbCFz9WRuphPPhmseJoCsApV8kzfMkE7+QtxG1Pfc2zLKq7yertmvpGZg4NILOT8P0FK0+z6AktCstT0JQxBBXr7qxF268NYZR7v4AfOSZVFNEDHjUU9VLoFmfdbgAYih8L/Uj/uG+yzt3Ar3ZpIHWMIHToAMCARKigcsEgcjv+fKfhByq7/tbCYqkn4esjE+h/+Rea44J17gWX0O4HR/yPzlkfAr1z9xOFC1RfIb899J6qZpK4GIr7jZzf2XMU0JUlbHDuOb2holDiklGF0MMPuF8CjT95I2dNJJbq9Z/YbZbjuTzQmyLDYKD9H0X2SPk2YWhxmB2HwqWenQ5AN+Q/rcme7Wti4/RAqVPGUc3aiUjxOBM8Cb43XqLUjoigJ5bL+bo+rJoPPzkQmmgmnHihegX969vG6/oZG2orMG8pSSF1/J+Ng==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCn6haUJCKZgj9+aIlkXLWiilADub8AUlyre2Wx4MNcLoXn/GdijB79HPwWEQqmk2ZOt+rjEG9PDHRb21bV9jXlPza
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107220878&amp;s=uxbRgtxL5CvjpsAckl9V/QJTBntRSLLZtyoxzyj73xQ="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 13 Jun 2020 17:08:46 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 18:00:20 GMT
Cache-Control: no-cache
Expires: Sat, 13 Jun 2020 18:00:20 GMT
Date: Sat, 13 Jun 2020 18:00:20 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 13 Jun 2020 18:00:20 GMT
Date: Sat, 13 Jun 2020 18:00:20 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCn6haUJCKZgj9+aIlkXLWiilADub8AUlyre2Wx4MNcLoXn/GdijB79HPwWEQqmk2ZOt+rjEG9PDHRb21bV9jXlPza
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107220878&amp;s=uxbRgtxL5CvjpsAckl9V/QJTBntRSLLZtyoxzyj73xQ="; Path=/; HttpOnly
Last-Modified: Sat, 13 Jun 2020 17:08:46 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200613 18:00:20.885" endtime="20200613 18:00:20.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.886" endtime="20200613 18:00:20.886"></status>
</kw>
<msg timestamp="20200613 18:00:20.886" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200613 18:00:20.856" endtime="20200613 18:00:20.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:20.886" endtime="20200613 18:00:20.887"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.804" endtime="20200613 18:00:20.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:20.803" endtime="20200613 18:00:20.887" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.891" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:20.889" endtime="20200613 18:00:20.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.895" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:20.894" endtime="20200613 18:00:20.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.895" endtime="20200613 18:00:20.896"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.889" endtime="20200613 18:00:20.896"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.889" endtime="20200613 18:00:20.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.898" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.911" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200613 18:00:20.896" endtime="20200613 18:00:20.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.912" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200613 18:00:20.911" endtime="20200613 18:00:20.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.912" endtime="20200613 18:00:20.912"></status>
</kw>
<msg timestamp="20200613 18:00:20.913" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200613 18:00:20.896" endtime="20200613 18:00:20.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:20.913" endtime="20200613 18:00:20.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.918" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.919" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:20.914" endtime="20200613 18:00:20.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.921" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:20.920" endtime="20200613 18:00:20.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.922" endtime="20200613 18:00:20.923"></status>
</kw>
<msg timestamp="20200613 18:00:20.923" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:20.914" endtime="20200613 18:00:20.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:20.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:20.923" endtime="20200613 18:00:20.924"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.930" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:20.926" endtime="20200613 18:00:20.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.938" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:20.938" endtime="20200613 18:00:20.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.938" endtime="20200613 18:00:20.939"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.925" endtime="20200613 18:00:20.939"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.925" endtime="20200613 18:00:20.939"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.914" endtime="20200613 18:00:20.939"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.913" endtime="20200613 18:00:20.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.942" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.988" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200613 18:00:20.940" endtime="20200613 18:00:20.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.989" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0xe14f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbKWQfwULqG3yvQ0CcSU+6lPbuJ+fbF3nlmEtdz/h+OWGLOWF7VDzesCsq4Fx1exkWPKzaBTjpbgis3eiiWkhqZlNK390rU3kV43Vn+1gEOtEP16UNJjFG7TQvPfSEt5YOINIvHoJzZ0iksE8f4c6/7NmLpmTvj5/koPyoRzoJ8dHcDhtS6TUi9AN9qnoZmYuz70K8clcCx+auGXnAEMw6T9CGmG0iyuVjrSZMWDjoIuAgNs1a0U3hzm9kpsuRMy5HIyyNGdndejKaBDDc+/QKIIUi9dicf9F/6EzWP17HJByce/BsXl31jagESkdDJNVg168a5Vo7bRWCQKsRJKqmVakub33ZipIHWMIHToAMCARKigcsEgcgiM9gdc2C64PzGgZtdJzPB+Hdebrua43fhpI2HkQrUcKeyBUH0xyDroW89C8hrFj2hcntyG7fbKlTYPQ4j8x1pegSjW6v1wH+I6td4O95/Hq4ByWhm5ih8BVT0rHlJWrDFihZOyWCyyfoYzMyiBeSFRLnU4RmCUTw/djiyJi9oK0E8QbbjUTupUShHVPDS88aJqKt8kF5BO8IetoGMyCBs5FZRGVPOqFcFxC/C5beWxvz5TUJwWAdTe49BbidSM+hKk8AacofTDQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:20 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK0qevKShS1v0n+FyP2VUNBmoSgkR8W70AFnrF59opGPSEowABKSw0NiujwIgEEd7Vezkp6BBoBWLtvnOGEc4qqXB
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107220958&amp;s=r4Hx+pGSjmcCmd1YansvKeAnX++43ooZVz4ZB0DGMpM="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592071220958.tgz"
&lt; Content-Length: 72787
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 18:00:20 GMT
Cache-Control: no-cache
Expires: Sat, 13 Jun 2020 18:00:20 GMT
Date: Sat, 13 Jun 2020 18:00:20 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCK0qevKShS1v0n+FyP2VUNBmoSgkR8W70AFnrF59opGPSEowABKSw0NiujwIgEEd7Vezkp6BBoBWLtvnOGEc4qqXB
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107220958&amp;s=r4Hx+pGSjmcCmd1YansvKeAnX++43ooZVz4ZB0DGMpM="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592071220958.tgz"
Content-Length: 72787
</msg>
<status status="PASS" starttime="20200613 18:00:20.988" endtime="20200613 18:00:20.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.989" endtime="20200613 18:00:20.989"></status>
</kw>
<msg timestamp="20200613 18:00:20.990" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200613 18:00:20.939" endtime="20200613 18:00:20.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:20.990" endtime="20200613 18:00:20.990"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.888" endtime="20200613 18:00:20.990"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:20.887" endtime="20200613 18:00:20.990" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:20.996" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:20.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:20.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:20.993" endtime="20200613 18:00:20.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:20.998" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:20.998" endtime="20200613 18:00:20.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:20.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:20.998" endtime="20200613 18:00:20.999"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.992" endtime="20200613 18:00:20.999"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.992" endtime="20200613 18:00:20.999"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.003" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.013" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200613 18:00:21.000" endtime="20200613 18:00:21.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.014" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200613 18:00:21.013" endtime="20200613 18:00:21.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.014" endtime="20200613 18:00:21.014"></status>
</kw>
<msg timestamp="20200613 18:00:21.014" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200613 18:00:20.999" endtime="20200613 18:00:21.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.015" endtime="20200613 18:00:21.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.019" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.020" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.016" endtime="20200613 18:00:21.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.021" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:21.020" endtime="20200613 18:00:21.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.021" endtime="20200613 18:00:21.022"></status>
</kw>
<msg timestamp="20200613 18:00:21.022" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.016" endtime="20200613 18:00:21.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:21.022" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:21.022" endtime="20200613 18:00:21.022"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.025" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:21.023" endtime="20200613 18:00:21.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.066" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:21.065" endtime="20200613 18:00:21.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.066" endtime="20200613 18:00:21.066"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.023" endtime="20200613 18:00:21.067"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.023" endtime="20200613 18:00:21.067"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.015" endtime="20200613 18:00:21.067"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.015" endtime="20200613 18:00:21.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.071" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.099" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200613 18:00:21.068" endtime="20200613 18:00:21.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.099" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1e60f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.8) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYgDz2lA0fIrpaXFISKjGjXrYaztNgyPRvtr4/xOvPKE5AtP6RQaysDyx0cGQMM4bvpRPmyrMY9NPD6YAkkR+bVggE9M05hWTmphPueS+U3zy2ZpeaPxs9qHlwIMbiXTU54lmJIBkRTMhQv/T5y/3ZpEoejyCVgV5Nc7YQmtAK1CEJqR6zbRUTUZs4cN+q1/noRPwC9Hzv5+4QWmrRtszVNmDSprsRic6QG/mSH5RfWGP4ZTuB5TE0ixwDY3FdoQBaCDkDTZjNN6tQh7JSPp34tNcpWu+ts0qbWE4ySYYVkahgjbYT3QDqxLBfrsCoM+vTIzHHpJUq+taOMC4wrBiwKy/8eKqx/pIHWMIHToAMCARKigcsEgcgNMAii1qi7TMdb43CHg4jxAKiNuaJ0UTBUHDv+Xa5BuDHv8tXiq9E8b8EdHaEv9HcEQyG+NKHNyhycfUgvdDMRsnXMoUgJKnTDjfV6i98RE7bf6+bo6dQhDPZYpMBWH7jKKFROJV2y8QkNy8rTECApnuEebpVRUXupbxIzZ4nk0FT5thDOt7u8RxHOa6v6oE2+3ksPqtVo/YJQUVgvW5DWmj3TXDy5OS9NrXh/bZTl2Y/30vhGgJOhQkCgE7QNylmc61SDIhX0sA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCnEP2ZcCs80WI32QJWVrjZyt3TQJ9wfcaaH+HI8aergFSrk7PrXc9nyLYgy+Ncm4tqT8XsoSZDIKricR6m2t6tzcv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221087&amp;s=kHxkAN87Lv3FyCXFcq7pWHC70ei+k8C/JEwwxIMECt4="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 18:00:21 GMT
Cache-Control: no-cache
Expires: Sat, 13 Jun 2020 18:00:21 GMT
Date: Sat, 13 Jun 2020 18:00:21 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCnEP2ZcCs80WI32QJWVrjZyt3TQJ9wfcaaH+HI8aergFSrk7PrXc9nyLYgy+Ncm4tqT8XsoSZDIKricR6m2t6tzcv
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221087&amp;s=kHxkAN87Lv3FyCXFcq7pWHC70ei+k8C/JEwwxIMECt4="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200613 18:00:21.099" endtime="20200613 18:00:21.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.100" endtime="20200613 18:00:21.100"></status>
</kw>
<msg timestamp="20200613 18:00:21.100" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.8...
* Connected to om (172.26.0.8) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200613 18:00:21.067" endtime="20200613 18:00:21.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.101" endtime="20200613 18:00:21.101"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:20.992" endtime="20200613 18:00:21.101"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:20.991" endtime="20200613 18:00:21.101" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.105" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:21.103" endtime="20200613 18:00:21.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.109" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:21.108" endtime="20200613 18:00:21.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.109" endtime="20200613 18:00:21.109"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.103" endtime="20200613 18:00:21.109"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.103" endtime="20200613 18:00:21.109"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.112" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.127" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200613 18:00:21.110" endtime="20200613 18:00:21.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.128" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200613 18:00:21.127" endtime="20200613 18:00:21.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.128" endtime="20200613 18:00:21.128"></status>
</kw>
<msg timestamp="20200613 18:00:21.129" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200613 18:00:21.110" endtime="20200613 18:00:21.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.129" endtime="20200613 18:00:21.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.133" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.134" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.130" endtime="20200613 18:00:21.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.135" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:21.134" endtime="20200613 18:00:21.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.135" endtime="20200613 18:00:21.135"></status>
</kw>
<msg timestamp="20200613 18:00:21.135" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.130" endtime="20200613 18:00:21.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:21.136" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:21.136" endtime="20200613 18:00:21.136"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.139" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:21.137" endtime="20200613 18:00:21.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.148" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:21.148" endtime="20200613 18:00:21.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.148" endtime="20200613 18:00:21.149"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.136" endtime="20200613 18:00:21.149"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.136" endtime="20200613 18:00:21.149"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.130" endtime="20200613 18:00:21.149"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.129" endtime="20200613 18:00:21.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.152" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.176" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200613 18:00:21.150" endtime="20200613 18:00:21.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.177" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x21c1f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGlxKLC+5/+jOHucCSzoZnrqLwiclGnP0xEhw4OivjOvtd/olzWUPEUl3tmQUdh1zqWlJHm8aG1q3J91TFG9w0zTvj64V9LKjO/+MXLbRIJChHo0aGGhcaeIQ0KbrKeJnPJkxY3mGanxtniiVhz305EdK0yO6SYj8Dow+IHfV9mDO8tB0b402B6oBjwU1mykuJNQekj+rimL/s1jJob4LydFtdXvydWkPHS3bHUqLVLhnMLnaJOleQVPY+y2Cm+ogygLBH7l1TR2Lk/n7ooDS/h1zeCkZ+ONGbbeJf03bLjhqVopDSv+zF2bQ0lg1awFSHOdY/GV/YKKfJZIvpASPlQFAvE7AbDaSB1jCB06ADAgESooHLBIHIPX0nwJdpMZ9dJtMmShY6I51Wo09fLr9HVEHp4ceeLytMOyQNBrXsGTe6pSonax4ofSr4L6JlkB4t0DSMGON+ni1uEbVk77MHcU+jy4mU566RIwA081rWHynS1u7xIuL6ejU5NZBDnIMhQpNM/XL4XFZrsIdNcfFxxG+Btpj+HXLFXf7intfN6cJU0VbFQH7Ecs8Os1ZrocgBK7nGXoYoY1MBQSVK7SWXOJRejKyJ6P2YcSaSvQi2wuUcOremEXzq3HjB6FsZIkA=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQVRmzlqjQkVyg2/4dGiJUGvGI9mvyznyQOHao8lNUokK68OCecq6QySz+2v2Udg3nmYTrNhkqQJC9ohr1Q/p90wo
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221172&amp;s=pBnT/HBeA0WBAJg8YOLQFiMLps01pKy4NTkpgX9AMVo="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 13 Jun 2020 17:08:24 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 18:00:21 GMT
Cache-Control: no-cache
Expires: Sat, 13 Jun 2020 18:00:21 GMT
Date: Sat, 13 Jun 2020 18:00:21 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 13 Jun 2020 18:00:21 GMT
Date: Sat, 13 Jun 2020 18:00:21 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQVRmzlqjQkVyg2/4dGiJUGvGI9mvyznyQOHao8lNUokK68OCecq6QySz+2v2Udg3nmYTrNhkqQJC9ohr1Q/p90wo
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221172&amp;s=pBnT/HBeA0WBAJg8YOLQFiMLps01pKy4NTkpgX9AMVo="; Path=/; HttpOnly
Last-Modified: Sat, 13 Jun 2020 17:08:24 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200613 18:00:21.176" endtime="20200613 18:00:21.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.177" endtime="20200613 18:00:21.177"></status>
</kw>
<msg timestamp="20200613 18:00:21.178" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200613 18:00:21.149" endtime="20200613 18:00:21.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.178" endtime="20200613 18:00:21.178"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.102" endtime="20200613 18:00:21.178"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:21.102" endtime="20200613 18:00:21.178" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.183" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:21.181" endtime="20200613 18:00:21.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.186" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:21.185" endtime="20200613 18:00:21.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.186" endtime="20200613 18:00:21.186"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.180" endtime="20200613 18:00:21.187"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.180" endtime="20200613 18:00:21.187"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.189" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.204" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200613 18:00:21.187" endtime="20200613 18:00:21.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.205" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200613 18:00:21.205" endtime="20200613 18:00:21.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.205" endtime="20200613 18:00:21.206"></status>
</kw>
<msg timestamp="20200613 18:00:21.206" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200613 18:00:21.187" endtime="20200613 18:00:21.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.206" endtime="20200613 18:00:21.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.209" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.211" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.207" endtime="20200613 18:00:21.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.212" level="INFO">scm</msg>
<status status="PASS" starttime="20200613 18:00:21.211" endtime="20200613 18:00:21.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.212" endtime="20200613 18:00:21.212"></status>
</kw>
<msg timestamp="20200613 18:00:21.212" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200613 18:00:21.207" endtime="20200613 18:00:21.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200613 18:00:21.213" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200613 18:00:21.213" endtime="20200613 18:00:21.213"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.216" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 18:00:21.214" endtime="20200613 18:00:21.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.225" level="INFO"></msg>
<status status="PASS" starttime="20200613 18:00:21.225" endtime="20200613 18:00:21.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.225" endtime="20200613 18:00:21.226"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.213" endtime="20200613 18:00:21.226"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.213" endtime="20200613 18:00:21.226"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.207" endtime="20200613 18:00:21.226"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.206" endtime="20200613 18:00:21.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 18:00:21.229" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 18:00:21.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 18:00:21.253" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200613 18:00:21.227" endtime="20200613 18:00:21.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 18:00:21.254" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1821f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaOVRJ8Se6/mC5CwN8oAO/DI5QTNLhih5epW6RRCFpYbxJX2W/t0UQgJwDAS353h3WYTOb5gRmm8VtuCbZwjNo2ppr0VzVXaz9GOFPLi5H4OQBPfmuTP3oDAtGWSvw0rul0k6BDT3mOquvPZMDy09sEW2QfBFU7GOCcccxF84QAeyDKlYvN4GyKpthHB6GD28hQc3T1LPo1jgwM/5sv9dQhb3dqpmZlQpUbDwbkphjhi2P48pUwKAuVtuDbE4v78P7rHttK5uj3+GONH0bAQKyt1ec9QGwUQQrun2ulcMsCdyZgTavBg9GumYsvsfdZsNBQ7xa9Wycq6PEuG/Ll01GwHDdReXfIpIHWMIHToAMCARKigcsEgcjKTd4aLznjx1FW1ZCUr+XNwEQuCTievrzqwo2ZRrn84G0VwhC+qWkj3KZL4fMG5qY/9ftfUhZmnLnoPlpn7lOE+jb9TpAXG7CSr0tTx5aCt1T0nG7Q0oO0AYtkaQV4c832RBwUPRnNQHs3xws8ZB+MBuvmGZwLaOhus0eX9lIcUoheai21k8PeD+OzDPtOVOVaf/wwZamzCcQ8OEK0NJzYWAO5opDKgLbgNOyNnNBN4XMSzmgPf7Wqqnpm2x7sQh6zBXSifvPpSg==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Date: Sat, 13 Jun 2020 18:00:21 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/5Dcf48KA6WUtOEfMYeX3wWeBbBAq7AdmPCZqKtjRrw+RR1SFLJLV3mDMgg5fqzSUf4mu48odxL1KV0QKD8sKjpy
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221245&amp;s=WFGPTGnwLuDmg5GfWDEgfVixDP/mfsTx1cU1DfuQcz8="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 13 Jun 2020 17:10:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 18:00:21 GMT
Cache-Control: no-cache
Expires: Sat, 13 Jun 2020 18:00:21 GMT
Date: Sat, 13 Jun 2020 18:00:21 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 13 Jun 2020 18:00:21 GMT
Date: Sat, 13 Jun 2020 18:00:21 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/5Dcf48KA6WUtOEfMYeX3wWeBbBAq7AdmPCZqKtjRrw+RR1SFLJLV3mDMgg5fqzSUf4mu48odxL1KV0QKD8sKjpy
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592107221245&amp;s=WFGPTGnwLuDmg5GfWDEgfVixDP/mfsTx1cU1DfuQcz8="; Path=/; HttpOnly
Last-Modified: Sat, 13 Jun 2020 17:10:44 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200613 18:00:21.254" endtime="20200613 18:00:21.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 18:00:21.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 18:00:21.255" endtime="20200613 18:00:21.255"></status>
</kw>
<msg timestamp="20200613 18:00:21.255" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200613 18:00:21.226" endtime="20200613 18:00:21.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200613 18:00:21.255" endtime="20200613 18:00:21.256"></status>
</kw>
<status status="PASS" starttime="20200613 18:00:21.180" endtime="20200613 18:00:21.256"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 18:00:21.179" endtime="20200613 18:00:21.256" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200613 18:00:13.550" endtime="20200613 18:00:21.257"></status>
</suite>
<status status="PASS" starttime="20200613 18:00:13.531" endtime="20200613 18:00:21.259"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
