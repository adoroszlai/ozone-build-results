<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 17:41:00.543" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:41:00.588" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:41:07.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:41:07.404" level="INFO">${output} = 2020-06-13 17:41:01,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:01,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:00.584" endtime="20200613 17:41:07.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:41:07.405" level="INFO">2020-06-13 17:41:01,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:01,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:41:01,397 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-13 17:41:01,960 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 17:41:01,961 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-13 17:41:01,962 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 17:41:01,967 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:41:01,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-21034, with hadoop as owner.
2020-06-13 17:41:02,000 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-21034/bucket-0-98329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:41:02,346 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:41:02,973 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,028
Average Time spent in bucket creation: 00:00:00,005
Average Time spent in key creation: 00:00:00,026
Average Time spent in key write: 00:00:00,437
Total bytes written: 10240
Total Execution time: 00:00:05,542
***************************************************</msg>
<status status="PASS" starttime="20200613 17:41:07.405" endtime="20200613 17:41:07.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:41:07.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:41:07.405" endtime="20200613 17:41:07.406"></status>
</kw>
<msg timestamp="20200613 17:41:07.406" level="INFO">${result} = 2020-06-13 17:41:01,303 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:01,397 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:00.584" endtime="20200613 17:41:07.406"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:41:07.407" endtime="20200613 17:41:07.407"></status>
</kw>
<status status="PASS" starttime="20200613 17:41:07.406" endtime="20200613 17:41:07.407"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:41:00.583" endtime="20200613 17:41:07.407" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:41:07.410" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:41:11.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:41:11.282" level="INFO">${output} = 2020-06-13 17:41:08,113 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:08,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:07.409" endtime="20200613 17:41:11.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:41:11.283" level="INFO">2020-06-13 17:41:08,113 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:08,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:41:08,223 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:41:08,339 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s7nqaqzlak
2020-06-13 17:41:08,356 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:41:08,794 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-13 17:41:08,807 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:41:09,231 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:41:09,358 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:41:10,359 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:41:10,953 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1001.146512, max=1001.146512, mean=1001.146512, stddev=0.0, median=1001.146512, p75=1001.146512, p95=1001.146512, p98=1001.146512, p99=1001.146512, p999=1001.146512, mean_rate=0.4693769342298859, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:41:10,953 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-13 17:41:10,953 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:41:10,953 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:41:11.282" endtime="20200613 17:41:11.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:41:11.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:41:11.283" endtime="20200613 17:41:11.283"></status>
</kw>
<msg timestamp="20200613 17:41:11.283" level="INFO">${result} = 2020-06-13 17:41:08,113 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:08,223 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:07.408" endtime="20200613 17:41:11.283"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:41:11.284" endtime="20200613 17:41:11.284"></status>
</kw>
<status status="PASS" starttime="20200613 17:41:11.284" endtime="20200613 17:41:11.284"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:41:07.407" endtime="20200613 17:41:11.284" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:41:11.289" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:41:13.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:41:13.767" level="INFO">${output} = 2020-06-13 17:41:11,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:12,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:11.286" endtime="20200613 17:41:13.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:41:13.768" level="INFO">2020-06-13 17:41:11,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:12,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:41:12,093 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:41:12,216 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jhdphgqxce
2020-06-13 17:41:12,227 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:41:13,232 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:41:13,760 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=20.39761, max=20.39761, mean=20.39761, stddev=0.0, median=20.39761, p75=20.39761, p95=20.39761, p98=20.39761, p99=20.39761, p999=20.39761, mean_rate=0.8965713771061822, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:41:13,761 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-13 17:41:13,761 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:41:13,761 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:41:13.768" endtime="20200613 17:41:13.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:41:13.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:41:13.768" endtime="20200613 17:41:13.769"></status>
</kw>
<msg timestamp="20200613 17:41:13.769" level="INFO">${result} = 2020-06-13 17:41:11,973 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:12,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:11.285" endtime="20200613 17:41:13.769"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:41:13.769" endtime="20200613 17:41:13.770"></status>
</kw>
<status status="PASS" starttime="20200613 17:41:13.769" endtime="20200613 17:41:13.770"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:41:11.285" endtime="20200613 17:41:13.770" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:41:13.773" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:41:16.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:41:16.293" level="INFO">${output} = 2020-06-13 17:41:14,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:13.771" endtime="20200613 17:41:16.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:41:16.295" level="INFO">2020-06-13 17:41:14,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:41:14,543 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:41:14,676 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vcippwenlu
2020-06-13 17:41:14,710 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:41:15,714 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:41:16,268 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=4.364273, max=4.364273, mean=4.364273, stddev=0.0, median=4.364273, p75=4.364273, p95=4.364273, p98=4.364273, p99=4.364273, p999=4.364273, mean_rate=0.898580693501917, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:41:16,273 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-13 17:41:16,273 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:41:16,273 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:41:16.294" endtime="20200613 17:41:16.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:41:16.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:41:16.295" endtime="20200613 17:41:16.296"></status>
</kw>
<msg timestamp="20200613 17:41:16.296" level="INFO">${result} = 2020-06-13 17:41:14,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:41:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:41:13.771" endtime="20200613 17:41:16.296"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:41:16.296" endtime="20200613 17:41:16.297"></status>
</kw>
<status status="PASS" starttime="20200613 17:41:16.296" endtime="20200613 17:41:16.297"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:41:13.770" endtime="20200613 17:41:16.297" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200613 17:41:00.567" endtime="20200613 17:41:16.298"></status>
</suite>
<status status="PASS" starttime="20200613 17:41:00.544" endtime="20200613 17:41:16.300"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
