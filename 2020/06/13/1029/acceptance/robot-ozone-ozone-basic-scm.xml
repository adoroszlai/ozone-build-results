<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 17:31:59.139" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200613 17:31:59.175" endtime="20200613 17:31:59.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:31:59.179" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:31:59.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:31:59.280" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 17:31:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 13 Jun 2020 17:08:14 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200613 17:31:59.175" endtime="20200613 17:31:59.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:31:59.281" level="INFO">HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 17:31:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 13 Jun 2020 17:08:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200613 17:31:59.280" endtime="20200613 17:31:59.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:31:59.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:31:59.281" endtime="20200613 17:31:59.281"></status>
</kw>
<msg timestamp="20200613 17:31:59.282" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sat, 13 Jun 2020 17:31:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 13 Jun 2020 17:08:14 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200613 17:31:59.175" endtime="20200613 17:31:59.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200613 17:31:59.282" endtime="20200613 17:31:59.282"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:31:59.174" endtime="20200613 17:31:59.282" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:31:59.284" endtime="20200613 17:31:59.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:31:59.287" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:17.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:17.948" level="INFO">${output} = 2020-06-13 17:31:59,979 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:32:00,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:31:59.285" endtime="20200613 17:33:17.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:17.949" level="INFO">2020-06-13 17:31:59,979 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:32:00,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:32:00,107 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:32:00,997 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 17:32:00,998 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-13 17:32:00,999 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-13 17:32:01,002 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 17:32:01,018 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-13 17:32:01,042 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-99746, with hadoop as owner.
2020-06-13 17:32:01,142 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-69531, with hadoop as owner.
2020-06-13 17:32:01,152 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-64181, with hadoop as owner.
2020-06-13 17:32:01,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-78635, with hadoop as owner.
2020-06-13 17:32:01,164 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-77006, with hadoop as owner.
2020-06-13 17:32:01,171 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-99746/bucket-0-41997, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,189 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69531/bucket-0-77240, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,196 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-64181/bucket-0-55760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,201 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78635/bucket-0-62922, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,206 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77006/bucket-0-87739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,209 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-99746/bucket-1-18281, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,212 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69531/bucket-1-52653, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,215 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-64181/bucket-1-01349, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,218 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78635/bucket-1-20379, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,222 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77006/bucket-1-72067, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,225 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-99746/bucket-2-23354, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,227 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69531/bucket-2-92525, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,234 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-64181/bucket-2-62452, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,236 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78635/bucket-2-91174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,244 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77006/bucket-2-54117, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,249 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-99746/bucket-3-01501, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,256 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69531/bucket-3-09063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,259 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-64181/bucket-3-54643, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,264 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78635/bucket-3-08546, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,266 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77006/bucket-3-64838, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,269 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-99746/bucket-4-62202, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-69531/bucket-4-88836, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-64181/bucket-4-31716, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,282 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-78635/bucket-4-69622, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,288 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-77006/bucket-4-30384, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:32:01,694 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:32:02,020 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-13 17:32:03,023 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-13 17:32:04,024 [Thread-5] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-13 17:32:05,024 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-13 17:32:06,025 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-13 17:32:07,026 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-13 17:32:08,026 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-13 17:32:09,027 [Thread-5] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-13 17:32:10,028 [Thread-5] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-06-13 17:32:11,029 [Thread-5] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-06-13 17:32:12,029 [Thread-5] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-06-13 17:32:13,029 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-13 17:32:14,030 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-13 17:32:15,030 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-13 17:32:16,031 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-13 17:32:17,032 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-13 17:32:18,032 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-13 17:32:19,033 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-13 17:32:20,034 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-13 17:32:21,034 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-13 17:32:22,035 [Thread-5] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-13 17:32:23,035 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-13 17:32:24,036 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-13 17:32:25,036 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-13 17:32:26,037 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-13 17:32:27,038 [Thread-5] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-06-13 17:32:28,040 [Thread-5] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-13 17:32:29,040 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-13 17:32:30,041 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-13 17:32:31,041 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-13 17:32:32,041 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-13 17:32:33,042 [Thread-5] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2020-06-13 17:32:34,043 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-13 17:32:35,045 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-13 17:32:36,046 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-13 17:32:37,047 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-13 17:32:38,047 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-13 17:32:39,047 [Thread-5] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-13 17:32:40,048 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-13 17:32:41,048 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-13 17:32:42,049 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-13 17:32:43,050 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-13 17:32:44,050 [Thread-5] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-06-13 17:32:45,051 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-13 17:32:46,052 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-13 17:32:47,052 [Thread-5] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-13 17:32:48,053 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-13 17:32:49,053 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-13 17:32:50,056 [Thread-5] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-06-13 17:32:51,056 [Thread-5] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-06-13 17:32:52,057 [Thread-5] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-06-13 17:32:53,057 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-13 17:32:54,058 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-13 17:32:55,058 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-13 17:32:56,059 [Thread-5] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-13 17:32:57,060 [Thread-5] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-13 17:32:58,060 [Thread-5] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-06-13 17:32:59,060 [Thread-5] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-06-13 17:33:00,061 [Thread-5] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-06-13 17:33:01,061 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-13 17:33:02,062 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-13 17:33:03,062 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-13 17:33:04,063 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-13 17:33:05,063 [Thread-5] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-13 17:33:06,063 [Thread-5] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-13 17:33:07,064 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-13 17:33:08,064 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-13 17:33:09,065 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-13 17:33:10,065 [Thread-5] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-13 17:33:11,066 [Thread-5] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-13 17:33:12,066 [Thread-5] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-13 17:33:13,067 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,140
Average Time spent in bucket creation: 00:00:00,087
Average Time spent in key creation: 00:00:01,115
Average Time spent in key write: 00:00:00,506
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:17,394
***************************************************</msg>
<status status="PASS" starttime="20200613 17:33:17.949" endtime="20200613 17:33:17.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:17.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:17.950" endtime="20200613 17:33:17.950"></status>
</kw>
<msg timestamp="20200613 17:33:17.950" level="INFO">${result} = 2020-06-13 17:31:59,979 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:32:00,107 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:31:59.285" endtime="20200613 17:33:17.950"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:17.951" endtime="20200613 17:33:17.951"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:17.950" endtime="20200613 17:33:17.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:17.951" endtime="20200613 17:33:17.951"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:31:59.283" endtime="20200613 17:33:17.951" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200613 17:31:59.158" endtime="20200613 17:33:17.952"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200613 17:33:17.958" level="INFO">${random} = 09700</msg>
<status status="PASS" starttime="20200613 17:33:17.958" endtime="20200613 17:33:17.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200613 17:33:17.959" level="INFO">${prefix} = 09700</msg>
<status status="PASS" starttime="20200613 17:33:17.958" endtime="20200613 17:33:17.959"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:17.958" endtime="20200613 17:33:17.959"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:17.959" endtime="20200613 17:33:17.959"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:17.962" level="INFO">Running command 'ozone sh volume info o3://om:9862/09700-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:19.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:33:19.364" level="INFO">${output} = VOLUME_NOT_FOUND Volume 09700-rpcwoport is not found</msg>
<status status="PASS" starttime="20200613 17:33:17.960" endtime="20200613 17:33:19.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:19.365" level="INFO">VOLUME_NOT_FOUND Volume 09700-rpcwoport is not found</msg>
<status status="PASS" starttime="20200613 17:33:19.364" endtime="20200613 17:33:19.365"></status>
</kw>
<msg timestamp="20200613 17:33:19.365" level="INFO">${result} = VOLUME_NOT_FOUND Volume 09700-rpcwoport is not found</msg>
<status status="PASS" starttime="20200613 17:33:17.960" endtime="20200613 17:33:19.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:19.365" endtime="20200613 17:33:19.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:19.368" level="INFO">Running command 'ozone sh volume create o3://om:9862/09700-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:20.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:20.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:19.366" endtime="20200613 17:33:20.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:20.705" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:20.705" endtime="20200613 17:33:20.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:20.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:20.706" endtime="20200613 17:33:20.706"></status>
</kw>
<msg timestamp="20200613 17:33:20.706" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:33:19.365" endtime="20200613 17:33:20.706"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:20.706" endtime="20200613 17:33:20.706"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:20.709" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="09700-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:22.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:22.307" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200613 17:33:20.707" endtime="20200613 17:33:22.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:22.308" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:33:22.307" endtime="20200613 17:33:22.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:22.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:22.308" endtime="20200613 17:33:22.309"></status>
</kw>
<msg timestamp="20200613 17:33:22.309" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200613 17:33:20.706" endtime="20200613 17:33:22.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:22.309" endtime="20200613 17:33:22.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:22.313" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="09700-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:23.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:23.740" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200613 17:33:22.310" endtime="20200613 17:33:23.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:23.741" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:33:23.740" endtime="20200613 17:33:23.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:23.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:23.741" endtime="20200613 17:33:23.741"></status>
</kw>
<msg timestamp="20200613 17:33:23.741" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:33:20.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200613 17:33:22.309" endtime="20200613 17:33:23.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:23.742" endtime="20200613 17:33:23.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:23.745" level="INFO">Running command 'ozone sh volume update o3://om:9862/09700-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:25.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:25.158" level="INFO">${output} = {
  "metadata" : { },
  "name" : "09700-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:33:20.593Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200613 17:33:23.742" endtime="20200613 17:33:25.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:25.159" level="INFO">{
  "metadata" : { },
  "name" : "09700-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:33:20.593Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200613 17:33:25.158" endtime="20200613 17:33:25.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:25.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:25.159" endtime="20200613 17:33:25.159"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:23.742" endtime="20200613 17:33:25.160"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:25.163" level="INFO">Running command 'ozone sh volume info o3://om:9862/09700-rpcwoport | jq -r '. | select(.name=="09700-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:26.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:26.586" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:33:25.160" endtime="20200613 17:33:26.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:26.587" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200613 17:33:26.586" endtime="20200613 17:33:26.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:26.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:26.587" endtime="20200613 17:33:26.587"></status>
</kw>
<msg timestamp="20200613 17:33:26.588" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:33:25.160" endtime="20200613 17:33:26.588"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:26.588" endtime="20200613 17:33:26.588"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:26.591" level="INFO">Running command 'ozone sh bucket create o3://om:9862/09700-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:28.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:28.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:26.588" endtime="20200613 17:33:28.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:28.045" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:28.044" endtime="20200613 17:33:28.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:28.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:28.045" endtime="20200613 17:33:28.045"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:26.588" endtime="20200613 17:33:28.046"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:28.052" level="INFO">Running command 'ozone sh bucket info o3://om:9862/09700-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:29.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:29.534" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200613 17:33:28.046" endtime="20200613 17:33:29.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:29.535" level="INFO">DISK</msg>
<status status="PASS" starttime="20200613 17:33:29.534" endtime="20200613 17:33:29.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:29.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:29.535" endtime="20200613 17:33:29.535"></status>
</kw>
<msg timestamp="20200613 17:33:29.535" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200613 17:33:28.046" endtime="20200613 17:33:29.535"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:29.535" endtime="20200613 17:33:29.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:29.539" level="INFO">Running command 'ozone sh bucket list o3://om:9862/09700-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:30.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:30.960" level="INFO">${output} = 09700-rpcwoport</msg>
<status status="PASS" starttime="20200613 17:33:29.536" endtime="20200613 17:33:30.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:30.960" level="INFO">09700-rpcwoport</msg>
<status status="PASS" starttime="20200613 17:33:30.960" endtime="20200613 17:33:30.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:30.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:30.961" endtime="20200613 17:33:30.961"></status>
</kw>
<msg timestamp="20200613 17:33:30.961" level="INFO">${result} = 09700-rpcwoport</msg>
<status status="PASS" starttime="20200613 17:33:29.536" endtime="20200613 17:33:30.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:30.961" endtime="20200613 17:33:30.962"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:30.965" level="INFO">Running command 'ozone sh key put o3://om:9862/09700-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:33.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:33.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:30.963" endtime="20200613 17:33:33.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:33.723" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:33.722" endtime="20200613 17:33:33.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:33.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:33.723" endtime="20200613 17:33:33.723"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:30.963" endtime="20200613 17:33:33.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:33.725" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:33.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:33.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:33.724" endtime="20200613 17:33:33.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:33.728" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:33.728" endtime="20200613 17:33:33.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:33.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:33.729" endtime="20200613 17:33:33.729"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:33.724" endtime="20200613 17:33:33.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:33.732" level="INFO">Running command 'ozone sh key get o3://om:9862/09700-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:36.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:36.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:33.729" endtime="20200613 17:33:36.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:36.350" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:36.349" endtime="20200613 17:33:36.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:36.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:36.350" endtime="20200613 17:33:36.351"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:33.729" endtime="20200613 17:33:36.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:36.353" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:36.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:36.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:36.351" endtime="20200613 17:33:36.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:36.357" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:36.357" endtime="20200613 17:33:36.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:36.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:36.357" endtime="20200613 17:33:36.358"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:36.351" endtime="20200613 17:33:36.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:36.360" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/09700-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:39.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:39.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:36.358" endtime="20200613 17:33:39.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:39.134" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:39.133" endtime="20200613 17:33:39.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:39.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:39.135" endtime="20200613 17:33:39.135"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:36.358" endtime="20200613 17:33:39.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:39.138" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:39.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:39.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:39.135" endtime="20200613 17:33:39.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:39.139" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:39.139" endtime="20200613 17:33:39.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:39.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:39.140" endtime="20200613 17:33:39.140"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:39.135" endtime="20200613 17:33:39.140"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:39.143" level="INFO">Running command 'ozone sh key get o3://om:9862/09700-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:41.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:41.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:39.141" endtime="20200613 17:33:41.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:41.740" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:41.739" endtime="20200613 17:33:41.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:41.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:41.740" endtime="20200613 17:33:41.740"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:39.140" endtime="20200613 17:33:41.741"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:41.743" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:41.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:41.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:41.741" endtime="20200613 17:33:41.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:41.745" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:41.745" endtime="20200613 17:33:41.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:41.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:41.746" endtime="20200613 17:33:41.747"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:41.741" endtime="20200613 17:33:41.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:41.749" level="INFO">Running command 'ozone sh key info o3://om:9862/09700-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:43.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:43.257" level="INFO">${output} = {
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:37.662Z",
  "modificationTime": "2020-06-13T17:33:38.686Z",...</msg>
<status status="PASS" starttime="20200613 17:33:41.748" endtime="20200613 17:33:43.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:43.258" level="INFO">{
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:37.662Z",
  "modificationTime": "2020-06-13T17:33:38.686Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337874462965890,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:33:43.258" endtime="20200613 17:33:43.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:43.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:43.258" endtime="20200613 17:33:43.259"></status>
</kw>
<msg timestamp="20200613 17:33:43.259" level="INFO">${result} = {
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:37.662Z",
  "modificationTime": "2020-06-13T17:33:38.686Z",...</msg>
<status status="PASS" starttime="20200613 17:33:41.747" endtime="20200613 17:33:43.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:43.259" endtime="20200613 17:33:43.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:43.263" level="INFO">Running command 'ozone sh key delete o3://om:9862/09700-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:44.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:44.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:43.260" endtime="20200613 17:33:44.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:44.569" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:44.568" endtime="20200613 17:33:44.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:44.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:44.569" endtime="20200613 17:33:44.569"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:43.260" endtime="20200613 17:33:44.570"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:44.573" level="INFO">Running command 'ozone sh key cp o3://om:9862/09700-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:47.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:47.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:44.570" endtime="20200613 17:33:47.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:47.487" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:47.486" endtime="20200613 17:33:47.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:47.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:47.488" endtime="20200613 17:33:47.488"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:44.570" endtime="20200613 17:33:47.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:47.491" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:47.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:47.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:47.489" endtime="20200613 17:33:47.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:47.494" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:47.493" endtime="20200613 17:33:47.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:47.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:47.494" endtime="20200613 17:33:47.494"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:47.489" endtime="20200613 17:33:47.494"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:47.496" level="INFO">Running command 'ozone sh key get o3://om:9862/09700-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:50.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:50.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:47.495" endtime="20200613 17:33:50.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:50.360" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:50.359" endtime="20200613 17:33:50.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:50.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:50.360" endtime="20200613 17:33:50.360"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:47.494" endtime="20200613 17:33:50.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:50.363" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:50.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:50.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:50.361" endtime="20200613 17:33:50.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:50.365" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:50.365" endtime="20200613 17:33:50.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:50.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:50.365" endtime="20200613 17:33:50.366"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:50.360" endtime="20200613 17:33:50.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:50.367" level="INFO">Running command 'ozone sh key delete o3://om:9862/09700-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:51.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:51.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:50.366" endtime="20200613 17:33:51.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:51.837" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:51.836" endtime="20200613 17:33:51.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:51.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:51.837" endtime="20200613 17:33:51.837"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:50.366" endtime="20200613 17:33:51.837"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:51.841" level="INFO">Running command 'ozone sh key get o3://om:9862/09700-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:53.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:33:53.192" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:33:51.838" endtime="20200613 17:33:53.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:53.193" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:33:53.193" endtime="20200613 17:33:53.193"></status>
</kw>
<msg timestamp="20200613 17:33:53.193" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:33:51.838" endtime="20200613 17:33:53.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:53.193" endtime="20200613 17:33:53.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:53.196" level="INFO">Running command 'ozone sh key get --force o3://om:9862/09700-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:55.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:55.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:53.194" endtime="20200613 17:33:55.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:55.863" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:33:55.862" endtime="20200613 17:33:55.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:55.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:55.863" endtime="20200613 17:33:55.863"></status>
</kw>
<msg timestamp="20200613 17:33:55.863" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:33:53.194" endtime="20200613 17:33:55.863"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:55.864" endtime="20200613 17:33:55.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:55.866" level="INFO">Running command 'ozone sh key info o3://om:9862/09700-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:57.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:57.412" level="INFO">${output} = {
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:32.274Z",
  "modificationTime": "2020-06-13T17:33:33.374Z",
  "re...</msg>
<status status="PASS" starttime="20200613 17:33:55.865" endtime="20200613 17:33:57.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:57.413" level="INFO">{
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:32.274Z",
  "modificationTime": "2020-06-13T17:33:33.374Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337874109923460,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:33:57.413" endtime="20200613 17:33:57.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:57.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:57.413" endtime="20200613 17:33:57.414"></status>
</kw>
<msg timestamp="20200613 17:33:57.414" level="INFO">${result} = {
  "volumeName": "09700-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:33:32.274Z",
  "modificationTime": "2020-06-13T17:33:33.374Z",
  "re...</msg>
<status status="PASS" starttime="20200613 17:33:55.864" endtime="20200613 17:33:57.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:57.414" endtime="20200613 17:33:57.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:57.417" level="INFO">Running command 'ozone sh key list o3://om:9862/09700-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:33:58.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:33:58.836" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200613 17:33:57.415" endtime="20200613 17:33:58.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:33:58.837" level="INFO">key1</msg>
<status status="PASS" starttime="20200613 17:33:58.836" endtime="20200613 17:33:58.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:33:58.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:33:58.837" endtime="20200613 17:33:58.837"></status>
</kw>
<msg timestamp="20200613 17:33:58.838" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200613 17:33:57.415" endtime="20200613 17:33:58.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:33:58.838" endtime="20200613 17:33:58.838"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:33:58.841" level="INFO">Running command 'ozone sh key rename o3://om:9862/09700-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:00.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:00.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:33:58.839" endtime="20200613 17:34:00.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:00.063" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:00.062" endtime="20200613 17:34:00.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:00.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:00.063" endtime="20200613 17:34:00.063"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:58.838" endtime="20200613 17:34:00.063"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:00.066" level="INFO">Running command 'ozone sh key list o3://om:9862/09700-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:01.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:01.720" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200613 17:34:00.064" endtime="20200613 17:34:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:01.721" level="INFO">key2</msg>
<status status="PASS" starttime="20200613 17:34:01.721" endtime="20200613 17:34:01.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:01.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:01.721" endtime="20200613 17:34:01.722"></status>
</kw>
<msg timestamp="20200613 17:34:01.722" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200613 17:34:00.063" endtime="20200613 17:34:01.722"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:01.722" endtime="20200613 17:34:01.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:01.725" level="INFO">Running command 'ozone sh key delete o3://om:9862/09700-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:03.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:03.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:01.723" endtime="20200613 17:34:03.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:03.233" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:03.232" endtime="20200613 17:34:03.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:03.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:03.233" endtime="20200613 17:34:03.234"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:01.722" endtime="20200613 17:34:03.234"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:30.962" endtime="20200613 17:34:03.234"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:30.962" endtime="20200613 17:34:03.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:03.238" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/09700-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:04.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:04.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:03.235" endtime="20200613 17:34:04.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:04.647" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:04.647" endtime="20200613 17:34:04.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:04.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:04.648" endtime="20200613 17:34:04.648"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:03.234" endtime="20200613 17:34:04.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:04.650" level="INFO">Running command 'ozone sh volume delete o3://om:9862/09700-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:06.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:06.014" level="INFO">${output} = Volume 09700-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200613 17:34:04.648" endtime="20200613 17:34:06.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:06.015" level="INFO">Volume 09700-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200613 17:34:06.014" endtime="20200613 17:34:06.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:06.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:06.015" endtime="20200613 17:34:06.015"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:04.648" endtime="20200613 17:34:06.015"></status>
</kw>
<status status="PASS" starttime="20200613 17:33:17.959" endtime="20200613 17:34:06.016"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:33:17.959" endtime="20200613 17:34:06.016" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:06.017" endtime="20200613 17:34:06.017"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:06.021" level="INFO">Running command 'ozone sh volume create o3://om:9862/09700-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:07.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:07.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:06.018" endtime="20200613 17:34:07.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:07.420" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:07.419" endtime="20200613 17:34:07.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:07.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:07.420" endtime="20200613 17:34:07.421"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:06.018" endtime="20200613 17:34:07.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:07.424" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09700-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:08.877" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:07.421" endtime="20200613 17:34:08.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:08.878" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:08.878" endtime="20200613 17:34:08.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:08.878" endtime="20200613 17:34:08.879"></status>
</kw>
<msg timestamp="20200613 17:34:08.879" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:07.421" endtime="20200613 17:34:08.879"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:08.879" endtime="20200613 17:34:08.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:08.883" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/09700-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:10.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:10.250" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:08.880" endtime="20200613 17:34:10.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:10.251" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:10.250" endtime="20200613 17:34:10.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:10.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:10.251" endtime="20200613 17:34:10.252"></status>
</kw>
<msg timestamp="20200613 17:34:10.252" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:08.880" endtime="20200613 17:34:10.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:10.255" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09700-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:11.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:11.829" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:10.253" endtime="20200613 17:34:11.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:11.830" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:11.830" endtime="20200613 17:34:11.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:11.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:11.831" endtime="20200613 17:34:11.831"></status>
</kw>
<msg timestamp="20200613 17:34:11.831" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:10.252" endtime="20200613 17:34:11.831"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:11.831" endtime="20200613 17:34:11.832"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:11.835" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/09700-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:13.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:13.184" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200613 17:34:11.833" endtime="20200613 17:34:13.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:13.185" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200613 17:34:13.184" endtime="20200613 17:34:13.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:13.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:13.185" endtime="20200613 17:34:13.185"></status>
</kw>
<msg timestamp="20200613 17:34:13.186" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200613 17:34:11.832" endtime="20200613 17:34:13.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:13.188" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09700-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:14.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:14.562" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:13.186" endtime="20200613 17:34:14.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:14.563" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:14.562" endtime="20200613 17:34:14.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:14.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:14.563" endtime="20200613 17:34:14.563"></status>
</kw>
<msg timestamp="20200613 17:34:14.563" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:13.186" endtime="20200613 17:34:14.563"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:14.564" endtime="20200613 17:34:14.564"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:14.567" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/09700-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:15.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:15.784" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:14.565" endtime="20200613 17:34:15.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:15.785" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:15.784" endtime="20200613 17:34:15.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:15.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:15.785" endtime="20200613 17:34:15.785"></status>
</kw>
<msg timestamp="20200613 17:34:15.786" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:14.565" endtime="20200613 17:34:15.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:15.788" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09700-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:17.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:17.279" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200613 17:34:15.786" endtime="20200613 17:34:17.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:17.280" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:17.279" endtime="20200613 17:34:17.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:17.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:17.280" endtime="20200613 17:34:17.281"></status>
</kw>
<msg timestamp="20200613 17:34:17.281" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200613 17:34:15.786" endtime="20200613 17:34:17.281"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:17.281" endtime="20200613 17:34:17.282"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:17.282" endtime="20200613 17:34:17.282"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:06.018" endtime="20200613 17:34:17.282"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:34:06.016" endtime="20200613 17:34:17.282" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:17.284" endtime="20200613 17:34:17.284"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:17.287" level="INFO">Running command 'ozone sh bucket create o3://om:9862/09700-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:18.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:18.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:17.286" endtime="20200613 17:34:18.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:18.595" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:18.595" endtime="20200613 17:34:18.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:18.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:18.595" endtime="20200613 17:34:18.596"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:17.285" endtime="20200613 17:34:18.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:18.599" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/09700-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:19.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:19.980" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:18.597" endtime="20200613 17:34:19.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:19.980" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:19.980" endtime="20200613 17:34:19.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:19.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:19.981" endtime="20200613 17:34:19.981"></status>
</kw>
<msg timestamp="20200613 17:34:19.981" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:18.596" endtime="20200613 17:34:19.981"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:19.981" endtime="20200613 17:34:19.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:19.985" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/09700-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:21.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:21.321" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200613 17:34:19.982" endtime="20200613 17:34:21.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:21.322" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200613 17:34:21.322" endtime="20200613 17:34:21.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:21.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:21.322" endtime="20200613 17:34:21.323"></status>
</kw>
<msg timestamp="20200613 17:34:21.323" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200613 17:34:19.982" endtime="20200613 17:34:21.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:21.325" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/09700-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:22.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:22.885" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:21.323" endtime="20200613 17:34:22.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:22.886" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:22.886" endtime="20200613 17:34:22.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:22.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:22.886" endtime="20200613 17:34:22.887"></status>
</kw>
<msg timestamp="20200613 17:34:22.887" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:21.323" endtime="20200613 17:34:22.887"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:22.887" endtime="20200613 17:34:22.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:22.891" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/09700-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:24.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:24.173" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:22.889" endtime="20200613 17:34:24.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:24.174" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:24.173" endtime="20200613 17:34:24.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:24.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:24.174" endtime="20200613 17:34:24.175"></status>
</kw>
<msg timestamp="20200613 17:34:24.175" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:22.888" endtime="20200613 17:34:24.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:24.178" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/09700-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:25.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:25.621" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:24.176" endtime="20200613 17:34:25.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:25.622" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:25.621" endtime="20200613 17:34:25.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:25.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:25.622" endtime="20200613 17:34:25.622"></status>
</kw>
<msg timestamp="20200613 17:34:25.623" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:24.175" endtime="20200613 17:34:25.623"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:25.623" endtime="20200613 17:34:25.624"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:25.627" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/09700-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:27.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:27.032" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:25.625" endtime="20200613 17:34:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:27.033" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:27.032" endtime="20200613 17:34:27.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:27.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:27.033" endtime="20200613 17:34:27.034"></status>
</kw>
<msg timestamp="20200613 17:34:27.034" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:25.624" endtime="20200613 17:34:27.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:27.037" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/09700-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:28.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:28.491" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200613 17:34:27.035" endtime="20200613 17:34:28.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:28.492" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:28.491" endtime="20200613 17:34:28.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:28.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:28.492" endtime="20200613 17:34:28.492"></status>
</kw>
<msg timestamp="20200613 17:34:28.492" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200613 17:34:27.034" endtime="20200613 17:34:28.492"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:28.492" endtime="20200613 17:34:28.493"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:28.493" endtime="20200613 17:34:28.493"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:17.285" endtime="20200613 17:34:28.493"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:34:17.283" endtime="20200613 17:34:28.494" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:28.494" endtime="20200613 17:34:28.495"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:28.497" level="INFO">Running command 'ozone sh key put o3://om:9862/09700-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:31.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:31.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:28.495" endtime="20200613 17:34:31.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:31.171" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:31.171" endtime="20200613 17:34:31.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:31.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:31.172" endtime="20200613 17:34:31.172"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:28.495" endtime="20200613 17:34:31.172"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:31.174" level="INFO">Running command 'ozone sh key getacl o3://om:9862/09700-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:32.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:32.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:31.173" endtime="20200613 17:34:32.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:32.740" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:32.739" endtime="20200613 17:34:32.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:32.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:32.740" endtime="20200613 17:34:32.741"></status>
</kw>
<msg timestamp="20200613 17:34:32.741" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:31.172" endtime="20200613 17:34:32.741"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:32.741" endtime="20200613 17:34:32.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:32.745" level="INFO">Running command 'ozone sh key addacl o3://om:9862/09700-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:33.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:33.964" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:32.743" endtime="20200613 17:34:33.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:33.965" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:33.965" endtime="20200613 17:34:33.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:33.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:33.966" endtime="20200613 17:34:33.966"></status>
</kw>
<msg timestamp="20200613 17:34:33.966" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200613 17:34:32.742" endtime="20200613 17:34:33.966"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:33.968" level="INFO">Running command 'ozone sh key getacl o3://om:9862/09700-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:35.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:35.503" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:33.967" endtime="20200613 17:34:35.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:35.504" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:35.503" endtime="20200613 17:34:35.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:35.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:35.504" endtime="20200613 17:34:35.505"></status>
</kw>
<msg timestamp="20200613 17:34:35.505" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:33.966" endtime="20200613 17:34:35.505"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:35.505" endtime="20200613 17:34:35.506"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:35.509" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/09700-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:36.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:36.899" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:35.506" endtime="20200613 17:34:36.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:36.900" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:36.899" endtime="20200613 17:34:36.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:36.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:36.900" endtime="20200613 17:34:36.900"></status>
</kw>
<msg timestamp="20200613 17:34:36.901" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200613 17:34:35.506" endtime="20200613 17:34:36.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:36.903" level="INFO">Running command 'ozone sh key getacl o3://om:9862/09700-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:38.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:38.443" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:36.901" endtime="20200613 17:34:38.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:38.444" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:38.444" endtime="20200613 17:34:38.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:38.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:38.445" endtime="20200613 17:34:38.445"></status>
</kw>
<msg timestamp="20200613 17:34:38.445" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200613 17:34:36.901" endtime="20200613 17:34:38.445"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:38.445" endtime="20200613 17:34:38.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:38.449" level="INFO">Running command 'ozone sh key setacl o3://om:9862/09700-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:39.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:39.769" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:38.446" endtime="20200613 17:34:39.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:39.770" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:39.770" endtime="20200613 17:34:39.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:39.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:39.771" endtime="20200613 17:34:39.771"></status>
</kw>
<msg timestamp="20200613 17:34:39.771" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200613 17:34:38.446" endtime="20200613 17:34:39.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:39.776" level="INFO">Running command 'ozone sh key getacl o3://om:9862/09700-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:41.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:41.221" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200613 17:34:39.772" endtime="20200613 17:34:41.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:41.222" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200613 17:34:41.221" endtime="20200613 17:34:41.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:41.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:41.222" endtime="20200613 17:34:41.223"></status>
</kw>
<msg timestamp="20200613 17:34:41.223" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200613 17:34:39.771" endtime="20200613 17:34:41.223"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:41.223" endtime="20200613 17:34:41.224"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:41.224" endtime="20200613 17:34:41.224"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:28.495" endtime="20200613 17:34:41.224"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:34:28.494" endtime="20200613 17:34:41.224" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:41.225" endtime="20200613 17:34:41.226"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:41.229" level="INFO">Running command 'ozone sh volume info o3:///09700-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:42.545" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:34:42.546" level="INFO">${output} = VOLUME_NOT_FOUND Volume 09700-rpcwport is not found</msg>
<status status="PASS" starttime="20200613 17:34:41.227" endtime="20200613 17:34:42.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:42.547" level="INFO">VOLUME_NOT_FOUND Volume 09700-rpcwport is not found</msg>
<status status="PASS" starttime="20200613 17:34:42.546" endtime="20200613 17:34:42.547"></status>
</kw>
<msg timestamp="20200613 17:34:42.547" level="INFO">${result} = VOLUME_NOT_FOUND Volume 09700-rpcwport is not found</msg>
<status status="PASS" starttime="20200613 17:34:41.227" endtime="20200613 17:34:42.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:42.547" endtime="20200613 17:34:42.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:42.549" level="INFO">Running command 'ozone sh volume create o3:///09700-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:43.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:43.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:42.548" endtime="20200613 17:34:43.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:43.797" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:43.796" endtime="20200613 17:34:43.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:43.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:43.797" endtime="20200613 17:34:43.798"></status>
</kw>
<msg timestamp="20200613 17:34:43.798" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:34:42.547" endtime="20200613 17:34:43.798"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:43.798" endtime="20200613 17:34:43.798"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:43.801" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="09700-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:45.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:45.321" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200613 17:34:43.799" endtime="20200613 17:34:45.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:45.322" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:34:45.321" endtime="20200613 17:34:45.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:45.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:45.322" endtime="20200613 17:34:45.322"></status>
</kw>
<msg timestamp="20200613 17:34:45.323" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200613 17:34:43.798" endtime="20200613 17:34:45.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:45.323" endtime="20200613 17:34:45.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:45.326" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="09700-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:46.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:46.964" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200613 17:34:45.323" endtime="20200613 17:34:46.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:46.965" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:34:46.965" endtime="20200613 17:34:46.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:46.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:46.966" endtime="20200613 17:34:46.966"></status>
</kw>
<msg timestamp="20200613 17:34:46.966" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:34:43.775Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200613 17:34:45.323" endtime="20200613 17:34:46.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:46.966" endtime="20200613 17:34:46.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:46.969" level="INFO">Running command 'ozone sh volume update o3:///09700-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:48.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:48.396" level="INFO">${output} = {
  "metadata" : { },
  "name" : "09700-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:34:43.775Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200613 17:34:46.967" endtime="20200613 17:34:48.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:48.396" level="INFO">{
  "metadata" : { },
  "name" : "09700-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:34:43.775Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200613 17:34:48.396" endtime="20200613 17:34:48.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:48.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:48.397" endtime="20200613 17:34:48.397"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:46.967" endtime="20200613 17:34:48.397"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:48.401" level="INFO">Running command 'ozone sh volume info o3:///09700-rpcwport | jq -r '. | select(.name=="09700-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:49.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:49.981" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:34:48.398" endtime="20200613 17:34:49.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:49.982" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200613 17:34:49.981" endtime="20200613 17:34:49.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:49.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:49.982" endtime="20200613 17:34:49.982"></status>
</kw>
<msg timestamp="20200613 17:34:49.982" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:34:48.397" endtime="20200613 17:34:49.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:49.982" endtime="20200613 17:34:49.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:49.985" level="INFO">Running command 'ozone sh bucket create o3:///09700-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:51.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:51.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:49.983" endtime="20200613 17:34:51.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:51.416" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:51.415" endtime="20200613 17:34:51.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:51.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:51.416" endtime="20200613 17:34:51.416"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:49.983" endtime="20200613 17:34:51.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:51.419" level="INFO">Running command 'ozone sh bucket info o3:///09700-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:52.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:52.895" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200613 17:34:51.417" endtime="20200613 17:34:52.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:52.896" level="INFO">DISK</msg>
<status status="PASS" starttime="20200613 17:34:52.895" endtime="20200613 17:34:52.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:52.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:52.896" endtime="20200613 17:34:52.896"></status>
</kw>
<msg timestamp="20200613 17:34:52.897" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200613 17:34:51.416" endtime="20200613 17:34:52.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:52.897" endtime="20200613 17:34:52.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:52.899" level="INFO">Running command 'ozone sh bucket list o3:///09700-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:54.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:54.377" level="INFO">${output} = 09700-rpcwport</msg>
<status status="PASS" starttime="20200613 17:34:52.898" endtime="20200613 17:34:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:54.378" level="INFO">09700-rpcwport</msg>
<status status="PASS" starttime="20200613 17:34:54.377" endtime="20200613 17:34:54.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:54.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:54.378" endtime="20200613 17:34:54.378"></status>
</kw>
<msg timestamp="20200613 17:34:54.379" level="INFO">${result} = 09700-rpcwport</msg>
<status status="PASS" starttime="20200613 17:34:52.897" endtime="20200613 17:34:54.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200613 17:34:54.379" endtime="20200613 17:34:54.379"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:54.382" level="INFO">Running command 'ozone sh key put o3:///09700-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:57.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:57.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:54.380" endtime="20200613 17:34:57.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:57.111" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:57.110" endtime="20200613 17:34:57.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:57.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:57.111" endtime="20200613 17:34:57.111"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:54.380" endtime="20200613 17:34:57.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:57.115" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:57.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:57.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:57.112" endtime="20200613 17:34:57.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:57.116" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:57.116" endtime="20200613 17:34:57.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:57.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:57.117" endtime="20200613 17:34:57.117"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:57.112" endtime="20200613 17:34:57.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:57.120" level="INFO">Running command 'ozone sh key get o3:///09700-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:59.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:59.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:57.117" endtime="20200613 17:34:59.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:59.685" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:59.684" endtime="20200613 17:34:59.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:59.685" endtime="20200613 17:34:59.685"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:57.117" endtime="20200613 17:34:59.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:59.687" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:34:59.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:34:59.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:59.686" endtime="20200613 17:34:59.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:34:59.690" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:34:59.689" endtime="20200613 17:34:59.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:34:59.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:34:59.690" endtime="20200613 17:34:59.690"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:59.685" endtime="20200613 17:34:59.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:34:59.692" level="INFO">Running command 'ozone sh key put -t RATIS o3:///09700-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:02.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:02.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:34:59.691" endtime="20200613 17:35:02.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:02.621" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:02.621" endtime="20200613 17:35:02.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:02.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:02.622" endtime="20200613 17:35:02.622"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:59.690" endtime="20200613 17:35:02.622"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:02.625" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:02.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:02.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:02.623" endtime="20200613 17:35:02.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:02.627" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:02.627" endtime="20200613 17:35:02.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:02.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:02.628" endtime="20200613 17:35:02.628"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:02.622" endtime="20200613 17:35:02.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:02.630" level="INFO">Running command 'ozone sh key get o3:///09700-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:05.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:05.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:02.628" endtime="20200613 17:35:05.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:05.213" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:05.213" endtime="20200613 17:35:05.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:05.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:05.213" endtime="20200613 17:35:05.214"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:02.628" endtime="20200613 17:35:05.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:05.216" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:05.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:05.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:05.214" endtime="20200613 17:35:05.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:05.219" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:05.218" endtime="20200613 17:35:05.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:05.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:05.219" endtime="20200613 17:35:05.219"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:05.214" endtime="20200613 17:35:05.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:05.222" level="INFO">Running command 'ozone sh key info o3:///09700-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:06.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:06.831" level="INFO">${output} = {
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:01.089Z",
  "modificationTime": "2020-06-13T17:35:02.251Z",
...</msg>
<status status="PASS" starttime="20200613 17:35:05.220" endtime="20200613 17:35:06.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:06.832" level="INFO">{
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:01.089Z",
  "modificationTime": "2020-06-13T17:35:02.251Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337879930568830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:35:06.832" endtime="20200613 17:35:06.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:06.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:06.832" endtime="20200613 17:35:06.833"></status>
</kw>
<msg timestamp="20200613 17:35:06.833" level="INFO">${result} = {
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:01.089Z",
  "modificationTime": "2020-06-13T17:35:02.251Z",
...</msg>
<status status="PASS" starttime="20200613 17:35:05.219" endtime="20200613 17:35:06.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:06.833" endtime="20200613 17:35:06.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:06.837" level="INFO">Running command 'ozone sh key delete o3:///09700-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:08.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:08.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:06.834" endtime="20200613 17:35:08.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:08.237" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:08.237" endtime="20200613 17:35:08.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:08.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:08.238" endtime="20200613 17:35:08.238"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:06.834" endtime="20200613 17:35:08.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:08.241" level="INFO">Running command 'ozone sh key cp o3:///09700-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:11.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:11.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:08.239" endtime="20200613 17:35:11.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:11.023" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:11.023" endtime="20200613 17:35:11.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:11.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:11.023" endtime="20200613 17:35:11.024"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:08.238" endtime="20200613 17:35:11.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:11.027" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:11.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:11.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:11.025" endtime="20200613 17:35:11.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:11.029" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:11.029" endtime="20200613 17:35:11.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:11.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:11.029" endtime="20200613 17:35:11.029"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:11.024" endtime="20200613 17:35:11.029"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:11.031" level="INFO">Running command 'ozone sh key get o3:///09700-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:13.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:13.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:11.030" endtime="20200613 17:35:13.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:13.591" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:13.590" endtime="20200613 17:35:13.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:13.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:13.591" endtime="20200613 17:35:13.591"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:11.030" endtime="20200613 17:35:13.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:13.593" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:13.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:13.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:13.592" endtime="20200613 17:35:13.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:13.596" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:13.596" endtime="20200613 17:35:13.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:13.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:13.597" endtime="20200613 17:35:13.597"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:13.592" endtime="20200613 17:35:13.597"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:13.600" level="INFO">Running command 'ozone sh key delete o3:///09700-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:14.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:14.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:13.597" endtime="20200613 17:35:14.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:14.990" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:14.989" endtime="20200613 17:35:14.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:14.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:14.990" endtime="20200613 17:35:14.991"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:13.597" endtime="20200613 17:35:14.991"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:14.994" level="INFO">Running command 'ozone sh key get o3:///09700-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:16.295" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:35:16.295" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:35:14.992" endtime="20200613 17:35:16.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:16.296" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:35:16.295" endtime="20200613 17:35:16.296"></status>
</kw>
<msg timestamp="20200613 17:35:16.296" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:35:14.991" endtime="20200613 17:35:16.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:16.296" endtime="20200613 17:35:16.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:16.298" level="INFO">Running command 'ozone sh key get --force o3:///09700-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:19.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:19.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:16.297" endtime="20200613 17:35:19.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:19.018" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:19.018" endtime="20200613 17:35:19.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:19.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:19.019" endtime="20200613 17:35:19.019"></status>
</kw>
<msg timestamp="20200613 17:35:19.019" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:35:16.296" endtime="20200613 17:35:19.019"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:19.019" endtime="20200613 17:35:19.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:19.023" level="INFO">Running command 'ozone sh key info o3:///09700-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:20.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:20.537" level="INFO">${output} = {
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:34:55.720Z",
  "modificationTime": "2020-06-13T17:34:56.770Z",
  "rep...</msg>
<status status="PASS" starttime="20200613 17:35:19.020" endtime="20200613 17:35:20.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:20.538" level="INFO">{
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:34:55.720Z",
  "modificationTime": "2020-06-13T17:34:56.770Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337879578640510,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:35:20.537" endtime="20200613 17:35:20.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:20.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:20.538" endtime="20200613 17:35:20.539"></status>
</kw>
<msg timestamp="20200613 17:35:20.539" level="INFO">${result} = {
  "volumeName": "09700-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:34:55.720Z",
  "modificationTime": "2020-06-13T17:34:56.770Z",
  "rep...</msg>
<status status="PASS" starttime="20200613 17:35:19.020" endtime="20200613 17:35:20.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:20.539" endtime="20200613 17:35:20.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:20.542" level="INFO">Running command 'ozone sh key list o3:///09700-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:22.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:22.011" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200613 17:35:20.540" endtime="20200613 17:35:22.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:22.013" level="INFO">key1</msg>
<status status="PASS" starttime="20200613 17:35:22.012" endtime="20200613 17:35:22.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:22.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:22.013" endtime="20200613 17:35:22.014"></status>
</kw>
<msg timestamp="20200613 17:35:22.014" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200613 17:35:20.539" endtime="20200613 17:35:22.014"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:22.014" endtime="20200613 17:35:22.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:22.018" level="INFO">Running command 'ozone sh key rename o3:///09700-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:23.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:23.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:22.015" endtime="20200613 17:35:23.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:23.379" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:23.378" endtime="20200613 17:35:23.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:23.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:23.379" endtime="20200613 17:35:23.379"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:22.015" endtime="20200613 17:35:23.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:23.382" level="INFO">Running command 'ozone sh key list o3:///09700-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:24.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:24.826" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200613 17:35:23.380" endtime="20200613 17:35:24.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:24.827" level="INFO">key2</msg>
<status status="PASS" starttime="20200613 17:35:24.827" endtime="20200613 17:35:24.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:24.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:24.827" endtime="20200613 17:35:24.828"></status>
</kw>
<msg timestamp="20200613 17:35:24.828" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200613 17:35:23.379" endtime="20200613 17:35:24.828"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:24.828" endtime="20200613 17:35:24.829"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:24.831" level="INFO">Running command 'ozone sh key delete o3:///09700-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:26.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:26.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:24.829" endtime="20200613 17:35:26.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:26.266" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:26.266" endtime="20200613 17:35:26.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:26.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:26.266" endtime="20200613 17:35:26.267"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:24.829" endtime="20200613 17:35:26.267"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:54.380" endtime="20200613 17:35:26.267"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:54.379" endtime="20200613 17:35:26.267"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:26.269" level="INFO">Running command 'ozone sh bucket delete o3:///09700-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:27.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:27.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:26.268" endtime="20200613 17:35:27.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:27.680" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:27.679" endtime="20200613 17:35:27.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:27.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:27.680" endtime="20200613 17:35:27.680"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:26.267" endtime="20200613 17:35:27.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:27.683" level="INFO">Running command 'ozone sh volume delete o3:///09700-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:28.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:28.988" level="INFO">${output} = Volume 09700-rpcwport is deleted</msg>
<status status="PASS" starttime="20200613 17:35:27.681" endtime="20200613 17:35:28.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:28.989" level="INFO">Volume 09700-rpcwport is deleted</msg>
<status status="PASS" starttime="20200613 17:35:28.988" endtime="20200613 17:35:28.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:28.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:28.989" endtime="20200613 17:35:28.989"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:27.680" endtime="20200613 17:35:28.989"></status>
</kw>
<status status="PASS" starttime="20200613 17:34:41.226" endtime="20200613 17:35:28.989"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:34:41.225" endtime="20200613 17:35:28.990" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:28.991" endtime="20200613 17:35:28.991"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:28.995" level="INFO">Running command 'ozone sh volume info /09700-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:30.338" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:35:30.338" level="INFO">${output} = VOLUME_NOT_FOUND Volume 09700-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200613 17:35:28.992" endtime="20200613 17:35:30.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:30.338" level="INFO">VOLUME_NOT_FOUND Volume 09700-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200613 17:35:30.338" endtime="20200613 17:35:30.339"></status>
</kw>
<msg timestamp="20200613 17:35:30.339" level="INFO">${result} = VOLUME_NOT_FOUND Volume 09700-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200613 17:35:28.992" endtime="20200613 17:35:30.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:30.339" endtime="20200613 17:35:30.339"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:30.341" level="INFO">Running command 'ozone sh volume create /09700-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:31.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:31.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:30.340" endtime="20200613 17:35:31.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:31.749" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:31.749" endtime="20200613 17:35:31.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:31.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:31.750" endtime="20200613 17:35:31.750"></status>
</kw>
<msg timestamp="20200613 17:35:31.750" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:35:30.339" endtime="20200613 17:35:31.750"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:31.750" endtime="20200613 17:35:31.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:31.753" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="09700-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:33.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:33.211" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200613 17:35:31.751" endtime="20200613 17:35:33.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:33.212" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:35:33.211" endtime="20200613 17:35:33.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:33.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:33.212" endtime="20200613 17:35:33.213"></status>
</kw>
<msg timestamp="20200613 17:35:33.213" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200613 17:35:31.751" endtime="20200613 17:35:33.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:33.213" endtime="20200613 17:35:33.213"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:33.216" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="09700-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:34.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:34.685" level="INFO">${output} = {
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200613 17:35:33.214" endtime="20200613 17:35:34.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:34.686" level="INFO">{
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200613 17:35:34.685" endtime="20200613 17:35:34.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:34.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:34.686" endtime="20200613 17:35:34.686"></status>
</kw>
<msg timestamp="20200613 17:35:34.686" level="INFO">${result} = {
  "metadata": {},
  "name": "09700-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-13T17:35:31.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200613 17:35:33.214" endtime="20200613 17:35:34.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:34.687" endtime="20200613 17:35:34.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:34.690" level="INFO">Running command 'ozone sh volume update /09700-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:36.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:36.140" level="INFO">${output} = {
  "metadata" : { },
  "name" : "09700-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:35:31.630Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200613 17:35:34.687" endtime="20200613 17:35:36.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:36.141" level="INFO">{
  "metadata" : { },
  "name" : "09700-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-13T17:35:31.630Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200613 17:35:36.140" endtime="20200613 17:35:36.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:36.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:36.141" endtime="20200613 17:35:36.141"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:34.687" endtime="20200613 17:35:36.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:36.144" level="INFO">Running command 'ozone sh volume info /09700-rpcwoscheme | jq -r '. | select(.name=="09700-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:37.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:37.531" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:35:36.142" endtime="20200613 17:35:37.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:37.532" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200613 17:35:37.531" endtime="20200613 17:35:37.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:37.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:37.532" endtime="20200613 17:35:37.532"></status>
</kw>
<msg timestamp="20200613 17:35:37.532" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200613 17:35:36.142" endtime="20200613 17:35:37.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:37.532" endtime="20200613 17:35:37.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:37.535" level="INFO">Running command 'ozone sh bucket create /09700-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:38.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:38.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:37.533" endtime="20200613 17:35:38.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:38.766" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:38.766" endtime="20200613 17:35:38.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:38.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:38.767" endtime="20200613 17:35:38.767"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:37.533" endtime="20200613 17:35:38.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:38.769" level="INFO">Running command 'ozone sh bucket info /09700-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:40.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:40.154" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200613 17:35:38.768" endtime="20200613 17:35:40.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:40.155" level="INFO">DISK</msg>
<status status="PASS" starttime="20200613 17:35:40.154" endtime="20200613 17:35:40.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:40.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:40.155" endtime="20200613 17:35:40.155"></status>
</kw>
<msg timestamp="20200613 17:35:40.155" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200613 17:35:38.767" endtime="20200613 17:35:40.155"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:40.155" endtime="20200613 17:35:40.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:40.159" level="INFO">Running command 'ozone sh bucket list /09700-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:41.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:41.752" level="INFO">${output} = 09700-rpcwoscheme</msg>
<status status="PASS" starttime="20200613 17:35:40.156" endtime="20200613 17:35:41.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:41.753" level="INFO">09700-rpcwoscheme</msg>
<status status="PASS" starttime="20200613 17:35:41.752" endtime="20200613 17:35:41.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:41.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:41.753" endtime="20200613 17:35:41.753"></status>
</kw>
<msg timestamp="20200613 17:35:41.753" level="INFO">${result} = 09700-rpcwoscheme</msg>
<status status="PASS" starttime="20200613 17:35:40.156" endtime="20200613 17:35:41.753"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:41.754" endtime="20200613 17:35:41.754"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:41.758" level="INFO">Running command 'ozone sh key put /09700-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:44.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:44.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:41.755" endtime="20200613 17:35:44.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:44.501" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:44.501" endtime="20200613 17:35:44.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:44.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:44.501" endtime="20200613 17:35:44.502"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:41.755" endtime="20200613 17:35:44.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:44.504" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:44.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:44.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:44.502" endtime="20200613 17:35:44.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:44.507" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:44.507" endtime="20200613 17:35:44.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:44.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:44.507" endtime="20200613 17:35:44.508"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:44.502" endtime="20200613 17:35:44.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:44.510" level="INFO">Running command 'ozone sh key get /09700-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:47.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:47.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:44.509" endtime="20200613 17:35:47.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:47.096" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:47.095" endtime="20200613 17:35:47.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:47.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:47.096" endtime="20200613 17:35:47.096"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:44.508" endtime="20200613 17:35:47.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:47.099" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:47.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:47.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:47.097" endtime="20200613 17:35:47.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:47.102" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:47.102" endtime="20200613 17:35:47.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:47.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:47.102" endtime="20200613 17:35:47.103"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:47.097" endtime="20200613 17:35:47.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:47.105" level="INFO">Running command 'ozone sh key put -t RATIS /09700-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:49.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:49.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:47.103" endtime="20200613 17:35:49.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:49.742" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:49.741" endtime="20200613 17:35:49.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:49.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:49.742" endtime="20200613 17:35:49.742"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:47.103" endtime="20200613 17:35:49.743"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:49.745" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:49.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:49.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:49.743" endtime="20200613 17:35:49.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:49.747" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:49.747" endtime="20200613 17:35:49.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:49.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:49.748" endtime="20200613 17:35:49.748"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:49.743" endtime="20200613 17:35:49.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:49.750" level="INFO">Running command 'ozone sh key get /09700-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:52.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:52.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:49.748" endtime="20200613 17:35:52.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:52.284" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:52.283" endtime="20200613 17:35:52.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:52.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:52.284" endtime="20200613 17:35:52.284"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:49.748" endtime="20200613 17:35:52.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:52.287" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:52.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:52.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:52.285" endtime="20200613 17:35:52.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:52.290" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:52.290" endtime="20200613 17:35:52.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:52.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:52.290" endtime="20200613 17:35:52.291"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:52.285" endtime="20200613 17:35:52.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:52.294" level="INFO">Running command 'ozone sh key info /09700-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:53.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:53.738" level="INFO">${output} = {
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:48.437Z",
  "modificationTime": "2020-06-13T17:35:49.396Z...</msg>
<status status="PASS" starttime="20200613 17:35:52.291" endtime="20200613 17:35:53.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:53.739" level="INFO">{
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:48.437Z",
  "modificationTime": "2020-06-13T17:35:49.396Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337883033501820,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:35:53.738" endtime="20200613 17:35:53.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:53.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:53.739" endtime="20200613 17:35:53.740"></status>
</kw>
<msg timestamp="20200613 17:35:53.740" level="INFO">${result} = {
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:48.437Z",
  "modificationTime": "2020-06-13T17:35:49.396Z...</msg>
<status status="PASS" starttime="20200613 17:35:52.291" endtime="20200613 17:35:53.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200613 17:35:53.740" endtime="20200613 17:35:53.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:53.744" level="INFO">Running command 'ozone sh key delete /09700-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:55.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:55.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:53.741" endtime="20200613 17:35:55.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:55.080" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:55.079" endtime="20200613 17:35:55.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:55.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:55.080" endtime="20200613 17:35:55.080"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:53.740" endtime="20200613 17:35:55.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:55.082" level="INFO">Running command 'ozone sh key cp /09700-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:58.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:58.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:55.081" endtime="20200613 17:35:58.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:58.002" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:58.002" endtime="20200613 17:35:58.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:58.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:58.002" endtime="20200613 17:35:58.003"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:55.081" endtime="20200613 17:35:58.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:58.005" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:35:58.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:35:58.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:58.003" endtime="20200613 17:35:58.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:35:58.008" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:35:58.008" endtime="20200613 17:35:58.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:35:58.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:35:58.008" endtime="20200613 17:35:58.009"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:58.003" endtime="20200613 17:35:58.009"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:35:58.012" level="INFO">Running command 'ozone sh key get /09700-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:00.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:00.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:35:58.010" endtime="20200613 17:36:00.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:00.591" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:00.591" endtime="20200613 17:36:00.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:00.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:00.592" endtime="20200613 17:36:00.592"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:58.010" endtime="20200613 17:36:00.592"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:00.594" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:00.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:00.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:00.592" endtime="20200613 17:36:00.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:00.597" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:00.597" endtime="20200613 17:36:00.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:00.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:00.597" endtime="20200613 17:36:00.598"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:00.592" endtime="20200613 17:36:00.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:00.600" level="INFO">Running command 'ozone sh key delete /09700-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:01.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:01.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:00.598" endtime="20200613 17:36:01.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:01.965" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:01.965" endtime="20200613 17:36:01.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:01.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:01.966" endtime="20200613 17:36:01.966"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:00.598" endtime="20200613 17:36:01.966"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:01.968" level="INFO">Running command 'ozone sh key get /09700-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:03.406" level="INFO">${rc} = 255</msg>
<msg timestamp="20200613 17:36:03.406" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:36:01.967" endtime="20200613 17:36:03.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:03.407" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:36:03.406" endtime="20200613 17:36:03.407"></status>
</kw>
<msg timestamp="20200613 17:36:03.408" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200613 17:36:01.966" endtime="20200613 17:36:03.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:36:03.408" endtime="20200613 17:36:03.408"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:03.412" level="INFO">Running command 'ozone sh key get --force /09700-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:06.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:06.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:03.409" endtime="20200613 17:36:06.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:06.142" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:06.141" endtime="20200613 17:36:06.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:06.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:06.142" endtime="20200613 17:36:06.143"></status>
</kw>
<msg timestamp="20200613 17:36:06.143" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200613 17:36:03.409" endtime="20200613 17:36:06.143"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200613 17:36:06.143" endtime="20200613 17:36:06.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:06.146" level="INFO">Running command 'ozone sh key info /09700-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:07.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:07.747" level="INFO">${output} = {
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:42.982Z",
  "modificationTime": "2020-06-13T17:35:44.050Z",
  "...</msg>
<status status="PASS" starttime="20200613 17:36:06.144" endtime="20200613 17:36:07.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:07.748" level="INFO">{
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:42.982Z",
  "modificationTime": "2020-06-13T17:35:44.050Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104337882676002940,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200613 17:36:07.747" endtime="20200613 17:36:07.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:07.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:07.748" endtime="20200613 17:36:07.749"></status>
</kw>
<msg timestamp="20200613 17:36:07.749" level="INFO">${result} = {
  "volumeName": "09700-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-13T17:35:42.982Z",
  "modificationTime": "2020-06-13T17:35:44.050Z",
  "...</msg>
<status status="PASS" starttime="20200613 17:36:06.143" endtime="20200613 17:36:07.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200613 17:36:07.749" endtime="20200613 17:36:07.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:07.753" level="INFO">Running command 'ozone sh key list /09700-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:09.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:09.114" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200613 17:36:07.750" endtime="20200613 17:36:09.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:09.115" level="INFO">key1</msg>
<status status="PASS" starttime="20200613 17:36:09.114" endtime="20200613 17:36:09.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:09.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:09.115" endtime="20200613 17:36:09.115"></status>
</kw>
<msg timestamp="20200613 17:36:09.116" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200613 17:36:07.749" endtime="20200613 17:36:09.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:36:09.116" endtime="20200613 17:36:09.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:09.119" level="INFO">Running command 'ozone sh key rename /09700-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:10.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:10.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:09.117" endtime="20200613 17:36:10.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:10.412" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:10.411" endtime="20200613 17:36:10.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:10.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:10.412" endtime="20200613 17:36:10.412"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:09.116" endtime="20200613 17:36:10.412"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:10.415" level="INFO">Running command 'ozone sh key list /09700-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:12.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:12.234" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200613 17:36:10.413" endtime="20200613 17:36:12.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:12.235" level="INFO">key2</msg>
<status status="PASS" starttime="20200613 17:36:12.235" endtime="20200613 17:36:12.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:12.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:12.235" endtime="20200613 17:36:12.236"></status>
</kw>
<msg timestamp="20200613 17:36:12.236" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200613 17:36:10.412" endtime="20200613 17:36:12.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200613 17:36:12.236" endtime="20200613 17:36:12.236"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:12.238" level="INFO">Running command 'ozone sh key delete /09700-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:13.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:13.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:12.236" endtime="20200613 17:36:13.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:13.526" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:13.525" endtime="20200613 17:36:13.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:13.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:13.526" endtime="20200613 17:36:13.526"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:12.236" endtime="20200613 17:36:13.526"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:41.754" endtime="20200613 17:36:13.526"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:41.754" endtime="20200613 17:36:13.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:13.529" level="INFO">Running command 'ozone sh bucket delete /09700-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:14.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:14.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200613 17:36:13.527" endtime="20200613 17:36:14.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:14.891" level="INFO"></msg>
<status status="PASS" starttime="20200613 17:36:14.891" endtime="20200613 17:36:14.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:14.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:14.892" endtime="20200613 17:36:14.892"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:13.527" endtime="20200613 17:36:14.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:36:14.894" level="INFO">Running command 'ozone sh volume delete /09700-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:36:16.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:36:16.177" level="INFO">${output} = Volume 09700-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200613 17:36:14.892" endtime="20200613 17:36:16.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:36:16.178" level="INFO">Volume 09700-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200613 17:36:16.178" endtime="20200613 17:36:16.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:36:16.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:36:16.178" endtime="20200613 17:36:16.179"></status>
</kw>
<status status="PASS" starttime="20200613 17:36:14.892" endtime="20200613 17:36:16.179"></status>
</kw>
<status status="PASS" starttime="20200613 17:35:28.991" endtime="20200613 17:36:16.179"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200613 17:35:28.990" endtime="20200613 17:36:16.179" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200613 17:33:17.954" endtime="20200613 17:36:16.180"></status>
</suite>
<status status="PASS" starttime="20200613 17:31:59.140" endtime="20200613 17:36:16.183"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
