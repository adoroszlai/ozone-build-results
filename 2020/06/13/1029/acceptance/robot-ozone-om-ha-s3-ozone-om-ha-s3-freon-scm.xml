<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 17:25:13.123" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:25:13.161" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:25:20.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:25:20.041" level="INFO">${output} = 2020-06-13 17:25:13,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:14,029 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:13.158" endtime="20200613 17:25:20.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:25:20.042" level="INFO">2020-06-13 17:25:13,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:14,029 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:25:14,029 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:25:14,596 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 17:25:14,597 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-13 17:25:14,599 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 17:25:14,602 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:25:14,627 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-57073, with hadoop as owner.
2020-06-13 17:25:14,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-57073/bucket-0-43470, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:25:15,031 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:25:15,608 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,033
Average Time spent in bucket creation: 00:00:00,019
Average Time spent in key creation: 00:00:00,044
Average Time spent in key write: 00:00:00,466
Total bytes written: 10240
Total Execution time: 00:00:05,552
***************************************************</msg>
<status status="PASS" starttime="20200613 17:25:20.041" endtime="20200613 17:25:20.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:25:20.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:25:20.042" endtime="20200613 17:25:20.043"></status>
</kw>
<msg timestamp="20200613 17:25:20.043" level="INFO">${result} = 2020-06-13 17:25:13,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:14,029 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:13.157" endtime="20200613 17:25:20.043"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:25:20.043" endtime="20200613 17:25:20.044"></status>
</kw>
<status status="PASS" starttime="20200613 17:25:20.043" endtime="20200613 17:25:20.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:25:13.157" endtime="20200613 17:25:20.044" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:25:20.047" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:25:24.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:25:24.019" level="INFO">${output} = 2020-06-13 17:25:20,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:20,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:20.046" endtime="20200613 17:25:24.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:25:24.021" level="INFO">2020-06-13 17:25:20,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:20,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:25:20,876 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:25:21,007 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ivqzv5df5d
2020-06-13 17:25:21,029 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:25:21,520 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-13 17:25:21,553 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:25:21,991 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:25:22,033 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:25:23,034 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:25:23,695 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1035.741031, max=1035.741031, mean=1035.741031, stddev=0.0, median=1035.741031, p75=1035.741031, p95=1035.741031, p98=1035.741031, p99=1035.741031, p999=1035.741031, mean_rate=0.4707576129971421, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:25:23,695 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-13 17:25:23,695 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:25:23,695 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:25:24.020" endtime="20200613 17:25:24.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:25:24.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:25:24.021" endtime="20200613 17:25:24.022"></status>
</kw>
<msg timestamp="20200613 17:25:24.022" level="INFO">${result} = 2020-06-13 17:25:20,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:20,876 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:20.045" endtime="20200613 17:25:24.022"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:25:24.022" endtime="20200613 17:25:24.023"></status>
</kw>
<status status="PASS" starttime="20200613 17:25:24.022" endtime="20200613 17:25:24.023"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:25:20.044" endtime="20200613 17:25:24.023" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:25:24.026" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:25:26.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:25:26.580" level="INFO">${output} = 2020-06-13 17:25:24,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:24,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:24.024" endtime="20200613 17:25:26.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:25:26.580" level="INFO">2020-06-13 17:25:24,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:24,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:25:24,886 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:25:24,989 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ohtkijcil3
2020-06-13 17:25:25,003 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:25:26,014 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:25:26,571 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=47.913576, max=47.913576, mean=47.913576, stddev=0.0, median=47.913576, p75=47.913576, p95=47.913576, p98=47.913576, p99=47.913576, p999=47.913576, mean_rate=0.9024061248859311, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:25:26,572 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-13 17:25:26,572 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:25:26,572 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:25:26.580" endtime="20200613 17:25:26.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:25:26.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:25:26.581" endtime="20200613 17:25:26.581"></status>
</kw>
<msg timestamp="20200613 17:25:26.581" level="INFO">${result} = 2020-06-13 17:25:24,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:24,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:24.024" endtime="20200613 17:25:26.581"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:25:26.582" endtime="20200613 17:25:26.582"></status>
</kw>
<status status="PASS" starttime="20200613 17:25:26.581" endtime="20200613 17:25:26.582"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:25:24.023" endtime="20200613 17:25:26.582" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:25:26.587" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:25:29.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:25:29.147" level="INFO">${output} = 2020-06-13 17:25:27,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:27,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:26.584" endtime="20200613 17:25:29.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:25:29.148" level="INFO">2020-06-13 17:25:27,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:27,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:25:27,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:25:27,677 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2fvgam4pb4
2020-06-13 17:25:27,689 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-13 17:25:28,701 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-13 17:25:29,125 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.620635, max=17.620635, mean=17.620635, stddev=0.0, median=17.620635, p75=17.620635, p95=17.620635, p98=17.620635, p99=17.620635, p999=17.620635, mean_rate=0.9794214100536898, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-13 17:25:29,129 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2020-06-13 17:25:29,129 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-13 17:25:29,129 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200613 17:25:29.147" endtime="20200613 17:25:29.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:25:29.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:25:29.148" endtime="20200613 17:25:29.149"></status>
</kw>
<msg timestamp="20200613 17:25:29.149" level="INFO">${result} = 2020-06-13 17:25:27,388 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:25:27,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:25:26.584" endtime="20200613 17:25:29.149"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:25:29.149" endtime="20200613 17:25:29.150"></status>
</kw>
<status status="PASS" starttime="20200613 17:25:29.149" endtime="20200613 17:25:29.150"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:25:26.583" endtime="20200613 17:25:29.150" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200613 17:25:13.141" endtime="20200613 17:25:29.151"></status>
</suite>
<status status="PASS" starttime="20200613 17:25:13.123" endtime="20200613 17:25:29.153"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
