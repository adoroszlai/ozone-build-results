<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200613 17:40:44.370" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:44.416" endtime="20200613 17:40:44.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:44.419" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.255" level="INFO">${output} = 2020-06-13 17:40:45,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:40:45,185 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200613 17:40:44.416" endtime="20200613 17:40:51.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.256" level="INFO">2020-06-13 17:40:45,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-13 17:40:45,185 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-13 17:40:45,185 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-13 17:40:45,791 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-13 17:40:45,792 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-13 17:40:45,794 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-13 17:40:45,804 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-13 17:40:45,826 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-39944, with hadoop as owner.
2020-06-13 17:40:45,847 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-39944/bucket-0-05160, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-13 17:40:46,327 [pool-2-thread-7] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-13 17:40:46,810 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,002
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,069
Average Time spent in key write: 00:00:00,486
Total bytes written: 10250
Total Execution time: 00:00:05,586
***************************************************</msg>
<status status="PASS" starttime="20200613 17:40:51.255" endtime="20200613 17:40:51.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.256" endtime="20200613 17:40:51.256"></status>
</kw>
<status status="PASS" starttime="20200613 17:40:44.416" endtime="20200613 17:40:51.257"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:40:44.415" endtime="20200613 17:40:51.257" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.258" endtime="20200613 17:40:51.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.261" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.405" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.259" endtime="20200613 17:40:51.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.406" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0   1303      0 --:--:-- --:--:-- --:--:--  1309
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":144},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200613 17:40:51.405" endtime="20200613 17:40:51.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.406" endtime="20200613 17:40:51.406"></status>
</kw>
<msg timestamp="20200613 17:40:51.407" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.259" endtime="20200613 17:40:51.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.407" endtime="20200613 17:40:51.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.409" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.429" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.407" endtime="20200613 17:40:51.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.430" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3120
&lt; 
{ [data not shown]

100  3120  100  3120    0     0   206k      0 --:--:-- --:--:-- --:--:--  217k
* Connection #0 to host recon left intact
[{"volume":"vol-3-78635","bucket":"bucket-4-69622","fileSize":16384,"count":5},{"volume":"vol-4-77006","bucket":"bucket-4-30384","fileSize":16384,"count":5},{"volume":"vol-0-99746","bucket":"bucket-2-23354","fileSize":16384,"count":5},{"volume":"vol-4-77006","bucket":"bucket-2-54117","fileSize":16384,"count":5},{"volume":"vol-2-64181","bucket":"bucket-2-62452","fileSize":16384,"count":5},{"volume":"vol-3-78635","bucket":"bucket-1-20379","fileSize":16384,"count":5},{"volume":"vol-1-69531","bucket":"bucket-1-52653","fileSize":16384,"count":5},{"volume":"vol-1-69531","bucket":"bucket-0-77240","fileSize":16384,"count":5},{"volume":"vol-0-99746","bucket":"bucket-3-01501","fileSize":16384,"count":5},{"volume":"vol-0-99746","bucket":"bucket-0-41997","fileSize":16384,"count":5},{"volume":"vol-1-69531","bucket":"bucket-4-88836","fileSize":16384,"count":5},{"volume":"vol-2-64181","bucket":"bucket-3-54643","fileSize":16384,"count":5},{"volume":"vol-4-77006","bucket":"bucket-0-87739","fileSize":16384,"count":5},{"volume":"vol-3-78635","bucket":"bucket-0-62922","fileSize":16384,"count":5},{"volume":"vol-3-78635","bucket":"bucket-2-91174","fileSize":16384,"count":5},{"volume":"vol-0-99746","bucket":"bucket-4-62202","fileSize":16384,"count":5},{"volume":"vol-2-64181","bucket":"bucket-4-31716","fileSize":16384,"count":5},{"volume":"vol-2-64181","bucket":"bucket-1-01349","fileSize":16384,"count":5},{"volume":"vol-4-77006","bucket":"bucket-1-72067","fileSize":16384,"count":5},{"volume":"vol-4-77006","bucket":"bucket-3-64838","fileSize":16384,"count":5},{"volume":"vol-3-78635","bucket":"bucket-3-08546","fileSize":16384,"count":5},{"volume":"vol-2-64181","bucket":"bucket-0-55760","fileSize":16384,"count":5},{"volume":"vol-1-69531","bucket":"bucket-2-92525","fileSize":16384,"count":5},{"volume":"vol-1-69531","bucket":"bucket-3-09063","fileSize":16384,"count":5},{"volume":"vol-0-99746","bucket":"bucket-1-18281","fileSize":16384,"count":5},{"volume":"09700-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09700-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09700-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29833","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-44788","fileSize":1024,"count":2},{"volume":"vol-0-39944","bucket":"bucket-0-05160","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-34830","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72309","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29833","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-62568","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-05836","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200613 17:40:51.430" endtime="20200613 17:40:51.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.430" endtime="20200613 17:40:51.431"></status>
</kw>
<msg timestamp="20200613 17:40:51.431" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.407" endtime="20200613 17:40:51.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.431" endtime="20200613 17:40:51.431"></status>
</kw>
<status status="PASS" starttime="20200613 17:40:51.258" endtime="20200613 17:40:51.431"></status>
</kw>
<status status="PASS" starttime="20200613 17:40:51.258" endtime="20200613 17:40:51.431"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:40:51.257" endtime="20200613 17:40:51.431" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.435" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.453" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.433" endtime="20200613 17:40:51.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.454" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0   121k      0 --:--:-- --:--:-- --:--:--  128k
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"5eeb495e-c9fe-4d9d-9e18-29b968671662","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1592070047056,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17452294144},"pipelines":[{"pipelineID":"51fb5f05-a222-4a0f-a22c-328654326108","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"215fbaed-6413-4a6e-8080-e68fdcf1fb52","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":2},{"uuid":"57fef531-f123-4f3a-9bb0-ffe4b5d00590","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1592070047078,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17452294144},"pipelines":[{"pipelineID":"215fbaed-6413-4a6e-8080-e68fdcf1fb52","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"81b55365-b9d2-4bd0-8b15-3c07b5918cb8","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"b1bcd529-66e1-443f-a5cd-306070b3f61e","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1592070046978,"storageReport":{"capacity":89311358976,"used":8192,"remaining":17458532352},"pipelines":[{"pipelineID":"215fbaed-6413-4a6e-8080-e68fdcf1fb52","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"74f2920a-7e4c-488c-9437-0ce7df9ac265","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200613 17:40:51.453" endtime="20200613 17:40:51.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.454" endtime="20200613 17:40:51.454"></status>
</kw>
<msg timestamp="20200613 17:40:51.454" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.433" endtime="20200613 17:40:51.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.454" endtime="20200613 17:40:51.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.455" endtime="20200613 17:40:51.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.455" endtime="20200613 17:40:51.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.455" endtime="20200613 17:40:51.456"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.459" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.474" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.456" endtime="20200613 17:40:51.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.475" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1244
&lt; 
{ [data not shown]

100  1244  100  1244    0     0   105k      0 --:--:-- --:--:-- --:--:--  110k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"51fb5f05-a222-4a0f-a22c-328654326108","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":543086,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"215fbaed-6413-4a6e-8080-e68fdcf1fb52","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":542346,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"74f2920a-7e4c-488c-9437-0ce7df9ac265","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":542352,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"81b55365-b9d2-4bd0-8b15-3c07b5918cb8","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":542911,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200613 17:40:51.474" endtime="20200613 17:40:51.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.475" endtime="20200613 17:40:51.475"></status>
</kw>
<msg timestamp="20200613 17:40:51.476" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.456" endtime="20200613 17:40:51.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.476" endtime="20200613 17:40:51.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.476" endtime="20200613 17:40:51.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.476" endtime="20200613 17:40:51.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.477" endtime="20200613 17:40:51.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.477" endtime="20200613 17:40:51.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.477" endtime="20200613 17:40:51.477"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.479" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.491" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.478" endtime="20200613 17:40:51.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.492" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  26083      0 --:--:-- --:--:-- --:--:-- 26571
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":52363120640},"containers":4,"volumes":17,"buckets":48,"keys":164}</msg>
<status status="PASS" starttime="20200613 17:40:51.491" endtime="20200613 17:40:51.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.492" endtime="20200613 17:40:51.492"></status>
</kw>
<msg timestamp="20200613 17:40:51.492" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.477" endtime="20200613 17:40:51.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.492" endtime="20200613 17:40:51.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.493" endtime="20200613 17:40:51.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.493" endtime="20200613 17:40:51.493"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.495" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.509" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.494" endtime="20200613 17:40:51.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.510" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  39935      0 --:--:-- --:--:-- --:--:-- 41800
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1592069582831,"lastReportTimestamp":1592069972837},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1592069582820,"lastReportTimestamp":1592070002818},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1592069582702,"lastReportTimestamp":1592070002663}]</msg>
<status status="PASS" starttime="20200613 17:40:51.509" endtime="20200613 17:40:51.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.510" endtime="20200613 17:40:51.510"></status>
</kw>
<msg timestamp="20200613 17:40:51.511" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.493" endtime="20200613 17:40:51.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.511" endtime="20200613 17:40:51.511"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:40:51.432" endtime="20200613 17:40:51.511" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.513" endtime="20200613 17:40:51.513"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200613 17:40:51.515" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200613 17:40:51.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200613 17:40:51.526" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.514" endtime="20200613 17:40:51.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200613 17:40:51.527" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.3...
* Connected to recon (172.23.0.3) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Date: Sat, 13 Jun 2020 17:40:51 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Sat, 13 Jun 2020 17:10:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   326k      0 --:--:-- --:--:-- --:--:--  368k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.526" endtime="20200613 17:40:51.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200613 17:40:51.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200613 17:40:51.527" endtime="20200613 17:40:51.527"></status>
</kw>
<msg timestamp="20200613 17:40:51.527" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200613 17:40:51.513" endtime="20200613 17:40:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200613 17:40:51.527" endtime="20200613 17:40:51.528"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200613 17:40:51.512" endtime="20200613 17:40:51.528" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200613 17:40:44.394" endtime="20200613 17:40:51.528"></status>
</suite>
<status status="PASS" starttime="20200613 17:40:44.371" endtime="20200613 17:40:51.530"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
