<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200629 13:56:09.566" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200629 13:56:09.626" endtime="20200629 13:56:09.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:56:09.630" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:56:09.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:56:09.721" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 13:56:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 29 Jun 2020 13:24:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200629 13:56:09.627" endtime="20200629 13:56:09.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:56:09.722" level="INFO">HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 13:56:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 29 Jun 2020 13:24:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200629 13:56:09.722" endtime="20200629 13:56:09.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:56:09.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:56:09.723" endtime="20200629 13:56:09.723"></status>
</kw>
<msg timestamp="20200629 13:56:09.723" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 13:56:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 29 Jun 2020 13:24:30 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200629 13:56:09.626" endtime="20200629 13:56:09.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200629 13:56:09.724" endtime="20200629 13:56:09.724"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:56:09.625" endtime="20200629 13:56:09.724" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:56:09.725" endtime="20200629 13:56:09.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:56:09.730" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:10.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:10.362" level="INFO">${output} = 2020-06-29 13:56:11,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:56:11,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:56:09.726" endtime="20200629 13:57:10.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:10.363" level="INFO">2020-06-29 13:56:11,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:56:11,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 13:56:11,517 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 13:56:13,419 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-29 13:56:13,420 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-29 13:56:13,422 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-29 13:56:13,424 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-29 13:56:13,425 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-29 13:56:13,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28244, with hadoop as owner.
2020-06-29 13:56:13,758 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-51082, with hadoop as owner.
2020-06-29 13:56:13,780 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-21781, with hadoop as owner.
2020-06-29 13:56:13,795 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-36396, with hadoop as owner.
2020-06-29 13:56:13,804 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-19072, with hadoop as owner.
2020-06-29 13:56:13,827 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28244/bucket-0-87157, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,924 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51082/bucket-0-38566, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21781/bucket-0-79939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36396/bucket-0-79476, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,960 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-19072/bucket-0-80730, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,975 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28244/bucket-1-21922, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,985 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51082/bucket-1-60781, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:13,994 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21781/bucket-1-78887, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,002 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36396/bucket-1-62193, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,017 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-19072/bucket-1-73924, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,028 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28244/bucket-2-58005, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,037 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51082/bucket-2-07699, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,048 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21781/bucket-2-29313, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,060 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36396/bucket-2-72974, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,071 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-19072/bucket-2-60967, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,079 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28244/bucket-3-34601, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,084 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51082/bucket-3-15888, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,087 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21781/bucket-3-22310, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,098 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36396/bucket-3-92650, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,120 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-19072/bucket-3-51261, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,129 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-28244/bucket-4-11431, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,139 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-51082/bucket-4-62064, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,154 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-21781/bucket-4-26132, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,164 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-36396/bucket-4-24632, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,176 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-19072/bucket-4-21352, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:56:14,439 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-29 13:56:15,297 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 13:56:15,440 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-29 13:56:16,440 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-29 13:56:17,442 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-29 13:56:18,470 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-06-29 13:56:19,470 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-06-29 13:56:20,471 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-06-29 13:56:21,471 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-29 13:56:22,472 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-29 13:56:23,472 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-29 13:56:24,473 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-06-29 13:56:25,473 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-29 13:56:26,474 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-29 13:56:27,474 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-29 13:56:28,474 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-29 13:56:29,475 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-29 13:56:30,476 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-06-29 13:56:31,477 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-06-29 13:56:32,477 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-06-29 13:56:33,478 [Thread-7] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-29 13:56:34,478 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-29 13:56:35,479 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-29 13:56:36,479 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-06-29 13:56:37,480 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-29 13:56:38,480 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-29 13:56:39,481 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-29 13:56:40,481 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-06-29 13:56:41,482 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-06-29 13:56:42,482 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-29 13:56:43,482 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-29 13:56:44,483 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-29 13:56:45,483 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-29 13:56:46,484 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-29 13:56:47,484 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-29 13:56:48,484 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-29 13:56:49,485 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-29 13:56:50,485 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-06-29 13:56:51,486 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-29 13:56:52,487 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-29 13:56:53,487 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-29 13:56:54,487 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-29 13:56:55,488 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-29 13:56:56,489 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-29 13:56:57,489 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-06-29 13:56:58,489 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-06-29 13:56:59,491 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-06-29 13:57:00,492 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-29 13:57:01,492 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-29 13:57:02,493 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-29 13:57:03,493 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-29 13:57:04,493 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-29 13:57:05,494 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,331
Average Time spent in bucket creation: 00:00:00,217
Average Time spent in key creation: 00:00:02,299
Average Time spent in key write: 00:00:00,847
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:58,273
***************************************************</msg>
<status status="PASS" starttime="20200629 13:57:10.362" endtime="20200629 13:57:10.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:10.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:10.364" endtime="20200629 13:57:10.364"></status>
</kw>
<msg timestamp="20200629 13:57:10.364" level="INFO">${result} = 2020-06-29 13:56:11,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:56:11,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:56:09.726" endtime="20200629 13:57:10.364"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:10.365" endtime="20200629 13:57:10.365"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:10.365" endtime="20200629 13:57:10.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:10.366" endtime="20200629 13:57:10.366"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:56:09.725" endtime="20200629 13:57:10.366" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200629 13:56:09.598" endtime="20200629 13:57:10.367"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200629 13:57:10.375" level="INFO">${random} = 58068</msg>
<status status="PASS" starttime="20200629 13:57:10.375" endtime="20200629 13:57:10.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200629 13:57:10.376" level="INFO">${prefix} = 58068</msg>
<status status="PASS" starttime="20200629 13:57:10.376" endtime="20200629 13:57:10.376"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:10.375" endtime="20200629 13:57:10.376"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:10.377" endtime="20200629 13:57:10.377"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:10.381" level="INFO">Running command 'ozone sh volume info o3://om:9862/58068-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:13.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 13:57:13.050" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58068-rpcwoport is not found</msg>
<status status="PASS" starttime="20200629 13:57:10.378" endtime="20200629 13:57:13.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:13.051" level="INFO">VOLUME_NOT_FOUND Volume 58068-rpcwoport is not found</msg>
<status status="PASS" starttime="20200629 13:57:13.050" endtime="20200629 13:57:13.051"></status>
</kw>
<msg timestamp="20200629 13:57:13.051" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58068-rpcwoport is not found</msg>
<status status="PASS" starttime="20200629 13:57:10.378" endtime="20200629 13:57:13.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:13.052" endtime="20200629 13:57:13.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:13.056" level="INFO">Running command 'ozone sh volume create o3://om:9862/58068-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:15.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:15.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:13.053" endtime="20200629 13:57:15.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:15.636" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:15.635" endtime="20200629 13:57:15.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:15.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:15.636" endtime="20200629 13:57:15.637"></status>
</kw>
<msg timestamp="20200629 13:57:15.638" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 13:57:13.052" endtime="20200629 13:57:15.638"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:15.638" endtime="20200629 13:57:15.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:15.641" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="58068-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:18.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:18.800" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200629 13:57:15.639" endtime="20200629 13:57:18.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:18.801" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 13:57:18.800" endtime="20200629 13:57:18.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:18.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:18.801" endtime="20200629 13:57:18.802"></status>
</kw>
<msg timestamp="20200629 13:57:18.802" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200629 13:57:15.638" endtime="20200629 13:57:18.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:18.802" endtime="20200629 13:57:18.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:18.806" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="58068-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:21.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:21.601" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200629 13:57:18.803" endtime="20200629 13:57:21.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:21.602" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 13:57:21.602" endtime="20200629 13:57:21.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:21.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:21.602" endtime="20200629 13:57:21.603"></status>
</kw>
<msg timestamp="20200629 13:57:21.603" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:57:15.571Z",
  "modificationTime": "2020-06-29T13:57:15.571Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200629 13:57:18.803" endtime="20200629 13:57:21.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:21.603" endtime="20200629 13:57:21.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:21.607" level="INFO">Running command 'ozone sh volume update o3://om:9862/58068-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:24.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:24.476" level="INFO">${output} = {
  "metadata" : { },
  "name" : "58068-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T13:57:15.571Z",
  "modificationTime" : "2020-06-29T13:57:24.005Z",
  "acl...</msg>
<status status="PASS" starttime="20200629 13:57:21.605" endtime="20200629 13:57:24.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:24.477" level="INFO">{
  "metadata" : { },
  "name" : "58068-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T13:57:15.571Z",
  "modificationTime" : "2020-06-29T13:57:24.005Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200629 13:57:24.476" endtime="20200629 13:57:24.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:24.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:24.477" endtime="20200629 13:57:24.478"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:21.604" endtime="20200629 13:57:24.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:24.481" level="INFO">Running command 'ozone sh volume info o3://om:9862/58068-rpcwoport | jq -r '. | select(.name=="58068-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:27.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:27.428" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200629 13:57:24.479" endtime="20200629 13:57:27.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:27.429" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200629 13:57:27.428" endtime="20200629 13:57:27.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:27.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:27.429" endtime="20200629 13:57:27.430"></status>
</kw>
<msg timestamp="20200629 13:57:27.430" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200629 13:57:24.478" endtime="20200629 13:57:27.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:27.430" endtime="20200629 13:57:27.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:27.434" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58068-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:30.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:30.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:27.431" endtime="20200629 13:57:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:30.162" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:30.161" endtime="20200629 13:57:30.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:30.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:30.162" endtime="20200629 13:57:30.162"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:27.431" endtime="20200629 13:57:30.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:30.165" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58068-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:33.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:33.051" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200629 13:57:30.163" endtime="20200629 13:57:33.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:33.052" level="INFO">DISK</msg>
<status status="PASS" starttime="20200629 13:57:33.051" endtime="20200629 13:57:33.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:33.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:33.052" endtime="20200629 13:57:33.053"></status>
</kw>
<msg timestamp="20200629 13:57:33.053" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200629 13:57:30.163" endtime="20200629 13:57:33.053"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:33.053" endtime="20200629 13:57:33.054"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:33.057" level="INFO">Running command 'ozone sh bucket list o3://om:9862/58068-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:36.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:36.056" level="INFO">${output} = 58068-rpcwoport</msg>
<status status="PASS" starttime="20200629 13:57:33.054" endtime="20200629 13:57:36.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:36.057" level="INFO">58068-rpcwoport</msg>
<status status="PASS" starttime="20200629 13:57:36.057" endtime="20200629 13:57:36.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:36.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:36.058" endtime="20200629 13:57:36.058"></status>
</kw>
<msg timestamp="20200629 13:57:36.058" level="INFO">${result} = 58068-rpcwoport</msg>
<status status="PASS" starttime="20200629 13:57:33.054" endtime="20200629 13:57:36.058"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:36.059" endtime="20200629 13:57:36.059"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:36.063" level="INFO">Running command 'ozone sh key put o3://om:9862/58068-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:40.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:40.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:36.061" endtime="20200629 13:57:40.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:40.714" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:40.713" endtime="20200629 13:57:40.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:40.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:40.714" endtime="20200629 13:57:40.714"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:36.060" endtime="20200629 13:57:40.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:40.717" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:40.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:40.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:40.715" endtime="20200629 13:57:40.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:40.720" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:40.720" endtime="20200629 13:57:40.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:40.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:40.720" endtime="20200629 13:57:40.721"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:40.715" endtime="20200629 13:57:40.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:40.723" level="INFO">Running command 'ozone sh key get o3://om:9862/58068-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:45.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:45.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:40.722" endtime="20200629 13:57:45.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:45.375" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:45.374" endtime="20200629 13:57:45.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:45.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:45.375" endtime="20200629 13:57:45.376"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:40.721" endtime="20200629 13:57:45.376"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:45.379" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:45.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:45.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:45.377" endtime="20200629 13:57:45.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:45.384" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:45.383" endtime="20200629 13:57:45.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:45.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:45.384" endtime="20200629 13:57:45.385"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:45.377" endtime="20200629 13:57:45.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:45.388" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/58068-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:50.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:50.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:45.386" endtime="20200629 13:57:50.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:50.509" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:50.508" endtime="20200629 13:57:50.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:50.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:50.509" endtime="20200629 13:57:50.510"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:45.385" endtime="20200629 13:57:50.510"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:50.513" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:50.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:50.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:50.511" endtime="20200629 13:57:50.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:50.516" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:50.515" endtime="20200629 13:57:50.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:50.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:50.516" endtime="20200629 13:57:50.517"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:50.510" endtime="20200629 13:57:50.517"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:50.519" level="INFO">Running command 'ozone sh key get o3://om:9862/58068-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:55.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:55.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:50.517" endtime="20200629 13:57:55.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:55.070" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:55.069" endtime="20200629 13:57:55.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:55.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:55.070" endtime="20200629 13:57:55.071"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:50.517" endtime="20200629 13:57:55.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:55.074" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:55.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:55.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:55.072" endtime="20200629 13:57:55.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:55.077" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:57:55.076" endtime="20200629 13:57:55.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:55.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:55.077" endtime="20200629 13:57:55.078"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:55.071" endtime="20200629 13:57:55.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:55.081" level="INFO">Running command 'ozone sh key info o3://om:9862/58068-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:57:58.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:57:58.105" level="INFO">${output} = {
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:47.946Z",
  "modificationTime": "2020-06-29T13:57:49.979Z",...</msg>
<status status="PASS" starttime="20200629 13:57:55.079" endtime="20200629 13:57:58.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:57:58.106" level="INFO">{
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:47.946Z",
  "modificationTime": "2020-06-29T13:57:49.979Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427622756778110,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 13:57:58.105" endtime="20200629 13:57:58.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:57:58.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:57:58.106" endtime="20200629 13:57:58.107"></status>
</kw>
<msg timestamp="20200629 13:57:58.107" level="INFO">${result} = {
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:47.946Z",
  "modificationTime": "2020-06-29T13:57:49.979Z",...</msg>
<status status="PASS" starttime="20200629 13:57:55.078" endtime="20200629 13:57:58.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200629 13:57:58.107" endtime="20200629 13:57:58.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:57:58.112" level="INFO">Running command 'ozone sh key delete o3://om:9862/58068-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:00.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:00.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:57:58.108" endtime="20200629 13:58:00.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:00.916" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:00.916" endtime="20200629 13:58:00.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:00.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:00.917" endtime="20200629 13:58:00.917"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:58.108" endtime="20200629 13:58:00.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:00.932" level="INFO">Running command 'ozone sh key cp o3://om:9862/58068-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:06.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:06.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:00.918" endtime="20200629 13:58:06.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:06.030" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:06.029" endtime="20200629 13:58:06.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:06.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:06.030" endtime="20200629 13:58:06.031"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:00.918" endtime="20200629 13:58:06.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:06.033" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:06.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:06.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:06.032" endtime="20200629 13:58:06.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:06.036" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:06.036" endtime="20200629 13:58:06.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:06.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:06.037" endtime="20200629 13:58:06.037"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:06.031" endtime="20200629 13:58:06.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:06.040" level="INFO">Running command 'ozone sh key get o3://om:9862/58068-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:10.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:10.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:06.038" endtime="20200629 13:58:10.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:10.364" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:10.363" endtime="20200629 13:58:10.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:10.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:10.364" endtime="20200629 13:58:10.365"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:06.038" endtime="20200629 13:58:10.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:10.368" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:10.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:10.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:10.366" endtime="20200629 13:58:10.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:10.370" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:10.370" endtime="20200629 13:58:10.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:10.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:10.371" endtime="20200629 13:58:10.372"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:10.365" endtime="20200629 13:58:10.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:10.375" level="INFO">Running command 'ozone sh key delete o3://om:9862/58068-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:13.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:13.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:10.373" endtime="20200629 13:58:13.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:13.160" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:13.159" endtime="20200629 13:58:13.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:13.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:13.161" endtime="20200629 13:58:13.161"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:10.373" endtime="20200629 13:58:13.162"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:13.165" level="INFO">Running command 'ozone sh key get o3://om:9862/58068-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:15.806" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 13:58:15.806" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 13:58:13.163" endtime="20200629 13:58:15.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:15.807" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 13:58:15.807" endtime="20200629 13:58:15.808"></status>
</kw>
<msg timestamp="20200629 13:58:15.808" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 13:58:13.162" endtime="20200629 13:58:15.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:15.808" endtime="20200629 13:58:15.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:15.812" level="INFO">Running command 'ozone sh key get --force o3://om:9862/58068-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:20.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:20.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:15.809" endtime="20200629 13:58:20.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:20.286" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:20.285" endtime="20200629 13:58:20.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:20.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:20.286" endtime="20200629 13:58:20.286"></status>
</kw>
<msg timestamp="20200629 13:58:20.287" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 13:58:15.809" endtime="20200629 13:58:20.287"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:20.287" endtime="20200629 13:58:20.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:20.291" level="INFO">Running command 'ozone sh key info o3://om:9862/58068-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:23.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:23.215" level="INFO">${output} = {
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:38.524Z",
  "modificationTime": "2020-06-29T13:57:40.338Z",
  "re...</msg>
<status status="PASS" starttime="20200629 13:58:20.288" endtime="20200629 13:58:23.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:23.216" level="INFO">{
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:38.524Z",
  "modificationTime": "2020-06-29T13:57:40.338Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427622139429000,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 13:58:23.215" endtime="20200629 13:58:23.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:23.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:23.216" endtime="20200629 13:58:23.217"></status>
</kw>
<msg timestamp="20200629 13:58:23.217" level="INFO">${result} = {
  "volumeName": "58068-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T13:57:38.524Z",
  "modificationTime": "2020-06-29T13:57:40.338Z",
  "re...</msg>
<status status="PASS" starttime="20200629 13:58:20.287" endtime="20200629 13:58:23.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:23.217" endtime="20200629 13:58:23.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:23.221" level="INFO">Running command 'ozone sh key list o3://om:9862/58068-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:26.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:26.089" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200629 13:58:23.218" endtime="20200629 13:58:26.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:26.090" level="INFO">key1</msg>
<status status="PASS" starttime="20200629 13:58:26.089" endtime="20200629 13:58:26.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:26.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:26.090" endtime="20200629 13:58:26.091"></status>
</kw>
<msg timestamp="20200629 13:58:26.091" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200629 13:58:23.217" endtime="20200629 13:58:26.091"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:26.091" endtime="20200629 13:58:26.092"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:26.094" level="INFO">Running command 'ozone sh key rename o3://om:9862/58068-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:28.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:28.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:26.092" endtime="20200629 13:58:28.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:28.774" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:28.773" endtime="20200629 13:58:28.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:28.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:28.774" endtime="20200629 13:58:28.775"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:26.092" endtime="20200629 13:58:28.775"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:28.779" level="INFO">Running command 'ozone sh key list o3://om:9862/58068-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:31.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:31.796" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200629 13:58:28.776" endtime="20200629 13:58:31.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:31.797" level="INFO">key2</msg>
<status status="PASS" starttime="20200629 13:58:31.796" endtime="20200629 13:58:31.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:31.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:31.797" endtime="20200629 13:58:31.798"></status>
</kw>
<msg timestamp="20200629 13:58:31.798" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200629 13:58:28.775" endtime="20200629 13:58:31.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:31.798" endtime="20200629 13:58:31.798"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:31.801" level="INFO">Running command 'ozone sh key delete o3://om:9862/58068-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:34.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:34.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:31.799" endtime="20200629 13:58:34.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:34.522" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:34.522" endtime="20200629 13:58:34.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:34.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:34.523" endtime="20200629 13:58:34.523"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:31.799" endtime="20200629 13:58:34.524"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:36.060" endtime="20200629 13:58:34.524"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:36.059" endtime="20200629 13:58:34.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:34.526" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/58068-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:37.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:37.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:34.524" endtime="20200629 13:58:37.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:37.292" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:37.291" endtime="20200629 13:58:37.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:37.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:37.293" endtime="20200629 13:58:37.294"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:34.524" endtime="20200629 13:58:37.295"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:37.299" level="INFO">Running command 'ozone sh volume delete o3://om:9862/58068-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:40.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:40.036" level="INFO">${output} = Volume 58068-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200629 13:58:37.296" endtime="20200629 13:58:40.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:40.037" level="INFO">Volume 58068-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200629 13:58:40.037" endtime="20200629 13:58:40.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:40.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:40.038" endtime="20200629 13:58:40.038"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:37.295" endtime="20200629 13:58:40.038"></status>
</kw>
<status status="PASS" starttime="20200629 13:57:10.377" endtime="20200629 13:58:40.039"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 13:57:10.376" endtime="20200629 13:58:40.039" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:40.040" endtime="20200629 13:58:40.040"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:40.044" level="INFO">Running command 'ozone sh volume create o3://om:9862/58068-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:42.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:42.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:58:40.042" endtime="20200629 13:58:42.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:42.602" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:58:42.601" endtime="20200629 13:58:42.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:42.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:42.602" endtime="20200629 13:58:42.602"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:40.041" endtime="20200629 13:58:42.603"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:42.606" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58068-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:45.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:45.515" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:58:42.603" endtime="20200629 13:58:45.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:45.516" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:58:45.516" endtime="20200629 13:58:45.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:45.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:45.517" endtime="20200629 13:58:45.517"></status>
</kw>
<msg timestamp="20200629 13:58:45.517" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:58:42.603" endtime="20200629 13:58:45.517"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:45.518" endtime="20200629 13:58:45.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:45.522" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/58068-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:48.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:48.245" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200629 13:58:45.519" endtime="20200629 13:58:48.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:48.246" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200629 13:58:48.245" endtime="20200629 13:58:48.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:48.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:48.247" endtime="20200629 13:58:48.247"></status>
</kw>
<msg timestamp="20200629 13:58:48.248" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200629 13:58:45.519" endtime="20200629 13:58:48.248"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:48.250" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58068-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:50.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:50.760" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:58:48.248" endtime="20200629 13:58:50.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:50.761" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:58:50.760" endtime="20200629 13:58:50.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:50.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:50.761" endtime="20200629 13:58:50.762"></status>
</kw>
<msg timestamp="20200629 13:58:50.762" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:58:48.248" endtime="20200629 13:58:50.762"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:50.762" endtime="20200629 13:58:50.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:50.767" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/58068-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:53.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:53.082" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200629 13:58:50.764" endtime="20200629 13:58:53.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:53.083" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200629 13:58:53.083" endtime="20200629 13:58:53.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:53.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:53.084" endtime="20200629 13:58:53.084"></status>
</kw>
<msg timestamp="20200629 13:58:53.084" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200629 13:58:50.763" endtime="20200629 13:58:53.084"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:53.087" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58068-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:55.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:55.625" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:58:53.085" endtime="20200629 13:58:55.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:55.626" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:58:55.626" endtime="20200629 13:58:55.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:55.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:55.626" endtime="20200629 13:58:55.627"></status>
</kw>
<msg timestamp="20200629 13:58:55.627" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:58:53.084" endtime="20200629 13:58:55.627"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:58:55.627" endtime="20200629 13:58:55.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:55.631" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/58068-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:58:58.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:58:58.051" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:58:55.629" endtime="20200629 13:58:58.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:58:58.053" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:58:58.052" endtime="20200629 13:58:58.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:58:58.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:58:58.053" endtime="20200629 13:58:58.053"></status>
</kw>
<msg timestamp="20200629 13:58:58.054" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:58:55.628" endtime="20200629 13:58:58.054"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:58:58.056" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58068-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:00.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:00.605" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200629 13:58:58.054" endtime="20200629 13:59:00.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:00.606" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:00.605" endtime="20200629 13:59:00.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:00.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:00.606" endtime="20200629 13:59:00.606"></status>
</kw>
<msg timestamp="20200629 13:59:00.607" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200629 13:58:58.054" endtime="20200629 13:59:00.607"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:00.607" endtime="20200629 13:59:00.607"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:00.607" endtime="20200629 13:59:00.608"></status>
</kw>
<status status="PASS" starttime="20200629 13:58:40.041" endtime="20200629 13:59:00.608"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 13:58:40.039" endtime="20200629 13:59:00.609" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:00.609" endtime="20200629 13:59:00.610"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:00.614" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58068-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:02.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:02.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:59:00.612" endtime="20200629 13:59:02.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:02.905" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:59:02.904" endtime="20200629 13:59:02.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:02.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:02.905" endtime="20200629 13:59:02.906"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:00.611" endtime="20200629 13:59:02.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:02.910" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58068-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:05.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:05.647" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:02.907" endtime="20200629 13:59:05.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:05.648" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:05.647" endtime="20200629 13:59:05.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:05.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:05.649" endtime="20200629 13:59:05.649"></status>
</kw>
<msg timestamp="20200629 13:59:05.650" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:02.906" endtime="20200629 13:59:05.650"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:05.650" endtime="20200629 13:59:05.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:05.653" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/58068-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:07.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:07.905" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200629 13:59:05.651" endtime="20200629 13:59:07.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:07.906" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200629 13:59:07.906" endtime="20200629 13:59:07.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:07.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:07.907" endtime="20200629 13:59:07.907"></status>
</kw>
<msg timestamp="20200629 13:59:07.907" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200629 13:59:05.650" endtime="20200629 13:59:07.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:07.910" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58068-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:10.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:10.570" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:07.908" endtime="20200629 13:59:10.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:10.571" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:10.570" endtime="20200629 13:59:10.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:10.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:10.571" endtime="20200629 13:59:10.572"></status>
</kw>
<msg timestamp="20200629 13:59:10.572" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:07.908" endtime="20200629 13:59:10.572"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:10.572" endtime="20200629 13:59:10.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:10.576" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/58068-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:13.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:13.276" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:10.574" endtime="20200629 13:59:13.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:13.277" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:13.276" endtime="20200629 13:59:13.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:13.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:13.277" endtime="20200629 13:59:13.278"></status>
</kw>
<msg timestamp="20200629 13:59:13.278" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:10.573" endtime="20200629 13:59:13.278"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:13.282" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58068-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:16.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:16.129" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:13.279" endtime="20200629 13:59:16.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:16.130" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:16.129" endtime="20200629 13:59:16.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:16.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:16.130" endtime="20200629 13:59:16.131"></status>
</kw>
<msg timestamp="20200629 13:59:16.131" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:13.278" endtime="20200629 13:59:16.131"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:16.131" endtime="20200629 13:59:16.132"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:16.135" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/58068-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:18.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:18.871" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:16.133" endtime="20200629 13:59:18.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:18.872" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:18.871" endtime="20200629 13:59:18.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:18.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:18.872" endtime="20200629 13:59:18.873"></status>
</kw>
<msg timestamp="20200629 13:59:18.873" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:16.132" endtime="20200629 13:59:18.873"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:18.875" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58068-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:21.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:21.629" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200629 13:59:18.874" endtime="20200629 13:59:21.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:21.630" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:21.629" endtime="20200629 13:59:21.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:21.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:21.630" endtime="20200629 13:59:21.630"></status>
</kw>
<msg timestamp="20200629 13:59:21.631" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200629 13:59:18.873" endtime="20200629 13:59:21.631"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:21.631" endtime="20200629 13:59:21.631"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:21.632" endtime="20200629 13:59:21.632"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:00.610" endtime="20200629 13:59:21.632"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 13:59:00.609" endtime="20200629 13:59:21.632" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:21.634" endtime="20200629 13:59:21.634"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:21.637" level="INFO">Running command 'ozone sh key put o3://om:9862/58068-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:26.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:26.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:59:21.635" endtime="20200629 13:59:26.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:26.484" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:59:26.483" endtime="20200629 13:59:26.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:26.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:26.484" endtime="20200629 13:59:26.484"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:21.635" endtime="20200629 13:59:26.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:26.487" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58068-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:29.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:29.333" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:26.485" endtime="20200629 13:59:29.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:29.334" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:29.333" endtime="20200629 13:59:29.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:29.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:29.334" endtime="20200629 13:59:29.335"></status>
</kw>
<msg timestamp="20200629 13:59:29.335" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:26.485" endtime="20200629 13:59:29.335"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:29.335" endtime="20200629 13:59:29.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:29.339" level="INFO">Running command 'ozone sh key addacl o3://om:9862/58068-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:32.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:32.008" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200629 13:59:29.336" endtime="20200629 13:59:32.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:32.009" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200629 13:59:32.009" endtime="20200629 13:59:32.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:32.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:32.010" endtime="20200629 13:59:32.010"></status>
</kw>
<msg timestamp="20200629 13:59:32.010" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200629 13:59:29.336" endtime="20200629 13:59:32.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:32.013" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58068-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:34.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:34.883" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:32.011" endtime="20200629 13:59:34.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:34.884" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:34.883" endtime="20200629 13:59:34.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:34.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:34.884" endtime="20200629 13:59:34.885"></status>
</kw>
<msg timestamp="20200629 13:59:34.885" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:32.011" endtime="20200629 13:59:34.885"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:34.885" endtime="20200629 13:59:34.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:34.889" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/58068-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:37.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:37.656" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:34.887" endtime="20200629 13:59:37.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:37.657" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:37.656" endtime="20200629 13:59:37.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:37.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:37.657" endtime="20200629 13:59:37.657"></status>
</kw>
<msg timestamp="20200629 13:59:37.658" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200629 13:59:34.886" endtime="20200629 13:59:37.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:37.661" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58068-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:40.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:40.425" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:37.658" endtime="20200629 13:59:40.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:40.427" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:40.426" endtime="20200629 13:59:40.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:40.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:40.427" endtime="20200629 13:59:40.427"></status>
</kw>
<msg timestamp="20200629 13:59:40.428" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200629 13:59:37.658" endtime="20200629 13:59:40.428"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:40.428" endtime="20200629 13:59:40.428"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:40.431" level="INFO">Running command 'ozone sh key setacl o3://om:9862/58068-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:43.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:43.270" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:40.429" endtime="20200629 13:59:43.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:43.271" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:43.270" endtime="20200629 13:59:43.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:43.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:43.271" endtime="20200629 13:59:43.272"></status>
</kw>
<msg timestamp="20200629 13:59:43.272" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200629 13:59:40.429" endtime="20200629 13:59:43.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:43.275" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58068-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:46.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:46.032" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200629 13:59:43.273" endtime="20200629 13:59:46.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:46.033" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200629 13:59:46.032" endtime="20200629 13:59:46.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:46.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:46.033" endtime="20200629 13:59:46.034"></status>
</kw>
<msg timestamp="20200629 13:59:46.034" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200629 13:59:43.272" endtime="20200629 13:59:46.034"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:46.034" endtime="20200629 13:59:46.035"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:46.035" endtime="20200629 13:59:46.036"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:21.634" endtime="20200629 13:59:46.036"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 13:59:21.633" endtime="20200629 13:59:46.036" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:46.038" endtime="20200629 13:59:46.038"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:46.041" level="INFO">Running command 'ozone sh volume info o3:///58068-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:48.648" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 13:59:48.649" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58068-rpcwport is not found</msg>
<status status="PASS" starttime="20200629 13:59:46.040" endtime="20200629 13:59:48.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:48.650" level="INFO">VOLUME_NOT_FOUND Volume 58068-rpcwport is not found</msg>
<status status="PASS" starttime="20200629 13:59:48.649" endtime="20200629 13:59:48.651"></status>
</kw>
<msg timestamp="20200629 13:59:48.651" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58068-rpcwport is not found</msg>
<status status="PASS" starttime="20200629 13:59:46.039" endtime="20200629 13:59:48.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:48.651" endtime="20200629 13:59:48.651"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:48.655" level="INFO">Running command 'ozone sh volume create o3:///58068-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:51.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:51.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 13:59:48.652" endtime="20200629 13:59:51.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:51.262" level="INFO"></msg>
<status status="PASS" starttime="20200629 13:59:51.261" endtime="20200629 13:59:51.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:51.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:51.262" endtime="20200629 13:59:51.263"></status>
</kw>
<msg timestamp="20200629 13:59:51.263" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 13:59:48.652" endtime="20200629 13:59:51.263"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:51.263" endtime="20200629 13:59:51.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:51.267" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="58068-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:54.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:54.157" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200629 13:59:51.265" endtime="20200629 13:59:54.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:54.158" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 13:59:54.157" endtime="20200629 13:59:54.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:54.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:54.158" endtime="20200629 13:59:54.159"></status>
</kw>
<msg timestamp="20200629 13:59:54.159" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200629 13:59:51.264" endtime="20200629 13:59:54.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:54.159" endtime="20200629 13:59:54.160"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:54.162" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="58068-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:59:57.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:59:57.313" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200629 13:59:54.160" endtime="20200629 13:59:57.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:59:57.314" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 13:59:57.314" endtime="20200629 13:59:57.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:59:57.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:59:57.315" endtime="20200629 13:59:57.315"></status>
</kw>
<msg timestamp="20200629 13:59:57.315" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T13:59:51.152Z",
  "modificationTime": "2020-06-29T13:59:51.152Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200629 13:59:54.160" endtime="20200629 13:59:57.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 13:59:57.316" endtime="20200629 13:59:57.316"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:59:57.320" level="INFO">Running command 'ozone sh volume update o3:///58068-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:00.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:00.221" level="INFO">${output} = {
  "metadata" : { },
  "name" : "58068-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T13:59:51.152Z",
  "modificationTime" : "2020-06-29T13:59:59.817Z",
  "acls...</msg>
<status status="PASS" starttime="20200629 13:59:57.317" endtime="20200629 14:00:00.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:00.222" level="INFO">{
  "metadata" : { },
  "name" : "58068-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T13:59:51.152Z",
  "modificationTime" : "2020-06-29T13:59:59.817Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200629 14:00:00.222" endtime="20200629 14:00:00.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:00.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:00.223" endtime="20200629 14:00:00.223"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:57.316" endtime="20200629 14:00:00.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:00.228" level="INFO">Running command 'ozone sh volume info o3:///58068-rpcwport | jq -r '. | select(.name=="58068-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:03.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:03.116" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200629 14:00:00.224" endtime="20200629 14:00:03.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:03.117" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200629 14:00:03.116" endtime="20200629 14:00:03.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:03.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:03.117" endtime="20200629 14:00:03.118"></status>
</kw>
<msg timestamp="20200629 14:00:03.118" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200629 14:00:00.224" endtime="20200629 14:00:03.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:03.118" endtime="20200629 14:00:03.118"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:03.122" level="INFO">Running command 'ozone sh bucket create o3:///58068-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:05.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:05.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:03.119" endtime="20200629 14:00:05.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:05.664" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:05.663" endtime="20200629 14:00:05.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:05.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:05.664" endtime="20200629 14:00:05.664"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:03.118" endtime="20200629 14:00:05.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:05.669" level="INFO">Running command 'ozone sh bucket info o3:///58068-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:08.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:08.668" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200629 14:00:05.665" endtime="20200629 14:00:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:08.669" level="INFO">DISK</msg>
<status status="PASS" starttime="20200629 14:00:08.669" endtime="20200629 14:00:08.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:08.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:08.669" endtime="20200629 14:00:08.670"></status>
</kw>
<msg timestamp="20200629 14:00:08.670" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200629 14:00:05.665" endtime="20200629 14:00:08.670"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:08.670" endtime="20200629 14:00:08.671"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:08.673" level="INFO">Running command 'ozone sh bucket list o3:///58068-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:11.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:11.934" level="INFO">${output} = 58068-rpcwport</msg>
<status status="PASS" starttime="20200629 14:00:08.672" endtime="20200629 14:00:11.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:11.935" level="INFO">58068-rpcwport</msg>
<status status="PASS" starttime="20200629 14:00:11.934" endtime="20200629 14:00:11.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:11.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:11.935" endtime="20200629 14:00:11.936"></status>
</kw>
<msg timestamp="20200629 14:00:11.936" level="INFO">${result} = 58068-rpcwport</msg>
<status status="PASS" starttime="20200629 14:00:08.671" endtime="20200629 14:00:11.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:11.936" endtime="20200629 14:00:11.937"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:11.940" level="INFO">Running command 'ozone sh key put o3:///58068-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:16.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:16.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:11.938" endtime="20200629 14:00:16.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:16.673" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:16.672" endtime="20200629 14:00:16.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:16.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:16.673" endtime="20200629 14:00:16.673"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:11.938" endtime="20200629 14:00:16.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:16.676" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:16.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:16.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:16.674" endtime="20200629 14:00:16.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:16.679" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:16.679" endtime="20200629 14:00:16.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:16.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:16.680" endtime="20200629 14:00:16.680"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:16.674" endtime="20200629 14:00:16.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:16.682" level="INFO">Running command 'ozone sh key get o3:///58068-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:21.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:21.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:16.681" endtime="20200629 14:00:21.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:21.052" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:21.051" endtime="20200629 14:00:21.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:21.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:21.052" endtime="20200629 14:00:21.052"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:16.680" endtime="20200629 14:00:21.053"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:21.055" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:21.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:21.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:21.053" endtime="20200629 14:00:21.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:21.058" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:21.057" endtime="20200629 14:00:21.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:21.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:21.058" endtime="20200629 14:00:21.059"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:21.053" endtime="20200629 14:00:21.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:21.062" level="INFO">Running command 'ozone sh key put -t RATIS o3:///58068-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:25.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:25.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:21.060" endtime="20200629 14:00:25.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:25.565" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:25.565" endtime="20200629 14:00:25.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:25.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:25.566" endtime="20200629 14:00:25.566"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:21.059" endtime="20200629 14:00:25.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:25.569" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:25.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:25.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:25.567" endtime="20200629 14:00:25.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:25.572" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:25.572" endtime="20200629 14:00:25.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:25.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:25.572" endtime="20200629 14:00:25.573"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:25.567" endtime="20200629 14:00:25.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:25.578" level="INFO">Running command 'ozone sh key get o3:///58068-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:30.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:30.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:25.574" endtime="20200629 14:00:30.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:30.225" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:30.225" endtime="20200629 14:00:30.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:30.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:30.225" endtime="20200629 14:00:30.226"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:25.573" endtime="20200629 14:00:30.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:30.229" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:30.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:30.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:30.227" endtime="20200629 14:00:30.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:30.232" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:30.231" endtime="20200629 14:00:30.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:30.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:30.232" endtime="20200629 14:00:30.233"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:30.226" endtime="20200629 14:00:30.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:30.244" level="INFO">Running command 'ozone sh key info o3:///58068-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:33.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:33.132" level="INFO">${output} = {
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:23.467Z",
  "modificationTime": "2020-06-29T14:00:25.127Z",
...</msg>
<status status="PASS" starttime="20200629 14:00:30.241" endtime="20200629 14:00:33.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:33.133" level="INFO">{
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:23.467Z",
  "modificationTime": "2020-06-29T14:00:25.127Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427632949002370,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 14:00:33.132" endtime="20200629 14:00:33.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:33.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:33.133" endtime="20200629 14:00:33.134"></status>
</kw>
<msg timestamp="20200629 14:00:33.134" level="INFO">${result} = {
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:23.467Z",
  "modificationTime": "2020-06-29T14:00:25.127Z",
...</msg>
<status status="PASS" starttime="20200629 14:00:30.233" endtime="20200629 14:00:33.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:33.134" endtime="20200629 14:00:33.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:33.137" level="INFO">Running command 'ozone sh key delete o3:///58068-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:35.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:35.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:33.135" endtime="20200629 14:00:35.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:35.751" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:35.750" endtime="20200629 14:00:35.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:35.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:35.751" endtime="20200629 14:00:35.752"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:33.135" endtime="20200629 14:00:35.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:35.755" level="INFO">Running command 'ozone sh key cp o3:///58068-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:40.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:40.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:35.753" endtime="20200629 14:00:40.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:40.632" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:40.631" endtime="20200629 14:00:40.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:40.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:40.632" endtime="20200629 14:00:40.633"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:35.752" endtime="20200629 14:00:40.633"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:40.636" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:40.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:40.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:40.633" endtime="20200629 14:00:40.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:40.641" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:40.640" endtime="20200629 14:00:40.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:40.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:40.641" endtime="20200629 14:00:40.641"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:40.633" endtime="20200629 14:00:40.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:40.646" level="INFO">Running command 'ozone sh key get o3:///58068-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:45.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:45.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:40.643" endtime="20200629 14:00:45.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:45.149" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:45.149" endtime="20200629 14:00:45.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:45.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:45.150" endtime="20200629 14:00:45.150"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:40.642" endtime="20200629 14:00:45.150"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:45.153" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:45.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:45.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:45.151" endtime="20200629 14:00:45.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:45.156" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:45.155" endtime="20200629 14:00:45.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:45.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:45.156" endtime="20200629 14:00:45.157"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:45.150" endtime="20200629 14:00:45.157"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:45.159" level="INFO">Running command 'ozone sh key delete o3:///58068-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:47.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:47.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:45.157" endtime="20200629 14:00:47.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:47.982" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:47.982" endtime="20200629 14:00:47.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:47.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:47.983" endtime="20200629 14:00:47.983"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:45.157" endtime="20200629 14:00:47.983"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:47.986" level="INFO">Running command 'ozone sh key get o3:///58068-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:50.659" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 14:00:50.659" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:00:47.984" endtime="20200629 14:00:50.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:50.660" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:00:50.660" endtime="20200629 14:00:50.660"></status>
</kw>
<msg timestamp="20200629 14:00:50.661" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:00:47.984" endtime="20200629 14:00:50.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:50.661" endtime="20200629 14:00:50.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:50.664" level="INFO">Running command 'ozone sh key get --force o3:///58068-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:55.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:55.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:00:50.662" endtime="20200629 14:00:55.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:55.506" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:00:55.506" endtime="20200629 14:00:55.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:55.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:55.507" endtime="20200629 14:00:55.508"></status>
</kw>
<msg timestamp="20200629 14:00:55.509" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 14:00:50.661" endtime="20200629 14:00:55.509"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:55.509" endtime="20200629 14:00:55.509"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:55.512" level="INFO">Running command 'ozone sh key info o3:///58068-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:00:58.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:00:58.519" level="INFO">${output} = {
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:14.558Z",
  "modificationTime": "2020-06-29T14:00:16.205Z",
  "rep...</msg>
<status status="PASS" starttime="20200629 14:00:55.510" endtime="20200629 14:00:58.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:00:58.520" level="INFO">{
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:14.558Z",
  "modificationTime": "2020-06-29T14:00:16.205Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427632365207680,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 14:00:58.519" endtime="20200629 14:00:58.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:00:58.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:00:58.520" endtime="20200629 14:00:58.521"></status>
</kw>
<msg timestamp="20200629 14:00:58.521" level="INFO">${result} = {
  "volumeName": "58068-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:00:14.558Z",
  "modificationTime": "2020-06-29T14:00:16.205Z",
  "rep...</msg>
<status status="PASS" starttime="20200629 14:00:55.510" endtime="20200629 14:00:58.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 14:00:58.521" endtime="20200629 14:00:58.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:00:58.524" level="INFO">Running command 'ozone sh key list o3:///58068-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:01.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:01.995" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200629 14:00:58.522" endtime="20200629 14:01:01.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:01.996" level="INFO">key1</msg>
<status status="PASS" starttime="20200629 14:01:01.995" endtime="20200629 14:01:01.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:01.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:01.996" endtime="20200629 14:01:01.997"></status>
</kw>
<msg timestamp="20200629 14:01:01.997" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200629 14:00:58.522" endtime="20200629 14:01:01.997"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:01.998" endtime="20200629 14:01:01.999"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:02.006" level="INFO">Running command 'ozone sh key rename o3:///58068-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:04.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:04.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:02.003" endtime="20200629 14:01:04.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:04.576" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:04.575" endtime="20200629 14:01:04.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:04.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:04.576" endtime="20200629 14:01:04.577"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:01.999" endtime="20200629 14:01:04.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:04.580" level="INFO">Running command 'ozone sh key list o3:///58068-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:07.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:07.534" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200629 14:01:04.578" endtime="20200629 14:01:07.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:07.535" level="INFO">key2</msg>
<status status="PASS" starttime="20200629 14:01:07.534" endtime="20200629 14:01:07.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:07.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:07.535" endtime="20200629 14:01:07.535"></status>
</kw>
<msg timestamp="20200629 14:01:07.536" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200629 14:01:04.577" endtime="20200629 14:01:07.536"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:07.536" endtime="20200629 14:01:07.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:07.539" level="INFO">Running command 'ozone sh key delete o3:///58068-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:10.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:10.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:07.537" endtime="20200629 14:01:10.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:10.002" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:10.002" endtime="20200629 14:01:10.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:10.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:10.002" endtime="20200629 14:01:10.003"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:07.537" endtime="20200629 14:01:10.003"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:11.937" endtime="20200629 14:01:10.003"></status>
</kw>
<status status="PASS" starttime="20200629 14:00:11.937" endtime="20200629 14:01:10.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:10.007" level="INFO">Running command 'ozone sh bucket delete o3:///58068-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:12.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:12.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:10.004" endtime="20200629 14:01:12.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:12.565" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:12.564" endtime="20200629 14:01:12.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:12.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:12.565" endtime="20200629 14:01:12.566"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:10.003" endtime="20200629 14:01:12.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:12.570" level="INFO">Running command 'ozone sh volume delete o3:///58068-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:15.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:15.311" level="INFO">${output} = Volume 58068-rpcwport is deleted</msg>
<status status="PASS" starttime="20200629 14:01:12.567" endtime="20200629 14:01:15.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:15.312" level="INFO">Volume 58068-rpcwport is deleted</msg>
<status status="PASS" starttime="20200629 14:01:15.311" endtime="20200629 14:01:15.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:15.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:15.312" endtime="20200629 14:01:15.312"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:12.566" endtime="20200629 14:01:15.313"></status>
</kw>
<status status="PASS" starttime="20200629 13:59:46.038" endtime="20200629 14:01:15.313"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 13:59:46.037" endtime="20200629 14:01:15.313" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:15.314" endtime="20200629 14:01:15.315"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:15.318" level="INFO">Running command 'ozone sh volume info /58068-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:18.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 14:01:18.324" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58068-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200629 14:01:15.316" endtime="20200629 14:01:18.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:18.325" level="INFO">VOLUME_NOT_FOUND Volume 58068-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200629 14:01:18.325" endtime="20200629 14:01:18.326"></status>
</kw>
<msg timestamp="20200629 14:01:18.326" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58068-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200629 14:01:15.315" endtime="20200629 14:01:18.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:18.326" endtime="20200629 14:01:18.327"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:18.330" level="INFO">Running command 'ozone sh volume create /58068-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:21.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:21.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:18.328" endtime="20200629 14:01:21.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:21.001" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:21.001" endtime="20200629 14:01:21.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:21.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:21.002" endtime="20200629 14:01:21.002"></status>
</kw>
<msg timestamp="20200629 14:01:21.002" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 14:01:18.327" endtime="20200629 14:01:21.002"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:21.003" endtime="20200629 14:01:21.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:21.006" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="58068-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:23.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:23.816" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200629 14:01:21.004" endtime="20200629 14:01:23.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:23.817" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 14:01:23.816" endtime="20200629 14:01:23.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:23.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:23.817" endtime="20200629 14:01:23.818"></status>
</kw>
<msg timestamp="20200629 14:01:23.818" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200629 14:01:21.003" endtime="20200629 14:01:23.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:23.818" endtime="20200629 14:01:23.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:23.821" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="58068-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:26.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:26.699" level="INFO">${output} = {
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200629 14:01:23.819" endtime="20200629 14:01:26.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:26.700" level="INFO">{
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200629 14:01:26.699" endtime="20200629 14:01:26.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:26.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:26.701" endtime="20200629 14:01:26.702"></status>
</kw>
<msg timestamp="20200629 14:01:26.702" level="INFO">${result} = {
  "metadata": {},
  "name": "58068-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-29T14:01:20.853Z",
  "modificationTime": "2020-06-29T14:01:20.853Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200629 14:01:23.819" endtime="20200629 14:01:26.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:26.702" endtime="20200629 14:01:26.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:26.706" level="INFO">Running command 'ozone sh volume update /58068-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:29.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:29.876" level="INFO">${output} = {
  "metadata" : { },
  "name" : "58068-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T14:01:20.853Z",
  "modificationTime" : "2020-06-29T14:01:29.406Z",
  "a...</msg>
<status status="PASS" starttime="20200629 14:01:26.703" endtime="20200629 14:01:29.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:29.877" level="INFO">{
  "metadata" : { },
  "name" : "58068-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-29T14:01:20.853Z",
  "modificationTime" : "2020-06-29T14:01:29.406Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200629 14:01:29.876" endtime="20200629 14:01:29.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:29.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:29.877" endtime="20200629 14:01:29.877"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:26.702" endtime="20200629 14:01:29.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:29.880" level="INFO">Running command 'ozone sh volume info /58068-rpcwoscheme | jq -r '. | select(.name=="58068-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:33.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:33.069" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200629 14:01:29.879" endtime="20200629 14:01:33.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:33.070" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200629 14:01:33.069" endtime="20200629 14:01:33.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:33.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:33.070" endtime="20200629 14:01:33.070"></status>
</kw>
<msg timestamp="20200629 14:01:33.071" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200629 14:01:29.878" endtime="20200629 14:01:33.071"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:33.071" endtime="20200629 14:01:33.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:33.074" level="INFO">Running command 'ozone sh bucket create /58068-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:35.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:35.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:33.072" endtime="20200629 14:01:35.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:35.702" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:35.702" endtime="20200629 14:01:35.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:35.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:35.702" endtime="20200629 14:01:35.703"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:33.071" endtime="20200629 14:01:35.703"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:35.707" level="INFO">Running command 'ozone sh bucket info /58068-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:38.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:38.458" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200629 14:01:35.704" endtime="20200629 14:01:38.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:38.459" level="INFO">DISK</msg>
<status status="PASS" starttime="20200629 14:01:38.458" endtime="20200629 14:01:38.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:38.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:38.459" endtime="20200629 14:01:38.460"></status>
</kw>
<msg timestamp="20200629 14:01:38.460" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200629 14:01:35.703" endtime="20200629 14:01:38.460"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:38.460" endtime="20200629 14:01:38.461"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:38.464" level="INFO">Running command 'ozone sh bucket list /58068-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:41.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:41.314" level="INFO">${output} = 58068-rpcwoscheme</msg>
<status status="PASS" starttime="20200629 14:01:38.462" endtime="20200629 14:01:41.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:41.316" level="INFO">58068-rpcwoscheme</msg>
<status status="PASS" starttime="20200629 14:01:41.315" endtime="20200629 14:01:41.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:41.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:41.316" endtime="20200629 14:01:41.316"></status>
</kw>
<msg timestamp="20200629 14:01:41.317" level="INFO">${result} = 58068-rpcwoscheme</msg>
<status status="PASS" starttime="20200629 14:01:38.461" endtime="20200629 14:01:41.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200629 14:01:41.317" endtime="20200629 14:01:41.317"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:41.321" level="INFO">Running command 'ozone sh key put /58068-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:46.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:46.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:41.319" endtime="20200629 14:01:46.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:46.614" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:46.614" endtime="20200629 14:01:46.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:46.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:46.615" endtime="20200629 14:01:46.615"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:41.318" endtime="20200629 14:01:46.616"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:46.619" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:46.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:46.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:46.616" endtime="20200629 14:01:46.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:46.621" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:46.621" endtime="20200629 14:01:46.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:46.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:46.621" endtime="20200629 14:01:46.622"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:46.616" endtime="20200629 14:01:46.623"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:46.626" level="INFO">Running command 'ozone sh key get /58068-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:51.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:51.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:46.623" endtime="20200629 14:01:51.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:51.306" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:51.305" endtime="20200629 14:01:51.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:51.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:51.306" endtime="20200629 14:01:51.307"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:46.623" endtime="20200629 14:01:51.307"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:51.309" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:51.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:51.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:51.307" endtime="20200629 14:01:51.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:51.312" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:51.312" endtime="20200629 14:01:51.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:51.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:51.312" endtime="20200629 14:01:51.313"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:51.307" endtime="20200629 14:01:51.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:51.316" level="INFO">Running command 'ozone sh key put -t RATIS /58068-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:58.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:58.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:51.314" endtime="20200629 14:01:58.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:58.293" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:58.292" endtime="20200629 14:01:58.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:58.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:58.293" endtime="20200629 14:01:58.294"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:51.313" endtime="20200629 14:01:58.294"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:58.297" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:01:58.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:01:58.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:58.295" endtime="20200629 14:01:58.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:01:58.300" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:01:58.299" endtime="20200629 14:01:58.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:01:58.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:01:58.300" endtime="20200629 14:01:58.301"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:58.294" endtime="20200629 14:01:58.301"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:01:58.303" level="INFO">Running command 'ozone sh key get /58068-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:02.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:02.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:01:58.301" endtime="20200629 14:02:02.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:02.664" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:02.664" endtime="20200629 14:02:02.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:02.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:02.665" endtime="20200629 14:02:02.665"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:58.301" endtime="20200629 14:02:02.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:02.669" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:02.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:02.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:02.666" endtime="20200629 14:02:02.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:02.671" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:02.670" endtime="20200629 14:02:02.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:02.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:02.671" endtime="20200629 14:02:02.672"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:02.666" endtime="20200629 14:02:02.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:02.675" level="INFO">Running command 'ozone sh key info /58068-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:05.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:05.570" level="INFO">${output} = {
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:53.799Z",
  "modificationTime": "2020-06-29T14:01:57.840Z...</msg>
<status status="PASS" starttime="20200629 14:02:02.673" endtime="20200629 14:02:05.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:05.571" level="INFO">{
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:53.799Z",
  "modificationTime": "2020-06-29T14:01:57.840Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427638868934780,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 14:02:05.570" endtime="20200629 14:02:05.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:05.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:05.571" endtime="20200629 14:02:05.572"></status>
</kw>
<msg timestamp="20200629 14:02:05.572" level="INFO">${result} = {
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:53.799Z",
  "modificationTime": "2020-06-29T14:01:57.840Z...</msg>
<status status="PASS" starttime="20200629 14:02:02.672" endtime="20200629 14:02:05.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:05.572" endtime="20200629 14:02:05.572"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:05.575" level="INFO">Running command 'ozone sh key delete /58068-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:08.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:08.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:05.573" endtime="20200629 14:02:08.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:08.099" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:08.098" endtime="20200629 14:02:08.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:08.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:08.099" endtime="20200629 14:02:08.100"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:05.573" endtime="20200629 14:02:08.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:08.103" level="INFO">Running command 'ozone sh key cp /58068-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:12.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:12.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:08.101" endtime="20200629 14:02:12.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:12.592" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:12.591" endtime="20200629 14:02:12.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:12.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:12.592" endtime="20200629 14:02:12.593"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:08.100" endtime="20200629 14:02:12.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:12.596" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:12.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:12.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:12.594" endtime="20200629 14:02:12.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:12.599" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:12.599" endtime="20200629 14:02:12.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:12.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:12.600" endtime="20200629 14:02:12.601"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:12.594" endtime="20200629 14:02:12.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:12.604" level="INFO">Running command 'ozone sh key get /58068-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:16.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:16.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:12.602" endtime="20200629 14:02:16.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:16.992" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:16.991" endtime="20200629 14:02:16.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:16.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:16.992" endtime="20200629 14:02:16.992"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:12.601" endtime="20200629 14:02:16.993"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:16.996" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:16.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:16.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:16.993" endtime="20200629 14:02:16.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:16.998" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:16.998" endtime="20200629 14:02:16.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:16.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:16.999" endtime="20200629 14:02:16.999"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:16.993" endtime="20200629 14:02:16.999"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:17.003" level="INFO">Running command 'ozone sh key delete /58068-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:19.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:19.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:17.000" endtime="20200629 14:02:19.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:19.591" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:19.591" endtime="20200629 14:02:19.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:19.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:19.592" endtime="20200629 14:02:19.592"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:17.000" endtime="20200629 14:02:19.592"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:19.596" level="INFO">Running command 'ozone sh key get /58068-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:22.005" level="INFO">${rc} = 255</msg>
<msg timestamp="20200629 14:02:22.005" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:02:19.593" endtime="20200629 14:02:22.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:22.006" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:02:22.006" endtime="20200629 14:02:22.007"></status>
</kw>
<msg timestamp="20200629 14:02:22.007" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200629 14:02:19.593" endtime="20200629 14:02:22.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:22.007" endtime="20200629 14:02:22.007"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:22.011" level="INFO">Running command 'ozone sh key get --force /58068-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:26.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:26.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:22.008" endtime="20200629 14:02:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:26.538" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:26.537" endtime="20200629 14:02:26.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:26.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:26.538" endtime="20200629 14:02:26.539"></status>
</kw>
<msg timestamp="20200629 14:02:26.539" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200629 14:02:22.008" endtime="20200629 14:02:26.539"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:26.539" endtime="20200629 14:02:26.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:26.542" level="INFO">Running command 'ozone sh key info /58068-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:29.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:29.514" level="INFO">${output} = {
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:44.350Z",
  "modificationTime": "2020-06-29T14:01:46.226Z",
  "...</msg>
<status status="PASS" starttime="20200629 14:02:26.540" endtime="20200629 14:02:29.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:29.515" level="INFO">{
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:44.350Z",
  "modificationTime": "2020-06-29T14:01:46.226Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104427638249881730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200629 14:02:29.514" endtime="20200629 14:02:29.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:29.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:29.515" endtime="20200629 14:02:29.515"></status>
</kw>
<msg timestamp="20200629 14:02:29.516" level="INFO">${result} = {
  "volumeName": "58068-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-29T14:01:44.350Z",
  "modificationTime": "2020-06-29T14:01:46.226Z",
  "...</msg>
<status status="PASS" starttime="20200629 14:02:26.540" endtime="20200629 14:02:29.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:29.516" endtime="20200629 14:02:29.516"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:29.520" level="INFO">Running command 'ozone sh key list /58068-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:32.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:32.452" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200629 14:02:29.517" endtime="20200629 14:02:32.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:32.453" level="INFO">key1</msg>
<status status="PASS" starttime="20200629 14:02:32.452" endtime="20200629 14:02:32.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:32.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:32.453" endtime="20200629 14:02:32.454"></status>
</kw>
<msg timestamp="20200629 14:02:32.454" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200629 14:02:29.516" endtime="20200629 14:02:32.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:32.454" endtime="20200629 14:02:32.455"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:32.459" level="INFO">Running command 'ozone sh key rename /58068-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:35.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:35.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:32.455" endtime="20200629 14:02:35.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:35.170" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:35.169" endtime="20200629 14:02:35.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:35.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:35.170" endtime="20200629 14:02:35.171"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:32.455" endtime="20200629 14:02:35.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:35.174" level="INFO">Running command 'ozone sh key list /58068-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:38.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:38.100" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200629 14:02:35.172" endtime="20200629 14:02:38.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:38.101" level="INFO">key2</msg>
<status status="PASS" starttime="20200629 14:02:38.100" endtime="20200629 14:02:38.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:38.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:38.101" endtime="20200629 14:02:38.102"></status>
</kw>
<msg timestamp="20200629 14:02:38.102" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200629 14:02:35.171" endtime="20200629 14:02:38.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200629 14:02:38.102" endtime="20200629 14:02:38.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:38.106" level="INFO">Running command 'ozone sh key delete /58068-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:40.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:40.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:38.104" endtime="20200629 14:02:40.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:40.744" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:40.744" endtime="20200629 14:02:40.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:40.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:40.745" endtime="20200629 14:02:40.745"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:38.103" endtime="20200629 14:02:40.745"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:41.318" endtime="20200629 14:02:40.745"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:41.317" endtime="20200629 14:02:40.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:40.749" level="INFO">Running command 'ozone sh bucket delete /58068-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:43.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:43.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:02:40.746" endtime="20200629 14:02:43.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:43.424" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:02:43.423" endtime="20200629 14:02:43.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:43.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:43.424" endtime="20200629 14:02:43.425"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:40.746" endtime="20200629 14:02:43.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:02:43.429" level="INFO">Running command 'ozone sh volume delete /58068-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:02:46.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:02:46.002" level="INFO">${output} = Volume 58068-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200629 14:02:43.426" endtime="20200629 14:02:46.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:02:46.003" level="INFO">Volume 58068-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200629 14:02:46.002" endtime="20200629 14:02:46.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:02:46.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:02:46.003" endtime="20200629 14:02:46.004"></status>
</kw>
<status status="PASS" starttime="20200629 14:02:43.425" endtime="20200629 14:02:46.004"></status>
</kw>
<status status="PASS" starttime="20200629 14:01:15.315" endtime="20200629 14:02:46.004"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200629 14:01:15.314" endtime="20200629 14:02:46.004" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200629 13:57:10.369" endtime="20200629 14:02:46.006"></status>
</suite>
<status status="PASS" starttime="20200629 13:56:09.567" endtime="20200629 14:02:46.011"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
