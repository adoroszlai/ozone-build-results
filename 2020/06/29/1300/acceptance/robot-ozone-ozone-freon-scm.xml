<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200629 14:13:09.260" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:13:09.315" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:13:17.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:13:17.544" level="INFO">${output} = 2020-06-29 14:13:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:10,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:09.311" endtime="20200629 14:13:17.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:13:17.545" level="INFO">2020-06-29 14:13:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:10,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:13:10,853 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 14:13:12,051 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-29 14:13:12,052 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-29 14:13:12,052 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-29 14:13:12,053 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-29 14:13:12,053 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-29 14:13:12,053 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-29 14:13:12,053 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-29 14:13:12,056 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-29 14:13:12,063 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:12,103 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-80839, with hadoop as owner.
2020-06-29 14:13:12,171 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-80839/bucket-0-16771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 14:13:12,767 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 14:13:13,068 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,086
Average Time spent in bucket creation: 00:00:00,022
Average Time spent in key creation: 00:00:00,077
Average Time spent in key write: 00:00:00,696
Total bytes written: 10240
Total Execution time: 00:00:06,172
***************************************************</msg>
<status status="PASS" starttime="20200629 14:13:17.544" endtime="20200629 14:13:17.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:13:17.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:13:17.545" endtime="20200629 14:13:17.546"></status>
</kw>
<msg timestamp="20200629 14:13:17.546" level="INFO">${result} = 2020-06-29 14:13:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:10,853 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:09.310" endtime="20200629 14:13:17.546"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:13:17.547" endtime="20200629 14:13:17.547"></status>
</kw>
<status status="PASS" starttime="20200629 14:13:17.546" endtime="20200629 14:13:17.547"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:13:09.310" endtime="20200629 14:13:17.548" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:13:17.551" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:13:22.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:13:22.964" level="INFO">${output} = 2020-06-29 14:13:18,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:19,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:17.549" endtime="20200629 14:13:22.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:13:22.965" level="INFO">2020-06-29 14:13:18,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:19,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:13:19,212 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 14:13:19,417 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xcqvicq5cf
2020-06-29 14:13:19,437 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:20,331 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-29 14:13:20,392 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 14:13:20,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:20,996 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 14:13:21,452 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:22,453 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 14:13:22,599 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1398.546536, max=1398.546536, mean=1398.546536, stddev=0.0, median=1398.546536, p75=1398.546536, p95=1398.546536, p98=1398.546536, p99=1398.546536, p999=1398.546536, mean_rate=0.45936529288929645, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 14:13:22,607 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-29 14:13:22,607 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 14:13:22,607 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 14:13:22.964" endtime="20200629 14:13:22.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:13:22.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:13:22.965" endtime="20200629 14:13:22.966"></status>
</kw>
<msg timestamp="20200629 14:13:22.966" level="INFO">${result} = 2020-06-29 14:13:18,954 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:19,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:17.549" endtime="20200629 14:13:22.966"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:13:22.967" endtime="20200629 14:13:22.967"></status>
</kw>
<status status="PASS" starttime="20200629 14:13:22.966" endtime="20200629 14:13:22.967"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:13:17.548" endtime="20200629 14:13:22.967" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:13:22.971" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:13:26.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:13:26.932" level="INFO">${output} = 2020-06-29 14:13:24,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:24,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:22.969" endtime="20200629 14:13:26.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:13:26.933" level="INFO">2020-06-29 14:13:24,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:24,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:13:24,554 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 14:13:24,744 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hdxsb9gmpd
2020-06-29 14:13:24,768 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:25,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:26,776 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 14:13:26,919 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=53.376165, max=53.376165, mean=53.376165, stddev=0.0, median=53.376165, p75=53.376165, p95=53.376165, p98=53.376165, p99=53.376165, p999=53.376165, mean_rate=0.8191941219767792, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 14:13:26,920 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-29 14:13:26,920 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 14:13:26,920 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 14:13:26.932" endtime="20200629 14:13:26.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:13:26.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:13:26.933" endtime="20200629 14:13:26.934"></status>
</kw>
<msg timestamp="20200629 14:13:26.934" level="INFO">${result} = 2020-06-29 14:13:24,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:24,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:22.969" endtime="20200629 14:13:26.934"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:13:26.935" endtime="20200629 14:13:26.936"></status>
</kw>
<status status="PASS" starttime="20200629 14:13:26.935" endtime="20200629 14:13:26.936"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:13:22.968" endtime="20200629 14:13:26.936" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:13:26.940" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:13:30.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:13:30.986" level="INFO">${output} = 2020-06-29 14:13:28,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:28,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:26.938" endtime="20200629 14:13:30.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:13:30.987" level="INFO">2020-06-29 14:13:28,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:28,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:13:28,558 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 14:13:28,799 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xh5xruo6rt
2020-06-29 14:13:28,817 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:29,818 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 14:13:30,820 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 14:13:30,963 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.898353, max=16.898353, mean=16.898353, stddev=0.0, median=16.898353, p75=16.898353, p95=16.898353, p98=16.898353, p99=16.898353, p999=16.898353, mean_rate=0.8764079538694821, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 14:13:30,963 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-29 14:13:30,964 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 14:13:30,964 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 14:13:30.986" endtime="20200629 14:13:30.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:13:30.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:13:30.988" endtime="20200629 14:13:30.988"></status>
</kw>
<msg timestamp="20200629 14:13:30.988" level="INFO">${result} = 2020-06-29 14:13:28,410 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:13:28,558 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:13:26.937" endtime="20200629 14:13:30.988"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:13:30.989" endtime="20200629 14:13:30.990"></status>
</kw>
<status status="PASS" starttime="20200629 14:13:30.989" endtime="20200629 14:13:30.990"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:13:26.936" endtime="20200629 14:13:30.990" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200629 14:13:09.287" endtime="20200629 14:13:30.991"></status>
</suite>
<status status="PASS" starttime="20200629 14:13:09.260" endtime="20200629 14:13:30.994"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
