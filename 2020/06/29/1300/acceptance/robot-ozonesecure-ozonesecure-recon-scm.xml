<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200629 14:43:17.993" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:18.055" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:18.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:18.056" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:43:18.051" endtime="20200629 14:43:18.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:18.057" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:43:18.057" endtime="20200629 14:43:18.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:18.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:18.058" endtime="20200629 14:43:18.058"></status>
</kw>
<msg timestamp="20200629 14:43:18.058" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:43:18.051" endtime="20200629 14:43:18.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:43:18.060" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:43:18.059" endtime="20200629 14:43:18.060"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:18.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:18.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:18.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:43:18.061" endtime="20200629 14:43:18.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:18.072" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:43:18.072" endtime="20200629 14:43:18.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:18.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:18.073" endtime="20200629 14:43:18.073"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:18.060" endtime="20200629 14:43:18.073"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:18.060" endtime="20200629 14:43:18.073"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:18.051" endtime="20200629 14:43:18.074"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:18.050" endtime="20200629 14:43:18.074"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:18.077" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:26.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:26.370" level="INFO">${output} = 2020-06-29 14:43:19,379 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:43:19,536 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:43:18.074" endtime="20200629 14:43:26.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:26.371" level="INFO">2020-06-29 14:43:19,379 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:43:19,536 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:43:19,536 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-29 14:43:20,854 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-29 14:43:20,854 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-29 14:43:20,854 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-29 14:43:20,854 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-29 14:43:20,855 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-29 14:43:20,855 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-29 14:43:20,855 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-29 14:43:20,864 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-29 14:43:20,871 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-29 14:43:20,907 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-40569, with testuser/scm@EXAMPLE.COM as owner.
2020-06-29 14:43:20,934 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-40569/bucket-0-94699, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 14:43:21,451 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 14:43:21,876 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,132
Average Time spent in key write: 00:00:00,472
Total bytes written: 10250
Total Execution time: 00:00:06,317
***************************************************</msg>
<status status="PASS" starttime="20200629 14:43:26.370" endtime="20200629 14:43:26.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:26.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:26.372" endtime="20200629 14:43:26.372"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:18.074" endtime="20200629 14:43:26.373"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:43:18.049" endtime="20200629 14:43:26.373" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:26.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:26.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:26.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:43:26.376" endtime="20200629 14:43:26.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:26.381" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:43:26.381" endtime="20200629 14:43:26.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:26.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:26.382" endtime="20200629 14:43:26.382"></status>
</kw>
<msg timestamp="20200629 14:43:26.382" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:43:26.376" endtime="20200629 14:43:26.382"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:26.386" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:26.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:26.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:43:26.383" endtime="20200629 14:43:26.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:26.404" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:43:26.403" endtime="20200629 14:43:26.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:26.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:26.404" endtime="20200629 14:43:26.405"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:26.383" endtime="20200629 14:43:26.405"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:26.382" endtime="20200629 14:43:26.405"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:26.375" endtime="20200629 14:43:26.405"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:26.375" endtime="20200629 14:43:26.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:26.409" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:26.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:26.584" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:26.406" endtime="20200629 14:43:26.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:26.585" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    452      0 --:--:-- --:--:-- --:--:--   452
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200629 14:43:26.585" endtime="20200629 14:43:26.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:26.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:26.586" endtime="20200629 14:43:26.586"></status>
</kw>
<msg timestamp="20200629 14:43:26.586" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:26.405" endtime="20200629 14:43:26.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:26.587" endtime="20200629 14:43:26.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:26.591" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:26.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:26.623" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:26.588" endtime="20200629 14:43:26.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:26.624" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   112k      0 --:--:-- --:--:-- --:--:--  113k
* Connection #0 to host recon left intact
[{"volume":"vol-4-01427","bucket":"bucket-0-63381","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-2-34232","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-2-87384","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-4-26058","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-0-95725","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-1-92800","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-0-09159","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-3-11572","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-3-37964","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-4-13801","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-3-30502","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-1-37646","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-1-72559","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-3-43834","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-2-98108","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-1-88468","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-4-50104","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-2-66021","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-4-42279","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-3-09871","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-0-87864","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-2-53061","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-4-88295","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-1-13707","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-0-35114","fileSize":16384,"count":5},{"volume":"08872-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"08872-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest334","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-53764","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-93510","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-25617","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93510","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51366","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200629 14:43:26.623" endtime="20200629 14:43:26.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:26.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:26.624" endtime="20200629 14:43:26.624"></status>
</kw>
<msg timestamp="20200629 14:43:26.625" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:26.587" endtime="20200629 14:43:26.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200629 14:43:26.626" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   112k      0 --:--:-- --:--:-- --:--:--  113k
* Connection #0 to host recon left intact
[{"volume":"vol-4-01427","bucket":"bucket-0-63381","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-2-34232","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-2-87384","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-4-26058","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-0-95725","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-1-92800","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-0-09159","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-3-11572","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-3-37964","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-4-13801","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-3-30502","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-1-37646","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-1-72559","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-3-43834","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-2-98108","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-1-88468","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-4-50104","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-2-66021","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-4-42279","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-3-09871","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-0-87864","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-2-53061","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-4-88295","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-1-13707","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-0-35114","fileSize":16384,"count":5},{"volume":"08872-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"08872-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest334","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-53764","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-93510","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-25617","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93510","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51366","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200629 14:43:26.625" endtime="20200629 14:43:26.626"></status>
</kw>
<status status="FAIL" starttime="20200629 14:43:26.374" endtime="20200629 14:43:26.626"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:36.631" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:36.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:36.633" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:43:36.629" endtime="20200629 14:43:36.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:36.634" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:43:36.633" endtime="20200629 14:43:36.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:36.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:36.634" endtime="20200629 14:43:36.635"></status>
</kw>
<msg timestamp="20200629 14:43:36.635" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:43:36.628" endtime="20200629 14:43:36.635"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:36.638" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:36.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:36.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:43:36.636" endtime="20200629 14:43:36.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:36.656" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:43:36.655" endtime="20200629 14:43:36.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:36.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:36.656" endtime="20200629 14:43:36.657"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:36.636" endtime="20200629 14:43:36.657"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:36.635" endtime="20200629 14:43:36.657"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:36.628" endtime="20200629 14:43:36.657"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:36.627" endtime="20200629 14:43:36.657"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:36.659" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:36.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:36.675" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:36.658" endtime="20200629 14:43:36.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:36.676" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7654      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200629 14:43:36.676" endtime="20200629 14:43:36.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:36.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:36.676" endtime="20200629 14:43:36.677"></status>
</kw>
<msg timestamp="20200629 14:43:36.677" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:36.657" endtime="20200629 14:43:36.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:36.677" endtime="20200629 14:43:36.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:36.682" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:36.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:36.701" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:36.679" endtime="20200629 14:43:36.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:36.702" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   263k      0 --:--:-- --:--:-- --:--:--  279k
* Connection #0 to host recon left intact
[{"volume":"vol-4-01427","bucket":"bucket-0-63381","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-2-34232","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-2-87384","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-4-26058","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-0-95725","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-1-92800","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-0-09159","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-3-11572","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-3-37964","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-4-13801","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-3-30502","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-1-37646","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-1-72559","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-3-43834","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-2-98108","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-1-88468","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-4-50104","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-2-66021","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-4-42279","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-3-09871","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-0-87864","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-2-53061","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-4-88295","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-1-13707","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-0-35114","fileSize":16384,"count":5},{"volume":"08872-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"08872-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest334","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-53764","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-93510","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-25617","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93510","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51366","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200629 14:43:36.702" endtime="20200629 14:43:36.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:36.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:36.702" endtime="20200629 14:43:36.703"></status>
</kw>
<msg timestamp="20200629 14:43:36.703" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:36.678" endtime="20200629 14:43:36.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200629 14:43:36.704" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   263k      0 --:--:-- --:--:-- --:--:--  279k
* Connection #0 to host recon left intact
[{"volume":"vol-4-01427","bucket":"bucket-0-63381","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-2-34232","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-2-87384","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-4-26058","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-0-95725","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-1-92800","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-0-09159","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-3-11572","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-3-37964","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-4-13801","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-3-30502","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-1-37646","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-1-72559","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-3-43834","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-2-98108","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-1-88468","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-4-50104","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-2-66021","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-4-42279","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-3-09871","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-0-87864","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-2-53061","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-4-88295","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-1-13707","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-0-35114","fileSize":16384,"count":5},{"volume":"08872-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"08872-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest334","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-53764","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-93510","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-25617","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93510","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51366","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200629 14:43:36.703" endtime="20200629 14:43:36.704"></status>
</kw>
<status status="FAIL" starttime="20200629 14:43:36.626" endtime="20200629 14:43:36.705"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.710" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.713" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:43:46.708" endtime="20200629 14:43:46.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.714" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:43:46.714" endtime="20200629 14:43:46.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.715" endtime="20200629 14:43:46.716"></status>
</kw>
<msg timestamp="20200629 14:43:46.716" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:43:46.707" endtime="20200629 14:43:46.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.719" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:43:46.717" endtime="20200629 14:43:46.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.733" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:43:46.733" endtime="20200629 14:43:46.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.734" endtime="20200629 14:43:46.734"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.717" endtime="20200629 14:43:46.734"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.716" endtime="20200629 14:43:46.734"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.707" endtime="20200629 14:43:46.735"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.706" endtime="20200629 14:43:46.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.738" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.757" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.735" endtime="20200629 14:43:46.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.758" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  12721      0 --:--:-- --:--:-- --:--:-- 13000
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20200629 14:43:46.758" endtime="20200629 14:43:46.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.759" endtime="20200629 14:43:46.759"></status>
</kw>
<msg timestamp="20200629 14:43:46.760" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.735" endtime="20200629 14:43:46.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.760" endtime="20200629 14:43:46.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.763" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.781" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.761" endtime="20200629 14:43:46.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.781" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3356
&lt; 
{ [data not shown]

100  3356  100  3356    0     0   276k      0 --:--:-- --:--:-- --:--:--  297k
* Connection #0 to host recon left intact
[{"volume":"vol-4-01427","bucket":"bucket-0-63381","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-2-34232","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-2-87384","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-4-26058","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-0-95725","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-1-92800","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-0-09159","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-3-11572","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-3-37964","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-4-13801","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-3-30502","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-1-37646","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-1-72559","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-3-43834","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-2-98108","fileSize":16384,"count":5},{"volume":"vol-1-38527","bucket":"bucket-1-88468","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-4-50104","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-2-66021","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-4-42279","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-3-09871","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-0-87864","fileSize":16384,"count":5},{"volume":"vol-4-01427","bucket":"bucket-2-53061","fileSize":16384,"count":5},{"volume":"vol-0-74324","bucket":"bucket-4-88295","fileSize":16384,"count":5},{"volume":"vol-2-89022","bucket":"bucket-1-13707","fileSize":16384,"count":5},{"volume":"vol-3-96812","bucket":"bucket-0-35114","fileSize":16384,"count":5},{"volume":"08872-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"08872-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"08872-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest334","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-53764","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-93510","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-25617","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-93510","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-51366","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-62846","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-55107","fileSize":1024,"count":2},{"volume":"vol-0-40569","bucket":"bucket-0-94699","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200629 14:43:46.781" endtime="20200629 14:43:46.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.782" endtime="20200629 14:43:46.782"></status>
</kw>
<msg timestamp="20200629 14:43:46.783" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.761" endtime="20200629 14:43:46.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.783" endtime="20200629 14:43:46.783"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.705" endtime="20200629 14:43:46.783"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:26.374" endtime="20200629 14:43:46.783"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:43:26.373" endtime="20200629 14:43:46.784" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.788" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.822" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.786" endtime="20200629 14:43:46.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.823" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  64813      0 --:--:-- --:--:-- --:--:-- 67111
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"961fa631-69d9-4e42-9b71-922c52807089","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593441802426,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444196352},"pipelines":[{"pipelineID":"c6655897-8b0a-405f-873c-1daeecfd3283","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"c221dd05-1eb2-4826-9a0d-95de6a23a05d","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"218ee0b4-45a8-45e6-a7d4-aba29b6452b5","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593441802381,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444196352},"pipelines":[{"pipelineID":"3126be45-b5ae-4472-ae62-474b99b42129","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"c221dd05-1eb2-4826-9a0d-95de6a23a05d","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"acbe67bf-bb4d-40fc-a3c4-7465ed3261d6","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593441802407,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25444196352},"pipelines":[{"pipelineID":"ec55d646-3823-405f-b7db-6f5be2d173b8","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"c221dd05-1eb2-4826-9a0d-95de6a23a05d","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":1,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200629 14:43:46.822" endtime="20200629 14:43:46.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.823" endtime="20200629 14:43:46.824"></status>
</kw>
<msg timestamp="20200629 14:43:46.824" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.786" endtime="20200629 14:43:46.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.824" endtime="20200629 14:43:46.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.825" endtime="20200629 14:43:46.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.826" endtime="20200629 14:43:46.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.826" endtime="20200629 14:43:46.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.830" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.852" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.827" endtime="20200629 14:43:46.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.853" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  77092      0 --:--:-- --:--:-- --:--:-- 80470
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"ec55d646-3823-405f-b7db-6f5be2d173b8","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1216184,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"c6655897-8b0a-405f-873c-1daeecfd3283","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1216327,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"3126be45-b5ae-4472-ae62-474b99b42129","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1216021,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"c221dd05-1eb2-4826-9a0d-95de6a23a05d","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1216001,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200629 14:43:46.853" endtime="20200629 14:43:46.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.854" endtime="20200629 14:43:46.854"></status>
</kw>
<msg timestamp="20200629 14:43:46.854" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.827" endtime="20200629 14:43:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.854" endtime="20200629 14:43:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.855" endtime="20200629 14:43:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.855" endtime="20200629 14:43:46.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.856" endtime="20200629 14:43:46.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.857" endtime="20200629 14:43:46.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.857" endtime="20200629 14:43:46.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.861" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.875" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.858" endtime="20200629 14:43:46.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.876" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  17611      0 --:--:-- --:--:-- --:--:-- 18600
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76332589056},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200629 14:43:46.876" endtime="20200629 14:43:46.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.876" endtime="20200629 14:43:46.877"></status>
</kw>
<msg timestamp="20200629 14:43:46.877" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.858" endtime="20200629 14:43:46.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.877" endtime="20200629 14:43:46.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.878" endtime="20200629 14:43:46.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.878" endtime="20200629 14:43:46.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.881" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.902" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.879" endtime="20200629 14:43:46.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.903" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  27978      0 --:--:-- --:--:-- --:--:-- 28375
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593440641956,"lastReportTimestamp":1593441802408},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593440642519,"lastReportTimestamp":1593441802381},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593440642235,"lastReportTimestamp":1593441752195}]</msg>
<status status="PASS" starttime="20200629 14:43:46.902" endtime="20200629 14:43:46.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.903" endtime="20200629 14:43:46.904"></status>
</kw>
<msg timestamp="20200629 14:43:46.904" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.879" endtime="20200629 14:43:46.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.904" endtime="20200629 14:43:46.905"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:43:46.785" endtime="20200629 14:43:46.905" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.909" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.912" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:43:46.907" endtime="20200629 14:43:46.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.912" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:43:46.912" endtime="20200629 14:43:46.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.913" endtime="20200629 14:43:46.913"></status>
</kw>
<msg timestamp="20200629 14:43:46.913" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:43:46.907" endtime="20200629 14:43:46.913"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.916" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:43:46.914" endtime="20200629 14:43:46.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.935" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:43:46.935" endtime="20200629 14:43:46.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.936" endtime="20200629 14:43:46.936"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.914" endtime="20200629 14:43:46.936"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.913" endtime="20200629 14:43:46.936"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.907" endtime="20200629 14:43:46.936"></status>
</kw>
<status status="PASS" starttime="20200629 14:43:46.906" endtime="20200629 14:43:46.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:43:46.939" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:43:46.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:43:46.984" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.937" endtime="20200629 14:43:46.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:43:46.984" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  15704      0 --:--:-- --:--:-- --:--:-- 15785
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1e25f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.3) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQIZzdOwTSDzzpPUuZYPLEW+K5eQP6Ey+O9g4sQzOJMXCORsduy5tvaeRQ8Tvb1AbzHH5/D49RuCxkoELycULskMhgyjvhMUA8Tb7ky0BHSZc3FHuulCS8L3FeCmS6xNmUV3Bjfi7cc0nsrw/TR5vOWnxp/2KSw1nY932nOlDAqZowHkwz90hYLwR92l58quoaUGZmi3BpLGWBJ308HL9UVWpY6Q1ImELRP3F/11ADAdtFnFanRdOrl9/xrqMemchFpqtxSlKiN9y2S3Qrn1WJHDPZ0ogzhZ5dzTk7in8t1wn+WmEqs1znRUtl53B27Yhr2daVyEc5XKYtVTabKEs1Dx92SkgdIwgc+gAwIBEqKBxwSBxNPlMlVm/xBNFwMcRbGhLrxgUhn811A/LNSk0OBjQ9aw1Z9uHFGVsIwwSTgYQV7AEgdZHqOWwQiZIGeUpCPCX9+iD9fEK/wjimLPdLreckzd7edYRuY3NCjg85DDGOfaS6hNbcsQzEYMlj6Wn8BwSJlalMHFn9QV2/Wg31JziWcj42rGgO5V7bgOEQImLn7xjIwaQ397K238wsuQnG1GJqFEEH3yGgRVxZA7UFzqf3rbMG75d0oAXu/DV9yuWi4rYE0nYQM=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Date: Mon, 29 Jun 2020 14:43:46 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCPpLyrCQan2/0CcOvLLmX/Y9KYqOqKE4Dag3YfT9jdbX6RKS/+51vpaOTfgH994KTja1x8bnUXZLimB47lkcpe/wh
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477826978&amp;s=U5hFphwYykOLhJJ5otGFvJWJS/s/n0/3Bum6NftFlzY="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 29 Jun 2020 13:30:06 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  56868      0 --:--:-- --:--:-- --:--:-- 56868
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.984" endtime="20200629 14:43:46.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:43:46.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:43:46.985" endtime="20200629 14:43:46.985"></status>
</kw>
<msg timestamp="20200629 14:43:46.985" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200629 14:43:46.937" endtime="20200629 14:43:46.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200629 14:43:46.986" endtime="20200629 14:43:46.986"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:43:46.905" endtime="20200629 14:43:46.986" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200629 14:43:18.020" endtime="20200629 14:43:46.988"></status>
</suite>
<status status="PASS" starttime="20200629 14:43:17.994" endtime="20200629 14:43:46.991"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
