<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200629 13:48:31.428" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:48:31.486" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:48:39.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:48:39.990" level="INFO">${output} = 2020-06-29 13:48:32,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:33,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:31.481" endtime="20200629 13:48:39.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:48:39.991" level="INFO">2020-06-29 13:48:32,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:33,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 13:48:33,170 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 13:48:34,488 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-29 13:48:34,489 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-29 13:48:34,504 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-29 13:48:34,507 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:34,565 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-34756, with hadoop as owner.
2020-06-29 13:48:34,643 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-34756/bucket-0-66078, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:48:35,345 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 13:48:35,523 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:36,523 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,099
Average Time spent in bucket creation: 00:00:00,076
Average Time spent in key creation: 00:00:00,154
Average Time spent in key write: 00:00:00,641
Total bytes written: 10240
Total Execution time: 00:00:06,270
***************************************************</msg>
<status status="PASS" starttime="20200629 13:48:39.991" endtime="20200629 13:48:39.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:48:39.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:48:39.991" endtime="20200629 13:48:39.992"></status>
</kw>
<msg timestamp="20200629 13:48:39.992" level="INFO">${result} = 2020-06-29 13:48:32,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:33,170 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:31.481" endtime="20200629 13:48:39.992"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 13:48:39.993" endtime="20200629 13:48:39.993"></status>
</kw>
<status status="PASS" starttime="20200629 13:48:39.992" endtime="20200629 13:48:39.993"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:48:31.480" endtime="20200629 13:48:39.994" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:48:39.999" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:48:45.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:48:45.490" level="INFO">${output} = 2020-06-29 13:48:41,458 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:41,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:39.997" endtime="20200629 13:48:45.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:48:45.492" level="INFO">2020-06-29 13:48:41,458 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:41,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 13:48:41,670 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 13:48:41,831 [main] INFO freon.BaseFreonGenerator: Executing test with prefix pt1zcev2yz
2020-06-29 13:48:41,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:42,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:42,890 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-29 13:48:42,937 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 13:48:43,652 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 13:48:43,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:44,849 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 13:48:45,139 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1445.411034, max=1445.411034, mean=1445.411034, stddev=0.0, median=1445.411034, p75=1445.411034, p95=1445.411034, p98=1445.411034, p99=1445.411034, p999=1445.411034, mean_rate=0.46784482954046736, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 13:48:45,140 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-29 13:48:45,150 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 13:48:45,151 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 13:48:45.491" endtime="20200629 13:48:45.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:48:45.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:48:45.492" endtime="20200629 13:48:45.492"></status>
</kw>
<msg timestamp="20200629 13:48:45.493" level="INFO">${result} = 2020-06-29 13:48:41,458 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:41,670 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:39.996" endtime="20200629 13:48:45.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 13:48:45.493" endtime="20200629 13:48:45.494"></status>
</kw>
<status status="PASS" starttime="20200629 13:48:45.493" endtime="20200629 13:48:45.494"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:48:39.996" endtime="20200629 13:48:45.494" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:48:45.498" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:48:49.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:48:49.529" level="INFO">${output} = 2020-06-29 13:48:46,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:47,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:45.496" endtime="20200629 13:48:49.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:48:49.530" level="INFO">2020-06-29 13:48:46,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:47,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 13:48:47,124 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 13:48:47,263 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 66syqbihuk
2020-06-29 13:48:47,304 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:48,308 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:49,310 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 13:48:49,475 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=116.054335, max=116.054335, mean=116.054335, stddev=0.0, median=116.054335, p75=116.054335, p95=116.054335, p98=116.054335, p99=116.054335, p999=116.054335, mean_rate=0.8954655139709231, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 13:48:49,476 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-29 13:48:49,477 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 13:48:49,477 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 13:48:49.530" endtime="20200629 13:48:49.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:48:49.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:48:49.531" endtime="20200629 13:48:49.531"></status>
</kw>
<msg timestamp="20200629 13:48:49.531" level="INFO">${result} = 2020-06-29 13:48:46,938 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:47,124 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:45.496" endtime="20200629 13:48:49.531"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 13:48:49.532" endtime="20200629 13:48:49.532"></status>
</kw>
<status status="PASS" starttime="20200629 13:48:49.532" endtime="20200629 13:48:49.532"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:48:45.495" endtime="20200629 13:48:49.533" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 13:48:49.537" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 13:48:53.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 13:48:53.570" level="INFO">${output} = 2020-06-29 13:48:50,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:51,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:49.534" endtime="20200629 13:48:53.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 13:48:53.571" level="INFO">2020-06-29 13:48:50,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:51,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 13:48:51,201 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-29 13:48:51,350 [main] INFO freon.BaseFreonGenerator: Executing test with prefix byc9qme4t5
2020-06-29 13:48:51,367 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:52,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-29 13:48:53,376 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-29 13:48:53,539 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=25.731196, max=25.731196, mean=25.731196, stddev=0.0, median=25.731196, p75=25.731196, p95=25.731196, p98=25.731196, p99=25.731196, p999=25.731196, mean_rate=0.8819363696861505, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-29 13:48:53,540 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-29 13:48:53,542 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-29 13:48:53,542 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200629 13:48:53.571" endtime="20200629 13:48:53.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 13:48:53.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 13:48:53.572" endtime="20200629 13:48:53.572"></status>
</kw>
<msg timestamp="20200629 13:48:53.573" level="INFO">${result} = 2020-06-29 13:48:50,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 13:48:51,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 13:48:49.534" endtime="20200629 13:48:53.573"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200629 13:48:53.573" endtime="20200629 13:48:53.574"></status>
</kw>
<status status="PASS" starttime="20200629 13:48:53.573" endtime="20200629 13:48:53.574"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 13:48:49.533" endtime="20200629 13:48:53.574" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200629 13:48:31.457" endtime="20200629 13:48:53.575"></status>
</suite>
<status status="PASS" starttime="20200629 13:48:31.428" endtime="20200629 13:48:53.578"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
