<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200629 14:44:09.239" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:09.301" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:09.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:09.303" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:09.297" endtime="20200629 14:44:09.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:09.304" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:09.303" endtime="20200629 14:44:09.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:09.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:09.304" endtime="20200629 14:44:09.305"></status>
</kw>
<msg timestamp="20200629 14:44:09.305" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:09.297" endtime="20200629 14:44:09.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:09.306" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:09.305" endtime="20200629 14:44:09.306"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:09.309" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:09.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:09.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:09.307" endtime="20200629 14:44:09.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:09.326" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:09.325" endtime="20200629 14:44:09.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:09.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:09.326" endtime="20200629 14:44:09.327"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:09.307" endtime="20200629 14:44:09.327"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:09.306" endtime="20200629 14:44:09.327"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:09.297" endtime="20200629 14:44:09.327"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:09.296" endtime="20200629 14:44:09.327"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:09.330" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.031" level="INFO">${output} = 2020-06-29 14:44:10,727 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:44:10,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200629 14:44:09.328" endtime="20200629 14:44:18.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.033" level="INFO">2020-06-29 14:44:10,727 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-29 14:44:10,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-29 14:44:10,974 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-29 14:44:12,458 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-29 14:44:12,459 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-29 14:44:12,468 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-29 14:44:12,480 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-29 14:44:12,507 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-98341, with testuser/scm@EXAMPLE.COM as owner.
2020-06-29 14:44:12,534 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-98341/bucket-0-83378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-29 14:44:12,980 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-29 14:44:13,485 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,021
Average Time spent in key write: 00:00:00,081
Total bytes written: 2050
Total Execution time: 00:00:06,435
***************************************************</msg>
<status status="PASS" starttime="20200629 14:44:18.032" endtime="20200629 14:44:18.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.033" endtime="20200629 14:44:18.034"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:09.328" endtime="20200629 14:44:18.034"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:09.295" endtime="20200629 14:44:18.034" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.039" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.037" endtime="20200629 14:44:18.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.042" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.042" endtime="20200629 14:44:18.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.043" endtime="20200629 14:44:18.043"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.036" endtime="20200629 14:44:18.043"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.036" endtime="20200629 14:44:18.044"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.047" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.066" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200629 14:44:18.044" endtime="20200629 14:44:18.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.067" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200629 14:44:18.067" endtime="20200629 14:44:18.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.068" endtime="20200629 14:44:18.068"></status>
</kw>
<msg timestamp="20200629 14:44:18.069" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200629 14:44:18.044" endtime="20200629 14:44:18.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.069" endtime="20200629 14:44:18.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.073" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.074" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.070" endtime="20200629 14:44:18.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.075" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:18.074" endtime="20200629 14:44:18.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.075" endtime="20200629 14:44:18.076"></status>
</kw>
<msg timestamp="20200629 14:44:18.076" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.070" endtime="20200629 14:44:18.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:18.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:18.077" endtime="20200629 14:44:18.078"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.081" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.079" endtime="20200629 14:44:18.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.091" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.091" endtime="20200629 14:44:18.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.092" endtime="20200629 14:44:18.092"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.078" endtime="20200629 14:44:18.092"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.078" endtime="20200629 14:44:18.092"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.070" endtime="20200629 14:44:18.093"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.069" endtime="20200629 14:44:18.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.096" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.119" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200629 14:44:18.093" endtime="20200629 14:44:18.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.120" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x141ef20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYPMb+/gskFRXefL50T04LoefdomvqZKhx7yYZfSSllmFFnn7dIsIHSqE+6ecNobV+WGhpvTxlqxQ8DPOpAe26MrqpKXqzkdRidsklgLzW7D8mXUS/ixuB7na5dcIEBUT/yQMod4ORfH7D6ot5PnilrpiC8IMiyn7kLl5IUNGK7dd7F65uY3/eNXHqPjdJhIL7nv+RtY5iya5UHsjObV0+Ta03Sv6653jffllj+KjL3bJ3lH4J+/giPp05/TIDqnyrqmUm3g6gdyL8hATx6PT5o+YadcrPyQQs4xInRlFw+Cto4kGF9QXn5xdad4sz1+7jFykBrsPuCMEUM4CdhaZeslgAS71wZpIHWMIHToAMCARKigcsEgcg5k5FbDnKqg+YRaFYn3gQTj+AS6uN+UJKRLEOunaLHVHQyJUMgmfNpME9M3xLNi30WiTOttK+F/ugza2N6bBjdtVm7i5iBNJufWT+Kx0cf66lS7P2YdCf1TvVHnVAw06mDQjTpsqLvpthW/yEjrZVLsLuCe6HBA0vV6ZZbBUTYkBp9Zji73VhO5bIP+2YezxTchv8c8rC+IMm8H3efQz7+I+ysAZR/Ri/cpdQBtmf7i721o8aaAvKYCqPwb7ZmK9giJqXicj88GQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdwLiYYf9yEoZyFdpG/BKHQO/r2k5E4DXStQBSPm0DZ1PtSyZPz2JYfSjuScqjKx+Tqbk0pyXbF2g7+D4yCJFjwYB
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858115&amp;s=mWzBTpJbGMGcUzpg7Bw6IBL+mtUy6UoiIb5sldegZ5E="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 29 Jun 2020 13:25:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 14:44:18 GMT
Cache-Control: no-cache
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdwLiYYf9yEoZyFdpG/BKHQO/r2k5E4DXStQBSPm0DZ1PtSyZPz2JYfSjuScqjKx+Tqbk0pyXbF2g7+D4yCJFjwYB
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858115&amp;s=mWzBTpJbGMGcUzpg7Bw6IBL+mtUy6UoiIb5sldegZ5E="; Path=/; HttpOnly
Last-Modified: Mon, 29 Jun 2020 13:25:04 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200629 14:44:18.119" endtime="20200629 14:44:18.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.120" endtime="20200629 14:44:18.120"></status>
</kw>
<msg timestamp="20200629 14:44:18.121" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200629 14:44:18.093" endtime="20200629 14:44:18.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.121" endtime="20200629 14:44:18.121"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.035" endtime="20200629 14:44:18.121"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:18.035" endtime="20200629 14:44:18.121" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.126" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.124" endtime="20200629 14:44:18.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.129" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.129" endtime="20200629 14:44:18.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.129" endtime="20200629 14:44:18.130"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.124" endtime="20200629 14:44:18.130"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.123" endtime="20200629 14:44:18.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.132" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.143" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.131" endtime="20200629 14:44:18.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.144" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200629 14:44:18.144" endtime="20200629 14:44:18.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.144" endtime="20200629 14:44:18.145"></status>
</kw>
<msg timestamp="20200629 14:44:18.145" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.130" endtime="20200629 14:44:18.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.145" endtime="20200629 14:44:18.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.149" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.150" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.147" endtime="20200629 14:44:18.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.151" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:18.151" endtime="20200629 14:44:18.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.151" endtime="20200629 14:44:18.152"></status>
</kw>
<msg timestamp="20200629 14:44:18.152" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.147" endtime="20200629 14:44:18.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:18.153" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:18.152" endtime="20200629 14:44:18.153"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.156" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.154" endtime="20200629 14:44:18.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.167" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.167" endtime="20200629 14:44:18.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.167" endtime="20200629 14:44:18.168"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.153" endtime="20200629 14:44:18.168"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.153" endtime="20200629 14:44:18.168"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.146" endtime="20200629 14:44:18.168"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.146" endtime="20200629 14:44:18.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.171" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.219" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.169" endtime="20200629 14:44:18.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.220" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x25eaf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaTjVca1pkh9TrgOtBPOcAfL5qs/DaEE9TwWmDAQ1Pf16zcyvIUs7BC8aeVhoPosELtLlb+O9ogtguf9EB6OKiqeebnH6gzM5ZQAsi6ZSu4zI4gRE0Mewx6LuAmPcenL9wR+WACN/SOc8W8/lHkiM2mhJ0U6b5CGCI35AibPDUm/Apz5lBKikQ7g1JyeDmwnwt+TQ+gqzoksANWjVmvUrJQ+SFPM3ldG2IC6UU5k5Zh6Sw4hoqp2f3X+bEbpahUIYx2rxOZw65nsWxrpYPa5bioq6vosyONwCPb1Aox0/mwGfvn1N2hoHCEh/K0CtVO3P8Y6fHlI0t4xn8yueGHbhOxIDL4646JpIHWMIHToAMCARKigcsEgcgBmpPDsOe4hZhPCQO2jqrVXX13fdzAryHbh5xslCeot7W5OGLMYpkHhaeER6n1hBBgWvxzw0EiueN3v9/ZO5RLg4EQoAdzKm23OpU088gODdFSJR9kHJfWzFnqEuthC6Ezs8cSjADtATBuJlCt8yXCxT1jmGDrw9d3zhNvSWJ7l6raAXT4dv5ytKogoL9VgdEjtQPB56yyN//TtrjqQ2Q+7dwHikY7mLCgjjjTPL84dO5ZCjMTXW4H4z9BsYXTOhGtvhWY+w8nzQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC8JAUMeonsyqAUT3QEUhV9TjrtO50hyEfDdvLn8SE6nO+lnpfCS1OdmqWBaWZijqM8NNX3GFkwjyWwD9ofA/s4hUi
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858187&amp;s=yC8o+P1ib8PIFvErbF5K/g0PVGHtO4GBkboxIYERbnw="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593441858187.tgz"
&lt; Content-Length: 75187
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 14:44:18 GMT
Cache-Control: no-cache
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC8JAUMeonsyqAUT3QEUhV9TjrtO50hyEfDdvLn8SE6nO+lnpfCS1OdmqWBaWZijqM8NNX3GFkwjyWwD9ofA/s4hUi
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858187&amp;s=yC8o+P1ib8PIFvErbF5K/g0PVGHtO4GBkboxIYERbnw="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593441858187.tgz"
Content-Length: 75187
</msg>
<status status="PASS" starttime="20200629 14:44:18.220" endtime="20200629 14:44:18.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.221" endtime="20200629 14:44:18.221"></status>
</kw>
<msg timestamp="20200629 14:44:18.221" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.168" endtime="20200629 14:44:18.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.221" endtime="20200629 14:44:18.222"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.123" endtime="20200629 14:44:18.222"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:18.122" endtime="20200629 14:44:18.222" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.227" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.224" endtime="20200629 14:44:18.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.229" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.229" endtime="20200629 14:44:18.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.229" endtime="20200629 14:44:18.230"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.224" endtime="20200629 14:44:18.230"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.224" endtime="20200629 14:44:18.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.233" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.246" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200629 14:44:18.231" endtime="20200629 14:44:18.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.247" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200629 14:44:18.247" endtime="20200629 14:44:18.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.248" endtime="20200629 14:44:18.248"></status>
</kw>
<msg timestamp="20200629 14:44:18.248" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200629 14:44:18.230" endtime="20200629 14:44:18.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.248" endtime="20200629 14:44:18.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.252" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.250" endtime="20200629 14:44:18.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.254" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:18.254" endtime="20200629 14:44:18.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.254" endtime="20200629 14:44:18.255"></status>
</kw>
<msg timestamp="20200629 14:44:18.255" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.250" endtime="20200629 14:44:18.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:18.256" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:18.255" endtime="20200629 14:44:18.256"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.259" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.257" endtime="20200629 14:44:18.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.267" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.267" endtime="20200629 14:44:18.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.268" endtime="20200629 14:44:18.268"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.256" endtime="20200629 14:44:18.268"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.256" endtime="20200629 14:44:18.268"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.249" endtime="20200629 14:44:18.268"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.249" endtime="20200629 14:44:18.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.271" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.297" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200629 14:44:18.269" endtime="20200629 14:44:18.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.298" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x65df50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.7) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb0cBEwAojkyRT6YaxHl7u/y7wB+cTRkDHxLVjNu8hBP+m2eCJRzJK/5wXlJgXBgNS7PDCrNZ1ZppHjQYXBUWZ5pmPR3BpRSTsBaImOPQY5QE3ZZoB92Ezx+Z5iu0ckEu3spajUF6BJaoz7PvoXy38OdYiHJeiHgRGHFBf4VxvEUl5v7+Uaf5SI5aPOYQf1qb7yL1B+hCoZT1b4Ilx+97uDamQKD4YwkkZCk5rElwN+m0Nely6jsrhZCKt7kE6zKbBqpOu02gi9AHTxsvk0iT6G9OkPFZ/w4YIjayxIV9ERnbAHikyJOY3eCsGWX/ChbnuFcM469bPWNTXevneoqzCFb7QZ1Yf7pIHWMIHToAMCARKigcsEgcg04fRBZoOPWKnOaemMbRoTpjwFJUIjK687+OvLg4LoyddreId1fm8fGGkI/g56fCBQkFgf84+rnrvwJkBUH85Iz1hnmh+VhpccaVSU8inygssMGmQcLzgNCbs7iya0Aac6P1Pr5uf8aC8BqYVxzEpYw2EKnDp1WoCCDeeAllbh+XQBVT0NVemGwNzK1A8voZZHNl4pUahjvfrhsQmy5UzeD3yl0BM9v/ZOuwnLhTjeES3v55wdnhy/g/n6HMLvbOEY+BlV9La4YA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3PIKAtm30JsxiInJ07VkznK4ZmdVR6PI9g6+h++hb0nnKxNyI8MDvF5ZdaMFSD8VfGt91mqFtwYdQX42kGo6w+bY
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858287&amp;s=tIB4odii+WDC38ydwM2O/ru9P2kDMAO71ndlPriDKy4="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 14:44:18 GMT
Cache-Control: no-cache
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3PIKAtm30JsxiInJ07VkznK4ZmdVR6PI9g6+h++hb0nnKxNyI8MDvF5ZdaMFSD8VfGt91mqFtwYdQX42kGo6w+bY
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858287&amp;s=tIB4odii+WDC38ydwM2O/ru9P2kDMAO71ndlPriDKy4="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200629 14:44:18.298" endtime="20200629 14:44:18.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.298" endtime="20200629 14:44:18.299"></status>
</kw>
<msg timestamp="20200629 14:44:18.299" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.7...
* Connected to om (172.26.0.7) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200629 14:44:18.269" endtime="20200629 14:44:18.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.299" endtime="20200629 14:44:18.300"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.223" endtime="20200629 14:44:18.300"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:18.223" endtime="20200629 14:44:18.300" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.305" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.303" endtime="20200629 14:44:18.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.312" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.312" endtime="20200629 14:44:18.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.313" endtime="20200629 14:44:18.313"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.303" endtime="20200629 14:44:18.313"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.302" endtime="20200629 14:44:18.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.316" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.332" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200629 14:44:18.314" endtime="20200629 14:44:18.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.333" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200629 14:44:18.332" endtime="20200629 14:44:18.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.333" endtime="20200629 14:44:18.334"></status>
</kw>
<msg timestamp="20200629 14:44:18.334" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200629 14:44:18.313" endtime="20200629 14:44:18.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.334" endtime="20200629 14:44:18.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.338" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.339" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.336" endtime="20200629 14:44:18.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.340" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:18.340" endtime="20200629 14:44:18.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.340" endtime="20200629 14:44:18.341"></status>
</kw>
<msg timestamp="20200629 14:44:18.341" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.336" endtime="20200629 14:44:18.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:18.342" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:18.342" endtime="20200629 14:44:18.342"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.345" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.343" endtime="20200629 14:44:18.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.361" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.361" endtime="20200629 14:44:18.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.361" endtime="20200629 14:44:18.362"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.343" endtime="20200629 14:44:18.362"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.342" endtime="20200629 14:44:18.362"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.335" endtime="20200629 14:44:18.362"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.335" endtime="20200629 14:44:18.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.365" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.389" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200629 14:44:18.363" endtime="20200629 14:44:18.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.390" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1da3f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.10) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEG6xo1hLOAGZoZRjPKcEpjqvTH2TJhM+wm4NaE1cDzOg1UbGT2XlvMX8hAaA98sRC3AIgo9CPZZ/o74kPzvu27NkE1NuJk7O+F28ep8FJO5jelbK/DbEMnmP8xPmqoNslImEt3bJ/tG2pF0fOVa0EzHlOqi2hvg5WZvJP4SUz0WfXzzp2YGUocp2sMqIGL9UMNiNYLEhtw0LFbwQjoQUiZqFp47IwzbRVm1Os01hLcg7JamDFnGA+M4vDQwKewDAcOQgMH4WIk6DabF8aOACWT4pMwnDaOGDoTaFCg1wTprppYiwv30mHcjXXzV8ZOL8swVf1CiqrjAfTFHbw/nMzJvvY2k4VNVqSB1jCB06ADAgESooHLBIHIhjxwcyoX7MBLETN5xwrKjbt8Q0hWJHUvHxYf5Ht8Hp6oU6+CgUF/YhIwc+HCQ+H/NWPXuzLUYL1xMuRac6eZaZq2hv1Fg81H3LpXVHTDIVKuWdvJ8Zfp8PrvD/i9lolUqN0EuTRtEkeoBs6WdU1NXrTvpVWUvjwDvaS7scqd09XdcixHHFcZF9dj7mI/vZgDWTPtRwJZ2GhaoLOfniFxHPAscva+KD8RKgxI3bbGp5/fX1Qm3b08mLq+69Z2EI5lqBbdQoN6eXc=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCq1IPGAHyWjePYpP+CKKcDjgRvYKwaeIZ9nz5RCzlSvKGtfZQ+hpsJKrFOhA0rgropvXUr4YNUby0idP5JxJr9X/V
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858385&amp;s=HT40Txj6IBNik0PvJBTVZl1lNmIO30Q78tpt0eAAztM="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 29 Jun 2020 13:24:42 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 14:44:18 GMT
Cache-Control: no-cache
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCq1IPGAHyWjePYpP+CKKcDjgRvYKwaeIZ9nz5RCzlSvKGtfZQ+hpsJKrFOhA0rgropvXUr4YNUby0idP5JxJr9X/V
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858385&amp;s=HT40Txj6IBNik0PvJBTVZl1lNmIO30Q78tpt0eAAztM="; Path=/; HttpOnly
Last-Modified: Mon, 29 Jun 2020 13:24:42 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200629 14:44:18.389" endtime="20200629 14:44:18.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.390" endtime="20200629 14:44:18.391"></status>
</kw>
<msg timestamp="20200629 14:44:18.391" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.10...
* Connected to scm (172.26.0.10) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTT...</msg>
<status status="PASS" starttime="20200629 14:44:18.363" endtime="20200629 14:44:18.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.391" endtime="20200629 14:44:18.392"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.302" endtime="20200629 14:44:18.392"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:18.301" endtime="20200629 14:44:18.392" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.397" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.394" endtime="20200629 14:44:18.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.399" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.399" endtime="20200629 14:44:18.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.399" endtime="20200629 14:44:18.400"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.394" endtime="20200629 14:44:18.400"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.394" endtime="20200629 14:44:18.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.403" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.416" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.401" endtime="20200629 14:44:18.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.417" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200629 14:44:18.417" endtime="20200629 14:44:18.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.417" endtime="20200629 14:44:18.418"></status>
</kw>
<msg timestamp="20200629 14:44:18.418" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.400" endtime="20200629 14:44:18.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.418" endtime="20200629 14:44:18.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.421" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.423" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.420" endtime="20200629 14:44:18.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.424" level="INFO">scm</msg>
<status status="PASS" starttime="20200629 14:44:18.424" endtime="20200629 14:44:18.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.424" endtime="20200629 14:44:18.425"></status>
</kw>
<msg timestamp="20200629 14:44:18.425" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200629 14:44:18.420" endtime="20200629 14:44:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200629 14:44:18.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200629 14:44:18.425" endtime="20200629 14:44:18.426"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.429" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200629 14:44:18.427" endtime="20200629 14:44:18.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.437" level="INFO"></msg>
<status status="PASS" starttime="20200629 14:44:18.437" endtime="20200629 14:44:18.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.437" endtime="20200629 14:44:18.438"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.426" endtime="20200629 14:44:18.438"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.426" endtime="20200629 14:44:18.438"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.419" endtime="20200629 14:44:18.438"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.419" endtime="20200629 14:44:18.438"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200629 14:44:18.441" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200629 14:44:18.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200629 14:44:18.470" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.439" endtime="20200629 14:44:18.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200629 14:44:18.471" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x2201f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.3) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYgM4z3T82FwcVWWvE1LX2B6P8hnIs4KPlvmey5VMMLrUKAUs9ZNnhSfLzAmw7EerYDQI4DnrpzCY+vyFWJOQPGOXDQIdFVaiZQo1kzED0a3Lv7N/Tx3AdmdDgf2GyiQ57OYbppDIqMIPyD4yopp+TPNpzwGNfQmH65R9mDFLHZ6Fe8tf2JJi1MPBb4gvdoFWqztWtiryfZU6epzDIssFPIHNekTjBoOCuFb76yVh5IF+FLTThgnrmToMviHMHCrONU6ZPxhUniufOcuh2J/yaUIoQbt1hltCAeQRCh+66xEOIChgxN35k+fKoIfHGGqwNmQSUe/zIR13BEmqdRbnn8qRLgZ14ppIHWMIHToAMCARKigcsEgcgOEXZSEIDv6JgKstP6dtWyTYA05KOiSgdSCHyoE7SQOVuCF1+xvVjZSzJIdFNEB0YQug4uGXetWaV6FfiKJ0mM60emPfId1/tD+825IfxIkaaQLmvko3j4cBftk89a6wleDUh94F+ty+bnLOqwTpMbmyVIvC63GjZE99GiC38b7iB3IzR0Lk6Et1/61GDMWi2MWNo4O/wZyftkOsRDZbwiRN89PylQ37rqsaU14KVi00IfSej1LBeV7P78E1Dz/UHdd2SL1Mq6nQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Date: Mon, 29 Jun 2020 14:44:18 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCsAXP6qAtiFoK4WIDW0qBhiNRgISO+EJNN3Z8K+x7L5dA5GQ4v6nRPNSzzl5nWN9M4crVYu6J2GTCnP5NQhdCEmae
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858461&amp;s=L/SJmdAkVS7NmwZAb4tRLWoWjTKdPScD40wqN8LK8y0="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 29 Jun 2020 13:30:06 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Mon, 29 Jun 2020 14:44:18 GMT
Cache-Control: no-cache
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Mon, 29 Jun 2020 14:44:18 GMT
Date: Mon, 29 Jun 2020 14:44:18 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCsAXP6qAtiFoK4WIDW0qBhiNRgISO+EJNN3Z8K+x7L5dA5GQ4v6nRPNSzzl5nWN9M4crVYu6J2GTCnP5NQhdCEmae
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593477858461&amp;s=L/SJmdAkVS7NmwZAb4tRLWoWjTKdPScD40wqN8LK8y0="; Path=/; HttpOnly
Last-Modified: Mon, 29 Jun 2020 13:30:06 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200629 14:44:18.470" endtime="20200629 14:44:18.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200629 14:44:18.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200629 14:44:18.471" endtime="20200629 14:44:18.472"></status>
</kw>
<msg timestamp="20200629 14:44:18.472" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200629 14:44:18.438" endtime="20200629 14:44:18.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200629 14:44:18.472" endtime="20200629 14:44:18.472"></status>
</kw>
<status status="PASS" starttime="20200629 14:44:18.393" endtime="20200629 14:44:18.472"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200629 14:44:18.392" endtime="20200629 14:44:18.473" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200629 14:44:09.269" endtime="20200629 14:44:18.475"></status>
</suite>
<status status="PASS" starttime="20200629 14:44:09.239" endtime="20200629 14:44:18.477"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
