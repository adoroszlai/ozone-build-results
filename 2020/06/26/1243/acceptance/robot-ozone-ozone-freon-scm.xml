<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200626 23:06:55.855" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:06:55.907" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:07:03.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:07:03.134" level="INFO">${output} = 2020-06-26 23:06:56,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:06:56,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:06:55.902" endtime="20200626 23:07:03.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:07:03.135" level="INFO">2020-06-26 23:06:56,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:06:56,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 23:06:56,981 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 23:06:57,654 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-26 23:06:57,655 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-26 23:06:57,655 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-26 23:06:57,655 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-26 23:06:57,655 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-26 23:06:57,655 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-26 23:06:57,656 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-26 23:06:57,659 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-26 23:06:57,666 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:06:57,703 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-84966, with hadoop as owner.
2020-06-26 23:06:57,720 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-84966/bucket-0-17126, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 23:06:58,256 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 23:06:58,677 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,041
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:00,038
Average Time spent in key write: 00:00:00,653
Total bytes written: 10240
Total Execution time: 00:00:05,640
***************************************************</msg>
<status status="PASS" starttime="20200626 23:07:03.135" endtime="20200626 23:07:03.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:07:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:07:03.136" endtime="20200626 23:07:03.136"></status>
</kw>
<msg timestamp="20200626 23:07:03.136" level="INFO">${result} = 2020-06-26 23:06:56,784 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:06:56,981 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:06:55.902" endtime="20200626 23:07:03.136"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:07:03.138" endtime="20200626 23:07:03.138"></status>
</kw>
<status status="PASS" starttime="20200626 23:07:03.137" endtime="20200626 23:07:03.138"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:06:55.901" endtime="20200626 23:07:03.138" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:07:03.142" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:07:09.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:07:09.882" level="INFO">${output} = 2020-06-26 23:07:04,061 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:04,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:03.140" endtime="20200626 23:07:09.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:07:09.883" level="INFO">2020-06-26 23:07:04,061 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:04,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 23:07:04,188 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 23:07:04,387 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lr0k5upyck
2020-06-26 23:07:04,407 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:04,913 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-26 23:07:04,928 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 23:07:05,414 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:05,502 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 23:07:06,415 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:07,415 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:08,416 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:09,417 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 23:07:09,553 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=3780.808463, max=3780.808463, mean=3780.808463, stddev=0.0, median=3780.808463, p75=3780.808463, p95=3780.808463, p98=3780.808463, p99=3780.808463, p999=3780.808463, mean_rate=0.2168655043621311, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 23:07:09,553 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-06-26 23:07:09,554 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 23:07:09,554 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 23:07:09.883" endtime="20200626 23:07:09.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:07:09.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:07:09.884" endtime="20200626 23:07:09.884"></status>
</kw>
<msg timestamp="20200626 23:07:09.885" level="INFO">${result} = 2020-06-26 23:07:04,061 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:04,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:03.140" endtime="20200626 23:07:09.885"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:07:09.885" endtime="20200626 23:07:09.885"></status>
</kw>
<status status="PASS" starttime="20200626 23:07:09.885" endtime="20200626 23:07:09.886"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:07:03.139" endtime="20200626 23:07:09.886" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:07:09.889" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:07:12.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:07:12.977" level="INFO">${output} = 2020-06-26 23:07:10,862 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:11,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:09.887" endtime="20200626 23:07:12.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:07:12.978" level="INFO">2020-06-26 23:07:10,862 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:11,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 23:07:11,034 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 23:07:11,196 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 4qqwfjxiaj
2020-06-26 23:07:11,217 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:12,249 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 23:07:12,966 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=27.146224, max=27.146224, mean=27.146224, stddev=0.0, median=27.146224, p75=27.146224, p95=27.146224, p98=27.146224, p99=27.146224, p999=27.146224, mean_rate=0.8947404108480292, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 23:07:12,967 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-26 23:07:12,967 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 23:07:12,967 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 23:07:12.977" endtime="20200626 23:07:12.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:07:12.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:07:12.978" endtime="20200626 23:07:12.979"></status>
</kw>
<msg timestamp="20200626 23:07:12.979" level="INFO">${result} = 2020-06-26 23:07:10,862 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:11,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:09.887" endtime="20200626 23:07:12.979"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:07:12.980" endtime="20200626 23:07:12.980"></status>
</kw>
<status status="PASS" starttime="20200626 23:07:12.979" endtime="20200626 23:07:12.980"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:07:09.886" endtime="20200626 23:07:12.981" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:07:12.986" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:07:15.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:07:15.881" level="INFO">${output} = 2020-06-26 23:07:13,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:14,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:12.983" endtime="20200626 23:07:15.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:07:15.883" level="INFO">2020-06-26 23:07:13,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:14,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 23:07:14,017 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 23:07:14,195 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vuoyozwhsr
2020-06-26 23:07:14,211 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 23:07:15,227 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 23:07:15,855 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=8.651371, max=8.651371, mean=8.651371, stddev=0.0, median=8.651371, p75=8.651371, p95=8.651371, p98=8.651371, p99=8.651371, p999=8.651371, mean_rate=0.8994602686119723, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 23:07:15,857 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-26 23:07:15,857 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 23:07:15,857 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 23:07:15.882" endtime="20200626 23:07:15.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:07:15.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:07:15.883" endtime="20200626 23:07:15.883"></status>
</kw>
<msg timestamp="20200626 23:07:15.884" level="INFO">${result} = 2020-06-26 23:07:13,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:07:14,017 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:07:12.982" endtime="20200626 23:07:15.884"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:07:15.884" endtime="20200626 23:07:15.885"></status>
</kw>
<status status="PASS" starttime="20200626 23:07:15.884" endtime="20200626 23:07:15.885"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:07:12.981" endtime="20200626 23:07:15.885" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200626 23:06:55.881" endtime="20200626 23:07:15.886"></status>
</suite>
<status status="PASS" starttime="20200626 23:06:55.856" endtime="20200626 23:07:15.889"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
