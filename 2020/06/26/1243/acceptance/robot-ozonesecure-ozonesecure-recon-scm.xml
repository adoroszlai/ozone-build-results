<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200626 23:29:01.352" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:01.407" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:01.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:01.409" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:01.402" endtime="20200626 23:29:01.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:01.410" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:01.409" endtime="20200626 23:29:01.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:01.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:01.410" endtime="20200626 23:29:01.411"></status>
</kw>
<msg timestamp="20200626 23:29:01.411" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:01.402" endtime="20200626 23:29:01.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200626 23:29:01.412" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200626 23:29:01.411" endtime="20200626 23:29:01.412"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:01.416" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:01.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:01.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:01.413" endtime="20200626 23:29:01.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:01.430" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:01.429" endtime="20200626 23:29:01.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:01.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:01.430" endtime="20200626 23:29:01.431"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:01.413" endtime="20200626 23:29:01.431"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:01.412" endtime="20200626 23:29:01.431"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:01.402" endtime="20200626 23:29:01.431"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:01.401" endtime="20200626 23:29:01.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:01.435" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:09.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:09.061" level="INFO">${output} = 2020-06-26 23:29:02,370 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:29:02,522 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 23:29:01.432" endtime="20200626 23:29:09.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:09.062" level="INFO">2020-06-26 23:29:02,370 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 23:29:02,522 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 23:29:02,523 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-26 23:29:03,582 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-26 23:29:03,583 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-26 23:29:03,590 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-26 23:29:03,597 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-26 23:29:03,625 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-09004, with testuser/scm@EXAMPLE.COM as owner.
2020-06-26 23:29:03,653 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-09004/bucket-0-07934, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 23:29:04,098 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 23:29:04,603 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,100
Average Time spent in key write: 00:00:00,433
Total bytes written: 10250
Total Execution time: 00:00:06,021
***************************************************</msg>
<status status="PASS" starttime="20200626 23:29:09.061" endtime="20200626 23:29:09.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:09.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:09.062" endtime="20200626 23:29:09.063"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:01.431" endtime="20200626 23:29:09.063"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:29:01.401" endtime="20200626 23:29:09.063" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:09.069" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:09.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:09.071" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:09.066" endtime="20200626 23:29:09.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:09.072" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:09.072" endtime="20200626 23:29:09.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:09.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:09.072" endtime="20200626 23:29:09.073"></status>
</kw>
<msg timestamp="20200626 23:29:09.073" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:09.066" endtime="20200626 23:29:09.073"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:09.077" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:09.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:09.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:09.074" endtime="20200626 23:29:09.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:09.092" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:09.092" endtime="20200626 23:29:09.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:09.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:09.093" endtime="20200626 23:29:09.093"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:09.074" endtime="20200626 23:29:09.093"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:09.073" endtime="20200626 23:29:09.093"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:09.066" endtime="20200626 23:29:09.093"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:09.065" endtime="20200626 23:29:09.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:09.097" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:09.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:09.285" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:09.094" endtime="20200626 23:29:09.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:09.286" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    424      0 --:--:-- --:--:-- --:--:--   425
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:09.285" endtime="20200626 23:29:09.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:09.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:09.286" endtime="20200626 23:29:09.286"></status>
</kw>
<msg timestamp="20200626 23:29:09.287" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:09.094" endtime="20200626 23:29:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:09.287" endtime="20200626 23:29:09.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:09.293" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:09.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:09.330" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:09.288" endtime="20200626 23:29:09.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:09.331" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   102k      0 --:--:-- --:--:-- --:--:--  104k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:09.330" endtime="20200626 23:29:09.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:09.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:09.331" endtime="20200626 23:29:09.331"></status>
</kw>
<msg timestamp="20200626 23:29:09.332" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:09.288" endtime="20200626 23:29:09.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:09.333" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   102k      0 --:--:-- --:--:-- --:--:--  104k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:09.332" endtime="20200626 23:29:09.333"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:09.065" endtime="20200626 23:29:09.333"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:19.340" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:19.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:19.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:19.337" endtime="20200626 23:29:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:19.344" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:19.344" endtime="20200626 23:29:19.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:19.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:19.345" endtime="20200626 23:29:19.345"></status>
</kw>
<msg timestamp="20200626 23:29:19.345" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:19.336" endtime="20200626 23:29:19.345"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:19.349" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:19.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:19.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:19.346" endtime="20200626 23:29:19.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:19.369" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:19.368" endtime="20200626 23:29:19.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:19.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:19.369" endtime="20200626 23:29:19.369"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:19.346" endtime="20200626 23:29:19.370"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:19.345" endtime="20200626 23:29:19.370"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:19.335" endtime="20200626 23:29:19.370"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:19.335" endtime="20200626 23:29:19.370"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:19.373" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:19.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:19.391" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:19.370" endtime="20200626 23:29:19.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:19.392" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6144      0 --:--:-- --:--:-- --:--:--  6416
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:19.391" endtime="20200626 23:29:19.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:19.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:19.392" endtime="20200626 23:29:19.393"></status>
</kw>
<msg timestamp="20200626 23:29:19.393" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:19.370" endtime="20200626 23:29:19.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:19.393" endtime="20200626 23:29:19.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:19.397" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:19.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:19.415" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:19.394" endtime="20200626 23:29:19.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:19.416" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   250k      0 --:--:-- --:--:-- --:--:--  260k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:19.415" endtime="20200626 23:29:19.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:19.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:19.416" endtime="20200626 23:29:19.417"></status>
</kw>
<msg timestamp="20200626 23:29:19.417" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:19.394" endtime="20200626 23:29:19.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:19.418" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   250k      0 --:--:-- --:--:-- --:--:--  260k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:19.417" endtime="20200626 23:29:19.418"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:19.334" endtime="20200626 23:29:19.418"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:29.425" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:29.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:29.429" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:29.422" endtime="20200626 23:29:29.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:29.429" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:29.429" endtime="20200626 23:29:29.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:29.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:29.430" endtime="20200626 23:29:29.431"></status>
</kw>
<msg timestamp="20200626 23:29:29.431" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:29.421" endtime="20200626 23:29:29.431"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:29.434" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:29.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:29.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:29.432" endtime="20200626 23:29:29.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:29.446" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:29.446" endtime="20200626 23:29:29.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:29.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:29.447" endtime="20200626 23:29:29.447"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:29.431" endtime="20200626 23:29:29.447"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:29.431" endtime="20200626 23:29:29.447"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:29.421" endtime="20200626 23:29:29.448"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:29.420" endtime="20200626 23:29:29.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:29.451" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:29.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:29.466" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:29.448" endtime="20200626 23:29:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:29.467" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7371      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:29.467" endtime="20200626 23:29:29.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:29.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:29.468" endtime="20200626 23:29:29.468"></status>
</kw>
<msg timestamp="20200626 23:29:29.468" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:29.448" endtime="20200626 23:29:29.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:29.468" endtime="20200626 23:29:29.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:29.473" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:29.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:29.488" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:29.469" endtime="20200626 23:29:29.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:29.489" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   296k      0 --:--:-- --:--:-- --:--:--  313k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:29.488" endtime="20200626 23:29:29.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:29.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:29.489" endtime="20200626 23:29:29.490"></status>
</kw>
<msg timestamp="20200626 23:29:29.490" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:29.469" endtime="20200626 23:29:29.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:29.491" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   296k      0 --:--:-- --:--:-- --:--:--  313k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:29.490" endtime="20200626 23:29:29.491"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:29.419" endtime="20200626 23:29:29.492"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:39.496" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:39.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:39.500" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:39.494" endtime="20200626 23:29:39.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:39.501" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:39.500" endtime="20200626 23:29:39.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:39.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:39.501" endtime="20200626 23:29:39.501"></status>
</kw>
<msg timestamp="20200626 23:29:39.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:39.493" endtime="20200626 23:29:39.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:39.505" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:39.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:39.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:39.502" endtime="20200626 23:29:39.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:39.522" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:39.521" endtime="20200626 23:29:39.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:39.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:39.522" endtime="20200626 23:29:39.523"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:39.502" endtime="20200626 23:29:39.523"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:39.502" endtime="20200626 23:29:39.523"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:39.493" endtime="20200626 23:29:39.523"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:39.493" endtime="20200626 23:29:39.523"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:39.525" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:39.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:39.540" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:39.524" endtime="20200626 23:29:39.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:39.541" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  13077      0 --:--:-- --:--:-- --:--:-- 15400
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:39.540" endtime="20200626 23:29:39.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:39.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:39.541" endtime="20200626 23:29:39.541"></status>
</kw>
<msg timestamp="20200626 23:29:39.542" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:39.523" endtime="20200626 23:29:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:39.542" endtime="20200626 23:29:39.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:39.545" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:39.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:39.558" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:39.543" endtime="20200626 23:29:39.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:39.559" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   424k      0 --:--:-- --:--:-- --:--:--  447k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:39.558" endtime="20200626 23:29:39.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:39.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:39.559" endtime="20200626 23:29:39.560"></status>
</kw>
<msg timestamp="20200626 23:29:39.560" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:39.542" endtime="20200626 23:29:39.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:39.561" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   424k      0 --:--:-- --:--:-- --:--:--  447k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:39.560" endtime="20200626 23:29:39.561"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:39.492" endtime="20200626 23:29:39.562"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:49.566" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:49.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:49.569" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:49.564" endtime="20200626 23:29:49.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:49.570" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:49.569" endtime="20200626 23:29:49.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:49.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:49.570" endtime="20200626 23:29:49.570"></status>
</kw>
<msg timestamp="20200626 23:29:49.571" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:49.564" endtime="20200626 23:29:49.571"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:49.573" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:49.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:49.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:49.572" endtime="20200626 23:29:49.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:49.586" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:49.586" endtime="20200626 23:29:49.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:49.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:49.587" endtime="20200626 23:29:49.587"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:49.571" endtime="20200626 23:29:49.588"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:49.571" endtime="20200626 23:29:49.588"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:49.563" endtime="20200626 23:29:49.588"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:49.563" endtime="20200626 23:29:49.588"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:49.591" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:49.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:49.607" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:49.588" endtime="20200626 23:29:49.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:49.608" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7219      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:49.607" endtime="20200626 23:29:49.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:49.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:49.608" endtime="20200626 23:29:49.608"></status>
</kw>
<msg timestamp="20200626 23:29:49.609" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:49.588" endtime="20200626 23:29:49.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:49.609" endtime="20200626 23:29:49.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:49.612" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:49.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:49.633" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:49.610" endtime="20200626 23:29:49.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:49.634" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   199k      0 --:--:-- --:--:-- --:--:--  208k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:49.634" endtime="20200626 23:29:49.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:49.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:49.635" endtime="20200626 23:29:49.635"></status>
</kw>
<msg timestamp="20200626 23:29:49.635" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:49.609" endtime="20200626 23:29:49.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:49.636" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:49 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   199k      0 --:--:-- --:--:-- --:--:--  208k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:49.635" endtime="20200626 23:29:49.636"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:49.562" endtime="20200626 23:29:49.640"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:59.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:59.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:59.647" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:29:59.642" endtime="20200626 23:29:59.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:59.648" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:29:59.648" endtime="20200626 23:29:59.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:59.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:59.648" endtime="20200626 23:29:59.649"></status>
</kw>
<msg timestamp="20200626 23:29:59.649" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:29:59.642" endtime="20200626 23:29:59.649"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:59.652" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:59.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:59.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:29:59.650" endtime="20200626 23:29:59.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:59.670" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:29:59.670" endtime="20200626 23:29:59.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:59.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:59.670" endtime="20200626 23:29:59.671"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:59.650" endtime="20200626 23:29:59.672"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:59.649" endtime="20200626 23:29:59.672"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:59.642" endtime="20200626 23:29:59.672"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:59.641" endtime="20200626 23:29:59.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:59.675" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:59.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:59.692" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:59.672" endtime="20200626 23:29:59.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:59.693" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6564      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200626 23:29:59.692" endtime="20200626 23:29:59.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:59.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:59.693" endtime="20200626 23:29:59.694"></status>
</kw>
<msg timestamp="20200626 23:29:59.694" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:59.672" endtime="20200626 23:29:59.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:29:59.694" endtime="20200626 23:29:59.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:29:59.698" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:29:59.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:29:59.713" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:59.695" endtime="20200626 23:29:59.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:29:59.714" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   323k      0 --:--:-- --:--:-- --:--:--  347k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200626 23:29:59.713" endtime="20200626 23:29:59.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:29:59.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:29:59.714" endtime="20200626 23:29:59.714"></status>
</kw>
<msg timestamp="20200626 23:29:59.715" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:29:59.694" endtime="20200626 23:29:59.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200626 23:29:59.716" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Date: Fri, 26 Jun 2020 23:29:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3207
&lt; 
{ [data not shown]

100  3207  100  3207    0     0   323k      0 --:--:-- --:--:-- --:--:--  347k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200626 23:29:59.715" endtime="20200626 23:29:59.716"></status>
</kw>
<status status="FAIL" starttime="20200626 23:29:59.641" endtime="20200626 23:29:59.716"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.721" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.724" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:30:09.718" endtime="20200626 23:30:09.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.725" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:30:09.724" endtime="20200626 23:30:09.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.725" endtime="20200626 23:30:09.725"></status>
</kw>
<msg timestamp="20200626 23:30:09.725" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:30:09.718" endtime="20200626 23:30:09.725"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.729" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:30:09.726" endtime="20200626 23:30:09.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.743" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:30:09.743" endtime="20200626 23:30:09.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.743" endtime="20200626 23:30:09.744"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.726" endtime="20200626 23:30:09.744"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.726" endtime="20200626 23:30:09.744"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.718" endtime="20200626 23:30:09.745"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.717" endtime="20200626 23:30:09.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.747" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.763" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.745" endtime="20200626 23:30:09.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.764" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  19339      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200626 23:30:09.763" endtime="20200626 23:30:09.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.764" endtime="20200626 23:30:09.765"></status>
</kw>
<msg timestamp="20200626 23:30:09.765" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.745" endtime="20200626 23:30:09.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.765" endtime="20200626 23:30:09.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.768" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.782" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.766" endtime="20200626 23:30:09.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.783" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3285
&lt; 
{ [data not shown]

100  3285  100  3285    0     0   552k      0 --:--:-- --:--:-- --:--:--  641k
* Connection #0 to host recon left intact
[{"volume":"vol-3-84853","bucket":"bucket-3-46035","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-2-12918","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-1-35161","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-1-02143","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-0-58375","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-0-44988","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-0-06072","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-2-07706","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-4-77992","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-3-37104","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-4-29357","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-4-87767","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-3-61842","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-2-35296","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-3-39435","fileSize":16384,"count":5},{"volume":"vol-2-92672","bucket":"bucket-4-73176","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-0-00242","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-1-27072","fileSize":16384,"count":5},{"volume":"vol-3-84853","bucket":"bucket-2-37208","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-0-62693","fileSize":16384,"count":5},{"volume":"vol-1-56067","bucket":"bucket-4-52901","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-1-19931","fileSize":16384,"count":5},{"volume":"vol-0-77195","bucket":"bucket-3-63203","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-2-84026","fileSize":16384,"count":5},{"volume":"vol-4-35757","bucket":"bucket-1-41392","fileSize":16384,"count":5},{"volume":"64484-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"64484-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"64484-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest333","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-ofs","fileSize":1024,"count":0},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-01072","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-72812","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-72812","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-69817","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-14877","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-63456","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-48345","fileSize":1024,"count":2},{"volume":"vol-0-09004","bucket":"bucket-0-07934","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200626 23:30:09.782" endtime="20200626 23:30:09.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.783" endtime="20200626 23:30:09.784"></status>
</kw>
<msg timestamp="20200626 23:30:09.784" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.766" endtime="20200626 23:30:09.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.784" endtime="20200626 23:30:09.784"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.717" endtime="20200626 23:30:09.785"></status>
</kw>
<status status="PASS" starttime="20200626 23:29:09.065" endtime="20200626 23:30:09.785"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:29:09.064" endtime="20200626 23:30:09.785" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.790" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.815" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.787" endtime="20200626 23:30:09.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.816" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  89076      0 --:--:-- --:--:-- --:--:-- 90600
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"00437be0-204a-49a7-9054-10d182934d89","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593214205080,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24847540224},"pipelines":[{"pipelineID":"c8c44a32-2544-4cc4-8c2d-6efb87447be7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"a1fadfc1-4518-4c54-804a-c69af208feeb","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"925c874a-a381-4e5c-96f1-8916013dab94","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593214205004,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24847540224},"pipelines":[{"pipelineID":"c8c44a32-2544-4cc4-8c2d-6efb87447be7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"b1aa78ae-fea3-4b7c-ac7e-81ad67a63c75","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"b9da11e7-f298-4346-9e3a-9712b859442c","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593214205040,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24847540224},"pipelines":[{"pipelineID":"c8c44a32-2544-4cc4-8c2d-6efb87447be7","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"b3205c01-7137-4a86-8322-7b78b4f10d93","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200626 23:30:09.816" endtime="20200626 23:30:09.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.817" endtime="20200626 23:30:09.817"></status>
</kw>
<msg timestamp="20200626 23:30:09.817" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.786" endtime="20200626 23:30:09.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.818" endtime="20200626 23:30:09.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.818" endtime="20200626 23:30:09.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.818" endtime="20200626 23:30:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.819" endtime="20200626 23:30:09.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.822" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.844" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.820" endtime="20200626 23:30:09.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.845" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  83936      0 --:--:-- --:--:-- --:--:-- 80470
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"c8c44a32-2544-4cc4-8c2d-6efb87447be7","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1037952,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"a1fadfc1-4518-4c54-804a-c69af208feeb","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1038628,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"b3205c01-7137-4a86-8322-7b78b4f10d93","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1037973,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"b1aa78ae-fea3-4b7c-ac7e-81ad67a63c75","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1038462,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200626 23:30:09.845" endtime="20200626 23:30:09.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.845" endtime="20200626 23:30:09.846"></status>
</kw>
<msg timestamp="20200626 23:30:09.846" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.820" endtime="20200626 23:30:09.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.846" endtime="20200626 23:30:09.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.847" endtime="20200626 23:30:09.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.847" endtime="20200626 23:30:09.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.848" endtime="20200626 23:30:09.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.848" endtime="20200626 23:30:09.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.848" endtime="20200626 23:30:09.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.853" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.867" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.850" endtime="20200626 23:30:09.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.868" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  19024      0 --:--:-- --:--:-- --:--:-- 20666
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74542620672},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200626 23:30:09.868" endtime="20200626 23:30:09.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.868" endtime="20200626 23:30:09.869"></status>
</kw>
<msg timestamp="20200626 23:30:09.869" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.849" endtime="20200626 23:30:09.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.869" endtime="20200626 23:30:09.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.870" endtime="20200626 23:30:09.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.870" endtime="20200626 23:30:09.870"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.874" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.894" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.871" endtime="20200626 23:30:09.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.895" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  30661      0 --:--:-- --:--:-- --:--:-- 32428
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593213195503,"lastReportTimestamp":1593214205040},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593213195484,"lastReportTimestamp":1593214145097},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593213195388,"lastReportTimestamp":1593214175052}]</msg>
<status status="PASS" starttime="20200626 23:30:09.895" endtime="20200626 23:30:09.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.895" endtime="20200626 23:30:09.896"></status>
</kw>
<msg timestamp="20200626 23:30:09.896" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.871" endtime="20200626 23:30:09.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.896" endtime="20200626 23:30:09.897"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:30:09.785" endtime="20200626 23:30:09.897" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.903" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200626 23:30:09.900" endtime="20200626 23:30:09.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.905" level="INFO">scm</msg>
<status status="PASS" starttime="20200626 23:30:09.905" endtime="20200626 23:30:09.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.905" endtime="20200626 23:30:09.906"></status>
</kw>
<msg timestamp="20200626 23:30:09.906" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200626 23:30:09.899" endtime="20200626 23:30:09.906"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.910" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 23:30:09.907" endtime="20200626 23:30:09.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.925" level="INFO"></msg>
<status status="PASS" starttime="20200626 23:30:09.924" endtime="20200626 23:30:09.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.925" endtime="20200626 23:30:09.925"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.907" endtime="20200626 23:30:09.926"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.906" endtime="20200626 23:30:09.926"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.899" endtime="20200626 23:30:09.926"></status>
</kw>
<status status="PASS" starttime="20200626 23:30:09.899" endtime="20200626 23:30:09.926"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 23:30:09.929" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 23:30:09.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 23:30:09.979" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.926" endtime="20200626 23:30:09.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 23:30:09.980" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  18368      0 --:--:-- --:--:-- --:--:-- 19217
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x16a7f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.5) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQIBkPYPussCsxp0y4POAo+sWAtqgw4ok/xBGxeb4Am9buwW5qIMlXfM+f/AfzEjFYwzpvgvyAdPafKAESWrD6EWpUcuVGyQfBfK0UTGGG4jgBQ6wP2J4CWEnPq0gjF+JtavVbVu8Ja8MXMsXj6yxsYMNN3ro2zHrBFN2rkCvDa5Rt12E/GC+xt0Q7fIqt0jPxQm3O50GIztjypkQqmKOSc9maGP2l3fy0A03Gv0TwSCd53RFSqK0IBXP5qjo237tCszShpWlX9dUv/Eq1m8OZUJF4ao97wLJOSvjxKchFWecXJI6EO2rVOuyu77ws+R8DOlPrXo0xodvvBRofb1rtuYFHukgdIwgc+gAwIBEqKBxwSBxFJW4/jCBqdfgOP27QeYgliJDeRY08OzxGIy3CSiespEXS5AqnhdZNU9B6R6JkLzwV7qOKfBc7z+R+ZINCZ4367Gt85WfWKnCEDbtBrhM+ug3TRW4AMmeC42E/o79/Iaxj8JT5m8e0tExHRuSt2cP8EJt8Cx5qRxESQEZquJaIsaF2Qiu2ubIMAne05jS5WY6JuWFWcdaatEjWW9TFe6u0/5x3fdokIbtAqOmRRrpjLE8lWL02jNfGDLMqsrxyjVUVfAluI=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Date: Fri, 26 Jun 2020 23:30:09 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCU5FqdQSOOZIFBhIAgAmzCsL4ThwOZZyeyRajGdwd251K5n0iSFBOnQ53XsOLEvK8P4pRlRfob7K65DT596wvQ7Id
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593250209972&amp;s=3g3W2b9tK0ewpiuKfkef7Ki/QJmXwLtl7xZTxsJXVuE="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 26 Jun 2020 22:29:54 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  51708      0 --:--:-- --:--:-- --:--:-- 51708
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.979" endtime="20200626 23:30:09.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 23:30:09.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 23:30:09.980" endtime="20200626 23:30:09.981"></status>
</kw>
<msg timestamp="20200626 23:30:09.981" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200626 23:30:09.926" endtime="20200626 23:30:09.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200626 23:30:09.981" endtime="20200626 23:30:09.982"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 23:30:09.898" endtime="20200626 23:30:09.982" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200626 23:29:01.378" endtime="20200626 23:30:09.983"></status>
</suite>
<status status="PASS" starttime="20200626 23:29:01.352" endtime="20200626 23:30:09.987"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
