<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200626 22:49:14.692" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:49:14.744" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:49:22.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:49:22.055" level="INFO">${output} = 2020-06-26 22:49:15,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:15,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:14.740" endtime="20200626 22:49:22.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:49:22.056" level="INFO">2020-06-26 22:49:15,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:15,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 22:49:15,832 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 22:49:16,589 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-26 22:49:16,590 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-26 22:49:16,590 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-26 22:49:16,591 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-26 22:49:16,591 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-26 22:49:16,591 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-26 22:49:16,591 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-26 22:49:16,594 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-26 22:49:16,607 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 22:49:16,637 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-02065, with hadoop as owner.
2020-06-26 22:49:16,676 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-02065/bucket-0-54140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:49:17,180 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 22:49:17,611 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,053
Average Time spent in bucket creation: 00:00:00,017
Average Time spent in key creation: 00:00:00,075
Average Time spent in key write: 00:00:00,586
Total bytes written: 10240
Total Execution time: 00:00:05,723
***************************************************</msg>
<status status="PASS" starttime="20200626 22:49:22.055" endtime="20200626 22:49:22.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:49:22.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:49:22.056" endtime="20200626 22:49:22.057"></status>
</kw>
<msg timestamp="20200626 22:49:22.058" level="INFO">${result} = 2020-06-26 22:49:15,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:15,831 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:14.740" endtime="20200626 22:49:22.058"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:49:22.059" endtime="20200626 22:49:22.059"></status>
</kw>
<status status="PASS" starttime="20200626 22:49:22.058" endtime="20200626 22:49:22.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:49:14.739" endtime="20200626 22:49:22.059" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:49:22.064" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:49:26.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:49:26.482" level="INFO">${output} = 2020-06-26 22:49:23,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:23,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:22.061" endtime="20200626 22:49:26.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:49:26.483" level="INFO">2020-06-26 22:49:23,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:23,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 22:49:23,177 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 22:49:23,343 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nsvctod9n4
2020-06-26 22:49:23,356 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 22:49:23,948 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-26 22:49:23,988 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:49:24,360 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 22:49:24,588 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 22:49:25,360 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 22:49:26,153 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1291.481844, max=1291.481844, mean=1291.481844, stddev=0.0, median=1291.481844, p75=1291.481844, p95=1291.481844, p98=1291.481844, p99=1291.481844, p999=1291.481844, mean_rate=0.4688921996919056, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 22:49:26,154 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-26 22:49:26,154 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 22:49:26,154 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 22:49:26.483" endtime="20200626 22:49:26.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:49:26.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:49:26.484" endtime="20200626 22:49:26.484"></status>
</kw>
<msg timestamp="20200626 22:49:26.484" level="INFO">${result} = 2020-06-26 22:49:23,040 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:23,177 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:22.061" endtime="20200626 22:49:26.484"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:49:26.485" endtime="20200626 22:49:26.485"></status>
</kw>
<status status="PASS" starttime="20200626 22:49:26.485" endtime="20200626 22:49:26.485"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:49:22.060" endtime="20200626 22:49:26.486" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:49:26.489" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:49:29.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:49:29.460" level="INFO">${output} = 2020-06-26 22:49:27,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:27,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:26.487" endtime="20200626 22:49:29.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:49:29.462" level="INFO">2020-06-26 22:49:27,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:27,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 22:49:27,525 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 22:49:27,674 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 9quhguxaep
2020-06-26 22:49:27,697 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 22:49:28,712 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 22:49:29,449 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=65.485687, max=65.485687, mean=65.485687, stddev=0.0, median=65.485687, p75=65.485687, p95=65.485687, p98=65.485687, p99=65.485687, p999=65.485687, mean_rate=0.8942229470499331, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 22:49:29,450 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-26 22:49:29,450 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 22:49:29,450 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 22:49:29.461" endtime="20200626 22:49:29.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:49:29.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:49:29.462" endtime="20200626 22:49:29.463"></status>
</kw>
<msg timestamp="20200626 22:49:29.463" level="INFO">${result} = 2020-06-26 22:49:27,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:27,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:26.487" endtime="20200626 22:49:29.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:49:29.463" endtime="20200626 22:49:29.464"></status>
</kw>
<status status="PASS" starttime="20200626 22:49:29.463" endtime="20200626 22:49:29.464"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:49:26.486" endtime="20200626 22:49:29.464" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:49:29.468" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:49:32.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:49:32.588" level="INFO">${output} = 2020-06-26 22:49:30,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:30,658 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:29.466" endtime="20200626 22:49:32.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:49:32.589" level="INFO">2020-06-26 22:49:30,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:30,658 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 22:49:30,658 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 22:49:30,831 [main] INFO freon.BaseFreonGenerator: Executing test with prefix y0jjhjr7np
2020-06-26 22:49:30,848 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-26 22:49:31,857 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-26 22:49:32,574 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.197119, max=21.197119, mean=21.197119, stddev=0.0, median=21.197119, p75=21.197119, p95=21.197119, p98=21.197119, p99=21.197119, p999=21.197119, mean_rate=0.8963474879628599, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-26 22:49:32,574 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-26 22:49:32,575 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-26 22:49:32,575 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200626 22:49:32.588" endtime="20200626 22:49:32.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:49:32.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:49:32.589" endtime="20200626 22:49:32.590"></status>
</kw>
<msg timestamp="20200626 22:49:32.590" level="INFO">${result} = 2020-06-26 22:49:30,475 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:49:30,658 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:49:29.466" endtime="20200626 22:49:32.590"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:49:32.591" endtime="20200626 22:49:32.591"></status>
</kw>
<status status="PASS" starttime="20200626 22:49:32.590" endtime="20200626 22:49:32.591"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:49:29.465" endtime="20200626 22:49:32.591" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200626 22:49:14.718" endtime="20200626 22:49:32.592"></status>
</suite>
<status status="PASS" starttime="20200626 22:49:14.693" endtime="20200626 22:49:32.595"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
