<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200626 22:53:49.958" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200626 22:53:50.006" endtime="20200626 22:53:50.007"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:53:50.012" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:53:50.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:53:50.120" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 26 Jun 2020 22:53:50 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 26 Jun 2020 22:26:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200626 22:53:50.007" endtime="20200626 22:53:50.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:53:50.122" level="INFO">HTTP/1.1 200 OK
Date: Fri, 26 Jun 2020 22:53:50 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 26 Jun 2020 22:26:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200626 22:53:50.121" endtime="20200626 22:53:50.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:53:50.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:53:50.122" endtime="20200626 22:53:50.122"></status>
</kw>
<msg timestamp="20200626 22:53:50.123" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 26 Jun 2020 22:53:50 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 26 Jun 2020 22:26:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200626 22:53:50.007" endtime="20200626 22:53:50.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200626 22:53:50.123" endtime="20200626 22:53:50.123"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:53:50.006" endtime="20200626 22:53:50.123" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:53:50.126" endtime="20200626 22:53:50.126"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:53:50.133" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:40.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:40.225" level="INFO">${output} = 2020-06-26 22:53:51,305 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:53:51,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:53:50.126" endtime="20200626 22:54:40.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:40.227" level="INFO">2020-06-26 22:53:51,305 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:53:51,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-26 22:53:51,435 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-26 22:53:52,423 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-26 22:53:52,424 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-26 22:53:52,426 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-26 22:53:52,427 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-26 22:53:52,443 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-26 22:53:52,469 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-40827, with hadoop as owner.
2020-06-26 22:53:52,552 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-82400, with hadoop as owner.
2020-06-26 22:53:52,559 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-90241, with hadoop as owner.
2020-06-26 22:53:52,565 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-20943, with hadoop as owner.
2020-06-26 22:53:52,572 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-97805, with hadoop as owner.
2020-06-26 22:53:52,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-40827/bucket-0-90348, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82400/bucket-0-06196, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,608 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90241/bucket-0-62666, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,617 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-20943/bucket-0-81162, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,621 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-97805/bucket-0-60004, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,625 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-40827/bucket-1-56962, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,629 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82400/bucket-1-21813, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,633 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90241/bucket-1-76726, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-20943/bucket-1-14276, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,643 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-97805/bucket-1-60624, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,649 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-40827/bucket-2-55711, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82400/bucket-2-30929, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,659 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90241/bucket-2-44444, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,664 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-20943/bucket-2-37359, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,669 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-97805/bucket-2-52406, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,672 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-40827/bucket-3-78063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,675 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82400/bucket-3-24535, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90241/bucket-3-21394, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-20943/bucket-3-22505, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,686 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-97805/bucket-3-45879, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,691 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-40827/bucket-4-83216, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,698 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-82400/bucket-4-19230, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,702 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90241/bucket-4-41035, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,709 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-20943/bucket-4-32365, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:52,714 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-97805/bucket-4-29211, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-26 22:53:53,450 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-26 22:53:53,504 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-26 22:53:54,451 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-26 22:53:55,455 [Thread-5] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-26 22:53:56,456 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-26 22:53:57,456 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-26 22:53:58,457 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-26 22:53:59,457 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-26 22:54:00,458 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-26 22:54:01,458 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-26 22:54:02,459 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-26 22:54:03,460 [Thread-5] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-26 22:54:04,460 [Thread-5] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-26 22:54:05,461 [Thread-5] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-26 22:54:06,462 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-26 22:54:07,462 [Thread-5] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-26 22:54:08,463 [Thread-5] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-26 22:54:09,464 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-26 22:54:10,465 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-26 22:54:11,465 [Thread-5] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-06-26 22:54:12,468 [Thread-5] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-06-26 22:54:13,468 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-06-26 22:54:14,469 [Thread-5] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-06-26 22:54:15,470 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-26 22:54:16,470 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-26 22:54:17,472 [Thread-5] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2020-06-26 22:54:18,472 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-26 22:54:19,473 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-26 22:54:20,473 [Thread-5] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-06-26 22:54:21,474 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-26 22:54:22,474 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-26 22:54:23,475 [Thread-5] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-06-26 22:54:24,476 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-26 22:54:25,476 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-26 22:54:26,477 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-26 22:54:27,478 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-26 22:54:28,478 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-26 22:54:29,479 [Thread-5] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-06-26 22:54:30,499 [Thread-5] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-26 22:54:31,499 [Thread-5] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-06-26 22:54:32,500 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-26 22:54:33,500 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-26 22:54:34,501 [Thread-5] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-06-26 22:54:35,502 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,121
Average Time spent in bucket creation: 00:00:00,089
Average Time spent in key creation: 00:00:01,451
Average Time spent in key write: 00:00:00,929
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:48,264
***************************************************</msg>
<status status="PASS" starttime="20200626 22:54:40.226" endtime="20200626 22:54:40.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:40.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:40.227" endtime="20200626 22:54:40.228"></status>
</kw>
<msg timestamp="20200626 22:54:40.228" level="INFO">${result} = 2020-06-26 22:53:51,305 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-26 22:53:51,435 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200626 22:53:50.126" endtime="20200626 22:54:40.228"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:40.229" endtime="20200626 22:54:40.229"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:40.228" endtime="20200626 22:54:40.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:40.229" endtime="20200626 22:54:40.229"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200626 22:53:50.125" endtime="20200626 22:54:40.230" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200626 22:53:49.984" endtime="20200626 22:54:40.231"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200626 22:54:40.238" level="INFO">${random} = 18666</msg>
<status status="PASS" starttime="20200626 22:54:40.238" endtime="20200626 22:54:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200626 22:54:40.239" level="INFO">${prefix} = 18666</msg>
<status status="PASS" starttime="20200626 22:54:40.239" endtime="20200626 22:54:40.239"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:40.238" endtime="20200626 22:54:40.239"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:40.240" endtime="20200626 22:54:40.240"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:40.243" level="INFO">Running command 'ozone sh volume info o3://om:9862/18666-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:41.884" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:54:41.884" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18666-rpcwoport is not found</msg>
<status status="PASS" starttime="20200626 22:54:40.241" endtime="20200626 22:54:41.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:41.885" level="INFO">VOLUME_NOT_FOUND Volume 18666-rpcwoport is not found</msg>
<status status="PASS" starttime="20200626 22:54:41.884" endtime="20200626 22:54:41.885"></status>
</kw>
<msg timestamp="20200626 22:54:41.885" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18666-rpcwoport is not found</msg>
<status status="PASS" starttime="20200626 22:54:40.241" endtime="20200626 22:54:41.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:41.885" endtime="20200626 22:54:41.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:41.890" level="INFO">Running command 'ozone sh volume create o3://om:9862/18666-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:43.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:43.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:54:41.886" endtime="20200626 22:54:43.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:43.613" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:54:43.612" endtime="20200626 22:54:43.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:43.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:43.613" endtime="20200626 22:54:43.614"></status>
</kw>
<msg timestamp="20200626 22:54:43.614" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:54:41.886" endtime="20200626 22:54:43.614"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:43.614" endtime="20200626 22:54:43.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:43.618" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="18666-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:45.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:45.540" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200626 22:54:43.615" endtime="20200626 22:54:45.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:45.541" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:54:45.540" endtime="20200626 22:54:45.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:45.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:45.541" endtime="20200626 22:54:45.542"></status>
</kw>
<msg timestamp="20200626 22:54:45.542" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200626 22:54:43.614" endtime="20200626 22:54:45.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:45.542" endtime="20200626 22:54:45.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:45.545" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18666-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:47.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:47.471" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200626 22:54:45.543" endtime="20200626 22:54:47.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:47.472" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:54:47.471" endtime="20200626 22:54:47.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:47.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:47.472" endtime="20200626 22:54:47.473"></status>
</kw>
<msg timestamp="20200626 22:54:47.473" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:54:43.494Z",
  "modificationTime": "2020-06-26T22:54:43.494Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200626 22:54:45.543" endtime="20200626 22:54:47.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:47.473" endtime="20200626 22:54:47.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:47.476" level="INFO">Running command 'ozone sh volume update o3://om:9862/18666-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:49.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:49.373" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18666-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:54:43.494Z",
  "modificationTime" : "2020-06-26T22:54:49.136Z",
  "acl...</msg>
<status status="PASS" starttime="20200626 22:54:47.474" endtime="20200626 22:54:49.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:49.374" level="INFO">{
  "metadata" : { },
  "name" : "18666-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:54:43.494Z",
  "modificationTime" : "2020-06-26T22:54:49.136Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200626 22:54:49.373" endtime="20200626 22:54:49.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:49.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:49.374" endtime="20200626 22:54:49.375"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:47.473" endtime="20200626 22:54:49.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:49.378" level="INFO">Running command 'ozone sh volume info o3://om:9862/18666-rpcwoport | jq -r '. | select(.name=="18666-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:51.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:51.383" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:54:49.376" endtime="20200626 22:54:51.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:51.384" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200626 22:54:51.383" endtime="20200626 22:54:51.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:51.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:51.384" endtime="20200626 22:54:51.385"></status>
</kw>
<msg timestamp="20200626 22:54:51.385" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:54:49.375" endtime="20200626 22:54:51.385"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:51.385" endtime="20200626 22:54:51.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:51.389" level="INFO">Running command 'ozone sh bucket create o3://om:9862/18666-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:53.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:53.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:54:51.386" endtime="20200626 22:54:53.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:53.127" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:54:53.126" endtime="20200626 22:54:53.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:53.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:53.128" endtime="20200626 22:54:53.128"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:51.385" endtime="20200626 22:54:53.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:53.132" level="INFO">Running command 'ozone sh bucket info o3://om:9862/18666-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:55.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:55.042" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200626 22:54:53.129" endtime="20200626 22:54:55.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:55.043" level="INFO">DISK</msg>
<status status="PASS" starttime="20200626 22:54:55.043" endtime="20200626 22:54:55.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:55.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:55.044" endtime="20200626 22:54:55.044"></status>
</kw>
<msg timestamp="20200626 22:54:55.044" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200626 22:54:53.129" endtime="20200626 22:54:55.044"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:55.044" endtime="20200626 22:54:55.045"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:55.049" level="INFO">Running command 'ozone sh bucket list o3://om:9862/18666-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:54:56.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:54:56.957" level="INFO">${output} = 18666-rpcwoport</msg>
<status status="PASS" starttime="20200626 22:54:55.046" endtime="20200626 22:54:56.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:54:56.958" level="INFO">18666-rpcwoport</msg>
<status status="PASS" starttime="20200626 22:54:56.957" endtime="20200626 22:54:56.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:54:56.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:54:56.958" endtime="20200626 22:54:56.958"></status>
</kw>
<msg timestamp="20200626 22:54:56.959" level="INFO">${result} = 18666-rpcwoport</msg>
<status status="PASS" starttime="20200626 22:54:55.045" endtime="20200626 22:54:56.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200626 22:54:56.959" endtime="20200626 22:54:56.959"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:54:56.965" level="INFO">Running command 'ozone sh key put o3://om:9862/18666-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:00.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:00.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:54:56.961" endtime="20200626 22:55:00.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:00.365" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:00.364" endtime="20200626 22:55:00.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:00.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:00.365" endtime="20200626 22:55:00.366"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:56.961" endtime="20200626 22:55:00.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:00.369" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:00.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:00.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:00.366" endtime="20200626 22:55:00.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:00.371" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:00.371" endtime="20200626 22:55:00.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:00.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:00.372" endtime="20200626 22:55:00.372"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:00.366" endtime="20200626 22:55:00.372"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:00.375" level="INFO">Running command 'ozone sh key get o3://om:9862/18666-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:03.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:03.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:00.373" endtime="20200626 22:55:03.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:03.676" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:03.676" endtime="20200626 22:55:03.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:03.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:03.677" endtime="20200626 22:55:03.677"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:00.372" endtime="20200626 22:55:03.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:03.680" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:03.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:03.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:03.678" endtime="20200626 22:55:03.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:03.685" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:03.684" endtime="20200626 22:55:03.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:03.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:03.685" endtime="20200626 22:55:03.685"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:03.678" endtime="20200626 22:55:03.686"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:03.689" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/18666-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:07.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:07.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:03.686" endtime="20200626 22:55:07.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:07.151" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:07.151" endtime="20200626 22:55:07.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:07.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:07.152" endtime="20200626 22:55:07.152"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:03.686" endtime="20200626 22:55:07.152"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:07.155" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:07.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:07.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:07.153" endtime="20200626 22:55:07.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:07.158" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:07.158" endtime="20200626 22:55:07.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:07.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:07.159" endtime="20200626 22:55:07.159"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:07.152" endtime="20200626 22:55:07.159"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:07.163" level="INFO">Running command 'ozone sh key get o3://om:9862/18666-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:10.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:10.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:07.160" endtime="20200626 22:55:10.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:10.276" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:10.276" endtime="20200626 22:55:10.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:10.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:10.277" endtime="20200626 22:55:10.277"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:07.159" endtime="20200626 22:55:10.277"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:10.280" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:10.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:10.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:10.278" endtime="20200626 22:55:10.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:10.284" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:10.283" endtime="20200626 22:55:10.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:10.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:10.284" endtime="20200626 22:55:10.284"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:10.277" endtime="20200626 22:55:10.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:10.287" level="INFO">Running command 'ozone sh key info o3://om:9862/18666-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:12.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:12.068" level="INFO">${output} = {
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:55:05.311Z",
  "modificationTime": "2020-06-26T22:55:06.799Z",...</msg>
<status status="PASS" starttime="20200626 22:55:10.285" endtime="20200626 22:55:12.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:12.070" level="INFO">{
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:55:05.311Z",
  "modificationTime": "2020-06-26T22:55:06.799Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412748533530750,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:55:12.069" endtime="20200626 22:55:12.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:12.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:12.070" endtime="20200626 22:55:12.070"></status>
</kw>
<msg timestamp="20200626 22:55:12.071" level="INFO">${result} = {
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:55:05.311Z",
  "modificationTime": "2020-06-26T22:55:06.799Z",...</msg>
<status status="PASS" starttime="20200626 22:55:10.285" endtime="20200626 22:55:12.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:12.071" endtime="20200626 22:55:12.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:12.074" level="INFO">Running command 'ozone sh key delete o3://om:9862/18666-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:13.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:13.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:12.072" endtime="20200626 22:55:13.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:13.839" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:13.838" endtime="20200626 22:55:13.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:13.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:13.839" endtime="20200626 22:55:13.840"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:12.071" endtime="20200626 22:55:13.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:13.843" level="INFO">Running command 'ozone sh key cp o3://om:9862/18666-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:17.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:17.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:13.841" endtime="20200626 22:55:17.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:17.463" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:17.462" endtime="20200626 22:55:17.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:17.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:17.463" endtime="20200626 22:55:17.463"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:13.840" endtime="20200626 22:55:17.464"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:17.466" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:17.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:17.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:17.464" endtime="20200626 22:55:17.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:17.469" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:17.469" endtime="20200626 22:55:17.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:17.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:17.470" endtime="20200626 22:55:17.470"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:17.464" endtime="20200626 22:55:17.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:17.473" level="INFO">Running command 'ozone sh key get o3://om:9862/18666-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:20.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:20.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:17.471" endtime="20200626 22:55:20.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:20.767" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:20.766" endtime="20200626 22:55:20.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:20.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:20.768" endtime="20200626 22:55:20.769"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:17.470" endtime="20200626 22:55:20.769"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:20.773" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:20.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:20.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:20.770" endtime="20200626 22:55:20.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:20.776" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:20.775" endtime="20200626 22:55:20.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:20.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:20.776" endtime="20200626 22:55:20.776"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:20.769" endtime="20200626 22:55:20.777"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:20.780" level="INFO">Running command 'ozone sh key delete o3://om:9862/18666-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:22.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:22.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:20.777" endtime="20200626 22:55:22.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:22.531" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:22.530" endtime="20200626 22:55:22.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:22.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:22.531" endtime="20200626 22:55:22.532"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:20.777" endtime="20200626 22:55:22.532"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:22.536" level="INFO">Running command 'ozone sh key get o3://om:9862/18666-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:24.139" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:55:24.139" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:55:22.532" endtime="20200626 22:55:24.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:24.140" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:55:24.139" endtime="20200626 22:55:24.140"></status>
</kw>
<msg timestamp="20200626 22:55:24.140" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:55:22.532" endtime="20200626 22:55:24.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:24.141" endtime="20200626 22:55:24.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:24.144" level="INFO">Running command 'ozone sh key get --force o3://om:9862/18666-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:27.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:27.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:24.142" endtime="20200626 22:55:27.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:27.335" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:27.335" endtime="20200626 22:55:27.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:27.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:27.336" endtime="20200626 22:55:27.336"></status>
</kw>
<msg timestamp="20200626 22:55:27.336" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:55:24.141" endtime="20200626 22:55:27.336"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:27.336" endtime="20200626 22:55:27.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:27.339" level="INFO">Running command 'ozone sh key info o3://om:9862/18666-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:29.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:29.288" level="INFO">${output} = {
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:54:58.611Z",
  "modificationTime": "2020-06-26T22:55:00.016Z",
  "re...</msg>
<status status="PASS" starttime="20200626 22:55:27.337" endtime="20200626 22:55:29.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:29.289" level="INFO">{
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:54:58.611Z",
  "modificationTime": "2020-06-26T22:55:00.016Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412748094505090,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:55:29.288" endtime="20200626 22:55:29.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:29.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:29.289" endtime="20200626 22:55:29.290"></status>
</kw>
<msg timestamp="20200626 22:55:29.290" level="INFO">${result} = {
  "volumeName": "18666-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:54:58.611Z",
  "modificationTime": "2020-06-26T22:55:00.016Z",
  "re...</msg>
<status status="PASS" starttime="20200626 22:55:27.337" endtime="20200626 22:55:29.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:29.290" endtime="20200626 22:55:29.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:29.294" level="INFO">Running command 'ozone sh key list o3://om:9862/18666-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:31.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:31.209" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200626 22:55:29.291" endtime="20200626 22:55:31.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:31.210" level="INFO">key1</msg>
<status status="PASS" starttime="20200626 22:55:31.209" endtime="20200626 22:55:31.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:31.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:31.210" endtime="20200626 22:55:31.210"></status>
</kw>
<msg timestamp="20200626 22:55:31.211" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200626 22:55:29.291" endtime="20200626 22:55:31.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:31.211" endtime="20200626 22:55:31.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:31.214" level="INFO">Running command 'ozone sh key rename o3://om:9862/18666-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:33.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:33.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:31.212" endtime="20200626 22:55:33.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:33.233" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:33.233" endtime="20200626 22:55:33.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:33.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:33.233" endtime="20200626 22:55:33.234"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:31.212" endtime="20200626 22:55:33.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:33.238" level="INFO">Running command 'ozone sh key list o3://om:9862/18666-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:35.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:35.157" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200626 22:55:33.235" endtime="20200626 22:55:35.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:35.159" level="INFO">key2</msg>
<status status="PASS" starttime="20200626 22:55:35.158" endtime="20200626 22:55:35.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:35.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:35.160" endtime="20200626 22:55:35.160"></status>
</kw>
<msg timestamp="20200626 22:55:35.161" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200626 22:55:33.235" endtime="20200626 22:55:35.161"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:35.161" endtime="20200626 22:55:35.161"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:35.165" level="INFO">Running command 'ozone sh key delete o3://om:9862/18666-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:36.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:36.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:35.162" endtime="20200626 22:55:36.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:36.885" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:36.884" endtime="20200626 22:55:36.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:36.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:36.885" endtime="20200626 22:55:36.886"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:35.161" endtime="20200626 22:55:36.886"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:56.960" endtime="20200626 22:55:36.887"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:56.960" endtime="20200626 22:55:36.887"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:36.890" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/18666-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:38.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:38.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:36.887" endtime="20200626 22:55:38.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:38.551" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:38.551" endtime="20200626 22:55:38.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:38.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:38.551" endtime="20200626 22:55:38.552"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:36.887" endtime="20200626 22:55:38.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:38.555" level="INFO">Running command 'ozone sh volume delete o3://om:9862/18666-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:40.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:40.331" level="INFO">${output} = Volume 18666-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200626 22:55:38.553" endtime="20200626 22:55:40.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:40.332" level="INFO">Volume 18666-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200626 22:55:40.331" endtime="20200626 22:55:40.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:40.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:40.332" endtime="20200626 22:55:40.333"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:38.552" endtime="20200626 22:55:40.333"></status>
</kw>
<status status="PASS" starttime="20200626 22:54:40.240" endtime="20200626 22:55:40.333"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:54:40.239" endtime="20200626 22:55:40.333" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:40.334" endtime="20200626 22:55:40.335"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:40.339" level="INFO">Running command 'ozone sh volume create o3://om:9862/18666-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:42.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:42.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:40.336" endtime="20200626 22:55:42.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:42.025" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:42.025" endtime="20200626 22:55:42.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:42.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:42.025" endtime="20200626 22:55:42.026"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:40.335" endtime="20200626 22:55:42.026"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:42.030" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18666-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:43.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:43.919" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:42.027" endtime="20200626 22:55:43.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:43.920" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:43.920" endtime="20200626 22:55:43.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:43.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:43.921" endtime="20200626 22:55:43.921"></status>
</kw>
<msg timestamp="20200626 22:55:43.921" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:42.026" endtime="20200626 22:55:43.921"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:43.921" endtime="20200626 22:55:43.922"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:43.926" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/18666-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:45.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:45.612" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200626 22:55:43.923" endtime="20200626 22:55:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:45.613" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200626 22:55:45.613" endtime="20200626 22:55:45.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:45.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:45.614" endtime="20200626 22:55:45.615"></status>
</kw>
<msg timestamp="20200626 22:55:45.615" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200626 22:55:43.923" endtime="20200626 22:55:45.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:45.618" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18666-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:47.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:47.436" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:45.616" endtime="20200626 22:55:47.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:47.437" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:47.436" endtime="20200626 22:55:47.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:47.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:47.437" endtime="20200626 22:55:47.438"></status>
</kw>
<msg timestamp="20200626 22:55:47.438" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:45.615" endtime="20200626 22:55:47.438"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:47.438" endtime="20200626 22:55:47.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:47.442" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/18666-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:49.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:49.144" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200626 22:55:47.440" endtime="20200626 22:55:49.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:49.145" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200626 22:55:49.144" endtime="20200626 22:55:49.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:49.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:49.145" endtime="20200626 22:55:49.145"></status>
</kw>
<msg timestamp="20200626 22:55:49.146" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200626 22:55:47.439" endtime="20200626 22:55:49.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:49.148" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18666-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:50.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:50.965" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:49.146" endtime="20200626 22:55:50.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:50.966" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:50.965" endtime="20200626 22:55:50.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:50.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:50.966" endtime="20200626 22:55:50.967"></status>
</kw>
<msg timestamp="20200626 22:55:50.967" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:49.146" endtime="20200626 22:55:50.967"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:50.967" endtime="20200626 22:55:50.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:50.972" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/18666-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:52.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:52.757" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:55:50.969" endtime="20200626 22:55:52.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:52.758" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:55:52.758" endtime="20200626 22:55:52.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:52.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:52.759" endtime="20200626 22:55:52.759"></status>
</kw>
<msg timestamp="20200626 22:55:52.759" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:55:50.968" endtime="20200626 22:55:52.759"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:52.763" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/18666-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:54.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:54.672" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200626 22:55:52.760" endtime="20200626 22:55:54.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:54.673" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:54.672" endtime="20200626 22:55:54.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:54.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:54.673" endtime="20200626 22:55:54.674"></status>
</kw>
<msg timestamp="20200626 22:55:54.674" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200626 22:55:52.760" endtime="20200626 22:55:54.674"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:54.674" endtime="20200626 22:55:54.675"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:54.675" endtime="20200626 22:55:54.676"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:40.335" endtime="20200626 22:55:54.676"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:55:40.334" endtime="20200626 22:55:54.676" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:54.677" endtime="20200626 22:55:54.678"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:54.683" level="INFO">Running command 'ozone sh bucket create o3://om:9862/18666-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:56.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:55:54.680" endtime="20200626 22:55:56.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:56.266" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:55:56.266" endtime="20200626 22:55:56.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:56.267" endtime="20200626 22:55:56.267"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:54.679" endtime="20200626 22:55:56.267"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:56.270" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18666-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:58.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:58.222" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:56.268" endtime="20200626 22:55:58.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:58.224" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:55:58.223" endtime="20200626 22:55:58.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:58.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:58.224" endtime="20200626 22:55:58.224"></status>
</kw>
<msg timestamp="20200626 22:55:58.225" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:56.268" endtime="20200626 22:55:58.225"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:55:58.225" endtime="20200626 22:55:58.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:58.229" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/18666-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:55:59.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:55:59.939" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200626 22:55:58.226" endtime="20200626 22:55:59.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:55:59.940" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200626 22:55:59.939" endtime="20200626 22:55:59.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:55:59.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:55:59.940" endtime="20200626 22:55:59.941"></status>
</kw>
<msg timestamp="20200626 22:55:59.941" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200626 22:55:58.225" endtime="20200626 22:55:59.941"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:55:59.945" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18666-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:01.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:01.682" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:59.942" endtime="20200626 22:56:01.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:01.684" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:01.683" endtime="20200626 22:56:01.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:01.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:01.684" endtime="20200626 22:56:01.684"></status>
</kw>
<msg timestamp="20200626 22:56:01.684" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:55:59.941" endtime="20200626 22:56:01.685"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:01.685" endtime="20200626 22:56:01.686"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:01.689" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/18666-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:03.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:03.405" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:01.686" endtime="20200626 22:56:03.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:03.406" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:03.406" endtime="20200626 22:56:03.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:03.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:03.406" endtime="20200626 22:56:03.407"></status>
</kw>
<msg timestamp="20200626 22:56:03.407" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:01.686" endtime="20200626 22:56:03.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:03.412" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18666-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:05.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:05.288" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:03.408" endtime="20200626 22:56:05.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:05.289" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:05.289" endtime="20200626 22:56:05.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:05.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:05.290" endtime="20200626 22:56:05.290"></status>
</kw>
<msg timestamp="20200626 22:56:05.290" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:03.407" endtime="20200626 22:56:05.290"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:05.291" endtime="20200626 22:56:05.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:05.295" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/18666-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:06.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:06.954" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:05.292" endtime="20200626 22:56:06.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:06.955" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:06.955" endtime="20200626 22:56:06.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:06.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:06.956" endtime="20200626 22:56:06.956"></status>
</kw>
<msg timestamp="20200626 22:56:06.956" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:05.292" endtime="20200626 22:56:06.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:06.960" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/18666-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:08.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:08.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200626 22:56:06.957" endtime="20200626 22:56:08.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:08.740" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:08.740" endtime="20200626 22:56:08.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:08.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:08.741" endtime="20200626 22:56:08.741"></status>
</kw>
<msg timestamp="20200626 22:56:08.741" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200626 22:56:06.956" endtime="20200626 22:56:08.741"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:08.742" endtime="20200626 22:56:08.742"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:08.742" endtime="20200626 22:56:08.743"></status>
</kw>
<status status="PASS" starttime="20200626 22:55:54.678" endtime="20200626 22:56:08.743"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:55:54.676" endtime="20200626 22:56:08.743" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:08.744" endtime="20200626 22:56:08.745"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:08.749" level="INFO">Running command 'ozone sh key put o3://om:9862/18666-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:12.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:12.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:08.746" endtime="20200626 22:56:12.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:12.062" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:12.061" endtime="20200626 22:56:12.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:12.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:12.062" endtime="20200626 22:56:12.063"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:08.745" endtime="20200626 22:56:12.063"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:12.066" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18666-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:13.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:13.878" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:12.064" endtime="20200626 22:56:13.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:13.879" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:13.878" endtime="20200626 22:56:13.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:13.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:13.879" endtime="20200626 22:56:13.880"></status>
</kw>
<msg timestamp="20200626 22:56:13.880" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:12.063" endtime="20200626 22:56:13.880"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:13.880" endtime="20200626 22:56:13.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:13.884" level="INFO">Running command 'ozone sh key addacl o3://om:9862/18666-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:15.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:15.554" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200626 22:56:13.881" endtime="20200626 22:56:15.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:15.555" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200626 22:56:15.554" endtime="20200626 22:56:15.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:15.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:15.555" endtime="20200626 22:56:15.556"></status>
</kw>
<msg timestamp="20200626 22:56:15.556" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200626 22:56:13.881" endtime="20200626 22:56:15.556"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:15.560" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18666-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:17.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:17.346" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:15.556" endtime="20200626 22:56:17.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:17.347" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:17.346" endtime="20200626 22:56:17.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:17.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:17.347" endtime="20200626 22:56:17.348"></status>
</kw>
<msg timestamp="20200626 22:56:17.348" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:15.556" endtime="20200626 22:56:17.348"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:17.348" endtime="20200626 22:56:17.349"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:17.352" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/18666-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:19.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:19.128" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:17.350" endtime="20200626 22:56:19.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:19.129" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:19.128" endtime="20200626 22:56:19.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:19.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:19.129" endtime="20200626 22:56:19.129"></status>
</kw>
<msg timestamp="20200626 22:56:19.130" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200626 22:56:17.349" endtime="20200626 22:56:19.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:19.133" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18666-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:20.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:20.957" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:19.130" endtime="20200626 22:56:20.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:20.958" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:20.957" endtime="20200626 22:56:20.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:20.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:20.958" endtime="20200626 22:56:20.959"></status>
</kw>
<msg timestamp="20200626 22:56:20.959" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200626 22:56:19.130" endtime="20200626 22:56:20.959"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:20.959" endtime="20200626 22:56:20.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:20.963" level="INFO">Running command 'ozone sh key setacl o3://om:9862/18666-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:22.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:22.711" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:20.960" endtime="20200626 22:56:22.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:22.712" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:22.711" endtime="20200626 22:56:22.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:22.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:22.712" endtime="20200626 22:56:22.713"></status>
</kw>
<msg timestamp="20200626 22:56:22.713" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200626 22:56:20.960" endtime="20200626 22:56:22.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:22.717" level="INFO">Running command 'ozone sh key getacl o3://om:9862/18666-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:24.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:24.485" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200626 22:56:22.714" endtime="20200626 22:56:24.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:24.486" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200626 22:56:24.486" endtime="20200626 22:56:24.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:24.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:24.487" endtime="20200626 22:56:24.487"></status>
</kw>
<msg timestamp="20200626 22:56:24.487" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200626 22:56:22.713" endtime="20200626 22:56:24.487"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:24.487" endtime="20200626 22:56:24.488"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:24.488" endtime="20200626 22:56:24.489"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:08.745" endtime="20200626 22:56:24.489"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:56:08.744" endtime="20200626 22:56:24.489" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:24.490" endtime="20200626 22:56:24.491"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:24.494" level="INFO">Running command 'ozone sh volume info o3:///18666-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:26.205" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:56:26.205" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18666-rpcwport is not found</msg>
<status status="PASS" starttime="20200626 22:56:24.492" endtime="20200626 22:56:26.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:26.207" level="INFO">VOLUME_NOT_FOUND Volume 18666-rpcwport is not found</msg>
<status status="PASS" starttime="20200626 22:56:26.206" endtime="20200626 22:56:26.207"></status>
</kw>
<msg timestamp="20200626 22:56:26.207" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18666-rpcwport is not found</msg>
<status status="PASS" starttime="20200626 22:56:24.492" endtime="20200626 22:56:26.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:26.207" endtime="20200626 22:56:26.207"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:26.210" level="INFO">Running command 'ozone sh volume create o3:///18666-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:28.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:28.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:26.208" endtime="20200626 22:56:28.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:28.025" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:28.025" endtime="20200626 22:56:28.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:28.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:28.025" endtime="20200626 22:56:28.026"></status>
</kw>
<msg timestamp="20200626 22:56:28.026" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:56:26.208" endtime="20200626 22:56:28.026"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:28.026" endtime="20200626 22:56:28.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:28.031" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="18666-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:29.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:29.962" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200626 22:56:28.027" endtime="20200626 22:56:29.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:29.963" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:56:29.962" endtime="20200626 22:56:29.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:29.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:29.963" endtime="20200626 22:56:29.964"></status>
</kw>
<msg timestamp="20200626 22:56:29.964" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200626 22:56:28.027" endtime="20200626 22:56:29.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:29.964" endtime="20200626 22:56:29.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:29.968" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18666-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:31.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:31.864" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200626 22:56:29.965" endtime="20200626 22:56:31.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:31.866" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:56:31.865" endtime="20200626 22:56:31.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:31.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:31.866" endtime="20200626 22:56:31.866"></status>
</kw>
<msg timestamp="20200626 22:56:31.867" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:56:27.908Z",
  "modificationTime": "2020-06-26T22:56:27.908Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200626 22:56:29.965" endtime="20200626 22:56:31.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:31.867" endtime="20200626 22:56:31.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:31.870" level="INFO">Running command 'ozone sh volume update o3:///18666-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:33.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:33.816" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18666-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:56:27.908Z",
  "modificationTime" : "2020-06-26T22:56:33.469Z",
  "acls...</msg>
<status status="PASS" starttime="20200626 22:56:31.868" endtime="20200626 22:56:33.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:33.817" level="INFO">{
  "metadata" : { },
  "name" : "18666-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:56:27.908Z",
  "modificationTime" : "2020-06-26T22:56:33.469Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200626 22:56:33.817" endtime="20200626 22:56:33.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:33.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:33.818" endtime="20200626 22:56:33.818"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:31.867" endtime="20200626 22:56:33.818"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:33.823" level="INFO">Running command 'ozone sh volume info o3:///18666-rpcwport | jq -r '. | select(.name=="18666-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:35.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:35.628" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:56:33.819" endtime="20200626 22:56:35.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:35.630" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200626 22:56:35.629" endtime="20200626 22:56:35.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:35.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:35.630" endtime="20200626 22:56:35.630"></status>
</kw>
<msg timestamp="20200626 22:56:35.630" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:56:33.819" endtime="20200626 22:56:35.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:35.631" endtime="20200626 22:56:35.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:35.634" level="INFO">Running command 'ozone sh bucket create o3:///18666-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:37.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:37.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:35.632" endtime="20200626 22:56:37.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:37.478" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:37.478" endtime="20200626 22:56:37.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:37.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:37.478" endtime="20200626 22:56:37.479"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:35.631" endtime="20200626 22:56:37.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:37.483" level="INFO">Running command 'ozone sh bucket info o3:///18666-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:39.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:39.345" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200626 22:56:37.480" endtime="20200626 22:56:39.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:39.346" level="INFO">DISK</msg>
<status status="PASS" starttime="20200626 22:56:39.346" endtime="20200626 22:56:39.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:39.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:39.347" endtime="20200626 22:56:39.347"></status>
</kw>
<msg timestamp="20200626 22:56:39.347" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200626 22:56:37.479" endtime="20200626 22:56:39.347"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:39.347" endtime="20200626 22:56:39.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:39.351" level="INFO">Running command 'ozone sh bucket list o3:///18666-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:41.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:41.246" level="INFO">${output} = 18666-rpcwport</msg>
<status status="PASS" starttime="20200626 22:56:39.349" endtime="20200626 22:56:41.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:41.247" level="INFO">18666-rpcwport</msg>
<status status="PASS" starttime="20200626 22:56:41.246" endtime="20200626 22:56:41.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:41.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:41.247" endtime="20200626 22:56:41.248"></status>
</kw>
<msg timestamp="20200626 22:56:41.248" level="INFO">${result} = 18666-rpcwport</msg>
<status status="PASS" starttime="20200626 22:56:39.348" endtime="20200626 22:56:41.248"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:41.248" endtime="20200626 22:56:41.249"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:41.252" level="INFO">Running command 'ozone sh key put o3:///18666-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:44.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:44.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:41.250" endtime="20200626 22:56:44.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:44.700" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:44.699" endtime="20200626 22:56:44.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:44.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:44.700" endtime="20200626 22:56:44.701"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:41.250" endtime="20200626 22:56:44.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:44.704" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:44.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:44.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:44.701" endtime="20200626 22:56:44.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:44.707" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:44.706" endtime="20200626 22:56:44.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:44.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:44.707" endtime="20200626 22:56:44.708"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:44.701" endtime="20200626 22:56:44.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:44.711" level="INFO">Running command 'ozone sh key get o3:///18666-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:47.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:47.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:44.708" endtime="20200626 22:56:47.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:47.935" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:47.934" endtime="20200626 22:56:47.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:47.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:47.935" endtime="20200626 22:56:47.935"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:44.708" endtime="20200626 22:56:47.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:47.939" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:47.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:47.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:47.936" endtime="20200626 22:56:47.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:47.942" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:47.941" endtime="20200626 22:56:47.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:47.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:47.942" endtime="20200626 22:56:47.942"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:47.936" endtime="20200626 22:56:47.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:47.945" level="INFO">Running command 'ozone sh key put -t RATIS o3:///18666-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:51.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:51.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:47.943" endtime="20200626 22:56:51.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:51.537" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:51.537" endtime="20200626 22:56:51.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:51.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:51.538" endtime="20200626 22:56:51.538"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:47.943" endtime="20200626 22:56:51.538"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:51.541" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:51.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:51.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:51.539" endtime="20200626 22:56:51.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:51.544" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:51.543" endtime="20200626 22:56:51.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:51.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:51.544" endtime="20200626 22:56:51.545"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:51.538" endtime="20200626 22:56:51.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:51.547" level="INFO">Running command 'ozone sh key get o3:///18666-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:54.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:54.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:51.545" endtime="20200626 22:56:54.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:54.848" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:54.847" endtime="20200626 22:56:54.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:54.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:54.848" endtime="20200626 22:56:54.848"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:51.545" endtime="20200626 22:56:54.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:54.851" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:54.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:54.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:54.849" endtime="20200626 22:56:54.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:54.855" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:54.854" endtime="20200626 22:56:54.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:54.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:54.855" endtime="20200626 22:56:54.856"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:54.849" endtime="20200626 22:56:54.856"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:54.860" level="INFO">Running command 'ozone sh key info o3:///18666-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:56.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:56.812" level="INFO">${output} = {
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:49.665Z",
  "modificationTime": "2020-06-26T22:56:51.188Z",
...</msg>
<status status="PASS" starttime="20200626 22:56:54.857" endtime="20200626 22:56:56.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:56.813" level="INFO">{
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:49.665Z",
  "modificationTime": "2020-06-26T22:56:51.188Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412755372540030,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:56:56.813" endtime="20200626 22:56:56.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:56.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:56.814" endtime="20200626 22:56:56.814"></status>
</kw>
<msg timestamp="20200626 22:56:56.814" level="INFO">${result} = {
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:49.665Z",
  "modificationTime": "2020-06-26T22:56:51.188Z",
...</msg>
<status status="PASS" starttime="20200626 22:56:54.856" endtime="20200626 22:56:56.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200626 22:56:56.815" endtime="20200626 22:56:56.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:56.819" level="INFO">Running command 'ozone sh key delete o3:///18666-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:56:58.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:56:58.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:56.816" endtime="20200626 22:56:58.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:56:58.570" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:56:58.569" endtime="20200626 22:56:58.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:56:58.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:56:58.570" endtime="20200626 22:56:58.571"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:56.815" endtime="20200626 22:56:58.571"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:56:58.575" level="INFO">Running command 'ozone sh key cp o3:///18666-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:01.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:01.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:56:58.571" endtime="20200626 22:57:01.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:01.960" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:01.959" endtime="20200626 22:57:01.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:01.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:01.961" endtime="20200626 22:57:01.962"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:58.571" endtime="20200626 22:57:01.962"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:01.967" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:01.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:01.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:01.963" endtime="20200626 22:57:01.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:01.969" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:01.968" endtime="20200626 22:57:01.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:01.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:01.970" endtime="20200626 22:57:01.970"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:01.962" endtime="20200626 22:57:01.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:01.974" level="INFO">Running command 'ozone sh key get o3:///18666-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:05.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:01.971" endtime="20200626 22:57:05.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:05.157" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:05.156" endtime="20200626 22:57:05.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:05.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:05.157" endtime="20200626 22:57:05.158"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:01.971" endtime="20200626 22:57:05.158"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:05.161" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:05.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:05.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:05.159" endtime="20200626 22:57:05.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:05.166" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:05.165" endtime="20200626 22:57:05.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:05.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:05.166" endtime="20200626 22:57:05.166"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:05.158" endtime="20200626 22:57:05.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:05.169" level="INFO">Running command 'ozone sh key delete o3:///18666-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:06.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:06.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:05.167" endtime="20200626 22:57:06.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:06.738" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:06.737" endtime="20200626 22:57:06.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:06.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:06.738" endtime="20200626 22:57:06.738"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:05.167" endtime="20200626 22:57:06.739"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:06.743" level="INFO">Running command 'ozone sh key get o3:///18666-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:08.357" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:57:08.357" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:57:06.740" endtime="20200626 22:57:08.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:08.358" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:57:08.357" endtime="20200626 22:57:08.358"></status>
</kw>
<msg timestamp="20200626 22:57:08.358" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:57:06.739" endtime="20200626 22:57:08.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:08.358" endtime="20200626 22:57:08.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:08.363" level="INFO">Running command 'ozone sh key get --force o3:///18666-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:11.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:11.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:08.359" endtime="20200626 22:57:11.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:11.425" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:11.424" endtime="20200626 22:57:11.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:11.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:11.425" endtime="20200626 22:57:11.426"></status>
</kw>
<msg timestamp="20200626 22:57:11.426" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:57:08.359" endtime="20200626 22:57:11.426"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:11.426" endtime="20200626 22:57:11.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:11.429" level="INFO">Running command 'ozone sh key info o3:///18666-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:13.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:13.330" level="INFO">${output} = {
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:42.973Z",
  "modificationTime": "2020-06-26T22:56:44.346Z",
  "rep...</msg>
<status status="PASS" starttime="20200626 22:57:11.427" endtime="20200626 22:57:13.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:13.331" level="INFO">{
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:42.973Z",
  "modificationTime": "2020-06-26T22:56:44.346Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412754934038660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:57:13.330" endtime="20200626 22:57:13.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:13.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:13.331" endtime="20200626 22:57:13.331"></status>
</kw>
<msg timestamp="20200626 22:57:13.332" level="INFO">${result} = {
  "volumeName": "18666-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:56:42.973Z",
  "modificationTime": "2020-06-26T22:56:44.346Z",
  "rep...</msg>
<status status="PASS" starttime="20200626 22:57:11.426" endtime="20200626 22:57:13.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:13.332" endtime="20200626 22:57:13.332"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:13.336" level="INFO">Running command 'ozone sh key list o3:///18666-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:15.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:15.245" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200626 22:57:13.333" endtime="20200626 22:57:15.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:15.246" level="INFO">key1</msg>
<status status="PASS" starttime="20200626 22:57:15.245" endtime="20200626 22:57:15.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:15.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:15.246" endtime="20200626 22:57:15.247"></status>
</kw>
<msg timestamp="20200626 22:57:15.247" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200626 22:57:13.332" endtime="20200626 22:57:15.247"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:15.247" endtime="20200626 22:57:15.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:15.250" level="INFO">Running command 'ozone sh key rename o3:///18666-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:16.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:16.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:15.248" endtime="20200626 22:57:16.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:16.793" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:16.792" endtime="20200626 22:57:16.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:16.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:16.793" endtime="20200626 22:57:16.793"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:15.248" endtime="20200626 22:57:16.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:16.797" level="INFO">Running command 'ozone sh key list o3:///18666-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:18.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:18.648" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200626 22:57:16.794" endtime="20200626 22:57:18.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:18.649" level="INFO">key2</msg>
<status status="PASS" starttime="20200626 22:57:18.648" endtime="20200626 22:57:18.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:18.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:18.649" endtime="20200626 22:57:18.650"></status>
</kw>
<msg timestamp="20200626 22:57:18.650" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200626 22:57:16.794" endtime="20200626 22:57:18.650"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:18.650" endtime="20200626 22:57:18.651"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:18.654" level="INFO">Running command 'ozone sh key delete o3:///18666-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:20.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:20.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:18.652" endtime="20200626 22:57:20.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:20.357" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:20.356" endtime="20200626 22:57:20.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:20.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:20.357" endtime="20200626 22:57:20.358"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:18.651" endtime="20200626 22:57:20.358"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:41.249" endtime="20200626 22:57:20.358"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:41.249" endtime="20200626 22:57:20.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:20.362" level="INFO">Running command 'ozone sh bucket delete o3:///18666-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:21.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:21.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:20.359" endtime="20200626 22:57:21.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:21.973" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:21.973" endtime="20200626 22:57:21.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:21.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:21.973" endtime="20200626 22:57:21.974"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:20.358" endtime="20200626 22:57:21.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:21.977" level="INFO">Running command 'ozone sh volume delete o3:///18666-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:23.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:23.659" level="INFO">${output} = Volume 18666-rpcwport is deleted</msg>
<status status="PASS" starttime="20200626 22:57:21.975" endtime="20200626 22:57:23.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:23.661" level="INFO">Volume 18666-rpcwport is deleted</msg>
<status status="PASS" starttime="20200626 22:57:23.660" endtime="20200626 22:57:23.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:23.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:23.661" endtime="20200626 22:57:23.661"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:21.974" endtime="20200626 22:57:23.662"></status>
</kw>
<status status="PASS" starttime="20200626 22:56:24.491" endtime="20200626 22:57:23.662"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:56:24.490" endtime="20200626 22:57:23.662" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:23.663" endtime="20200626 22:57:23.663"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:23.668" level="INFO">Running command 'ozone sh volume info /18666-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:25.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:57:25.316" level="INFO">${output} = VOLUME_NOT_FOUND Volume 18666-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200626 22:57:23.664" endtime="20200626 22:57:25.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:25.317" level="INFO">VOLUME_NOT_FOUND Volume 18666-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200626 22:57:25.316" endtime="20200626 22:57:25.317"></status>
</kw>
<msg timestamp="20200626 22:57:25.317" level="INFO">${result} = VOLUME_NOT_FOUND Volume 18666-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200626 22:57:23.664" endtime="20200626 22:57:25.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:25.318" endtime="20200626 22:57:25.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:25.321" level="INFO">Running command 'ozone sh volume create /18666-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:26.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:26.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:25.319" endtime="20200626 22:57:26.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:26.949" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:26.948" endtime="20200626 22:57:26.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:26.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:26.949" endtime="20200626 22:57:26.950"></status>
</kw>
<msg timestamp="20200626 22:57:26.950" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:57:25.318" endtime="20200626 22:57:26.950"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:26.950" endtime="20200626 22:57:26.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:26.954" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="18666-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:28.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:28.839" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200626 22:57:26.951" endtime="20200626 22:57:28.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:28.840" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:57:28.839" endtime="20200626 22:57:28.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:28.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:28.840" endtime="20200626 22:57:28.841"></status>
</kw>
<msg timestamp="20200626 22:57:28.841" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200626 22:57:26.951" endtime="20200626 22:57:28.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:28.841" endtime="20200626 22:57:28.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:28.844" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="18666-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:30.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:30.728" level="INFO">${output} = {
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200626 22:57:28.842" endtime="20200626 22:57:30.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:30.729" level="INFO">{
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200626 22:57:30.728" endtime="20200626 22:57:30.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:30.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:30.729" endtime="20200626 22:57:30.730"></status>
</kw>
<msg timestamp="20200626 22:57:30.730" level="INFO">${result} = {
  "metadata": {},
  "name": "18666-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-26T22:57:26.926Z",
  "modificationTime": "2020-06-26T22:57:26.926Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200626 22:57:28.842" endtime="20200626 22:57:30.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:30.730" endtime="20200626 22:57:30.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:30.734" level="INFO">Running command 'ozone sh volume update /18666-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:32.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:32.624" level="INFO">${output} = {
  "metadata" : { },
  "name" : "18666-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:57:26.926Z",
  "modificationTime" : "2020-06-26T22:57:32.355Z",
  "a...</msg>
<status status="PASS" starttime="20200626 22:57:30.731" endtime="20200626 22:57:32.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:32.626" level="INFO">{
  "metadata" : { },
  "name" : "18666-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-26T22:57:26.926Z",
  "modificationTime" : "2020-06-26T22:57:32.355Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200626 22:57:32.625" endtime="20200626 22:57:32.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:32.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:32.626" endtime="20200626 22:57:32.626"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:30.731" endtime="20200626 22:57:32.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:32.630" level="INFO">Running command 'ozone sh volume info /18666-rpcwoscheme | jq -r '. | select(.name=="18666-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:34.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:34.429" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:57:32.627" endtime="20200626 22:57:34.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:34.430" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200626 22:57:34.430" endtime="20200626 22:57:34.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:34.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:34.430" endtime="20200626 22:57:34.431"></status>
</kw>
<msg timestamp="20200626 22:57:34.431" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200626 22:57:32.627" endtime="20200626 22:57:34.431"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:34.431" endtime="20200626 22:57:34.432"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:34.434" level="INFO">Running command 'ozone sh bucket create /18666-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:36.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:36.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:34.432" endtime="20200626 22:57:36.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:36.216" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:36.215" endtime="20200626 22:57:36.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:36.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:36.216" endtime="20200626 22:57:36.217"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:34.432" endtime="20200626 22:57:36.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:36.221" level="INFO">Running command 'ozone sh bucket info /18666-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:38.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:38.347" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200626 22:57:36.218" endtime="20200626 22:57:38.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:38.349" level="INFO">DISK</msg>
<status status="PASS" starttime="20200626 22:57:38.348" endtime="20200626 22:57:38.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:38.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:38.349" endtime="20200626 22:57:38.350"></status>
</kw>
<msg timestamp="20200626 22:57:38.350" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200626 22:57:36.217" endtime="20200626 22:57:38.350"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:38.350" endtime="20200626 22:57:38.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:38.355" level="INFO">Running command 'ozone sh bucket list /18666-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:40.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:40.330" level="INFO">${output} = 18666-rpcwoscheme</msg>
<status status="PASS" starttime="20200626 22:57:38.352" endtime="20200626 22:57:40.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:40.331" level="INFO">18666-rpcwoscheme</msg>
<status status="PASS" starttime="20200626 22:57:40.331" endtime="20200626 22:57:40.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:40.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:40.332" endtime="20200626 22:57:40.332"></status>
</kw>
<msg timestamp="20200626 22:57:40.332" level="INFO">${result} = 18666-rpcwoscheme</msg>
<status status="PASS" starttime="20200626 22:57:38.351" endtime="20200626 22:57:40.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:40.332" endtime="20200626 22:57:40.333"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:40.336" level="INFO">Running command 'ozone sh key put /18666-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:43.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:43.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:40.334" endtime="20200626 22:57:43.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:43.887" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:43.886" endtime="20200626 22:57:43.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:43.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:43.887" endtime="20200626 22:57:43.888"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:40.334" endtime="20200626 22:57:43.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:43.890" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:43.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:43.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:43.888" endtime="20200626 22:57:43.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:43.894" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:43.893" endtime="20200626 22:57:43.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:43.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:43.894" endtime="20200626 22:57:43.895"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:43.888" endtime="20200626 22:57:43.895"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:43.898" level="INFO">Running command 'ozone sh key get /18666-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:46.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:46.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:43.895" endtime="20200626 22:57:46.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:46.991" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:46.990" endtime="20200626 22:57:46.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:46.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:46.991" endtime="20200626 22:57:46.991"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:43.895" endtime="20200626 22:57:46.992"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:46.995" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:46.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:46.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:46.992" endtime="20200626 22:57:46.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:46.998" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:46.997" endtime="20200626 22:57:46.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:46.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:46.998" endtime="20200626 22:57:46.998"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:46.992" endtime="20200626 22:57:46.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:47.002" level="INFO">Running command 'ozone sh key put -t RATIS /18666-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:50.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:50.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:46.999" endtime="20200626 22:57:50.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:50.318" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:50.317" endtime="20200626 22:57:50.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:50.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:50.318" endtime="20200626 22:57:50.318"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:46.999" endtime="20200626 22:57:50.319"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:50.321" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:50.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:50.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:50.319" endtime="20200626 22:57:50.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:50.325" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:50.324" endtime="20200626 22:57:50.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:50.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:50.325" endtime="20200626 22:57:50.325"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:50.319" endtime="20200626 22:57:50.325"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:50.328" level="INFO">Running command 'ozone sh key get /18666-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:53.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:53.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:50.326" endtime="20200626 22:57:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:53.481" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:53.480" endtime="20200626 22:57:53.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:53.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:53.481" endtime="20200626 22:57:53.481"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:50.326" endtime="20200626 22:57:53.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:53.485" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:53.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:53.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:53.482" endtime="20200626 22:57:53.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:53.488" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:53.487" endtime="20200626 22:57:53.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:53.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:53.488" endtime="20200626 22:57:53.488"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:53.482" endtime="20200626 22:57:53.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:53.493" level="INFO">Running command 'ozone sh key info /18666-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:55.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:55.384" level="INFO">${output} = {
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:48.652Z",
  "modificationTime": "2020-06-26T22:57:49.963Z...</msg>
<status status="PASS" starttime="20200626 22:57:53.489" endtime="20200626 22:57:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:55.385" level="INFO">{
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:48.652Z",
  "modificationTime": "2020-06-26T22:57:49.963Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412759238312060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:57:55.385" endtime="20200626 22:57:55.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:55.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:55.386" endtime="20200626 22:57:55.386"></status>
</kw>
<msg timestamp="20200626 22:57:55.386" level="INFO">${result} = {
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:48.652Z",
  "modificationTime": "2020-06-26T22:57:49.963Z...</msg>
<status status="PASS" starttime="20200626 22:57:53.489" endtime="20200626 22:57:55.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200626 22:57:55.386" endtime="20200626 22:57:55.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:55.390" level="INFO">Running command 'ozone sh key delete /18666-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:57:57.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:57:57.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:55.387" endtime="20200626 22:57:57.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:57:57.170" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:57:57.170" endtime="20200626 22:57:57.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:57:57.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:57:57.171" endtime="20200626 22:57:57.171"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:55.387" endtime="20200626 22:57:57.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:57:57.175" level="INFO">Running command 'ozone sh key cp /18666-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:00.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:00.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:57:57.172" endtime="20200626 22:58:00.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:00.745" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:00.745" endtime="20200626 22:58:00.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:00.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:00.746" endtime="20200626 22:58:00.746"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:57.172" endtime="20200626 22:58:00.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:00.749" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:00.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:00.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:00.747" endtime="20200626 22:58:00.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:00.753" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:00.753" endtime="20200626 22:58:00.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:00.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:00.753" endtime="20200626 22:58:00.754"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:00.747" endtime="20200626 22:58:00.755"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:00.757" level="INFO">Running command 'ozone sh key get /18666-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:04.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:04.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:00.755" endtime="20200626 22:58:04.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:04.145" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:04.144" endtime="20200626 22:58:04.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:04.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:04.145" endtime="20200626 22:58:04.146"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:00.755" endtime="20200626 22:58:04.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:04.148" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:04.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:04.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:04.146" endtime="20200626 22:58:04.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:04.152" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:04.151" endtime="20200626 22:58:04.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:04.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:04.152" endtime="20200626 22:58:04.152"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:04.146" endtime="20200626 22:58:04.152"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:04.155" level="INFO">Running command 'ozone sh key delete /18666-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:05.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:05.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:04.153" endtime="20200626 22:58:05.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:05.742" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:05.742" endtime="20200626 22:58:05.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:05.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:05.743" endtime="20200626 22:58:05.743"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:04.152" endtime="20200626 22:58:05.743"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:05.747" level="INFO">Running command 'ozone sh key get /18666-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:07.409" level="INFO">${rc} = 255</msg>
<msg timestamp="20200626 22:58:07.409" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:58:05.744" endtime="20200626 22:58:07.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:07.410" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:58:07.409" endtime="20200626 22:58:07.410"></status>
</kw>
<msg timestamp="20200626 22:58:07.410" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200626 22:58:05.743" endtime="20200626 22:58:07.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:58:07.410" endtime="20200626 22:58:07.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:07.415" level="INFO">Running command 'ozone sh key get --force /18666-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:10.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:10.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:07.412" endtime="20200626 22:58:10.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:10.601" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:10.600" endtime="20200626 22:58:10.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:10.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:10.601" endtime="20200626 22:58:10.602"></status>
</kw>
<msg timestamp="20200626 22:58:10.602" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200626 22:58:07.411" endtime="20200626 22:58:10.602"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200626 22:58:10.602" endtime="20200626 22:58:10.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:10.605" level="INFO">Running command 'ozone sh key info /18666-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:12.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:12.624" level="INFO">${output} = {
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:41.921Z",
  "modificationTime": "2020-06-26T22:57:43.537Z",
  "...</msg>
<status status="PASS" starttime="20200626 22:58:10.603" endtime="20200626 22:58:12.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:12.625" level="INFO">{
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:41.921Z",
  "modificationTime": "2020-06-26T22:57:43.537Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104412758797189250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200626 22:58:12.624" endtime="20200626 22:58:12.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:12.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:12.625" endtime="20200626 22:58:12.626"></status>
</kw>
<msg timestamp="20200626 22:58:12.626" level="INFO">${result} = {
  "volumeName": "18666-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-26T22:57:41.921Z",
  "modificationTime": "2020-06-26T22:57:43.537Z",
  "...</msg>
<status status="PASS" starttime="20200626 22:58:10.603" endtime="20200626 22:58:12.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200626 22:58:12.626" endtime="20200626 22:58:12.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:12.630" level="INFO">Running command 'ozone sh key list /18666-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:14.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:14.482" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200626 22:58:12.628" endtime="20200626 22:58:14.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:14.484" level="INFO">key1</msg>
<status status="PASS" starttime="20200626 22:58:14.483" endtime="20200626 22:58:14.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:14.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:14.484" endtime="20200626 22:58:14.484"></status>
</kw>
<msg timestamp="20200626 22:58:14.485" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200626 22:58:12.627" endtime="20200626 22:58:14.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200626 22:58:14.485" endtime="20200626 22:58:14.485"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:14.488" level="INFO">Running command 'ozone sh key rename /18666-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:16.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:16.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:14.486" endtime="20200626 22:58:16.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:16.102" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:16.101" endtime="20200626 22:58:16.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:16.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:16.102" endtime="20200626 22:58:16.103"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:14.485" endtime="20200626 22:58:16.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:16.107" level="INFO">Running command 'ozone sh key list /18666-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:18.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:18.087" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200626 22:58:16.104" endtime="20200626 22:58:18.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:18.089" level="INFO">key2</msg>
<status status="PASS" starttime="20200626 22:58:18.088" endtime="20200626 22:58:18.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:18.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:18.089" endtime="20200626 22:58:18.089"></status>
</kw>
<msg timestamp="20200626 22:58:18.090" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200626 22:58:16.103" endtime="20200626 22:58:18.090"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200626 22:58:18.090" endtime="20200626 22:58:18.090"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:18.094" level="INFO">Running command 'ozone sh key delete /18666-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:19.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:19.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:18.091" endtime="20200626 22:58:19.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:19.817" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:19.816" endtime="20200626 22:58:19.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:19.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:19.817" endtime="20200626 22:58:19.817"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:18.090" endtime="20200626 22:58:19.817"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:40.333" endtime="20200626 22:58:19.818"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:40.333" endtime="20200626 22:58:19.818"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:19.821" level="INFO">Running command 'ozone sh bucket delete /18666-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:21.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:21.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200626 22:58:19.818" endtime="20200626 22:58:21.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:21.589" level="INFO"></msg>
<status status="PASS" starttime="20200626 22:58:21.588" endtime="20200626 22:58:21.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:21.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:21.589" endtime="20200626 22:58:21.590"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:19.818" endtime="20200626 22:58:21.590"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200626 22:58:21.593" level="INFO">Running command 'ozone sh volume delete /18666-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200626 22:58:23.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200626 22:58:23.256" level="INFO">${output} = Volume 18666-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200626 22:58:21.590" endtime="20200626 22:58:23.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200626 22:58:23.257" level="INFO">Volume 18666-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200626 22:58:23.256" endtime="20200626 22:58:23.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200626 22:58:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200626 22:58:23.257" endtime="20200626 22:58:23.257"></status>
</kw>
<status status="PASS" starttime="20200626 22:58:21.590" endtime="20200626 22:58:23.258"></status>
</kw>
<status status="PASS" starttime="20200626 22:57:23.664" endtime="20200626 22:58:23.258"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200626 22:57:23.662" endtime="20200626 22:58:23.258" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200626 22:54:40.232" endtime="20200626 22:58:23.260"></status>
</suite>
<status status="PASS" starttime="20200626 22:53:49.959" endtime="20200626 22:58:23.264"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
