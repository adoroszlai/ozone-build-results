<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200610 23:41:47.713" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:41:47.780" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:41:55.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:41:55.016" level="INFO">${output} = 2020-06-10 23:41:48,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:48,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:47.774" endtime="20200610 23:41:55.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:41:55.017" level="INFO">2020-06-10 23:41:48,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:48,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-10 23:41:48,835 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-10 23:41:49,570 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-10 23:41:49,571 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-10 23:41:49,576 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-10 23:41:49,580 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-10 23:41:49,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-78946, with hadoop as owner.
2020-06-10 23:41:49,719 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78946/bucket-0-75077, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:41:50,253 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-10 23:41:50,588 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,127
Average Time spent in bucket creation: 00:00:00,015
Average Time spent in key creation: 00:00:00,041
Average Time spent in key write: 00:00:00,639
Total bytes written: 10240
Total Execution time: 00:00:05,701
***************************************************</msg>
<status status="PASS" starttime="20200610 23:41:55.017" endtime="20200610 23:41:55.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:41:55.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:41:55.017" endtime="20200610 23:41:55.018"></status>
</kw>
<msg timestamp="20200610 23:41:55.018" level="INFO">${result} = 2020-06-10 23:41:48,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:48,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:47.774" endtime="20200610 23:41:55.018"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:41:55.019" endtime="20200610 23:41:55.019"></status>
</kw>
<status status="PASS" starttime="20200610 23:41:55.018" endtime="20200610 23:41:55.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:41:47.773" endtime="20200610 23:41:55.020" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:41:55.023" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:41:59.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:41:59.345" level="INFO">${output} = 2020-06-10 23:41:55,895 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:56,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:55.021" endtime="20200610 23:41:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:41:59.347" level="INFO">2020-06-10 23:41:55,895 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:56,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-10 23:41:56,063 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-10 23:41:56,231 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hqpqh4fpp7
2020-06-10 23:41:56,249 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-10 23:41:56,840 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-10 23:41:56,870 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:41:57,258 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-10 23:41:57,290 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-10 23:41:58,258 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-10 23:41:59,022 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1144.876695, max=1144.876695, mean=1144.876695, stddev=0.0, median=1144.876695, p75=1144.876695, p95=1144.876695, p98=1144.876695, p99=1144.876695, p999=1144.876695, mean_rate=0.46927055052988015, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-10 23:41:59,023 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-10 23:41:59,023 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-10 23:41:59,023 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200610 23:41:59.346" endtime="20200610 23:41:59.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:41:59.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:41:59.347" endtime="20200610 23:41:59.347"></status>
</kw>
<msg timestamp="20200610 23:41:59.348" level="INFO">${result} = 2020-06-10 23:41:55,895 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:41:56,063 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:55.021" endtime="20200610 23:41:59.348"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:41:59.348" endtime="20200610 23:41:59.349"></status>
</kw>
<status status="PASS" starttime="20200610 23:41:59.348" endtime="20200610 23:41:59.349"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:41:55.020" endtime="20200610 23:41:59.349" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:41:59.353" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:42:02.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:42:02.197" level="INFO">${output} = 2020-06-10 23:42:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:00,379 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:59.350" endtime="20200610 23:42:02.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:42:02.198" level="INFO">2020-06-10 23:42:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:00,379 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-10 23:42:00,380 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-10 23:42:00,528 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hdz5nhu8rn
2020-06-10 23:42:00,546 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-10 23:42:01,549 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-10 23:42:02,188 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=49.747524, max=49.747524, mean=49.747524, stddev=0.0, median=49.747524, p75=49.747524, p95=49.747524, p98=49.747524, p99=49.747524, p999=49.747524, mean_rate=0.8984974186869988, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-10 23:42:02,189 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-10 23:42:02,189 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-10 23:42:02,189 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200610 23:42:02.197" endtime="20200610 23:42:02.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:42:02.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:42:02.198" endtime="20200610 23:42:02.199"></status>
</kw>
<msg timestamp="20200610 23:42:02.199" level="INFO">${result} = 2020-06-10 23:42:00,237 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:00,379 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:41:59.350" endtime="20200610 23:42:02.199"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:42:02.200" endtime="20200610 23:42:02.200"></status>
</kw>
<status status="PASS" starttime="20200610 23:42:02.199" endtime="20200610 23:42:02.200"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:41:59.349" endtime="20200610 23:42:02.200" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:42:02.205" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:42:05.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:42:05.045" level="INFO">${output} = 2020-06-10 23:42:03,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:03,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:42:02.202" endtime="20200610 23:42:05.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:42:05.046" level="INFO">2020-06-10 23:42:03,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:03,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-10 23:42:03,203 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-10 23:42:03,394 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kxw8rfvewx
2020-06-10 23:42:03,413 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-10 23:42:04,422 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-10 23:42:05,036 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=22.257387, max=22.257387, mean=22.257387, stddev=0.0, median=22.257387, p75=22.257387, p95=22.257387, p98=22.257387, p99=22.257387, p999=22.257387, mean_rate=0.898098930946321, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-10 23:42:05,037 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-10 23:42:05,037 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-10 23:42:05,037 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200610 23:42:05.045" endtime="20200610 23:42:05.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:42:05.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:42:05.046" endtime="20200610 23:42:05.047"></status>
</kw>
<msg timestamp="20200610 23:42:05.047" level="INFO">${result} = 2020-06-10 23:42:03,047 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:42:03,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:42:02.201" endtime="20200610 23:42:05.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:42:05.048" endtime="20200610 23:42:05.048"></status>
</kw>
<status status="PASS" starttime="20200610 23:42:05.047" endtime="20200610 23:42:05.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:42:02.201" endtime="20200610 23:42:05.048" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200610 23:41:47.748" endtime="20200610 23:42:05.049"></status>
</suite>
<status status="PASS" starttime="20200610 23:41:47.714" endtime="20200610 23:42:05.052"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
