<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200611 00:05:00.644" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:00.700" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:00.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:00.702" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:00.695" endtime="20200611 00:05:00.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:00.703" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:00.703" endtime="20200611 00:05:00.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:00.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:00.704" endtime="20200611 00:05:00.705"></status>
</kw>
<msg timestamp="20200611 00:05:00.705" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:00.695" endtime="20200611 00:05:00.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:00.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:00.705" endtime="20200611 00:05:00.706"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:00.709" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:00.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:00.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:00.707" endtime="20200611 00:05:00.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:00.726" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:00.725" endtime="20200611 00:05:00.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:00.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:00.726" endtime="20200611 00:05:00.727"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:00.707" endtime="20200611 00:05:00.727"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:00.706" endtime="20200611 00:05:00.727"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:00.694" endtime="20200611 00:05:00.727"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:00.694" endtime="20200611 00:05:00.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:00.730" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.339" level="INFO">${output} = 2020-06-11 00:05:01,604 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-11 00:05:01,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200611 00:05:00.728" endtime="20200611 00:05:08.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.340" level="INFO">2020-06-11 00:05:01,604 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-11 00:05:01,758 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-11 00:05:01,758 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-11 00:05:02,872 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-11 00:05:02,873 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-11 00:05:02,881 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-11 00:05:02,887 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-11 00:05:02,916 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-18084, with testuser/scm@EXAMPLE.COM as owner.
2020-06-11 00:05:03,029 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-18084/bucket-0-15330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-11 00:05:03,445 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-11 00:05:03,889 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,012
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,012
Average Time spent in key write: 00:00:00,092
Total bytes written: 2050
Total Execution time: 00:00:06,066
***************************************************</msg>
<status status="PASS" starttime="20200611 00:05:08.339" endtime="20200611 00:05:08.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.340" endtime="20200611 00:05:08.341"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:00.727" endtime="20200611 00:05:08.341"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:00.693" endtime="20200611 00:05:08.341" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.346" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.344" endtime="20200611 00:05:08.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.350" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.349" endtime="20200611 00:05:08.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.350" endtime="20200611 00:05:08.351"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.343" endtime="20200611 00:05:08.351"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.343" endtime="20200611 00:05:08.351"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.353" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.372" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200611 00:05:08.351" endtime="20200611 00:05:08.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.373" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200611 00:05:08.372" endtime="20200611 00:05:08.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.373" endtime="20200611 00:05:08.374"></status>
</kw>
<msg timestamp="20200611 00:05:08.374" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200611 00:05:08.351" endtime="20200611 00:05:08.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.374" endtime="20200611 00:05:08.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.378" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.380" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.376" endtime="20200611 00:05:08.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.381" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:08.381" endtime="20200611 00:05:08.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.381" endtime="20200611 00:05:08.382"></status>
</kw>
<msg timestamp="20200611 00:05:08.382" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.375" endtime="20200611 00:05:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:08.383" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:08.382" endtime="20200611 00:05:08.383"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.386" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.384" endtime="20200611 00:05:08.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.404" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.403" endtime="20200611 00:05:08.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.404" endtime="20200611 00:05:08.404"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.383" endtime="20200611 00:05:08.404"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.383" endtime="20200611 00:05:08.405"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.375" endtime="20200611 00:05:08.405"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.374" endtime="20200611 00:05:08.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.408" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.434" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200611 00:05:08.405" endtime="20200611 00:05:08.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.436" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x21e4f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYSpjTQfOOSqI6JHXoH7m3SNxVL/+PSlV/Q8xTr4u+LXTMmwoLA4KPS+YKYYwvEpHhUyGsnaeCh/nxVqibktas6A5vxyJxVxMD5WRfd16jasAmdEDTGlpDx0OTIIQBAXd/d1nwqPsoLaoXtmvwd15T+V5yKuaCsh4eGS6T+V4YkDNKXeLq+2C5Y68cKPsMhUo89P8T8H+DSZgbt8/WknyZuvupsBQ8RUdBg030Ex91uLzWrX04LbTT8L/+zgPLEYtBa+f9va68CmThqkafpfk+Nttg1xzhFGFPNtGUwbAG4GTaSuCyNK1/OfuBdbv5Zeaos29lJYyvqK4uHpEoi8SfUXMSEjZ08pIHWMIHToAMCARKigcsEgchFQvsfFwCZeEcx+TDsmcBLBVcoNetD9wOZsLUGVPz44FFA1mQzVnHZFj1/pAmPz6u1jhQnE5BxU9GH4SFfDPFKs14tHnw3ozZE1Wep14S+PnYs7/s0pOoH0pVc6dc0STmu2TbvfKndST/v6QFmf97oM0FFphKmWE1KnhaH1zIKkFPztY91nk1FtROeXPUSFflnMPqC9YOLRB0YPad5ZQFV8bXT6DKQIfNQCfTz3Doo3l2FAjfaLx/eBC4UZdJXkWebkKcXsqe7OQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBmAtFa6drlt4BM0Gj939X27rxft0BijMRskZQTitb6tPmxqLb531wFf4gyrDz0T250L2L8rC6ByaOW3PPjI3YOUc=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908430&amp;s=f2ATZiuFyqyJ8GARf5PIhcZh4UgrCoOzhv8jhJWr3tg="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 10 Jun 2020 22:20:42 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 11 Jun 2020 00:05:08 GMT
Cache-Control: no-cache
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBmAtFa6drlt4BM0Gj939X27rxft0BijMRskZQTitb6tPmxqLb531wFf4gyrDz0T250L2L8rC6ByaOW3PPjI3YOUc=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908430&amp;s=f2ATZiuFyqyJ8GARf5PIhcZh4UgrCoOzhv8jhJWr3tg="; Path=/; HttpOnly
Last-Modified: Wed, 10 Jun 2020 22:20:42 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200611 00:05:08.435" endtime="20200611 00:05:08.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.436" endtime="20200611 00:05:08.437"></status>
</kw>
<msg timestamp="20200611 00:05:08.437" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200611 00:05:08.405" endtime="20200611 00:05:08.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.437" endtime="20200611 00:05:08.438"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.342" endtime="20200611 00:05:08.438"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:08.342" endtime="20200611 00:05:08.438" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.445" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.441" endtime="20200611 00:05:08.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.448" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.448" endtime="20200611 00:05:08.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.449" endtime="20200611 00:05:08.449"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.441" endtime="20200611 00:05:08.450"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.440" endtime="20200611 00:05:08.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.453" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.465" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.450" endtime="20200611 00:05:08.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.466" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200611 00:05:08.466" endtime="20200611 00:05:08.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.467" endtime="20200611 00:05:08.467"></status>
</kw>
<msg timestamp="20200611 00:05:08.467" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.450" endtime="20200611 00:05:08.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.467" endtime="20200611 00:05:08.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.471" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.473" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.469" endtime="20200611 00:05:08.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.474" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:08.474" endtime="20200611 00:05:08.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.474" endtime="20200611 00:05:08.475"></status>
</kw>
<msg timestamp="20200611 00:05:08.475" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.469" endtime="20200611 00:05:08.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:08.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:08.475" endtime="20200611 00:05:08.476"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.477" endtime="20200611 00:05:08.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.489" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.489" endtime="20200611 00:05:08.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.490" endtime="20200611 00:05:08.490"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.476" endtime="20200611 00:05:08.490"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.476" endtime="20200611 00:05:08.490"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.468" endtime="20200611 00:05:08.490"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.468" endtime="20200611 00:05:08.490"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.493" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.696" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.491" endtime="20200611 00:05:08.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.698" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1366f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYPgAEqxqQzmVpg/MrxZte/xUY7woYnZT8j3g/LXvolWPNkXl93aapB2NlhMjiIyOK+g/AgGFKAR5Lv7KmlVnX5Gb7uNEFc1GJk6wiAlaX2dNo9dzDijbMJr09GxcJEYlQ5lnz98T7qpwRnOhrWGWNjdw5fC6ojHUB9WblPlWPIkpvvEOYEyqlbBRxlL9tTNxmG3RLkP+cz7S3+xOlXrca2+pVdzyIGAUHstajiOjc+ynDy5ONLwwe+cLeB4ZGNquP0Ao4Tu5H+jIcTyasgsiwP6N75pGl6KZs47kDcyiQBQPMOe+HDWdw+hMMfNSRZIfYaGHHkCj6OwOGb62DrrmIWIV27l/brpIHWMIHToAMCARKigcsEgci5JusrVM9B0iO3pI879YhqAepahuRgbi3xh2CI4i9teLK36bthdoQDc0ELaMEK2r09IeqwCZNvtUqRUlWjTD22O2gTpOrXraT13Za3XKns7nVMvOh/v7TUaxRS0gL0FxRwb9d5frM9gtUM+mJJDTcg1MjnyZCX+V+JW5cbW/3QhiKGV7c3px7Vft5qsgX77hKTQata8PzD5FzGs24y8AConwKXb8H3ZbOW46eVh7i5O6wfMpE9M+84MivM8wMwHwY8Qs161jdtpA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC16ShZ+DvrAX+JaZxHOsx9eJ7U9y6l4BCiESb0L3cODYbHEOgi1QkYy0pfwM+pWjcPKhDAhXzQMVnsUpACF/MyGGb
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908518&amp;s=LvHsAE6HWGMKXSVTgNsqEjsrfmvLE2fN7pRM92wL414="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1591833908518.tgz"
&lt; Content-Length: 72872
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Thu, 11 Jun 2020 00:05:08 GMT
Cache-Control: no-cache
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC16ShZ+DvrAX+JaZxHOsx9eJ7U9y6l4BCiESb0L3cODYbHEOgi1QkYy0pfwM+pWjcPKhDAhXzQMVnsUpACF/MyGGb
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908518&amp;s=LvHsAE6HWGMKXSVTgNsqEjsrfmvLE2fN7pRM92wL414="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1591833908518.tgz"
Content-Length: 72872
</msg>
<status status="PASS" starttime="20200611 00:05:08.697" endtime="20200611 00:05:08.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.698" endtime="20200611 00:05:08.699"></status>
</kw>
<msg timestamp="20200611 00:05:08.699" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.491" endtime="20200611 00:05:08.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.699" endtime="20200611 00:05:08.700"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.440" endtime="20200611 00:05:08.700"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:08.439" endtime="20200611 00:05:08.700" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.705" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.703" endtime="20200611 00:05:08.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.710" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.709" endtime="20200611 00:05:08.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.710" endtime="20200611 00:05:08.710"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.702" endtime="20200611 00:05:08.710"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.702" endtime="20200611 00:05:08.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.714" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.726" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200611 00:05:08.711" endtime="20200611 00:05:08.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.727" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200611 00:05:08.726" endtime="20200611 00:05:08.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.727" endtime="20200611 00:05:08.728"></status>
</kw>
<msg timestamp="20200611 00:05:08.728" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200611 00:05:08.711" endtime="20200611 00:05:08.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.728" endtime="20200611 00:05:08.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.733" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.734" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.730" endtime="20200611 00:05:08.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.735" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:08.734" endtime="20200611 00:05:08.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.735" endtime="20200611 00:05:08.736"></status>
</kw>
<msg timestamp="20200611 00:05:08.736" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.729" endtime="20200611 00:05:08.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:08.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:08.736" endtime="20200611 00:05:08.736"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.740" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.737" endtime="20200611 00:05:08.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.751" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.751" endtime="20200611 00:05:08.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.751" endtime="20200611 00:05:08.752"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.737" endtime="20200611 00:05:08.752"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.737" endtime="20200611 00:05:08.752"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.729" endtime="20200611 00:05:08.752"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.729" endtime="20200611 00:05:08.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.755" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.786" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200611 00:05:08.753" endtime="20200611 00:05:08.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.787" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xd98f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYce08QadVoW+l/xKnURDAZ6lPq8+cj665+8ChgahmU9/eltXrN0B3dbMs8F340P8chIcqksr/++VzxIUbTtvcVN5FKIcG6nK/j8ShIuK7hkJW0P/gxVKpV6+BmCZ2J1DrMXaUQieGyht6dDMcSkkZN9EVUj8i9ZQDVyMCHhvlHPEcgyvnWYSy7DvDprWqrZ5XIhmO/4OhZk8iBgGjIKFmXzZq0TEEf7vXT96SXKXfRn3e6W7jGlC80G2RU8ifRrcRELtb2/ffG6p+L8hI85FXckQ3q5Q29LLQU5jLvc48SjC1z4DXhViw9UkaA7wIIn/0UCnE41c13qv98qUGkAeWV1Pv6oRsqpIHWMIHToAMCARKigcsEgchTq1BALehE4owZ8fxIWZQoYEcyaYZCmA5eCnLRjKnblOkTN+Zoj7O6f6dFlWAlaYT+HoC1g6BrvlEWSZ/eMRhnEpslOWEhwgb3SMe6bpUD2ArAOYmVBDQBlmIvFFD9gjtuN12o8mi9Z+lSzaZR6gYL14iTloO6yqd6p1hAV1KEa4g9EzfUNiQOuvV+zr31HhYcYuPtc+GBQd5bTeety8YYjmCB5kHGbxwOZ5ZeWiVOBfhJi3AUkLHruJwB9hPmt0Eb3y4caAJsrw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCjGWI0UQ/ZaNd8ParFCsGMPyF9x0Ihn1K6oCeS3HQR5uuakG7c85MoxfOJAPajNNn/Pd6qflsFGiwQk5n/AhS3FZr
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908772&amp;s=2NCZ5iRxeLBMCLJ2J5x2RartaxGhmpEz9gX5ktilCgQ="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Thu, 11 Jun 2020 00:05:08 GMT
Cache-Control: no-cache
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCjGWI0UQ/ZaNd8ParFCsGMPyF9x0Ihn1K6oCeS3HQR5uuakG7c85MoxfOJAPajNNn/Pd6qflsFGiwQk5n/AhS3FZr
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908772&amp;s=2NCZ5iRxeLBMCLJ2J5x2RartaxGhmpEz9gX5ktilCgQ="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200611 00:05:08.786" endtime="20200611 00:05:08.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.787" endtime="20200611 00:05:08.788"></status>
</kw>
<msg timestamp="20200611 00:05:08.788" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200611 00:05:08.752" endtime="20200611 00:05:08.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.788" endtime="20200611 00:05:08.788"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.701" endtime="20200611 00:05:08.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:08.701" endtime="20200611 00:05:08.789" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.794" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.791" endtime="20200611 00:05:08.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.798" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.797" endtime="20200611 00:05:08.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.798" endtime="20200611 00:05:08.798"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.791" endtime="20200611 00:05:08.798"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.790" endtime="20200611 00:05:08.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.802" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.818" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200611 00:05:08.799" endtime="20200611 00:05:08.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.819" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200611 00:05:08.818" endtime="20200611 00:05:08.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.819" endtime="20200611 00:05:08.819"></status>
</kw>
<msg timestamp="20200611 00:05:08.820" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200611 00:05:08.799" endtime="20200611 00:05:08.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.820" endtime="20200611 00:05:08.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.824" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.827" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.822" endtime="20200611 00:05:08.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.828" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:08.827" endtime="20200611 00:05:08.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.828" endtime="20200611 00:05:08.829"></status>
</kw>
<msg timestamp="20200611 00:05:08.829" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.821" endtime="20200611 00:05:08.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:08.830" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:08.829" endtime="20200611 00:05:08.830"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.834" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.831" endtime="20200611 00:05:08.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.846" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.845" endtime="20200611 00:05:08.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.846" endtime="20200611 00:05:08.846"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.830" endtime="20200611 00:05:08.847"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.830" endtime="20200611 00:05:08.847"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.821" endtime="20200611 00:05:08.847"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.820" endtime="20200611 00:05:08.847"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.851" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.883" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200611 00:05:08.848" endtime="20200611 00:05:08.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.884" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x159bf20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGeBh927DjAZPz+d/emej2OjRNNPXM/U8f0udK0+a3nz8mhf7lRFn1FwF7BydSBoXRMG5sGPK60BkDSLUF6PLxpEArh6Vvezfi3p1ensw2dWK0aWn3n8eJEmRcYqVzbnrnrtUWQfJMNze2vvH9a9d/8RCXOD+zNi6KbrL4X/YIw6+n8Wf+ctwlR8hguY4wq5BzzXWHPmky8QFoL40TBsXgzk13SeCgqVxOX1YupiH5iokZW5/syt9IlUxRVsg7rzpnrDfn9Xj0bVJ0OGI2ktHrQAT5vS8Y3shrBryKft0A+DVF64kPu1JlSOJqUJbpunMROWYCA92GltShyxd5RO4xNC4cdDF54KSB1jCB06ADAgESooHLBIHIgt73KXWzMdcM/fby+QxjNqhbFunYDttSgmJH55DasaV8S/XYW6j5i1oABFJ0LlNP15sc5HHa1q4nOrTbrGQCIjFc39ZS/jIDeBVO5T6v1MQJj6PEutw8V5ziEwkIGc6uFDmMdgNFZ/jnMSp9ZAwrfgeSfgicRyVsZGVh+9Wju5u2hbQ8yK4N3qgRpjjEBQsaC+GiZpFl8OKX7oJzKwz8zKQwALLZU/U6+eibwh90p6nOQoHfj4Ybwrv/xgS333nmjJm7676KrDA=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/ba3/4THmBedNFW7rdeTmDJaF/36M6hUNuJdF3S+qMs/NTkjn6NRnxpAs2JbiuAbAhHdOubNQCxKx0ZrEfawv8L3
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908874&amp;s=r/oqKBckgtZ3MqVcS0rOOpSrgEfeo8tUHh2LxAWfDUU="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 10 Jun 2020 22:20:18 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 11 Jun 2020 00:05:08 GMT
Cache-Control: no-cache
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/ba3/4THmBedNFW7rdeTmDJaF/36M6hUNuJdF3S+qMs/NTkjn6NRnxpAs2JbiuAbAhHdOubNQCxKx0ZrEfawv8L3
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908874&amp;s=r/oqKBckgtZ3MqVcS0rOOpSrgEfeo8tUHh2LxAWfDUU="; Path=/; HttpOnly
Last-Modified: Wed, 10 Jun 2020 22:20:18 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200611 00:05:08.883" endtime="20200611 00:05:08.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.884" endtime="20200611 00:05:08.885"></status>
</kw>
<msg timestamp="20200611 00:05:08.885" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200611 00:05:08.847" endtime="20200611 00:05:08.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.885" endtime="20200611 00:05:08.886"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.790" endtime="20200611 00:05:08.886"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:08.789" endtime="20200611 00:05:08.886" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.891" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.888" endtime="20200611 00:05:08.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.895" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.894" endtime="20200611 00:05:08.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.895" endtime="20200611 00:05:08.895"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.888" endtime="20200611 00:05:08.895"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.888" endtime="20200611 00:05:08.896"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.899" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.913" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.896" endtime="20200611 00:05:08.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.914" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200611 00:05:08.914" endtime="20200611 00:05:08.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.915" endtime="20200611 00:05:08.915"></status>
</kw>
<msg timestamp="20200611 00:05:08.916" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.896" endtime="20200611 00:05:08.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.916" endtime="20200611 00:05:08.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.919" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.922" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.917" endtime="20200611 00:05:08.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.923" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:05:08.922" endtime="20200611 00:05:08.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.923" endtime="20200611 00:05:08.923"></status>
</kw>
<msg timestamp="20200611 00:05:08.923" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:05:08.917" endtime="20200611 00:05:08.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:05:08.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:05:08.924" endtime="20200611 00:05:08.924"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.927" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:05:08.925" endtime="20200611 00:05:08.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.938" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:05:08.937" endtime="20200611 00:05:08.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.938" endtime="20200611 00:05:08.939"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.925" endtime="20200611 00:05:08.939"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.924" endtime="20200611 00:05:08.939"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.917" endtime="20200611 00:05:08.939"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.916" endtime="20200611 00:05:08.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:05:08.943" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:05:08.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:05:08.977" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.940" endtime="20200611 00:05:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:05:08.978" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x98ef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.6) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZtssjvl7iMVgznUx5ePySPQNrUBGqWL9cYnXKwZh4JAWCFRJ3RncyA5yC1cB1SOiY8Xeh8UDq4CLeJP1Z5lIIZ7lJahOTyJEYNDSDhccNgNT4rwsmdiCyofXg3O9S07vl3uNDXkX8nO1SzzE/jXcN4CFRVfuLBjrpZccFrwknrN4sX160WCRi9v/mUsiBxGeJ9tF571gddg/hyDH59Nk+P7p/b/pUMIqeClD2N804kl12kJcZzMdn7eCU3t8wjhDTaqoFwA8Ioh5n+6olnhkEYEksEN4U4QukdvB425VnK8hpziAHFsgQ+35/TUST2kclVskke/NXHgQSYruWX9UIs0GzdMVmcpIHWMIHToAMCARKigcsEgcg0eRhxRwWs783UAuzBKo8tRacNMJg7G/ujpkiO8ZRJbt51DTnB8v+iSvJXyV/Csx73cTAeYg5C6gdFQESTjpXNeehPmr971YXCbASm/a/9qcBFfBnZLWxFNjaKTETynLcvFMGSgm5hmeiBPJiYipzN1DiKqlAPrVj6BdN3XVlPjTYl4jQXjmqaH2DAHhUHlJpqx1n7UDUibA4sLOHnQ2X18uKtOK8GG/ALDPuTKEEBT6mkF5cmQM62l2B53Osl6/rtwNV+ZJK/yA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Date: Thu, 11 Jun 2020 00:05:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCDVk8YvcASoVUqkqW7ei0XHqWjo9ZQ/tPDXOtbT8CSla8brSC4+jjcofq26ZwsU+NjNizPHJ2G/jkypd89x4JF2tF
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908968&amp;s=RZ5ybG1JNJCbdd6tS37L0o5++118xjmI9R5pkaR1nIg="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 10 Jun 2020 22:44:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 11 Jun 2020 00:05:08 GMT
Cache-Control: no-cache
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 11 Jun 2020 00:05:08 GMT
Date: Thu, 11 Jun 2020 00:05:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCDVk8YvcASoVUqkqW7ei0XHqWjo9ZQ/tPDXOtbT8CSla8brSC4+jjcofq26ZwsU+NjNizPHJ2G/jkypd89x4JF2tF
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869908968&amp;s=RZ5ybG1JNJCbdd6tS37L0o5++118xjmI9R5pkaR1nIg="; Path=/; HttpOnly
Last-Modified: Wed, 10 Jun 2020 22:44:48 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200611 00:05:08.977" endtime="20200611 00:05:08.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:05:08.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:05:08.978" endtime="20200611 00:05:08.979"></status>
</kw>
<msg timestamp="20200611 00:05:08.979" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200611 00:05:08.939" endtime="20200611 00:05:08.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200611 00:05:08.979" endtime="20200611 00:05:08.979"></status>
</kw>
<status status="PASS" starttime="20200611 00:05:08.887" endtime="20200611 00:05:08.979"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:05:08.887" endtime="20200611 00:05:08.980" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200611 00:05:00.670" endtime="20200611 00:05:08.981"></status>
</suite>
<status status="PASS" starttime="20200611 00:05:00.645" endtime="20200611 00:05:08.983"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
