<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200611 00:03:56.332" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:03:56.387" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:03:56.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:03:56.390" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:03:56.383" endtime="20200611 00:03:56.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:03:56.391" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:03:56.390" endtime="20200611 00:03:56.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:03:56.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:03:56.391" endtime="20200611 00:03:56.392"></status>
</kw>
<msg timestamp="20200611 00:03:56.392" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:03:56.383" endtime="20200611 00:03:56.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200611 00:03:56.393" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200611 00:03:56.392" endtime="20200611 00:03:56.393"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:03:56.396" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:03:56.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:03:56.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:03:56.394" endtime="20200611 00:03:56.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:03:56.413" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:03:56.412" endtime="20200611 00:03:56.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:03:56.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:03:56.413" endtime="20200611 00:03:56.413"></status>
</kw>
<status status="PASS" starttime="20200611 00:03:56.394" endtime="20200611 00:03:56.414"></status>
</kw>
<status status="PASS" starttime="20200611 00:03:56.393" endtime="20200611 00:03:56.414"></status>
</kw>
<status status="PASS" starttime="20200611 00:03:56.383" endtime="20200611 00:03:56.414"></status>
</kw>
<status status="PASS" starttime="20200611 00:03:56.382" endtime="20200611 00:03:56.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:03:56.416" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:04.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:04.019" level="INFO">${output} = 2020-06-11 00:03:57,276 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-11 00:03:57,411 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200611 00:03:56.414" endtime="20200611 00:04:04.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:04.020" level="INFO">2020-06-11 00:03:57,276 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-11 00:03:57,411 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-11 00:03:57,412 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-11 00:03:58,543 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-11 00:03:58,544 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-11 00:03:58,556 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-11 00:03:58,569 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-11 00:03:58,600 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-16968, with testuser/scm@EXAMPLE.COM as owner.
2020-06-11 00:03:58,677 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-16968/bucket-0-80814, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-11 00:03:59,097 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-11 00:03:59,571 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,009
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,087
Average Time spent in key write: 00:00:00,432
Total bytes written: 10250
Total Execution time: 00:00:06,077
***************************************************</msg>
<status status="PASS" starttime="20200611 00:04:04.019" endtime="20200611 00:04:04.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:04.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:04.020" endtime="20200611 00:04:04.021"></status>
</kw>
<status status="PASS" starttime="20200611 00:03:56.414" endtime="20200611 00:04:04.021"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:03:56.382" endtime="20200611 00:04:04.021" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:04.027" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:04.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:04.030" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:04.025" endtime="20200611 00:04:04.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:04.031" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:04.031" endtime="20200611 00:04:04.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:04.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:04.032" endtime="20200611 00:04:04.032"></status>
</kw>
<msg timestamp="20200611 00:04:04.032" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:04.024" endtime="20200611 00:04:04.032"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:04.036" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:04.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:04.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:04.033" endtime="20200611 00:04:04.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:04.054" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:04.053" endtime="20200611 00:04:04.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:04.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:04.054" endtime="20200611 00:04:04.060"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:04.033" endtime="20200611 00:04:04.060"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:04.032" endtime="20200611 00:04:04.061"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:04.024" endtime="20200611 00:04:04.061"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:04.023" endtime="20200611 00:04:04.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:04.065" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:04.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:04.262" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:04.061" endtime="20200611 00:04:04.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:04.263" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    403      0 --:--:-- --:--:-- --:--:--   405
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200611 00:04:04.262" endtime="20200611 00:04:04.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:04.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:04.263" endtime="20200611 00:04:04.263"></status>
</kw>
<msg timestamp="20200611 00:04:04.264" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:04.061" endtime="20200611 00:04:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:04.264" endtime="20200611 00:04:04.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:04.269" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:04.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:04.300" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:04.265" endtime="20200611 00:04:04.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:04.301" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   122k      0 --:--:-- --:--:-- --:--:--  124k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200611 00:04:04.301" endtime="20200611 00:04:04.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:04.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:04.302" endtime="20200611 00:04:04.302"></status>
</kw>
<msg timestamp="20200611 00:04:04.302" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:04.264" endtime="20200611 00:04:04.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200611 00:04:04.303" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:04 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   122k      0 --:--:-- --:--:-- --:--:--  124k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200611 00:04:04.303" endtime="20200611 00:04:04.304"></status>
</kw>
<status status="FAIL" starttime="20200611 00:04:04.023" endtime="20200611 00:04:04.304"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:14.308" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:14.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:14.311" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:14.306" endtime="20200611 00:04:14.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:14.312" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:14.311" endtime="20200611 00:04:14.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:14.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:14.312" endtime="20200611 00:04:14.312"></status>
</kw>
<msg timestamp="20200611 00:04:14.313" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:14.306" endtime="20200611 00:04:14.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:14.316" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:14.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:14.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:14.314" endtime="20200611 00:04:14.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:14.327" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:14.326" endtime="20200611 00:04:14.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:14.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:14.328" endtime="20200611 00:04:14.329"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:14.313" endtime="20200611 00:04:14.329"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:14.313" endtime="20200611 00:04:14.329"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:14.305" endtime="20200611 00:04:14.329"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:14.305" endtime="20200611 00:04:14.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:14.333" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:14.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:14.348" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:14.331" endtime="20200611 00:04:14.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:14.349" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   9021      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200611 00:04:14.348" endtime="20200611 00:04:14.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:14.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:14.349" endtime="20200611 00:04:14.349"></status>
</kw>
<msg timestamp="20200611 00:04:14.350" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:14.329" endtime="20200611 00:04:14.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:14.350" endtime="20200611 00:04:14.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:14.353" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:14.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:14.367" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:14.351" endtime="20200611 00:04:14.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:14.368" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   377k      0 --:--:-- --:--:-- --:--:--  387k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200611 00:04:14.368" endtime="20200611 00:04:14.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:14.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:14.369" endtime="20200611 00:04:14.369"></status>
</kw>
<msg timestamp="20200611 00:04:14.370" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:14.350" endtime="20200611 00:04:14.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200611 00:04:14.371" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:14 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   377k      0 --:--:-- --:--:-- --:--:--  387k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200611 00:04:14.370" endtime="20200611 00:04:14.371"></status>
</kw>
<status status="FAIL" starttime="20200611 00:04:14.304" endtime="20200611 00:04:14.371"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:24.375" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:24.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:24.378" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:24.373" endtime="20200611 00:04:24.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:24.379" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:24.378" endtime="20200611 00:04:24.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:24.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:24.379" endtime="20200611 00:04:24.380"></status>
</kw>
<msg timestamp="20200611 00:04:24.380" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:24.373" endtime="20200611 00:04:24.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:24.383" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:24.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:24.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:24.381" endtime="20200611 00:04:24.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:24.393" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:24.393" endtime="20200611 00:04:24.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:24.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:24.393" endtime="20200611 00:04:24.394"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:24.380" endtime="20200611 00:04:24.394"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:24.380" endtime="20200611 00:04:24.394"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:24.373" endtime="20200611 00:04:24.394"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:24.372" endtime="20200611 00:04:24.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:24.398" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:24.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:24.413" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:24.395" endtime="20200611 00:04:24.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:24.414" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7496      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200611 00:04:24.413" endtime="20200611 00:04:24.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:24.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:24.414" endtime="20200611 00:04:24.414"></status>
</kw>
<msg timestamp="20200611 00:04:24.415" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:24.394" endtime="20200611 00:04:24.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:24.415" endtime="20200611 00:04:24.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:24.419" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:24.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:24.434" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:24.416" endtime="20200611 00:04:24.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:24.435" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   311k      0 --:--:-- --:--:-- --:--:--  310k
100  3177  100  3177    0     0   309k      0 --:--:-- --:--:-- --:--:--  310k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200611 00:04:24.434" endtime="20200611 00:04:24.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:24.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:24.435" endtime="20200611 00:04:24.437"></status>
</kw>
<msg timestamp="20200611 00:04:24.437" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:24.415" endtime="20200611 00:04:24.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200611 00:04:24.439" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:24 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   311k      0 --:--:-- --:--:-- --:--:--  310k
100  3177  100  3177    0     0   309k      0 --:--:-- --:--:-- --:--:--  310k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200611 00:04:24.439" endtime="20200611 00:04:24.440"></status>
</kw>
<status status="FAIL" starttime="20200611 00:04:24.371" endtime="20200611 00:04:24.440"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:34.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:34.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:34.447" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:34.442" endtime="20200611 00:04:34.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:34.448" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:34.448" endtime="20200611 00:04:34.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:34.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:34.449" endtime="20200611 00:04:34.449"></status>
</kw>
<msg timestamp="20200611 00:04:34.449" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:34.442" endtime="20200611 00:04:34.449"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:34.453" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:34.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:34.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:34.451" endtime="20200611 00:04:34.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:34.465" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:34.464" endtime="20200611 00:04:34.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:34.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:34.465" endtime="20200611 00:04:34.465"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:34.450" endtime="20200611 00:04:34.466"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:34.450" endtime="20200611 00:04:34.466"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:34.441" endtime="20200611 00:04:34.466"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:34.441" endtime="20200611 00:04:34.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:34.469" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:34.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:34.486" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:34.466" endtime="20200611 00:04:34.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:34.487" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   6670      0 --:--:-- --:--:-- --:--:--  7000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200611 00:04:34.486" endtime="20200611 00:04:34.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:34.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:34.487" endtime="20200611 00:04:34.487"></status>
</kw>
<msg timestamp="20200611 00:04:34.488" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:34.466" endtime="20200611 00:04:34.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:34.488" endtime="20200611 00:04:34.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:34.491" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:34.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:34.509" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:34.489" endtime="20200611 00:04:34.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:34.510" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   258k      0 --:--:-- --:--:-- --:--:--  282k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200611 00:04:34.509" endtime="20200611 00:04:34.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:34.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:34.510" endtime="20200611 00:04:34.510"></status>
</kw>
<msg timestamp="20200611 00:04:34.511" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:34.488" endtime="20200611 00:04:34.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200611 00:04:34.512" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:34 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   258k      0 --:--:-- --:--:-- --:--:--  282k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200611 00:04:34.511" endtime="20200611 00:04:34.512"></status>
</kw>
<status status="FAIL" starttime="20200611 00:04:34.440" endtime="20200611 00:04:34.512"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:44.517" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:44.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:44.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:44.514" endtime="20200611 00:04:44.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:44.520" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:44.519" endtime="20200611 00:04:44.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:44.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:44.520" endtime="20200611 00:04:44.521"></status>
</kw>
<msg timestamp="20200611 00:04:44.521" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:44.514" endtime="20200611 00:04:44.521"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:44.524" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:44.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:44.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:44.522" endtime="20200611 00:04:44.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:44.535" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:44.535" endtime="20200611 00:04:44.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:44.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:44.536" endtime="20200611 00:04:44.536"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:44.522" endtime="20200611 00:04:44.537"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:44.521" endtime="20200611 00:04:44.537"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:44.514" endtime="20200611 00:04:44.537"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:44.513" endtime="20200611 00:04:44.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:44.540" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:44.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:44.556" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:44.537" endtime="20200611 00:04:44.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:44.557" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7326      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200611 00:04:44.557" endtime="20200611 00:04:44.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:44.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:44.557" endtime="20200611 00:04:44.558"></status>
</kw>
<msg timestamp="20200611 00:04:44.558" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:44.537" endtime="20200611 00:04:44.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:44.558" endtime="20200611 00:04:44.559"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:44.562" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:44.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:44.577" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:44.559" endtime="20200611 00:04:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:44.578" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   335k      0 --:--:-- --:--:-- --:--:--  344k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200611 00:04:44.578" endtime="20200611 00:04:44.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:44.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:44.578" endtime="20200611 00:04:44.579"></status>
</kw>
<msg timestamp="20200611 00:04:44.579" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:44.559" endtime="20200611 00:04:44.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200611 00:04:44.580" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:44 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3177
&lt; 
{ [data not shown]

100  3177  100  3177    0     0   335k      0 --:--:-- --:--:-- --:--:--  344k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200611 00:04:44.580" endtime="20200611 00:04:44.580"></status>
</kw>
<status status="FAIL" starttime="20200611 00:04:44.512" endtime="20200611 00:04:44.581"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.585" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.588" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:54.583" endtime="20200611 00:04:54.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.589" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:54.588" endtime="20200611 00:04:54.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.589" endtime="20200611 00:04:54.590"></status>
</kw>
<msg timestamp="20200611 00:04:54.590" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:54.583" endtime="20200611 00:04:54.590"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.593" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:54.591" endtime="20200611 00:04:54.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.605" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:54.604" endtime="20200611 00:04:54.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.605" endtime="20200611 00:04:54.606"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.591" endtime="20200611 00:04:54.606"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.590" endtime="20200611 00:04:54.606"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.582" endtime="20200611 00:04:54.607"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.582" endtime="20200611 00:04:54.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.611" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.625" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.607" endtime="20200611 00:04:54.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.627" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  18107      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":7},{"ContainerID":3,"NumberOfKeys":1},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200611 00:04:54.626" endtime="20200611 00:04:54.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.627" endtime="20200611 00:04:54.628"></status>
</kw>
<msg timestamp="20200611 00:04:54.628" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.607" endtime="20200611 00:04:54.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.628" endtime="20200611 00:04:54.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.631" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.644" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.629" endtime="20200611 00:04:54.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.645" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3255
&lt; 
{ [data not shown]

100  3255  100  3255    0     0   464k      0 --:--:-- --:--:-- --:--:--  529k
* Connection #0 to host recon left intact
[{"volume":"vol-1-45214","bucket":"bucket-0-29383","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-4-25436","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-2-39773","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-3-35621","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-1-04362","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-2-91077","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-2-40840","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-3-41924","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-0-06909","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-2-03666","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-1-05013","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-1-02034","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-1-54378","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-4-02624","fileSize":16384,"count":5},{"volume":"vol-3-53489","bucket":"bucket-0-50353","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-3-83372","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-4-92169","fileSize":16384,"count":5},{"volume":"vol-4-05448","bucket":"bucket-3-85147","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-4-24546","fileSize":16384,"count":5},{"volume":"vol-1-45214","bucket":"bucket-2-38909","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-0-51285","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-1-93697","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-4-59285","fileSize":16384,"count":5},{"volume":"vol-0-94665","bucket":"bucket-0-54000","fileSize":16384,"count":5},{"volume":"vol-2-73598","bucket":"bucket-3-92281","fileSize":16384,"count":5},{"volume":"28206-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"28206-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"28206-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest317","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":2},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":3},{"volume":"fstest","bucket":"bucket2","fileSize":32768,"count":1},{"volume":"fstest2","bucket":"bucket3","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket2","fileSize":1024,"count":2},{"volume":"fstest2","bucket":"bucket3","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42681","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-32471","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-86167","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-99386","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-28416","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-69958","fileSize":1024,"count":1},{"volume":"vol-0-16968","bucket":"bucket-0-80814","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200611 00:04:54.645" endtime="20200611 00:04:54.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.646" endtime="20200611 00:04:54.646"></status>
</kw>
<msg timestamp="20200611 00:04:54.646" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.628" endtime="20200611 00:04:54.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.646" endtime="20200611 00:04:54.647"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.581" endtime="20200611 00:04:54.647"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:04.023" endtime="20200611 00:04:54.647"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:04:04.022" endtime="20200611 00:04:54.647" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.651" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.689" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.649" endtime="20200611 00:04:54.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.691" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  56991      0 --:--:-- --:--:-- --:--:-- 58451
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"51d66525-f84b-46be-9310-54df40bdb627","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1591833870013,"storageReport":{"capacity":89311358976,"used":8192,"remaining":15840784384},"pipelines":[{"pipelineID":"479f6f03-ae93-4e92-83ec-e62e5ef3da8a","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"e8e97232-1ec5-4e87-b560-d686c3ce217f","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"6ece063b-e1a0-4363-8e78-5ecf0377c4b0","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1591833870002,"storageReport":{"capacity":89311358976,"used":4096,"remaining":15840784384},"pipelines":[{"pipelineID":"fc783735-ce9d-42da-9b1f-4b093f28d9dc","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"e8e97232-1ec5-4e87-b560-d686c3ce217f","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":1,"leaderCount":2},{"uuid":"41410284-0e36-4425-9317-2f8ae5197d6c","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1591833870011,"storageReport":{"capacity":89311358976,"used":8192,"remaining":15840784384},"pipelines":[{"pipelineID":"a6cd6bc9-48b1-4d34-b2ca-14e1d47fdfef","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"e8e97232-1ec5-4e87-b560-d686c3ce217f","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200611 00:04:54.690" endtime="20200611 00:04:54.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.691" endtime="20200611 00:04:54.692"></status>
</kw>
<msg timestamp="20200611 00:04:54.692" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.649" endtime="20200611 00:04:54.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.692" endtime="20200611 00:04:54.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.692" endtime="20200611 00:04:54.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.693" endtime="20200611 00:04:54.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.693" endtime="20200611 00:04:54.694"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.697" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.719" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.694" endtime="20200611 00:04:54.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.720" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]

100  1364  100  1364    0     0  83175      0 --:--:-- --:--:-- --:--:-- 85250
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"479f6f03-ae93-4e92-83ec-e62e5ef3da8a","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":853697,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"fc783735-ce9d-42da-9b1f-4b093f28d9dc","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":853995,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"a6cd6bc9-48b1-4d34-b2ca-14e1d47fdfef","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":853778,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"e8e97232-1ec5-4e87-b560-d686c3ce217f","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":853667,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200611 00:04:54.720" endtime="20200611 00:04:54.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.721" endtime="20200611 00:04:54.721"></status>
</kw>
<msg timestamp="20200611 00:04:54.721" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.694" endtime="20200611 00:04:54.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.722" endtime="20200611 00:04:54.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.722" endtime="20200611 00:04:54.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.722" endtime="20200611 00:04:54.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.723" endtime="20200611 00:04:54.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.723" endtime="20200611 00:04:54.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.724" endtime="20200611 00:04:54.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.727" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.742" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.725" endtime="20200611 00:04:54.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.743" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  22581      0 --:--:-- --:--:-- --:--:-- 23250
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":20480,"remaining":47522353152},"containers":4,"volumes":25,"buckets":52,"keys":168}</msg>
<status status="PASS" starttime="20200611 00:04:54.742" endtime="20200611 00:04:54.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.743" endtime="20200611 00:04:54.744"></status>
</kw>
<msg timestamp="20200611 00:04:54.744" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.724" endtime="20200611 00:04:54.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.744" endtime="20200611 00:04:54.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.744" endtime="20200611 00:04:54.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.745" endtime="20200611 00:04:54.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.749" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.772" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.746" endtime="20200611 00:04:54.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.773" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  25475      0 --:--:-- --:--:-- --:--:-- 26705
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1591833065455,"lastReportTimestamp":1591833840035},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1591833065624,"lastReportTimestamp":1591833840005},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1591833065267,"lastReportTimestamp":1591833840099}]</msg>
<status status="PASS" starttime="20200611 00:04:54.772" endtime="20200611 00:04:54.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.773" endtime="20200611 00:04:54.774"></status>
</kw>
<msg timestamp="20200611 00:04:54.774" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.745" endtime="20200611 00:04:54.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.774" endtime="20200611 00:04:54.775"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:04:54.648" endtime="20200611 00:04:54.775" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.781" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.783" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200611 00:04:54.778" endtime="20200611 00:04:54.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.784" level="INFO">scm</msg>
<status status="PASS" starttime="20200611 00:04:54.783" endtime="20200611 00:04:54.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.784" endtime="20200611 00:04:54.784"></status>
</kw>
<msg timestamp="20200611 00:04:54.785" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200611 00:04:54.778" endtime="20200611 00:04:54.785"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.788" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200611 00:04:54.786" endtime="20200611 00:04:54.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.799" level="INFO"></msg>
<status status="PASS" starttime="20200611 00:04:54.798" endtime="20200611 00:04:54.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.799" endtime="20200611 00:04:54.799"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.785" endtime="20200611 00:04:54.800"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.785" endtime="20200611 00:04:54.800"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.777" endtime="20200611 00:04:54.800"></status>
</kw>
<status status="PASS" starttime="20200611 00:04:54.777" endtime="20200611 00:04:54.800"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200611 00:04:54.803" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200611 00:04:54.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200611 00:04:54.840" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.800" endtime="20200611 00:04:54.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200611 00:04:54.841" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  19507      0 --:--:-- --:--:-- --:--:-- 20090
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x2264f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.6) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQJMzjoOp2mk2y3IBpAZmC6h9E/9XsnvD/UkKtZL9eI9LK4UOjWxXz6gQQ8SCsTxyU0DHP72Okum7wXuD4NEIuO+KNYMPZP4N9nBpQAYaRdefHqxjEUSUyoAJgg0+xx6dwDpk06M6i4d5ujgLri6wsn4EgiveIWH38FTPIblLZA+pHzvLJNPVXLsBtRQwx77/JR/tMB9C+mdkRKnNbWQsib+4poE2YJwMOcTNOctUFtSgl1co0Y7Z5OS7jqBbQRdkT5KYIu5khO9lEAG/cXaLf7TI5d2oI+DoDlcXHM5YiVemN9PN3bffHE2Y+rll+/d1tbLsR7v0u/UDrXR6q5NZc7TjmCkgdIwgc+gAwIBEqKBxwSBxFwa/1OItw4VbXnii052SK8/8GVZmf74SYb1fLrwFuK0jhuMAsCvDZvwtRpdsnpMXgXFknQ5ZDLbF9DMM56YSUDtjueq54QjQGYKZlesS7TsHxwGkjHup1Q5W5XXYdBXeGD5s1lcQLTcPC2cN8lPZPDugW3BnV7NuqITOww771/GXzjq1TtliyXX2Bv5s74GSskL4lsW++cZrJirEJIsystU5qEyzKB2l0B/tCCtD5UKk8/1kxtDe23VP83dEB3MSgUmCQ4=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Date: Thu, 11 Jun 2020 00:04:54 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2lWFDanU6oMTPw0kMaorIENUr1WuMMjD3G9Y2byQTlOiFuDSyZk06NcKeaA/8/zCFu//DbbOfhjo3ReZZ0jzQ9Dv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1591869894835&amp;s=bogqrdZNVWa7VBPBVAfMf2y/yl+7D78R8dS/Imhfc24="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 10 Jun 2020 22:44:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  70812      0 --:--:-- --:--:-- --:--:-- 70812
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.6eecbd1e.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.80031bdb.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.3424096a.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.841" endtime="20200611 00:04:54.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200611 00:04:54.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200611 00:04:54.842" endtime="20200611 00:04:54.842"></status>
</kw>
<msg timestamp="20200611 00:04:54.842" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200611 00:04:54.800" endtime="20200611 00:04:54.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200611 00:04:54.843" endtime="20200611 00:04:54.843"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200611 00:04:54.776" endtime="20200611 00:04:54.843" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200611 00:03:56.357" endtime="20200611 00:04:54.845"></status>
</suite>
<status status="PASS" starttime="20200611 00:03:56.332" endtime="20200611 00:04:54.847"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
