<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200610 23:30:45.858" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200610 23:30:45.907" endtime="20200610 23:30:45.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:30:45.912" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:30:45.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:30:45.984" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 10 Jun 2020 23:30:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Jun 2020 22:20:06 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200610 23:30:45.908" endtime="20200610 23:30:45.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:30:45.985" level="INFO">HTTP/1.1 200 OK
Date: Wed, 10 Jun 2020 23:30:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Jun 2020 22:20:06 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200610 23:30:45.984" endtime="20200610 23:30:45.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:30:45.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:30:45.985" endtime="20200610 23:30:45.985"></status>
</kw>
<msg timestamp="20200610 23:30:45.986" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 10 Jun 2020 23:30:45 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Jun 2020 22:20:06 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200610 23:30:45.907" endtime="20200610 23:30:45.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200610 23:30:45.986" endtime="20200610 23:30:45.986"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:30:45.906" endtime="20200610 23:30:45.987" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:30:45.989" endtime="20200610 23:30:45.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:30:45.992" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:44.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:44.055" level="INFO">${output} = 2020-06-10 23:30:46,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:30:47,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:30:45.990" endtime="20200610 23:31:44.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:44.056" level="INFO">2020-06-10 23:30:46,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:30:47,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-10 23:30:47,010 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-10 23:30:48,028 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-10 23:30:48,029 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-10 23:30:48,029 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-10 23:30:48,029 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-10 23:30:48,030 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-10 23:30:48,030 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-10 23:30:48,030 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-10 23:30:48,041 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-10 23:30:48,044 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-10 23:30:48,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-10 23:30:48,087 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-01530, with hadoop as owner.
2020-06-10 23:30:48,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-90955, with hadoop as owner.
2020-06-10 23:30:48,327 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-90153, with hadoop as owner.
2020-06-10 23:30:48,336 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-50584, with hadoop as owner.
2020-06-10 23:30:48,346 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-00804, with hadoop as owner.
2020-06-10 23:30:48,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01530/bucket-0-72610, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,394 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90955/bucket-0-98909, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,405 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90153/bucket-0-69706, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,416 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-50584/bucket-0-05862, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,426 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00804/bucket-0-02141, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,436 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01530/bucket-1-24124, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,447 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90955/bucket-1-30403, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,456 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90153/bucket-1-71464, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-50584/bucket-1-52975, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,475 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00804/bucket-1-06216, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,483 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01530/bucket-2-11379, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90955/bucket-2-36946, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,500 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90153/bucket-2-40386, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-50584/bucket-2-86013, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,520 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00804/bucket-2-94737, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01530/bucket-3-60161, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,541 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90955/bucket-3-78446, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,549 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90153/bucket-3-49294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,559 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-50584/bucket-3-29674, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,567 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00804/bucket-3-52883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,574 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-01530/bucket-4-25556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,581 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-90955/bucket-4-55575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-90153/bucket-4-52775, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,597 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-50584/bucket-4-31405, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:48,607 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00804/bucket-4-26229, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-10 23:30:49,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-10 23:30:49,207 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-10 23:30:50,063 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-10 23:30:51,064 [Thread-5] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-06-10 23:30:52,064 [Thread-5] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-06-10 23:30:53,065 [Thread-5] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-06-10 23:30:54,065 [Thread-5] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-06-10 23:30:55,065 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-06-10 23:30:56,066 [Thread-5] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-06-10 23:30:57,066 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-06-10 23:30:58,067 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-06-10 23:30:59,067 [Thread-5] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-06-10 23:31:00,068 [Thread-5] INFO freon.ProgressBar: Progress: 12.00 % (15 out of 125)
2020-06-10 23:31:01,068 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-10 23:31:02,069 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-10 23:31:03,071 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-10 23:31:04,072 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-10 23:31:05,072 [Thread-5] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-06-10 23:31:06,073 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-10 23:31:07,073 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-10 23:31:08,074 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-10 23:31:09,074 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-10 23:31:10,075 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-10 23:31:11,075 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-10 23:31:12,076 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-10 23:31:13,077 [Thread-5] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-06-10 23:31:14,086 [Thread-5] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-06-10 23:31:15,086 [Thread-5] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-06-10 23:31:16,087 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-10 23:31:17,087 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-10 23:31:18,088 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-06-10 23:31:19,088 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-06-10 23:31:20,088 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-06-10 23:31:21,089 [Thread-5] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-06-10 23:31:22,089 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-10 23:31:23,090 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-10 23:31:24,090 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-10 23:31:25,091 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-10 23:31:26,091 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-10 23:31:27,091 [Thread-5] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-06-10 23:31:28,092 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-10 23:31:29,092 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-10 23:31:30,093 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-10 23:31:31,093 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-10 23:31:32,094 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-10 23:31:33,094 [Thread-5] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-10 23:31:34,095 [Thread-5] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-10 23:31:35,095 [Thread-5] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-06-10 23:31:36,095 [Thread-5] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-10 23:31:37,096 [Thread-5] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-10 23:31:38,096 [Thread-5] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-06-10 23:31:39,097 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,266
Average Time spent in bucket creation: 00:00:00,198
Average Time spent in key creation: 00:00:01,995
Average Time spent in key write: 00:00:00,744
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:56,574
***************************************************</msg>
<status status="PASS" starttime="20200610 23:31:44.055" endtime="20200610 23:31:44.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:44.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:44.057" endtime="20200610 23:31:44.057"></status>
</kw>
<msg timestamp="20200610 23:31:44.057" level="INFO">${result} = 2020-06-10 23:30:46,881 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-10 23:30:47,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200610 23:30:45.989" endtime="20200610 23:31:44.057"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:44.058" endtime="20200610 23:31:44.058"></status>
</kw>
<status status="PASS" starttime="20200610 23:31:44.058" endtime="20200610 23:31:44.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:44.058" endtime="20200610 23:31:44.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200610 23:30:45.988" endtime="20200610 23:31:44.059" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200610 23:30:45.884" endtime="20200610 23:31:44.060"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200610 23:31:44.067" level="INFO">${random} = 50368</msg>
<status status="PASS" starttime="20200610 23:31:44.067" endtime="20200610 23:31:44.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200610 23:31:44.068" level="INFO">${prefix} = 50368</msg>
<status status="PASS" starttime="20200610 23:31:44.067" endtime="20200610 23:31:44.068"></status>
</kw>
<status status="PASS" starttime="20200610 23:31:44.066" endtime="20200610 23:31:44.068"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:44.069" endtime="20200610 23:31:44.069"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:44.072" level="INFO">Running command 'ozone sh volume info o3://om:9862/50368-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:45.799" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:31:45.799" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50368-rpcwoport is not found</msg>
<status status="PASS" starttime="20200610 23:31:44.070" endtime="20200610 23:31:45.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:45.800" level="INFO">VOLUME_NOT_FOUND Volume 50368-rpcwoport is not found</msg>
<status status="PASS" starttime="20200610 23:31:45.800" endtime="20200610 23:31:45.801"></status>
</kw>
<msg timestamp="20200610 23:31:45.801" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50368-rpcwoport is not found</msg>
<status status="PASS" starttime="20200610 23:31:44.069" endtime="20200610 23:31:45.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:45.801" endtime="20200610 23:31:45.801"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:45.804" level="INFO">Running command 'ozone sh volume create o3://om:9862/50368-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:47.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:47.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:31:45.802" endtime="20200610 23:31:47.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:47.580" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:31:47.579" endtime="20200610 23:31:47.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:47.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:47.580" endtime="20200610 23:31:47.580"></status>
</kw>
<msg timestamp="20200610 23:31:47.581" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:31:45.801" endtime="20200610 23:31:47.581"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:47.581" endtime="20200610 23:31:47.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:47.585" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="50368-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:49.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:49.483" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200610 23:31:47.582" endtime="20200610 23:31:49.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:49.484" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:31:49.484" endtime="20200610 23:31:49.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:49.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:49.484" endtime="20200610 23:31:49.485"></status>
</kw>
<msg timestamp="20200610 23:31:49.485" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200610 23:31:47.581" endtime="20200610 23:31:49.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:49.485" endtime="20200610 23:31:49.486"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:49.489" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50368-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:51.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:51.461" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200610 23:31:49.486" endtime="20200610 23:31:51.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:51.462" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:31:51.461" endtime="20200610 23:31:51.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:51.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:51.462" endtime="20200610 23:31:51.463"></status>
</kw>
<msg timestamp="20200610 23:31:51.463" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:31:47.444Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200610 23:31:49.486" endtime="20200610 23:31:51.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:51.463" endtime="20200610 23:31:51.463"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:51.467" level="INFO">Running command 'ozone sh volume update o3://om:9862/50368-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:53.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:53.245" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50368-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:31:47.444Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200610 23:31:51.464" endtime="20200610 23:31:53.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:53.246" level="INFO">{
  "metadata" : { },
  "name" : "50368-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:31:47.444Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200610 23:31:53.246" endtime="20200610 23:31:53.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:53.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:53.247" endtime="20200610 23:31:53.247"></status>
</kw>
<status status="PASS" starttime="20200610 23:31:51.463" endtime="20200610 23:31:53.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:53.251" level="INFO">Running command 'ozone sh volume info o3://om:9862/50368-rpcwoport | jq -r '. | select(.name=="50368-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:55.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:55.132" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:31:53.248" endtime="20200610 23:31:55.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:55.134" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200610 23:31:55.133" endtime="20200610 23:31:55.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:55.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:55.134" endtime="20200610 23:31:55.134"></status>
</kw>
<msg timestamp="20200610 23:31:55.135" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:31:53.247" endtime="20200610 23:31:55.135"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:55.135" endtime="20200610 23:31:55.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:55.139" level="INFO">Running command 'ozone sh bucket create o3://om:9862/50368-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:56.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:56.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:31:55.136" endtime="20200610 23:31:56.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:56.825" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:31:56.825" endtime="20200610 23:31:56.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:56.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:56.826" endtime="20200610 23:31:56.826"></status>
</kw>
<status status="PASS" starttime="20200610 23:31:55.135" endtime="20200610 23:31:56.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:56.830" level="INFO">Running command 'ozone sh bucket info o3://om:9862/50368-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:31:58.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:31:58.674" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200610 23:31:56.827" endtime="20200610 23:31:58.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:31:58.675" level="INFO">DISK</msg>
<status status="PASS" starttime="20200610 23:31:58.674" endtime="20200610 23:31:58.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:31:58.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:31:58.675" endtime="20200610 23:31:58.675"></status>
</kw>
<msg timestamp="20200610 23:31:58.676" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200610 23:31:56.826" endtime="20200610 23:31:58.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200610 23:31:58.676" endtime="20200610 23:31:58.676"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:31:58.679" level="INFO">Running command 'ozone sh bucket list o3://om:9862/50368-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:00.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:00.545" level="INFO">${output} = 50368-rpcwoport</msg>
<status status="PASS" starttime="20200610 23:31:58.677" endtime="20200610 23:32:00.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:00.546" level="INFO">50368-rpcwoport</msg>
<status status="PASS" starttime="20200610 23:32:00.545" endtime="20200610 23:32:00.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:00.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:00.546" endtime="20200610 23:32:00.546"></status>
</kw>
<msg timestamp="20200610 23:32:00.546" level="INFO">${result} = 50368-rpcwoport</msg>
<status status="PASS" starttime="20200610 23:31:58.676" endtime="20200610 23:32:00.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:00.547" endtime="20200610 23:32:00.547"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:00.552" level="INFO">Running command 'ozone sh key put o3://om:9862/50368-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:03.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:03.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:00.549" endtime="20200610 23:32:03.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:03.929" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:03.929" endtime="20200610 23:32:03.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:03.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:03.930" endtime="20200610 23:32:03.930"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:00.548" endtime="20200610 23:32:03.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:03.933" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:03.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:03.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:03.931" endtime="20200610 23:32:03.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:03.936" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:03.935" endtime="20200610 23:32:03.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:03.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:03.936" endtime="20200610 23:32:03.936"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:03.930" endtime="20200610 23:32:03.937"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:03.939" level="INFO">Running command 'ozone sh key get o3://om:9862/50368-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:06.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:06.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:03.937" endtime="20200610 23:32:06.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:06.990" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:06.989" endtime="20200610 23:32:06.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:06.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:06.990" endtime="20200610 23:32:06.990"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:03.937" endtime="20200610 23:32:06.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:06.993" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:06.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:06.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:06.991" endtime="20200610 23:32:06.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:06.997" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:06.997" endtime="20200610 23:32:06.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:06.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:06.997" endtime="20200610 23:32:06.998"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:06.991" endtime="20200610 23:32:06.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:07.000" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/50368-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:10.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:10.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:06.999" endtime="20200610 23:32:10.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:10.358" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:10.358" endtime="20200610 23:32:10.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:10.358" endtime="20200610 23:32:10.359"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:06.998" endtime="20200610 23:32:10.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:10.362" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:10.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:10.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:10.360" endtime="20200610 23:32:10.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:10.365" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:10.364" endtime="20200610 23:32:10.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:10.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:10.365" endtime="20200610 23:32:10.366"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:10.359" endtime="20200610 23:32:10.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:10.369" level="INFO">Running command 'ozone sh key get o3://om:9862/50368-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:13.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:13.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:10.367" endtime="20200610 23:32:13.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:13.583" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:13.582" endtime="20200610 23:32:13.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:13.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:13.583" endtime="20200610 23:32:13.584"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:10.366" endtime="20200610 23:32:13.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:13.587" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:13.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:13.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:13.584" endtime="20200610 23:32:13.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:13.590" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:13.589" endtime="20200610 23:32:13.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:13.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:13.590" endtime="20200610 23:32:13.590"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:13.584" endtime="20200610 23:32:13.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:13.594" level="INFO">Running command 'ozone sh key info o3://om:9862/50368-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:15.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:15.580" level="INFO">${output} = {
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:08.624Z",
  "modificationTime": "2020-06-10T23:32:09.990Z",...</msg>
<status status="PASS" starttime="20200610 23:32:13.592" endtime="20200610 23:32:15.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:15.581" level="INFO">{
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:08.624Z",
  "modificationTime": "2020-06-10T23:32:09.990Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322297274171520,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:32:15.580" endtime="20200610 23:32:15.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:15.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:15.581" endtime="20200610 23:32:15.582"></status>
</kw>
<msg timestamp="20200610 23:32:15.582" level="INFO">${result} = {
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:08.624Z",
  "modificationTime": "2020-06-10T23:32:09.990Z",...</msg>
<status status="PASS" starttime="20200610 23:32:13.591" endtime="20200610 23:32:15.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:15.582" endtime="20200610 23:32:15.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:15.586" level="INFO">Running command 'ozone sh key delete o3://om:9862/50368-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:17.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:17.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:15.583" endtime="20200610 23:32:17.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:17.303" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:17.302" endtime="20200610 23:32:17.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:17.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:17.303" endtime="20200610 23:32:17.304"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:15.582" endtime="20200610 23:32:17.304"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:17.308" level="INFO">Running command 'ozone sh key cp o3://om:9862/50368-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:20.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:20.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:17.305" endtime="20200610 23:32:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:20.893" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:20.892" endtime="20200610 23:32:20.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:20.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:20.893" endtime="20200610 23:32:20.894"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:17.304" endtime="20200610 23:32:20.894"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:20.897" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:20.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:20.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:20.895" endtime="20200610 23:32:20.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:20.900" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:20.899" endtime="20200610 23:32:20.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:20.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:20.900" endtime="20200610 23:32:20.901"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:20.894" endtime="20200610 23:32:20.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:20.905" level="INFO">Running command 'ozone sh key get o3://om:9862/50368-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:24.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:24.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:20.902" endtime="20200610 23:32:24.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:24.118" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:24.118" endtime="20200610 23:32:24.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:24.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:24.119" endtime="20200610 23:32:24.119"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:20.901" endtime="20200610 23:32:24.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:24.123" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:24.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:24.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:24.120" endtime="20200610 23:32:24.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:24.127" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:24.126" endtime="20200610 23:32:24.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:24.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:24.127" endtime="20200610 23:32:24.128"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:24.120" endtime="20200610 23:32:24.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:24.131" level="INFO">Running command 'ozone sh key delete o3://om:9862/50368-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:25.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:25.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:24.129" endtime="20200610 23:32:25.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:25.882" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:25.881" endtime="20200610 23:32:25.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:25.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:25.882" endtime="20200610 23:32:25.883"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:24.128" endtime="20200610 23:32:25.883"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:25.887" level="INFO">Running command 'ozone sh key get o3://om:9862/50368-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:27.548" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:32:27.548" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:32:25.884" endtime="20200610 23:32:27.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:27.550" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:32:27.549" endtime="20200610 23:32:27.550"></status>
</kw>
<msg timestamp="20200610 23:32:27.550" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:32:25.883" endtime="20200610 23:32:27.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:27.550" endtime="20200610 23:32:27.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:27.555" level="INFO">Running command 'ozone sh key get --force o3://om:9862/50368-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:30.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:30.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:27.552" endtime="20200610 23:32:30.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:30.770" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:30.769" endtime="20200610 23:32:30.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:30.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:30.770" endtime="20200610 23:32:30.770"></status>
</kw>
<msg timestamp="20200610 23:32:30.770" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:32:27.551" endtime="20200610 23:32:30.770"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:30.771" endtime="20200610 23:32:30.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:30.775" level="INFO">Running command 'ozone sh key info o3://om:9862/50368-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:32.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:32.836" level="INFO">${output} = {
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:02.161Z",
  "modificationTime": "2020-06-10T23:32:03.473Z",
  "re...</msg>
<status status="PASS" starttime="20200610 23:32:30.772" endtime="20200610 23:32:32.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:32.837" level="INFO">{
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:02.161Z",
  "modificationTime": "2020-06-10T23:32:03.473Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322296850481280,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:32:32.836" endtime="20200610 23:32:32.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:32.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:32.837" endtime="20200610 23:32:32.838"></status>
</kw>
<msg timestamp="20200610 23:32:32.838" level="INFO">${result} = {
  "volumeName": "50368-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:32:02.161Z",
  "modificationTime": "2020-06-10T23:32:03.473Z",
  "re...</msg>
<status status="PASS" starttime="20200610 23:32:30.771" endtime="20200610 23:32:32.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:32.838" endtime="20200610 23:32:32.838"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:32.841" level="INFO">Running command 'ozone sh key list o3://om:9862/50368-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:34.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:34.684" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200610 23:32:32.839" endtime="20200610 23:32:34.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:34.685" level="INFO">key1</msg>
<status status="PASS" starttime="20200610 23:32:34.685" endtime="20200610 23:32:34.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:34.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:34.685" endtime="20200610 23:32:34.686"></status>
</kw>
<msg timestamp="20200610 23:32:34.686" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200610 23:32:32.838" endtime="20200610 23:32:34.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:34.686" endtime="20200610 23:32:34.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:34.689" level="INFO">Running command 'ozone sh key rename o3://om:9862/50368-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:36.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:36.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:34.687" endtime="20200610 23:32:36.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:36.793" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:36.792" endtime="20200610 23:32:36.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:36.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:36.793" endtime="20200610 23:32:36.793"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:34.687" endtime="20200610 23:32:36.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:36.797" level="INFO">Running command 'ozone sh key list o3://om:9862/50368-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:38.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:38.661" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200610 23:32:36.794" endtime="20200610 23:32:38.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:38.662" level="INFO">key2</msg>
<status status="PASS" starttime="20200610 23:32:38.662" endtime="20200610 23:32:38.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:38.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:38.663" endtime="20200610 23:32:38.663"></status>
</kw>
<msg timestamp="20200610 23:32:38.663" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200610 23:32:36.794" endtime="20200610 23:32:38.663"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:38.664" endtime="20200610 23:32:38.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:38.668" level="INFO">Running command 'ozone sh key delete o3://om:9862/50368-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:40.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:40.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:38.664" endtime="20200610 23:32:40.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:40.298" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:40.298" endtime="20200610 23:32:40.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:40.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:40.299" endtime="20200610 23:32:40.299"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:38.664" endtime="20200610 23:32:40.300"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:00.548" endtime="20200610 23:32:40.300"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:00.547" endtime="20200610 23:32:40.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:40.304" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/50368-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:41.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:41.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:40.301" endtime="20200610 23:32:41.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:41.891" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:41.890" endtime="20200610 23:32:41.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:41.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:41.891" endtime="20200610 23:32:41.891"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:40.300" endtime="20200610 23:32:41.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:41.894" level="INFO">Running command 'ozone sh volume delete o3://om:9862/50368-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:43.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:43.731" level="INFO">${output} = Volume 50368-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200610 23:32:41.892" endtime="20200610 23:32:43.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:43.732" level="INFO">Volume 50368-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200610 23:32:43.731" endtime="20200610 23:32:43.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:43.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:43.732" endtime="20200610 23:32:43.733"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:41.892" endtime="20200610 23:32:43.733"></status>
</kw>
<status status="PASS" starttime="20200610 23:31:44.069" endtime="20200610 23:32:43.733"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:31:44.068" endtime="20200610 23:32:43.733" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:43.735" endtime="20200610 23:32:43.735"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:43.738" level="INFO">Running command 'ozone sh volume create o3://om:9862/50368-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:45.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:45.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:43.736" endtime="20200610 23:32:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:45.403" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:45.403" endtime="20200610 23:32:45.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:45.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:45.404" endtime="20200610 23:32:45.404"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:43.736" endtime="20200610 23:32:45.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:45.407" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50368-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:47.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:47.214" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:45.405" endtime="20200610 23:32:47.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:47.215" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:47.214" endtime="20200610 23:32:47.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:47.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:47.215" endtime="20200610 23:32:47.216"></status>
</kw>
<msg timestamp="20200610 23:32:47.216" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:45.404" endtime="20200610 23:32:47.216"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:47.216" endtime="20200610 23:32:47.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:47.221" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/50368-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:48.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:48.779" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200610 23:32:47.218" endtime="20200610 23:32:48.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:48.780" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200610 23:32:48.779" endtime="20200610 23:32:48.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:48.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:48.780" endtime="20200610 23:32:48.781"></status>
</kw>
<msg timestamp="20200610 23:32:48.781" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200610 23:32:47.217" endtime="20200610 23:32:48.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:48.785" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50368-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:50.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:50.786" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:48.782" endtime="20200610 23:32:50.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:50.787" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:50.786" endtime="20200610 23:32:50.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:50.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:50.787" endtime="20200610 23:32:50.787"></status>
</kw>
<msg timestamp="20200610 23:32:50.787" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:48.781" endtime="20200610 23:32:50.788"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:50.788" endtime="20200610 23:32:50.789"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:50.791" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/50368-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:52.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:52.540" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200610 23:32:50.789" endtime="20200610 23:32:52.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:52.541" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200610 23:32:52.540" endtime="20200610 23:32:52.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:52.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:52.541" endtime="20200610 23:32:52.542"></status>
</kw>
<msg timestamp="20200610 23:32:52.542" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200610 23:32:50.789" endtime="20200610 23:32:52.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:52.547" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50368-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:54.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:54.369" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:52.543" endtime="20200610 23:32:54.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:54.371" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:54.370" endtime="20200610 23:32:54.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:54.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:54.371" endtime="20200610 23:32:54.372"></status>
</kw>
<msg timestamp="20200610 23:32:54.372" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:52.543" endtime="20200610 23:32:54.372"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:54.372" endtime="20200610 23:32:54.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:54.377" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/50368-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:56.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:56.203" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:32:54.374" endtime="20200610 23:32:56.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:56.204" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:32:56.203" endtime="20200610 23:32:56.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:56.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:56.204" endtime="20200610 23:32:56.205"></status>
</kw>
<msg timestamp="20200610 23:32:56.205" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:32:54.374" endtime="20200610 23:32:56.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:56.209" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50368-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:57.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:57.976" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200610 23:32:56.206" endtime="20200610 23:32:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:57.977" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:32:57.976" endtime="20200610 23:32:57.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:57.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:57.977" endtime="20200610 23:32:57.978"></status>
</kw>
<msg timestamp="20200610 23:32:57.978" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200610 23:32:56.205" endtime="20200610 23:32:57.978"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:57.978" endtime="20200610 23:32:57.979"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:57.979" endtime="20200610 23:32:57.980"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:43.735" endtime="20200610 23:32:57.980"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:32:43.734" endtime="20200610 23:32:57.980" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:32:57.981" endtime="20200610 23:32:57.982"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:57.986" level="INFO">Running command 'ozone sh bucket create o3://om:9862/50368-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:32:59.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:32:59.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:32:57.984" endtime="20200610 23:32:59.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:32:59.868" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:32:59.868" endtime="20200610 23:32:59.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:32:59.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:32:59.869" endtime="20200610 23:32:59.869"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:57.983" endtime="20200610 23:32:59.869"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:32:59.873" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50368-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:01.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:01.693" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:59.870" endtime="20200610 23:33:01.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:01.694" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:01.694" endtime="20200610 23:33:01.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:01.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:01.695" endtime="20200610 23:33:01.695"></status>
</kw>
<msg timestamp="20200610 23:33:01.695" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:32:59.869" endtime="20200610 23:33:01.695"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:01.695" endtime="20200610 23:33:01.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:01.698" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/50368-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:03.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:03.421" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200610 23:33:01.697" endtime="20200610 23:33:03.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:03.422" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200610 23:33:03.421" endtime="20200610 23:33:03.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:03.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:03.422" endtime="20200610 23:33:03.423"></status>
</kw>
<msg timestamp="20200610 23:33:03.423" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200610 23:33:01.696" endtime="20200610 23:33:03.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:03.427" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50368-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:05.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:05.278" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:03.424" endtime="20200610 23:33:05.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:05.280" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:05.279" endtime="20200610 23:33:05.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:05.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:05.280" endtime="20200610 23:33:05.280"></status>
</kw>
<msg timestamp="20200610 23:33:05.281" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:03.423" endtime="20200610 23:33:05.281"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:05.281" endtime="20200610 23:33:05.282"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:05.284" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/50368-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:07.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:07.049" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:05.282" endtime="20200610 23:33:07.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:07.050" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:07.049" endtime="20200610 23:33:07.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:07.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:07.050" endtime="20200610 23:33:07.050"></status>
</kw>
<msg timestamp="20200610 23:33:07.051" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:05.282" endtime="20200610 23:33:07.051"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:07.055" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50368-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:08.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:08.809" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:07.051" endtime="20200610 23:33:08.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:08.810" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:08.809" endtime="20200610 23:33:08.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:08.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:08.810" endtime="20200610 23:33:08.811"></status>
</kw>
<msg timestamp="20200610 23:33:08.811" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:07.051" endtime="20200610 23:33:08.811"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:08.812" endtime="20200610 23:33:08.813"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:08.816" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/50368-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:10.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:10.550" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:08.813" endtime="20200610 23:33:10.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:10.551" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:10.551" endtime="20200610 23:33:10.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:10.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:10.552" endtime="20200610 23:33:10.552"></status>
</kw>
<msg timestamp="20200610 23:33:10.552" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:08.813" endtime="20200610 23:33:10.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:10.555" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50368-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:12.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:12.393" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200610 23:33:10.553" endtime="20200610 23:33:12.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:12.394" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:12.393" endtime="20200610 23:33:12.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:12.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:12.394" endtime="20200610 23:33:12.395"></status>
</kw>
<msg timestamp="20200610 23:33:12.395" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200610 23:33:10.553" endtime="20200610 23:33:12.395"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:12.395" endtime="20200610 23:33:12.396"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:12.396" endtime="20200610 23:33:12.396"></status>
</kw>
<status status="PASS" starttime="20200610 23:32:57.982" endtime="20200610 23:33:12.396"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:32:57.981" endtime="20200610 23:33:12.397" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:12.398" endtime="20200610 23:33:12.398"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:12.403" level="INFO">Running command 'ozone sh key put o3://om:9862/50368-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:15.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:15.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:12.399" endtime="20200610 23:33:15.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:15.929" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:15.928" endtime="20200610 23:33:15.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:15.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:15.929" endtime="20200610 23:33:15.929"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:12.399" endtime="20200610 23:33:15.929"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:15.932" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50368-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:17.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:17.644" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:15.930" endtime="20200610 23:33:17.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:17.645" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:17.644" endtime="20200610 23:33:17.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:17.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:17.645" endtime="20200610 23:33:17.646"></status>
</kw>
<msg timestamp="20200610 23:33:17.647" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:15.930" endtime="20200610 23:33:17.647"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:17.647" endtime="20200610 23:33:17.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:17.651" level="INFO">Running command 'ozone sh key addacl o3://om:9862/50368-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:19.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:19.393" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200610 23:33:17.649" endtime="20200610 23:33:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:19.394" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200610 23:33:19.394" endtime="20200610 23:33:19.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:19.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:19.395" endtime="20200610 23:33:19.395"></status>
</kw>
<msg timestamp="20200610 23:33:19.395" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200610 23:33:17.648" endtime="20200610 23:33:19.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:19.399" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50368-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:21.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:21.361" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:19.396" endtime="20200610 23:33:21.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:21.362" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:21.361" endtime="20200610 23:33:21.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:21.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:21.362" endtime="20200610 23:33:21.363"></status>
</kw>
<msg timestamp="20200610 23:33:21.363" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:19.396" endtime="20200610 23:33:21.363"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:21.363" endtime="20200610 23:33:21.364"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:21.368" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/50368-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:23.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:23.153" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:21.365" endtime="20200610 23:33:23.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:23.155" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:23.154" endtime="20200610 23:33:23.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:23.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:23.155" endtime="20200610 23:33:23.155"></status>
</kw>
<msg timestamp="20200610 23:33:23.155" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200610 23:33:21.364" endtime="20200610 23:33:23.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:23.159" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50368-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:24.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:24.969" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:23.156" endtime="20200610 23:33:24.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:24.970" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:24.969" endtime="20200610 23:33:24.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:24.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:24.970" endtime="20200610 23:33:24.970"></status>
</kw>
<msg timestamp="20200610 23:33:24.971" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200610 23:33:23.156" endtime="20200610 23:33:24.971"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:24.971" endtime="20200610 23:33:24.971"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:24.976" level="INFO">Running command 'ozone sh key setacl o3://om:9862/50368-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:26.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:26.629" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:24.972" endtime="20200610 23:33:26.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:26.630" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:26.629" endtime="20200610 23:33:26.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:26.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:26.630" endtime="20200610 23:33:26.631"></status>
</kw>
<msg timestamp="20200610 23:33:26.631" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200610 23:33:24.972" endtime="20200610 23:33:26.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:26.634" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50368-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:28.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:28.508" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200610 23:33:26.632" endtime="20200610 23:33:28.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:28.510" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200610 23:33:28.509" endtime="20200610 23:33:28.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:28.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:28.510" endtime="20200610 23:33:28.510"></status>
</kw>
<msg timestamp="20200610 23:33:28.511" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200610 23:33:26.631" endtime="20200610 23:33:28.511"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:28.511" endtime="20200610 23:33:28.511"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:28.512" endtime="20200610 23:33:28.512"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:12.399" endtime="20200610 23:33:28.512"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:33:12.397" endtime="20200610 23:33:28.513" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:28.515" endtime="20200610 23:33:28.515"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:28.519" level="INFO">Running command 'ozone sh volume info o3:///50368-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:30.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:33:30.555" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50368-rpcwport is not found</msg>
<status status="PASS" starttime="20200610 23:33:28.517" endtime="20200610 23:33:30.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:30.556" level="INFO">VOLUME_NOT_FOUND Volume 50368-rpcwport is not found</msg>
<status status="PASS" starttime="20200610 23:33:30.555" endtime="20200610 23:33:30.556"></status>
</kw>
<msg timestamp="20200610 23:33:30.556" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50368-rpcwport is not found</msg>
<status status="PASS" starttime="20200610 23:33:28.516" endtime="20200610 23:33:30.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:30.556" endtime="20200610 23:33:30.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:30.560" level="INFO">Running command 'ozone sh volume create o3:///50368-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:32.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:32.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:30.557" endtime="20200610 23:33:32.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:32.311" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:32.310" endtime="20200610 23:33:32.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:32.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:32.311" endtime="20200610 23:33:32.312"></status>
</kw>
<msg timestamp="20200610 23:33:32.312" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:33:30.557" endtime="20200610 23:33:32.312"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:32.312" endtime="20200610 23:33:32.312"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:32.316" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="50368-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:34.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:34.208" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200610 23:33:32.313" endtime="20200610 23:33:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:34.209" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:33:34.208" endtime="20200610 23:33:34.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:34.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:34.209" endtime="20200610 23:33:34.210"></status>
</kw>
<msg timestamp="20200610 23:33:34.210" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200610 23:33:32.313" endtime="20200610 23:33:34.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:34.210" endtime="20200610 23:33:34.210"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:34.213" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50368-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:36.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:36.196" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200610 23:33:34.211" endtime="20200610 23:33:36.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:36.197" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:33:36.196" endtime="20200610 23:33:36.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:36.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:36.197" endtime="20200610 23:33:36.198"></status>
</kw>
<msg timestamp="20200610 23:33:36.198" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:33:32.183Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200610 23:33:34.211" endtime="20200610 23:33:36.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:36.198" endtime="20200610 23:33:36.198"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:36.202" level="INFO">Running command 'ozone sh volume update o3:///50368-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:38.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:38.025" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50368-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:33:32.183Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200610 23:33:36.199" endtime="20200610 23:33:38.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:38.026" level="INFO">{
  "metadata" : { },
  "name" : "50368-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:33:32.183Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200610 23:33:38.025" endtime="20200610 23:33:38.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:38.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:38.026" endtime="20200610 23:33:38.026"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:36.199" endtime="20200610 23:33:38.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:38.031" level="INFO">Running command 'ozone sh volume info o3:///50368-rpcwport | jq -r '. | select(.name=="50368-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:39.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:39.724" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:33:38.028" endtime="20200610 23:33:39.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:39.726" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200610 23:33:39.725" endtime="20200610 23:33:39.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:39.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:39.726" endtime="20200610 23:33:39.726"></status>
</kw>
<msg timestamp="20200610 23:33:39.727" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:33:38.027" endtime="20200610 23:33:39.727"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:39.727" endtime="20200610 23:33:39.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:39.730" level="INFO">Running command 'ozone sh bucket create o3:///50368-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:41.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:41.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:39.728" endtime="20200610 23:33:41.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:41.449" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:41.448" endtime="20200610 23:33:41.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:41.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:41.449" endtime="20200610 23:33:41.449"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:39.727" endtime="20200610 23:33:41.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:41.452" level="INFO">Running command 'ozone sh bucket info o3:///50368-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:43.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:43.230" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200610 23:33:41.450" endtime="20200610 23:33:43.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:43.231" level="INFO">DISK</msg>
<status status="PASS" starttime="20200610 23:33:43.231" endtime="20200610 23:33:43.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:43.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:43.232" endtime="20200610 23:33:43.232"></status>
</kw>
<msg timestamp="20200610 23:33:43.232" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200610 23:33:41.450" endtime="20200610 23:33:43.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:43.233" endtime="20200610 23:33:43.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:43.236" level="INFO">Running command 'ozone sh bucket list o3:///50368-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:45.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:45.092" level="INFO">${output} = 50368-rpcwport</msg>
<status status="PASS" starttime="20200610 23:33:43.234" endtime="20200610 23:33:45.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:45.093" level="INFO">50368-rpcwport</msg>
<status status="PASS" starttime="20200610 23:33:45.092" endtime="20200610 23:33:45.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:45.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:45.093" endtime="20200610 23:33:45.093"></status>
</kw>
<msg timestamp="20200610 23:33:45.094" level="INFO">${result} = 50368-rpcwport</msg>
<status status="PASS" starttime="20200610 23:33:43.233" endtime="20200610 23:33:45.094"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200610 23:33:45.094" endtime="20200610 23:33:45.094"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:45.099" level="INFO">Running command 'ozone sh key put o3:///50368-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:48.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:48.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:45.095" endtime="20200610 23:33:48.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:48.596" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:48.595" endtime="20200610 23:33:48.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:48.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:48.596" endtime="20200610 23:33:48.597"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:45.095" endtime="20200610 23:33:48.597"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:48.600" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:48.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:48.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:48.597" endtime="20200610 23:33:48.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:48.603" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:48.602" endtime="20200610 23:33:48.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:48.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:48.603" endtime="20200610 23:33:48.604"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:48.597" endtime="20200610 23:33:48.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:48.607" level="INFO">Running command 'ozone sh key get o3:///50368-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:51.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:51.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:48.605" endtime="20200610 23:33:51.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:51.968" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:51.967" endtime="20200610 23:33:51.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:51.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:51.968" endtime="20200610 23:33:51.969"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:48.604" endtime="20200610 23:33:51.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:51.972" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:51.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:51.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:51.970" endtime="20200610 23:33:51.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:51.975" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:51.974" endtime="20200610 23:33:51.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:51.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:51.975" endtime="20200610 23:33:51.975"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:51.969" endtime="20200610 23:33:51.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:51.978" level="INFO">Running command 'ozone sh key put -t RATIS o3:///50368-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:55.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:55.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:51.976" endtime="20200610 23:33:55.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:55.140" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:55.140" endtime="20200610 23:33:55.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:55.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:55.141" endtime="20200610 23:33:55.141"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:51.976" endtime="20200610 23:33:55.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:55.144" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:55.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:55.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:55.142" endtime="20200610 23:33:55.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:55.147" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:55.147" endtime="20200610 23:33:55.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:55.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:55.147" endtime="20200610 23:33:55.148"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:55.141" endtime="20200610 23:33:55.148"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:55.150" level="INFO">Running command 'ozone sh key get o3:///50368-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:58.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:58.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:55.149" endtime="20200610 23:33:58.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:58.175" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:58.174" endtime="20200610 23:33:58.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:58.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:58.175" endtime="20200610 23:33:58.176"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:55.148" endtime="20200610 23:33:58.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:58.179" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:33:58.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:33:58.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:33:58.176" endtime="20200610 23:33:58.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:33:58.182" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:33:58.181" endtime="20200610 23:33:58.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:33:58.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:33:58.182" endtime="20200610 23:33:58.182"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:58.176" endtime="20200610 23:33:58.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:33:58.187" level="INFO">Running command 'ozone sh key info o3:///50368-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:00.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:00.135" level="INFO">${output} = {
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:53.510Z",
  "modificationTime": "2020-06-10T23:33:54.784Z",
...</msg>
<status status="PASS" starttime="20200610 23:33:58.183" endtime="20200610 23:34:00.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:00.136" level="INFO">{
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:53.510Z",
  "modificationTime": "2020-06-10T23:33:54.784Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322304148111490,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:34:00.135" endtime="20200610 23:34:00.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:00.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:00.136" endtime="20200610 23:34:00.136"></status>
</kw>
<msg timestamp="20200610 23:34:00.136" level="INFO">${result} = {
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:53.510Z",
  "modificationTime": "2020-06-10T23:33:54.784Z",
...</msg>
<status status="PASS" starttime="20200610 23:33:58.183" endtime="20200610 23:34:00.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:00.137" endtime="20200610 23:34:00.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:00.140" level="INFO">Running command 'ozone sh key delete o3:///50368-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:01.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:01.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:00.138" endtime="20200610 23:34:01.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:01.892" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:01.891" endtime="20200610 23:34:01.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:01.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:01.892" endtime="20200610 23:34:01.892"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:00.137" endtime="20200610 23:34:01.893"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:01.896" level="INFO">Running command 'ozone sh key cp o3:///50368-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:05.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:05.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:01.893" endtime="20200610 23:34:05.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:05.370" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:05.369" endtime="20200610 23:34:05.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:05.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:05.370" endtime="20200610 23:34:05.370"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:01.893" endtime="20200610 23:34:05.370"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:05.374" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:05.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:05.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:05.371" endtime="20200610 23:34:05.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:05.376" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:05.376" endtime="20200610 23:34:05.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:05.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:05.377" endtime="20200610 23:34:05.377"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:05.371" endtime="20200610 23:34:05.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:05.380" level="INFO">Running command 'ozone sh key get o3:///50368-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:08.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:08.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:05.378" endtime="20200610 23:34:08.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:08.599" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:08.598" endtime="20200610 23:34:08.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:08.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:08.599" endtime="20200610 23:34:08.599"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:05.377" endtime="20200610 23:34:08.599"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:08.602" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:08.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:08.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:08.600" endtime="20200610 23:34:08.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:08.605" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:08.605" endtime="20200610 23:34:08.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:08.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:08.605" endtime="20200610 23:34:08.606"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:08.600" endtime="20200610 23:34:08.606"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:08.608" level="INFO">Running command 'ozone sh key delete o3:///50368-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:10.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:10.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:08.607" endtime="20200610 23:34:10.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:10.351" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:10.350" endtime="20200610 23:34:10.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:10.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:10.351" endtime="20200610 23:34:10.352"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:08.606" endtime="20200610 23:34:10.352"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:10.356" level="INFO">Running command 'ozone sh key get o3:///50368-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:12.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:34:12.089" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:34:10.353" endtime="20200610 23:34:12.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:12.090" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:34:12.089" endtime="20200610 23:34:12.090"></status>
</kw>
<msg timestamp="20200610 23:34:12.090" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:34:10.352" endtime="20200610 23:34:12.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:12.090" endtime="20200610 23:34:12.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:12.094" level="INFO">Running command 'ozone sh key get --force o3:///50368-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:15.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:15.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:12.091" endtime="20200610 23:34:15.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:15.438" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:15.437" endtime="20200610 23:34:15.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:15.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:15.438" endtime="20200610 23:34:15.439"></status>
</kw>
<msg timestamp="20200610 23:34:15.439" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:34:12.091" endtime="20200610 23:34:15.439"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:15.439" endtime="20200610 23:34:15.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:15.442" level="INFO">Running command 'ozone sh key info o3:///50368-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:17.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:17.225" level="INFO">${output} = {
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:46.770Z",
  "modificationTime": "2020-06-10T23:33:48.136Z",
  "rep...</msg>
<status status="PASS" starttime="20200610 23:34:15.440" endtime="20200610 23:34:17.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:17.226" level="INFO">{
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:46.770Z",
  "modificationTime": "2020-06-10T23:33:48.136Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322303706333310,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:34:17.225" endtime="20200610 23:34:17.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:17.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:17.226" endtime="20200610 23:34:17.227"></status>
</kw>
<msg timestamp="20200610 23:34:17.227" level="INFO">${result} = {
  "volumeName": "50368-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:33:46.770Z",
  "modificationTime": "2020-06-10T23:33:48.136Z",
  "rep...</msg>
<status status="PASS" starttime="20200610 23:34:15.439" endtime="20200610 23:34:17.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:17.227" endtime="20200610 23:34:17.228"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:17.230" level="INFO">Running command 'ozone sh key list o3:///50368-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:19.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:19.016" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200610 23:34:17.228" endtime="20200610 23:34:19.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:19.017" level="INFO">key1</msg>
<status status="PASS" starttime="20200610 23:34:19.017" endtime="20200610 23:34:19.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:19.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:19.018" endtime="20200610 23:34:19.018"></status>
</kw>
<msg timestamp="20200610 23:34:19.018" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200610 23:34:17.228" endtime="20200610 23:34:19.019"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:19.019" endtime="20200610 23:34:19.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:19.022" level="INFO">Running command 'ozone sh key rename o3:///50368-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:20.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:20.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:19.020" endtime="20200610 23:34:20.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:20.791" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:20.791" endtime="20200610 23:34:20.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:20.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:20.792" endtime="20200610 23:34:20.792"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:19.019" endtime="20200610 23:34:20.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:20.795" level="INFO">Running command 'ozone sh key list o3:///50368-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:22.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:22.705" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200610 23:34:20.793" endtime="20200610 23:34:22.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:22.706" level="INFO">key2</msg>
<status status="PASS" starttime="20200610 23:34:22.706" endtime="20200610 23:34:22.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:22.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:22.706" endtime="20200610 23:34:22.707"></status>
</kw>
<msg timestamp="20200610 23:34:22.707" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200610 23:34:20.793" endtime="20200610 23:34:22.707"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:22.707" endtime="20200610 23:34:22.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:22.711" level="INFO">Running command 'ozone sh key delete o3:///50368-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:24.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:24.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:22.709" endtime="20200610 23:34:24.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:24.382" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:24.382" endtime="20200610 23:34:24.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:24.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:24.383" endtime="20200610 23:34:24.383"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:22.708" endtime="20200610 23:34:24.383"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:45.095" endtime="20200610 23:34:24.383"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:45.094" endtime="20200610 23:34:24.383"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:24.386" level="INFO">Running command 'ozone sh bucket delete o3:///50368-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:26.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:26.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:24.384" endtime="20200610 23:34:26.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:26.090" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:26.090" endtime="20200610 23:34:26.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:26.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:26.091" endtime="20200610 23:34:26.091"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:24.384" endtime="20200610 23:34:26.091"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:26.095" level="INFO">Running command 'ozone sh volume delete o3:///50368-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:27.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:27.738" level="INFO">${output} = Volume 50368-rpcwport is deleted</msg>
<status status="PASS" starttime="20200610 23:34:26.092" endtime="20200610 23:34:27.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:27.739" level="INFO">Volume 50368-rpcwport is deleted</msg>
<status status="PASS" starttime="20200610 23:34:27.738" endtime="20200610 23:34:27.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:27.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:27.739" endtime="20200610 23:34:27.739"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:26.092" endtime="20200610 23:34:27.740"></status>
</kw>
<status status="PASS" starttime="20200610 23:33:28.515" endtime="20200610 23:34:27.740"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:33:28.514" endtime="20200610 23:34:27.740" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:27.741" endtime="20200610 23:34:27.741"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:27.746" level="INFO">Running command 'ozone sh volume info /50368-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:29.375" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:34:29.376" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50368-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200610 23:34:27.743" endtime="20200610 23:34:29.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:29.377" level="INFO">VOLUME_NOT_FOUND Volume 50368-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200610 23:34:29.376" endtime="20200610 23:34:29.377"></status>
</kw>
<msg timestamp="20200610 23:34:29.377" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50368-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200610 23:34:27.742" endtime="20200610 23:34:29.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:29.377" endtime="20200610 23:34:29.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:29.381" level="INFO">Running command 'ozone sh volume create /50368-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:31.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:31.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:29.378" endtime="20200610 23:34:31.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:31.134" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:31.133" endtime="20200610 23:34:31.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:31.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:31.134" endtime="20200610 23:34:31.134"></status>
</kw>
<msg timestamp="20200610 23:34:31.134" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:34:29.377" endtime="20200610 23:34:31.135"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:31.135" endtime="20200610 23:34:31.135"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:31.139" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="50368-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:32.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:32.898" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200610 23:34:31.136" endtime="20200610 23:34:32.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:32.900" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:34:32.899" endtime="20200610 23:34:32.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:32.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:32.900" endtime="20200610 23:34:32.900"></status>
</kw>
<msg timestamp="20200610 23:34:32.901" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200610 23:34:31.135" endtime="20200610 23:34:32.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:32.901" endtime="20200610 23:34:32.901"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:32.905" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50368-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:34.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:34.597" level="INFO">${output} = {
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200610 23:34:32.902" endtime="20200610 23:34:34.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:34.598" level="INFO">{
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200610 23:34:34.598" endtime="20200610 23:34:34.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:34.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:34.598" endtime="20200610 23:34:34.599"></status>
</kw>
<msg timestamp="20200610 23:34:34.599" level="INFO">${result} = {
  "metadata": {},
  "name": "50368-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-10T23:34:31.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200610 23:34:32.901" endtime="20200610 23:34:34.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:34.599" endtime="20200610 23:34:34.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:34.602" level="INFO">Running command 'ozone sh volume update /50368-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:36.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:36.602" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50368-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:34:31.006Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200610 23:34:34.600" endtime="20200610 23:34:36.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:36.603" level="INFO">{
  "metadata" : { },
  "name" : "50368-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-10T23:34:31.006Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200610 23:34:36.602" endtime="20200610 23:34:36.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:36.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:36.603" endtime="20200610 23:34:36.604"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:34.600" endtime="20200610 23:34:36.604"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:36.608" level="INFO">Running command 'ozone sh volume info /50368-rpcwoscheme | jq -r '. | select(.name=="50368-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:38.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:38.523" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:34:36.605" endtime="20200610 23:34:38.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:38.524" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200610 23:34:38.524" endtime="20200610 23:34:38.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:38.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:38.524" endtime="20200610 23:34:38.525"></status>
</kw>
<msg timestamp="20200610 23:34:38.525" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200610 23:34:36.604" endtime="20200610 23:34:38.525"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:38.525" endtime="20200610 23:34:38.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:38.528" level="INFO">Running command 'ozone sh bucket create /50368-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:40.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:40.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:38.526" endtime="20200610 23:34:40.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:40.295" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:40.295" endtime="20200610 23:34:40.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:40.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:40.295" endtime="20200610 23:34:40.296"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:38.526" endtime="20200610 23:34:40.296"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:40.300" level="INFO">Running command 'ozone sh bucket info /50368-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:42.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:42.203" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200610 23:34:40.297" endtime="20200610 23:34:42.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:42.204" level="INFO">DISK</msg>
<status status="PASS" starttime="20200610 23:34:42.203" endtime="20200610 23:34:42.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:42.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:42.204" endtime="20200610 23:34:42.205"></status>
</kw>
<msg timestamp="20200610 23:34:42.205" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200610 23:34:40.296" endtime="20200610 23:34:42.205"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:42.205" endtime="20200610 23:34:42.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:42.209" level="INFO">Running command 'ozone sh bucket list /50368-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:44.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:44.050" level="INFO">${output} = 50368-rpcwoscheme</msg>
<status status="PASS" starttime="20200610 23:34:42.206" endtime="20200610 23:34:44.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:44.051" level="INFO">50368-rpcwoscheme</msg>
<status status="PASS" starttime="20200610 23:34:44.050" endtime="20200610 23:34:44.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:44.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:44.051" endtime="20200610 23:34:44.051"></status>
</kw>
<msg timestamp="20200610 23:34:44.052" level="INFO">${result} = 50368-rpcwoscheme</msg>
<status status="PASS" starttime="20200610 23:34:42.205" endtime="20200610 23:34:44.052"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:44.052" endtime="20200610 23:34:44.052"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:44.056" level="INFO">Running command 'ozone sh key put /50368-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:47.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:47.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:44.054" endtime="20200610 23:34:47.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:47.410" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:47.409" endtime="20200610 23:34:47.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:47.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:47.410" endtime="20200610 23:34:47.411"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:44.053" endtime="20200610 23:34:47.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:47.414" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:47.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:47.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:47.412" endtime="20200610 23:34:47.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:47.417" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:47.417" endtime="20200610 23:34:47.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:47.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:47.418" endtime="20200610 23:34:47.418"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:47.411" endtime="20200610 23:34:47.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:47.421" level="INFO">Running command 'ozone sh key get /50368-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:50.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:50.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:47.420" endtime="20200610 23:34:50.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:50.604" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:50.603" endtime="20200610 23:34:50.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:50.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:50.604" endtime="20200610 23:34:50.605"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:47.419" endtime="20200610 23:34:50.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:50.607" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:50.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:50.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:50.605" endtime="20200610 23:34:50.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:50.611" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:50.610" endtime="20200610 23:34:50.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:50.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:50.611" endtime="20200610 23:34:50.611"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:50.605" endtime="20200610 23:34:50.611"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:50.614" level="INFO">Running command 'ozone sh key put -t RATIS /50368-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:54.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:54.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:50.612" endtime="20200610 23:34:54.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:54.166" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:54.165" endtime="20200610 23:34:54.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:54.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:54.166" endtime="20200610 23:34:54.166"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:50.612" endtime="20200610 23:34:54.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:54.170" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:54.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:54.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:54.167" endtime="20200610 23:34:54.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:54.175" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:54.174" endtime="20200610 23:34:54.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:54.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:54.175" endtime="20200610 23:34:54.175"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:54.167" endtime="20200610 23:34:54.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:54.178" level="INFO">Running command 'ozone sh key get /50368-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:57.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:57.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:54.176" endtime="20200610 23:34:57.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:57.271" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:57.270" endtime="20200610 23:34:57.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:57.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:57.271" endtime="20200610 23:34:57.271"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:54.176" endtime="20200610 23:34:57.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:57.275" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:57.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:57.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:57.272" endtime="20200610 23:34:57.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:57.278" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:34:57.277" endtime="20200610 23:34:57.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:57.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:57.278" endtime="20200610 23:34:57.278"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:57.272" endtime="20200610 23:34:57.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:57.282" level="INFO">Running command 'ozone sh key info /50368-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:34:59.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:34:59.374" level="INFO">${output} = {
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:52.266Z",
  "modificationTime": "2020-06-10T23:34:53.709Z...</msg>
<status status="PASS" starttime="20200610 23:34:57.280" endtime="20200610 23:34:59.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:34:59.375" level="INFO">{
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:52.266Z",
  "modificationTime": "2020-06-10T23:34:53.709Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322307998679170,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:34:59.375" endtime="20200610 23:34:59.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:34:59.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:34:59.375" endtime="20200610 23:34:59.376"></status>
</kw>
<msg timestamp="20200610 23:34:59.376" level="INFO">${result} = {
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:52.266Z",
  "modificationTime": "2020-06-10T23:34:53.709Z...</msg>
<status status="PASS" starttime="20200610 23:34:57.279" endtime="20200610 23:34:59.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200610 23:34:59.376" endtime="20200610 23:34:59.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:34:59.379" level="INFO">Running command 'ozone sh key delete /50368-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:01.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:01.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:34:59.377" endtime="20200610 23:35:01.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:01.223" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:01.223" endtime="20200610 23:35:01.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:01.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:01.224" endtime="20200610 23:35:01.224"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:59.377" endtime="20200610 23:35:01.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:01.228" level="INFO">Running command 'ozone sh key cp /50368-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:04.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:04.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:01.225" endtime="20200610 23:35:04.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:04.798" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:04.797" endtime="20200610 23:35:04.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:04.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:04.798" endtime="20200610 23:35:04.798"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:01.224" endtime="20200610 23:35:04.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:04.802" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:04.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:04.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:04.800" endtime="20200610 23:35:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:04.805" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:04.805" endtime="20200610 23:35:04.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:04.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:04.805" endtime="20200610 23:35:04.806"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:04.799" endtime="20200610 23:35:04.807"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:04.809" level="INFO">Running command 'ozone sh key get /50368-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:07.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:07.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:04.807" endtime="20200610 23:35:07.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:07.932" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:07.931" endtime="20200610 23:35:07.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:07.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:07.932" endtime="20200610 23:35:07.932"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:04.807" endtime="20200610 23:35:07.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:07.935" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:07.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:07.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:07.933" endtime="20200610 23:35:07.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:07.938" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:07.938" endtime="20200610 23:35:07.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:07.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:07.939" endtime="20200610 23:35:07.939"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:07.933" endtime="20200610 23:35:07.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:07.942" level="INFO">Running command 'ozone sh key delete /50368-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:09.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:09.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:07.940" endtime="20200610 23:35:09.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:09.704" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:09.703" endtime="20200610 23:35:09.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:09.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:09.704" endtime="20200610 23:35:09.704"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:07.939" endtime="20200610 23:35:09.705"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:09.708" level="INFO">Running command 'ozone sh key get /50368-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:11.466" level="INFO">${rc} = 255</msg>
<msg timestamp="20200610 23:35:11.466" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:35:09.705" endtime="20200610 23:35:11.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:11.467" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:35:11.466" endtime="20200610 23:35:11.467"></status>
</kw>
<msg timestamp="20200610 23:35:11.467" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200610 23:35:09.705" endtime="20200610 23:35:11.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:35:11.467" endtime="20200610 23:35:11.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:11.470" level="INFO">Running command 'ozone sh key get --force /50368-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:14.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:14.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:11.468" endtime="20200610 23:35:14.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:14.721" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:14.720" endtime="20200610 23:35:14.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:14.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:14.721" endtime="20200610 23:35:14.722"></status>
</kw>
<msg timestamp="20200610 23:35:14.722" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200610 23:35:11.468" endtime="20200610 23:35:14.722"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200610 23:35:14.722" endtime="20200610 23:35:14.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:14.725" level="INFO">Running command 'ozone sh key info /50368-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:16.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:16.724" level="INFO">${output} = {
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:45.724Z",
  "modificationTime": "2020-06-10T23:34:47.056Z",
  "...</msg>
<status status="PASS" starttime="20200610 23:35:14.723" endtime="20200610 23:35:16.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:16.725" level="INFO">{
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:45.724Z",
  "modificationTime": "2020-06-10T23:34:47.056Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104322307569942660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200610 23:35:16.724" endtime="20200610 23:35:16.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:16.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:16.725" endtime="20200610 23:35:16.725"></status>
</kw>
<msg timestamp="20200610 23:35:16.726" level="INFO">${result} = {
  "volumeName": "50368-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-10T23:34:45.724Z",
  "modificationTime": "2020-06-10T23:34:47.056Z",
  "...</msg>
<status status="PASS" starttime="20200610 23:35:14.723" endtime="20200610 23:35:16.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200610 23:35:16.726" endtime="20200610 23:35:16.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:16.729" level="INFO">Running command 'ozone sh key list /50368-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:18.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:18.565" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200610 23:35:16.727" endtime="20200610 23:35:18.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:18.567" level="INFO">key1</msg>
<status status="PASS" starttime="20200610 23:35:18.566" endtime="20200610 23:35:18.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:18.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:18.567" endtime="20200610 23:35:18.568"></status>
</kw>
<msg timestamp="20200610 23:35:18.568" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200610 23:35:16.726" endtime="20200610 23:35:18.568"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200610 23:35:18.568" endtime="20200610 23:35:18.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:18.574" level="INFO">Running command 'ozone sh key rename /50368-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:20.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:20.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:18.570" endtime="20200610 23:35:20.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:20.237" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:20.236" endtime="20200610 23:35:20.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:20.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:20.237" endtime="20200610 23:35:20.238"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:18.569" endtime="20200610 23:35:20.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:20.242" level="INFO">Running command 'ozone sh key list /50368-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:22.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:22.112" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200610 23:35:20.239" endtime="20200610 23:35:22.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:22.113" level="INFO">key2</msg>
<status status="PASS" starttime="20200610 23:35:22.113" endtime="20200610 23:35:22.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:22.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:22.114" endtime="20200610 23:35:22.114"></status>
</kw>
<msg timestamp="20200610 23:35:22.115" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200610 23:35:20.238" endtime="20200610 23:35:22.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200610 23:35:22.115" endtime="20200610 23:35:22.115"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:22.119" level="INFO">Running command 'ozone sh key delete /50368-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:23.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:23.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:22.116" endtime="20200610 23:35:23.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:23.836" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:23.836" endtime="20200610 23:35:23.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:23.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:23.836" endtime="20200610 23:35:23.837"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:22.115" endtime="20200610 23:35:23.837"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:44.053" endtime="20200610 23:35:23.837"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:44.052" endtime="20200610 23:35:23.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:23.841" level="INFO">Running command 'ozone sh bucket delete /50368-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:25.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:25.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200610 23:35:23.838" endtime="20200610 23:35:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:25.528" level="INFO"></msg>
<status status="PASS" starttime="20200610 23:35:25.528" endtime="20200610 23:35:25.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:25.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:25.529" endtime="20200610 23:35:25.529"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:23.837" endtime="20200610 23:35:25.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200610 23:35:25.533" level="INFO">Running command 'ozone sh volume delete /50368-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200610 23:35:27.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200610 23:35:27.208" level="INFO">${output} = Volume 50368-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200610 23:35:25.530" endtime="20200610 23:35:27.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200610 23:35:27.209" level="INFO">Volume 50368-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200610 23:35:27.209" endtime="20200610 23:35:27.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200610 23:35:27.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200610 23:35:27.209" endtime="20200610 23:35:27.210"></status>
</kw>
<status status="PASS" starttime="20200610 23:35:25.530" endtime="20200610 23:35:27.210"></status>
</kw>
<status status="PASS" starttime="20200610 23:34:27.742" endtime="20200610 23:35:27.210"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200610 23:34:27.740" endtime="20200610 23:35:27.210" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200610 23:31:44.061" endtime="20200610 23:35:27.212"></status>
</suite>
<status status="PASS" starttime="20200610 23:30:45.859" endtime="20200610 23:35:27.216"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
