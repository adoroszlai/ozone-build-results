<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200628 05:45:09.393" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:09.462" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:09.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:09.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:45:09.459" endtime="20200628 05:45:09.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:09.466" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:45:09.465" endtime="20200628 05:45:09.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:09.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:09.466" endtime="20200628 05:45:09.466"></status>
</kw>
<msg timestamp="20200628 05:45:09.467" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:45:09.458" endtime="20200628 05:45:09.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:45:09.468" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:45:09.467" endtime="20200628 05:45:09.468"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:09.471" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:09.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:09.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:45:09.469" endtime="20200628 05:45:09.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:09.488" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:45:09.487" endtime="20200628 05:45:09.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:09.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:09.488" endtime="20200628 05:45:09.489"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:09.469" endtime="20200628 05:45:09.489"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:09.468" endtime="20200628 05:45:09.489"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:09.458" endtime="20200628 05:45:09.489"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:09.457" endtime="20200628 05:45:09.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:09.492" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:18.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:18.411" level="INFO">${output} = 2020-06-28 05:45:11,014 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:45:11,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:45:09.490" endtime="20200628 05:45:18.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:18.412" level="INFO">2020-06-28 05:45:11,014 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:45:11,203 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:45:11,204 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-28 05:45:12,816 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-28 05:45:12,817 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-28 05:45:12,852 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-28 05:45:12,866 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-28 05:45:12,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-04173, with testuser/scm@EXAMPLE.COM as owner.
2020-06-28 05:45:12,952 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-04173/bucket-0-40508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 05:45:13,610 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 05:45:13,867 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,162
Average Time spent in key write: 00:00:00,592
Total bytes written: 10250
Total Execution time: 00:00:06,673
***************************************************</msg>
<status status="PASS" starttime="20200628 05:45:18.411" endtime="20200628 05:45:18.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:18.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:18.413" endtime="20200628 05:45:18.413"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:09.490" endtime="20200628 05:45:18.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:45:09.456" endtime="20200628 05:45:18.414" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:18.420" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:18.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:18.423" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:45:18.418" endtime="20200628 05:45:18.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:18.424" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:45:18.424" endtime="20200628 05:45:18.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:18.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:18.425" endtime="20200628 05:45:18.425"></status>
</kw>
<msg timestamp="20200628 05:45:18.425" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:45:18.417" endtime="20200628 05:45:18.425"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:18.430" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:18.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:18.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:45:18.427" endtime="20200628 05:45:18.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:18.441" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:45:18.440" endtime="20200628 05:45:18.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:18.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:18.441" endtime="20200628 05:45:18.441"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:18.426" endtime="20200628 05:45:18.442"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:18.426" endtime="20200628 05:45:18.442"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:18.417" endtime="20200628 05:45:18.442"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:18.416" endtime="20200628 05:45:18.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:18.446" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:18.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:18.655" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:18.443" endtime="20200628 05:45:18.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:18.656" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    383      0 --:--:-- --:--:-- --:--:--   383
100    77  100    77    0     0    382      0 --:--:-- --:--:-- --:--:--   383
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200628 05:45:18.655" endtime="20200628 05:45:18.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:18.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:18.656" endtime="20200628 05:45:18.657"></status>
</kw>
<msg timestamp="20200628 05:45:18.657" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:18.442" endtime="20200628 05:45:18.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:18.658" endtime="20200628 05:45:18.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:18.663" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:18.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:18.709" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:18.659" endtime="20200628 05:45:18.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:18.710" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0  75198      0 --:--:-- --:--:-- --:--:-- 76897
* Connection #0 to host recon left intact
[{"volume":"vol-3-95540","bucket":"bucket-4-49084","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-2-98743","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-0-80667","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-0-55079","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-2-56190","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-4-68943","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-3-55983","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-2-95992","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-3-10793","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-3-95728","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-3-27721","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-1-93358","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-0-42843","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-4-01438","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-0-93251","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-1-00001","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-1-05932","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-3-09715","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-4-14745","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-2-51402","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-2-50901","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-4-35761","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-1-12954","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-1-92913","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-0-87705","fileSize":16384,"count":5},{"volume":"12573-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"12573-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest319","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-86706","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86592","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-07047","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-03460","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-65778","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86592","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200628 05:45:18.710" endtime="20200628 05:45:18.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:18.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:18.711" endtime="20200628 05:45:18.711"></status>
</kw>
<msg timestamp="20200628 05:45:18.712" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:18.659" endtime="20200628 05:45:18.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200628 05:45:18.713" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0  75198      0 --:--:-- --:--:-- --:--:-- 76897
* Connection #0 to host recon left intact
[{"volume":"vol-3-95540","bucket":"bucket-4-49084","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-2-98743","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-0-80667","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-0-55079","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-2-56190","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-4-68943","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-3-55983","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-2-95992","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-3-10793","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-3-95728","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-3-27721","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-1-93358","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-0-42843","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-4-01438","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-0-93251","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-1-00001","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-1-05932","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-3-09715","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-4-14745","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-2-51402","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-2-50901","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-4-35761","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-1-12954","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-1-92913","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-0-87705","fileSize":16384,"count":5},{"volume":"12573-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"12573-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest319","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-86706","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86592","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-07047","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-03460","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-65778","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86592","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200628 05:45:18.712" endtime="20200628 05:45:18.713"></status>
</kw>
<status status="FAIL" starttime="20200628 05:45:18.416" endtime="20200628 05:45:18.713"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:28.720" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:28.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:28.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:45:28.717" endtime="20200628 05:45:28.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:28.724" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:45:28.723" endtime="20200628 05:45:28.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:28.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:28.724" endtime="20200628 05:45:28.725"></status>
</kw>
<msg timestamp="20200628 05:45:28.725" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:45:28.716" endtime="20200628 05:45:28.725"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:28.729" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:28.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:28.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:45:28.727" endtime="20200628 05:45:28.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:28.745" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:45:28.745" endtime="20200628 05:45:28.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:28.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:28.746" endtime="20200628 05:45:28.746"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:28.726" endtime="20200628 05:45:28.747"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:28.726" endtime="20200628 05:45:28.747"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:28.715" endtime="20200628 05:45:28.747"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:28.715" endtime="20200628 05:45:28.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:28.751" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:28.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:28.770" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:28.748" endtime="20200628 05:45:28.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:28.773" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   5520      0 --:--:-- --:--:-- --:--:--  5923
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200628 05:45:28.771" endtime="20200628 05:45:28.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:28.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:28.773" endtime="20200628 05:45:28.776"></status>
</kw>
<msg timestamp="20200628 05:45:28.776" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:28.747" endtime="20200628 05:45:28.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:28.778" endtime="20200628 05:45:28.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:28.782" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:28.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:28.797" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:28.779" endtime="20200628 05:45:28.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:28.799" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   311k      0 --:--:-- --:--:-- --:--:--  325k
* Connection #0 to host recon left intact
[{"volume":"vol-3-95540","bucket":"bucket-4-49084","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-2-98743","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-0-80667","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-0-55079","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-2-56190","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-4-68943","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-3-55983","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-2-95992","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-3-10793","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-3-95728","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-3-27721","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-1-93358","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-0-42843","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-4-01438","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-0-93251","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-1-00001","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-1-05932","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-3-09715","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-4-14745","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-2-51402","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-2-50901","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-4-35761","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-1-12954","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-1-92913","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-0-87705","fileSize":16384,"count":5},{"volume":"12573-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"12573-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest319","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-86706","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86592","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-07047","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-03460","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-65778","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86592","fileSize":16777216,"count":2}]</msg>
<status status="PASS" starttime="20200628 05:45:28.798" endtime="20200628 05:45:28.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:28.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:28.799" endtime="20200628 05:45:28.800"></status>
</kw>
<msg timestamp="20200628 05:45:28.800" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:28.778" endtime="20200628 05:45:28.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200628 05:45:28.801" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   311k      0 --:--:-- --:--:-- --:--:--  325k
* Connection #0 to host recon left intact
[{"volume":"vol-3-95540","bucket":"bucket-4-49084","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-2-98743","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-0-80667","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-0-55079","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-2-56190","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-4-68943","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-3-55983","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-2-95992","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-3-10793","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-3-95728","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-3-27721","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-1-93358","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-0-42843","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-4-01438","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-0-93251","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-1-00001","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-1-05932","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-3-09715","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-4-14745","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-2-51402","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-2-50901","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-4-35761","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-1-12954","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-1-92913","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-0-87705","fileSize":16384,"count":5},{"volume":"12573-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"12573-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest319","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-86706","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86592","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-07047","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-03460","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-65778","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86592","fileSize":16777216,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200628 05:45:28.800" endtime="20200628 05:45:28.801"></status>
</kw>
<status status="FAIL" starttime="20200628 05:45:28.714" endtime="20200628 05:45:28.801"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.808" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:45:38.806" endtime="20200628 05:45:38.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.814" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:45:38.813" endtime="20200628 05:45:38.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.814" endtime="20200628 05:45:38.815"></status>
</kw>
<msg timestamp="20200628 05:45:38.816" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:45:38.804" endtime="20200628 05:45:38.816"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.819" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:45:38.818" endtime="20200628 05:45:38.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.833" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:45:38.832" endtime="20200628 05:45:38.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.833" endtime="20200628 05:45:38.834"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:38.817" endtime="20200628 05:45:38.834"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:38.816" endtime="20200628 05:45:38.834"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:38.804" endtime="20200628 05:45:38.835"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:38.803" endtime="20200628 05:45:38.835"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.838" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.862" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.836" endtime="20200628 05:45:38.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.863" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  12748      0 --:--:-- --:--:-- --:--:-- 13000
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200628 05:45:38.862" endtime="20200628 05:45:38.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.863" endtime="20200628 05:45:38.864"></status>
</kw>
<msg timestamp="20200628 05:45:38.864" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.835" endtime="20200628 05:45:38.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.866" endtime="20200628 05:45:38.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.870" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.885" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.868" endtime="20200628 05:45:38.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.886" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   394k      0 --:--:-- --:--:-- --:--:--  438k
* Connection #0 to host recon left intact
[{"volume":"vol-3-95540","bucket":"bucket-4-49084","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-2-98743","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-0-80667","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-0-55079","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-2-56190","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-4-68943","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-3-55983","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-2-95992","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-3-10793","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-3-95728","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-3-27721","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-1-93358","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-0-42843","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-4-01438","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-0-93251","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-1-00001","fileSize":16384,"count":5},{"volume":"vol-4-93795","bucket":"bucket-1-05932","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-3-09715","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-4-14745","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-2-51402","fileSize":16384,"count":5},{"volume":"vol-1-33868","bucket":"bucket-2-50901","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-4-35761","fileSize":16384,"count":5},{"volume":"vol-3-95540","bucket":"bucket-1-12954","fileSize":16384,"count":5},{"volume":"vol-2-84829","bucket":"bucket-1-92913","fileSize":16384,"count":5},{"volume":"vol-0-39038","bucket":"bucket-0-87705","fileSize":16384,"count":5},{"volume":"12573-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"12573-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"12573-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest319","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-86706","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-86592","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-07047","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-03460","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-65778","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-86592","fileSize":16777216,"count":2},{"volume":"vol-0-04173","bucket":"bucket-0-40508","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-95359","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200628 05:45:38.886" endtime="20200628 05:45:38.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.887" endtime="20200628 05:45:38.887"></status>
</kw>
<msg timestamp="20200628 05:45:38.888" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.867" endtime="20200628 05:45:38.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.888" endtime="20200628 05:45:38.889"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:38.802" endtime="20200628 05:45:38.889"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:18.415" endtime="20200628 05:45:38.889"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:45:18.414" endtime="20200628 05:45:38.889" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.893" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.930" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.892" endtime="20200628 05:45:38.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.931" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  58692      0 --:--:-- --:--:-- --:--:-- 60400
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"8713d889-eb4d-4d96-be31-5654204e62c8","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593323114601,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443823616},"pipelines":[{"pipelineID":"5bc8bd1a-7dc0-453a-8958-7542f2ff14ac","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"fefce643-b6be-44f8-b20a-f4aa15826b0e","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"903c68ab-b1fd-4e99-bdd4-1fdf0f77994c","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593323114676,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443856384},"pipelines":[{"pipelineID":"5bc8bd1a-7dc0-453a-8958-7542f2ff14ac","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"fbd80cfd-2964-4d3b-97db-add5ea42a79e","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"a83f1fd0-d6a2-47bf-8213-4a597711e820","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1593323114635,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25443856384},"pipelines":[{"pipelineID":"5bc8bd1a-7dc0-453a-8958-7542f2ff14ac","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"ccdb1755-9a77-416b-adf5-7a16f227e782","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200628 05:45:38.931" endtime="20200628 05:45:38.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.932" endtime="20200628 05:45:38.932"></status>
</kw>
<msg timestamp="20200628 05:45:38.933" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.891" endtime="20200628 05:45:38.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.933" endtime="20200628 05:45:38.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.933" endtime="20200628 05:45:38.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.934" endtime="20200628 05:45:38.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.935" endtime="20200628 05:45:38.935"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.939" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.963" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.936" endtime="20200628 05:45:38.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.964" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  72056      0 --:--:-- --:--:-- --:--:-- 76000
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"5bc8bd1a-7dc0-453a-8958-7542f2ff14ac","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1334232,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"ccdb1755-9a77-416b-adf5-7a16f227e782","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1334240,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"fefce643-b6be-44f8-b20a-f4aa15826b0e","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1334246,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"fbd80cfd-2964-4d3b-97db-add5ea42a79e","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1334415,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200628 05:45:38.964" endtime="20200628 05:45:38.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.965" endtime="20200628 05:45:38.965"></status>
</kw>
<msg timestamp="20200628 05:45:38.966" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.935" endtime="20200628 05:45:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.966" endtime="20200628 05:45:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.966" endtime="20200628 05:45:38.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.967" endtime="20200628 05:45:38.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.970" endtime="20200628 05:45:38.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.970" endtime="20200628 05:45:38.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.971" endtime="20200628 05:45:38.971"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.974" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:38.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:38.988" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.972" endtime="20200628 05:45:38.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:38.989" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  21145      0 --:--:-- --:--:-- --:--:-- 23250
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76331536384},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200628 05:45:38.989" endtime="20200628 05:45:38.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:38.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:38.990" endtime="20200628 05:45:38.990"></status>
</kw>
<msg timestamp="20200628 05:45:38.990" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.971" endtime="20200628 05:45:38.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.991" endtime="20200628 05:45:38.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.991" endtime="20200628 05:45:38.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:38.992" endtime="20200628 05:45:38.992"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:38.995" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:39.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:39.014" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.993" endtime="20200628 05:45:39.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:39.016" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  36328      0 --:--:-- --:--:-- --:--:-- 37833
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1593321838641,"lastReportTimestamp":1593323068552},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1593321838077,"lastReportTimestamp":1593323067760},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1593321838397,"lastReportTimestamp":1593323068302}]</msg>
<status status="PASS" starttime="20200628 05:45:39.015" endtime="20200628 05:45:39.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:39.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:39.016" endtime="20200628 05:45:39.016"></status>
</kw>
<msg timestamp="20200628 05:45:39.017" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:38.992" endtime="20200628 05:45:39.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:39.017" endtime="20200628 05:45:39.017"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:45:38.890" endtime="20200628 05:45:39.017" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:39.024" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:39.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:39.025" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:45:39.021" endtime="20200628 05:45:39.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:39.026" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:45:39.025" endtime="20200628 05:45:39.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:39.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:39.026" endtime="20200628 05:45:39.027"></status>
</kw>
<msg timestamp="20200628 05:45:39.027" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:45:39.020" endtime="20200628 05:45:39.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:39.031" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:39.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:39.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:45:39.028" endtime="20200628 05:45:39.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:39.041" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:45:39.040" endtime="20200628 05:45:39.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:39.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:39.041" endtime="20200628 05:45:39.042"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:39.028" endtime="20200628 05:45:39.042"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:39.027" endtime="20200628 05:45:39.042"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:39.020" endtime="20200628 05:45:39.042"></status>
</kw>
<status status="PASS" starttime="20200628 05:45:39.020" endtime="20200628 05:45:39.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:45:39.045" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:45:39.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:45:39.092" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:39.043" endtime="20200628 05:45:39.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:45:39.093" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  19481      0 --:--:-- --:--:-- --:--:-- 20090
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x11c4f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQKbjFki5WF43XSRfIIrK8PU6vwrqHA+0cVXOn4NbaVSQ7so1cNCVO54Cw+9xScg4SK5pnD7Io1uQp79G+xwgsUImFt1TTVilk0Ayb27sA4VH9p5yhoZmC43McdhpfafNqwk4UGN4okfhJXw6YUkKoVa6hv5GzephmUM0mMXdtj8Qj+1bjlw/gmumveFEmjc4AXjnUlK0h27EctVffZGvkz/8B7oxSd8gUy3nK3dGHZEOZKHvEhOXTK45FbDgaQ2zKpdxUd7CCpOSlxhsB6225PkVBHECQzwPRktV3hcg3UWa7E0vl4ckJ8oaaOWY88R3QS4PRD7XhyDcWYud7OtRikwRuqkgdIwgc+gAwIBEqKBxwSBxCfIojHiEEUTzRcNe9/wORhyP6n9aXMgIwMHiL9BKD3KMrWe4l6q5TU1hylYWPJCJ6N/sfCLoIbOfyHbdgW3FLgZyB5D4720ySCRvEnIoWK8SK0yu6/6y2DiPQFGJL8uiCPX5OmpSCmZvYlpwV/BHtJTfXuIdTgqq/Sl60nBqXyCdXd7pt9Y/gs+7J2My/M+umzQWTyfqu8i4o6SZ6Vfh3wJ90lZ3FSEKIf7v1/UCWHXff0E4ISD0r6Nr6FL1oFWZGvSZvU=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Date: Sun, 28 Jun 2020 05:45:39 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCTJnejOitTN0Zs7wCy41JBFF7gVqVpFFgMywXn0S8Bzua1iwLpmruVIQMXvNlphY8V5pfh5M1rtRVEaxvVj9cDer6
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359139081&amp;s=P2vOFp+X0LmHvvwdy2uaOZ3Q8LFXHX/+jCqJu5MnLh8="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 28 Jun 2020 04:27:56 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  55463      0 --:--:-- --:--:-- --:--:-- 55463
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200628 05:45:39.092" endtime="20200628 05:45:39.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:45:39.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:45:39.094" endtime="20200628 05:45:39.095"></status>
</kw>
<msg timestamp="20200628 05:45:39.095" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200628 05:45:39.043" endtime="20200628 05:45:39.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200628 05:45:39.095" endtime="20200628 05:45:39.096"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:45:39.019" endtime="20200628 05:45:39.096" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200628 05:45:09.426" endtime="20200628 05:45:39.097"></status>
</suite>
<status status="PASS" starttime="20200628 05:45:09.393" endtime="20200628 05:45:39.100"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
