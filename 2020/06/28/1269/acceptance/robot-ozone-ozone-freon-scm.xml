<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200628 05:13:18.551" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:13:18.613" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:13:26.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:13:26.948" level="INFO">${output} = 2020-06-28 05:13:20,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:20,342 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:18.609" endtime="20200628 05:13:26.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:13:26.950" level="INFO">2020-06-28 05:13:20,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:20,342 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:13:20,342 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 05:13:21,531 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-28 05:13:21,532 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-28 05:13:21,532 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-28 05:13:21,532 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-28 05:13:21,532 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-28 05:13:21,532 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-28 05:13:21,533 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-28 05:13:21,535 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-28 05:13:21,537 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:21,585 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-91012, with hadoop as owner.
2020-06-28 05:13:21,650 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-91012/bucket-0-58177, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 05:13:22,308 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 05:13:22,544 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,089
Average Time spent in bucket creation: 00:00:00,020
Average Time spent in key creation: 00:00:00,095
Average Time spent in key write: 00:00:00,744
Total bytes written: 10240
Total Execution time: 00:00:06,028
***************************************************</msg>
<status status="PASS" starttime="20200628 05:13:26.949" endtime="20200628 05:13:26.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:13:26.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:13:26.950" endtime="20200628 05:13:26.950"></status>
</kw>
<msg timestamp="20200628 05:13:26.951" level="INFO">${result} = 2020-06-28 05:13:20,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:20,342 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:18.609" endtime="20200628 05:13:26.951"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:13:26.951" endtime="20200628 05:13:26.952"></status>
</kw>
<status status="PASS" starttime="20200628 05:13:26.951" endtime="20200628 05:13:26.952"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:13:18.608" endtime="20200628 05:13:26.952" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:13:26.957" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:13:32.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:13:32.450" level="INFO">${output} = 2020-06-28 05:13:28,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:28,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:26.954" endtime="20200628 05:13:32.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:13:32.452" level="INFO">2020-06-28 05:13:28,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:28,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:13:28,615 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 05:13:28,808 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lqdeuwbp1o
2020-06-28 05:13:28,828 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:29,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:29,875 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-28 05:13:29,921 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 05:13:30,571 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 05:13:30,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:31,836 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 05:13:32,094 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1531.421326, max=1531.421326, mean=1531.421326, stddev=0.0, median=1531.421326, p75=1531.421326, p95=1531.421326, p98=1531.421326, p99=1531.421326, p999=1531.421326, mean_rate=0.4687571878787729, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 05:13:32,095 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-28 05:13:32,101 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 05:13:32,101 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 05:13:32.451" endtime="20200628 05:13:32.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:13:32.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:13:32.452" endtime="20200628 05:13:32.453"></status>
</kw>
<msg timestamp="20200628 05:13:32.453" level="INFO">${result} = 2020-06-28 05:13:28,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:28,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:26.954" endtime="20200628 05:13:32.453"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:13:32.454" endtime="20200628 05:13:32.454"></status>
</kw>
<status status="PASS" starttime="20200628 05:13:32.453" endtime="20200628 05:13:32.454"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:13:26.953" endtime="20200628 05:13:32.455" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:13:32.460" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:13:36.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:13:36.614" level="INFO">${output} = 2020-06-28 05:13:33,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:34,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:32.457" endtime="20200628 05:13:36.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:13:36.615" level="INFO">2020-06-28 05:13:33,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:34,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:13:34,097 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 05:13:34,242 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2emczh9vpo
2020-06-28 05:13:34,257 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:35,263 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:36,265 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 05:13:36,569 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=78.090224, max=78.090224, mean=78.090224, stddev=0.0, median=78.090224, p75=78.090224, p95=78.090224, p98=78.090224, p99=78.090224, p999=78.090224, mean_rate=0.8845987258181569, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 05:13:36,576 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-28 05:13:36,579 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 05:13:36,579 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 05:13:36.614" endtime="20200628 05:13:36.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:13:36.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:13:36.615" endtime="20200628 05:13:36.616"></status>
</kw>
<msg timestamp="20200628 05:13:36.617" level="INFO">${result} = 2020-06-28 05:13:33,904 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:34,096 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:32.456" endtime="20200628 05:13:36.617"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:13:36.617" endtime="20200628 05:13:36.618"></status>
</kw>
<status status="PASS" starttime="20200628 05:13:36.617" endtime="20200628 05:13:36.618"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:13:32.455" endtime="20200628 05:13:36.618" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:13:36.622" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:13:40.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:13:40.698" level="INFO">${output} = 2020-06-28 05:13:38,152 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:38,339 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:36.620" endtime="20200628 05:13:40.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:13:40.699" level="INFO">2020-06-28 05:13:38,152 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:38,339 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:13:38,339 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 05:13:38,516 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xvgsasygo7
2020-06-28 05:13:38,539 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:39,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 05:13:40,559 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 05:13:40,625 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.493794, max=19.493794, mean=19.493794, stddev=0.0, median=19.493794, p75=19.493794, p95=19.493794, p98=19.493794, p99=19.493794, p999=19.493794, mean_rate=0.962723084888855, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 05:13:40,634 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-28 05:13:40,655 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 05:13:40,655 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 05:13:40.698" endtime="20200628 05:13:40.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:13:40.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:13:40.699" endtime="20200628 05:13:40.700"></status>
</kw>
<msg timestamp="20200628 05:13:40.700" level="INFO">${result} = 2020-06-28 05:13:38,152 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:13:38,339 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:13:36.619" endtime="20200628 05:13:40.700"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:13:40.701" endtime="20200628 05:13:40.701"></status>
</kw>
<status status="PASS" starttime="20200628 05:13:40.700" endtime="20200628 05:13:40.701"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:13:36.618" endtime="20200628 05:13:40.701" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200628 05:13:18.583" endtime="20200628 05:13:40.703"></status>
</suite>
<status status="PASS" starttime="20200628 05:13:18.552" endtime="20200628 05:13:40.706"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
