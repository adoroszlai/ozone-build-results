<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200628 05:46:03.484" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:03.550" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:03.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:03.553" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:03.547" endtime="20200628 05:46:03.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:03.554" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:03.553" endtime="20200628 05:46:03.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:03.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:03.554" endtime="20200628 05:46:03.555"></status>
</kw>
<msg timestamp="20200628 05:46:03.555" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:03.547" endtime="20200628 05:46:03.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:03.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:03.556" endtime="20200628 05:46:03.557"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:03.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:03.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:03.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:03.558" endtime="20200628 05:46:03.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:03.579" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:03.578" endtime="20200628 05:46:03.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:03.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:03.579" endtime="20200628 05:46:03.580"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:03.558" endtime="20200628 05:46:03.580"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:03.557" endtime="20200628 05:46:03.580"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:03.546" endtime="20200628 05:46:03.580"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:03.546" endtime="20200628 05:46:03.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:03.584" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.629" level="INFO">${output} = 2020-06-28 05:46:05,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:46:05,346 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 05:46:03.581" endtime="20200628 05:46:12.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.631" level="INFO">2020-06-28 05:46:05,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 05:46:05,346 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 05:46:05,346 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-28 05:46:07,083 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-28 05:46:07,084 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-28 05:46:07,084 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-28 05:46:07,084 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-28 05:46:07,085 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-28 05:46:07,085 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-28 05:46:07,085 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-28 05:46:07,100 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-28 05:46:07,112 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-28 05:46:07,149 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79246, with testuser/scm@EXAMPLE.COM as owner.
2020-06-28 05:46:07,189 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-79246/bucket-0-67341, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 05:46:07,742 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 05:46:08,115 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,023
Average Time spent in key write: 00:00:00,106
Total bytes written: 2050
Total Execution time: 00:00:06,724
***************************************************</msg>
<status status="PASS" starttime="20200628 05:46:12.630" endtime="20200628 05:46:12.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.631" endtime="20200628 05:46:12.632"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:03.580" endtime="20200628 05:46:12.632"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:03.544" endtime="20200628 05:46:12.632" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.637" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.635" endtime="20200628 05:46:12.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.644" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.644" endtime="20200628 05:46:12.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.645" endtime="20200628 05:46:12.645"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.635" endtime="20200628 05:46:12.646"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.634" endtime="20200628 05:46:12.646"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.650" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.673" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200628 05:46:12.647" endtime="20200628 05:46:12.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.675" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200628 05:46:12.674" endtime="20200628 05:46:12.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.675" endtime="20200628 05:46:12.676"></status>
</kw>
<msg timestamp="20200628 05:46:12.676" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200628 05:46:12.646" endtime="20200628 05:46:12.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.676" endtime="20200628 05:46:12.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.681" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.685" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.679" endtime="20200628 05:46:12.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.686" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:12.685" endtime="20200628 05:46:12.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.686" endtime="20200628 05:46:12.687"></status>
</kw>
<msg timestamp="20200628 05:46:12.687" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.678" endtime="20200628 05:46:12.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:12.688" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:12.687" endtime="20200628 05:46:12.688"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.691" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.689" endtime="20200628 05:46:12.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.709" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.708" endtime="20200628 05:46:12.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.709" endtime="20200628 05:46:12.710"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.689" endtime="20200628 05:46:12.710"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.688" endtime="20200628 05:46:12.710"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.677" endtime="20200628 05:46:12.710"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.677" endtime="20200628 05:46:12.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.713" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.739" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200628 05:46:12.711" endtime="20200628 05:46:12.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.740" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x10fdf20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbzC6dqa58lTefzUPt5W0lVe2y7/V4kE34Ltel2AHe6rXBsk3BNz6yP0ZN20IFVgsihDHRwD84Al0t2F+zUpATMULUqMnJUgvdJs318c0E5IFmCnANbL1+r4UPy5KjysC9X1O6wNhnY2Zj7Y+1H8KbWFRwOmR/3I15XkyPVICgnyGtgYAJNYlEWDTqfIVzQ27zz4WJCqNkjU4CX+bwLbw5my2CrPafB/32xh4vGXA7dlDebwRMpbps0QKz+9+893VYZIbHK/PQtviQPstNyGFrmmrJLqgMQSDxU9x+Vv/nK1n0jvGCMAy5jkUzToOIzEjFtiidobooQIxjgN2Cv6UqcvDpIbP40pIHWMIHToAMCARKigcsEgch6NughHEG+MpVDTe8LcqaqsCRIiQ0jFvWcSzMbsBUMJgokdRD+eMRtCjlgekTg38n183DU3KgdnmEGqX3EF7W/cr17/AH2HBM2kD1lJKywQqqbWN1fBGOEkzNqOeDZTFPUejwhSrFxvNtiNVuoIo29t/CiAJs/tqAv3m3QvkkMaAfRYs4Gk/rzcVmURiDNpsNloC9KIcSznyqFh+j9YN0KqPQdL0Cg2CfZXHkoSkBU5nmq6GFZuNc7yARYrQgC08b//oZVIe+o7w==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCNsC62tzF/Dl4urN0y7q03WMjewvdvj0a4BmizymtKEkaWuUnE5Kd2Spom5qsZGld78ssaDd8wZx/c0LTjQCzVXu5
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172734&amp;s=giUQiY0EX2ZjybaJOU1dtPoNI1mthH98sFL4hfzdhtc="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 28 Jun 2020 04:22:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 05:46:12 GMT
Cache-Control: no-cache
Expires: Sun, 28 Jun 2020 05:46:12 GMT
Date: Sun, 28 Jun 2020 05:46:12 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sun, 28 Jun 2020 05:46:12 GMT
Date: Sun, 28 Jun 2020 05:46:12 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCNsC62tzF/Dl4urN0y7q03WMjewvdvj0a4BmizymtKEkaWuUnE5Kd2Spom5qsZGld78ssaDd8wZx/c0LTjQCzVXu5
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172734&amp;s=giUQiY0EX2ZjybaJOU1dtPoNI1mthH98sFL4hfzdhtc="; Path=/; HttpOnly
Last-Modified: Sun, 28 Jun 2020 04:22:48 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200628 05:46:12.739" endtime="20200628 05:46:12.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.741" endtime="20200628 05:46:12.741"></status>
</kw>
<msg timestamp="20200628 05:46:12.742" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200628 05:46:12.711" endtime="20200628 05:46:12.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.742" endtime="20200628 05:46:12.742"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.634" endtime="20200628 05:46:12.742"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:12.633" endtime="20200628 05:46:12.743" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.749" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.746" endtime="20200628 05:46:12.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.752" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.752" endtime="20200628 05:46:12.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.752" endtime="20200628 05:46:12.753"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.745" endtime="20200628 05:46:12.753"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.745" endtime="20200628 05:46:12.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.757" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.770" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200628 05:46:12.754" endtime="20200628 05:46:12.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.771" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200628 05:46:12.770" endtime="20200628 05:46:12.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.771" endtime="20200628 05:46:12.772"></status>
</kw>
<msg timestamp="20200628 05:46:12.772" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200628 05:46:12.754" endtime="20200628 05:46:12.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.772" endtime="20200628 05:46:12.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.777" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.779" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.774" endtime="20200628 05:46:12.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.780" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:12.779" endtime="20200628 05:46:12.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.780" endtime="20200628 05:46:12.781"></status>
</kw>
<msg timestamp="20200628 05:46:12.781" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.774" endtime="20200628 05:46:12.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:12.782" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:12.781" endtime="20200628 05:46:12.782"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.786" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.783" endtime="20200628 05:46:12.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.801" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.801" endtime="20200628 05:46:12.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.802" endtime="20200628 05:46:12.802"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.782" endtime="20200628 05:46:12.802"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.782" endtime="20200628 05:46:12.803"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.773" endtime="20200628 05:46:12.803"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.773" endtime="20200628 05:46:12.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.806" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.863" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200628 05:46:12.803" endtime="20200628 05:46:12.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.864" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x17d3f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbZJM45CAh0PaHfVdHUPVyuweUNDHRHg2VepgsZRS97XqVCh+6SATU+II9cGwTT/umpL8fCUBDgmBJc9f1hyy6J/SBB/QQiUaiFCOnvIdUN4lNgRD9dcJT9qJth67kG4cJ79Tq6db/uhkRww70gFqEoEr9xIyJolJiWXX6ZZv0r4u3ZN4h9GEZZrJJRIfzylEIQBfottzgWux+2+v0wcb1IwoTTmEvzazAhjVV0/TgqsNsuR6ON3zsApbnl10kdXS1y6TzGLykLdBhvSyDosocCS6kUybhmJxKK85DwJvAws6W1knitzh9qim5m5IcfbyZ+Z1M+/h1VAJkMMs0/Y7nuaDiltMWApIHWMIHToAMCARKigcsEgchtgM6/UdH4SBUlEsR1QVju9B0n+kfBcz6/m22wmWs1LUHISD/jAJv5U8/3OW3D0f6hwjEQSCTAlRteti6pWhLmE1EpczIWphcZ/t0inzUl18BV1InjMC0Tq9Aa7bCwNM0Pb5gOsym3JuvxRs0PeOqmam88WYUHv5okQA2xYTq3WbjjkQuqnEco7S/COhOQ7rL8lfGRmPPVIL1lwr9ap1w9Z1wjrM27ba2RhAaADRvwjnDerZpuJgdlaH8mSBVy3vWu/pL1lG8QKg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClnLBczDtmkvk5rORBGc0jco0sDIfK63CaHySns8eG2GvS7pTP3503kk7sxOREnB6BI2aveuEMIpEvwCdbEcZX3Ey
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172823&amp;s=JpJ4v+I7JUhTrhOP1UUA28G+BcyciYrhNX2Or1NXWt8="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593323172823.tgz"
&lt; Content-Length: 74921
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 05:46:12 GMT
Cache-Control: no-cache
Expires: Sun, 28 Jun 2020 05:46:12 GMT
Date: Sun, 28 Jun 2020 05:46:12 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClnLBczDtmkvk5rORBGc0jco0sDIfK63CaHySns8eG2GvS7pTP3503kk7sxOREnB6BI2aveuEMIpEvwCdbEcZX3Ey
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172823&amp;s=JpJ4v+I7JUhTrhOP1UUA28G+BcyciYrhNX2Or1NXWt8="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1593323172823.tgz"
Content-Length: 74921
</msg>
<status status="PASS" starttime="20200628 05:46:12.863" endtime="20200628 05:46:12.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.864" endtime="20200628 05:46:12.865"></status>
</kw>
<msg timestamp="20200628 05:46:12.865" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200628 05:46:12.803" endtime="20200628 05:46:12.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.865" endtime="20200628 05:46:12.866"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.744" endtime="20200628 05:46:12.866"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:12.743" endtime="20200628 05:46:12.866" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.872" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.869" endtime="20200628 05:46:12.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.876" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.876" endtime="20200628 05:46:12.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.877" endtime="20200628 05:46:12.877"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.869" endtime="20200628 05:46:12.877"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.868" endtime="20200628 05:46:12.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.883" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.895" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200628 05:46:12.878" endtime="20200628 05:46:12.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.896" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200628 05:46:12.896" endtime="20200628 05:46:12.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.896" endtime="20200628 05:46:12.897"></status>
</kw>
<msg timestamp="20200628 05:46:12.897" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200628 05:46:12.878" endtime="20200628 05:46:12.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.897" endtime="20200628 05:46:12.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.901" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.899" endtime="20200628 05:46:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.904" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:12.904" endtime="20200628 05:46:12.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.905" endtime="20200628 05:46:12.906"></status>
</kw>
<msg timestamp="20200628 05:46:12.907" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.899" endtime="20200628 05:46:12.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:12.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:12.907" endtime="20200628 05:46:12.907"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.912" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.908" endtime="20200628 05:46:12.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.921" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.921" endtime="20200628 05:46:12.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.922" endtime="20200628 05:46:12.922"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.908" endtime="20200628 05:46:12.922"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.908" endtime="20200628 05:46:12.922"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.898" endtime="20200628 05:46:12.923"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.898" endtime="20200628 05:46:12.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.926" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.956" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200628 05:46:12.923" endtime="20200628 05:46:12.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.957" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1cb2f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZFpl4iDaW1fQQhUp/dwrl2vyxJKSpCf7c/zHWp8fQJVWqC0KMuzTQzlmM6fIWp7f0pYH2UkBAETg4da5qF+JLeidfdRYpv5nnJDZy8b8t3DUPoESljoRVn7OgTA0VrH7JeheoXjCwNj6qJNTChu7CJsLAaksIFuy7yIS/HtvXsQErEBbC7gfTiA/FI2Jg0q4MiJyYWwYkILOQb3GFQxetj6oEp+To+2DdzyewQ0pJPxGXhUmA9ir5897YVXlK+1+G4RepR1/46wPNGejUziGz//pggWFTfeSA/LqtG8/+S3T0VAm+v9fYP7+ewibZ81mQiWaaxtM8oZQRP2fZXVun2YcwXn71spIHWMIHToAMCARKigcsEgcgFYfzR1otdRffmac+oUZgs6FuBEFDi7O5UuxZchNHeIi96pn7NHrKqCwuVuZC5Z/iOplrfz7zm2gFdP8ce1H1T8bVScZmlUHnBtmxCZUAikghTGZCqQabg/EorBLtC6gVF5Wz1uJab5sWFQaFogoGGDyA0pVSG5rDZaGmKjPKMdGx9VWOE2MiDDHgJbPcd2hgPaZNekQwukl/wPZ8Upni+PvMZmWjgdbiWvm6KCnxRSWWOM9O9HL0D8GLSRo88lLUwTe5X8X9GTQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2NTHqNJ7zpJDSiaFkPpjXu8GPdvI0o2cOPJXOo6d6P2B72cSjmNsrcBvHsYvdj+SWI+UMkdC4XnzmCX5F0gtFuns
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172943&amp;s=Fes9LgKPd5qh/z0FQHdIrLpg0ZyQqnWJl0WDhQ4mHaY="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 05:46:12 GMT
Cache-Control: no-cache
Expires: Sun, 28 Jun 2020 05:46:12 GMT
Date: Sun, 28 Jun 2020 05:46:12 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2NTHqNJ7zpJDSiaFkPpjXu8GPdvI0o2cOPJXOo6d6P2B72cSjmNsrcBvHsYvdj+SWI+UMkdC4XnzmCX5F0gtFuns
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359172943&amp;s=Fes9LgKPd5qh/z0FQHdIrLpg0ZyQqnWJl0WDhQ4mHaY="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200628 05:46:12.957" endtime="20200628 05:46:12.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.958" endtime="20200628 05:46:12.958"></status>
</kw>
<msg timestamp="20200628 05:46:12.959" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200628 05:46:12.923" endtime="20200628 05:46:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.959" endtime="20200628 05:46:12.959"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.868" endtime="20200628 05:46:12.960"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:12.867" endtime="20200628 05:46:12.960" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.965" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:12.963" endtime="20200628 05:46:12.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.971" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:12.970" endtime="20200628 05:46:12.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.971" endtime="20200628 05:46:12.972"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.963" endtime="20200628 05:46:12.972"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.962" endtime="20200628 05:46:12.972"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:12.975" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:12.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:12.994" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200628 05:46:12.973" endtime="20200628 05:46:12.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:12.995" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200628 05:46:12.994" endtime="20200628 05:46:12.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:12.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:12.995" endtime="20200628 05:46:12.996"></status>
</kw>
<msg timestamp="20200628 05:46:12.996" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200628 05:46:12.972" endtime="20200628 05:46:12.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:12.996" endtime="20200628 05:46:12.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.002" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.005" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.998" endtime="20200628 05:46:13.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.007" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:13.006" endtime="20200628 05:46:13.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.008" endtime="20200628 05:46:13.008"></status>
</kw>
<msg timestamp="20200628 05:46:13.009" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:12.998" endtime="20200628 05:46:13.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:13.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:13.009" endtime="20200628 05:46:13.010"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:13.011" endtime="20200628 05:46:13.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.026" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:13.026" endtime="20200628 05:46:13.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.027" endtime="20200628 05:46:13.027"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.010" endtime="20200628 05:46:13.027"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.010" endtime="20200628 05:46:13.028"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.997" endtime="20200628 05:46:13.028"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.997" endtime="20200628 05:46:13.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.032" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.061" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200628 05:46:13.028" endtime="20200628 05:46:13.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.065" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x205af20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.3) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGaR9DiBxV2DVVGXAKFiCa6YtV/D3jubJTW+an59vkkURgVlOwwieusVMvwILRuiK0WmqgThwOFXDt+dpgUlomHDEMQr/dc4yV4zS1nbZu39LyM+T5EYFApI45cHeBBWysGJtxC1B/hhYAxxXiaRsRlq5ndhrzh5ynqFcd5ySDSe4wtbg5kq/02szWFhe3zz6asPK7FobkqMgjZHEvWr9TXXHu2hg4UubGb+ZpKV0y+JHx1AaIJvFc4YiM8pncGOYaVgD+tHbexqr+XsvggxUsBA/A/tnrup3vHURoD/p1u9KYm+YG//ia0Jh+GXv1MM5XAIc/a+4bdF+zhkXVlM4KPeUAefBsRKSB1jCB06ADAgESooHLBIHIDuDJEWyROuKahynqRmw8JZie2N8IYPmSBmnomd3W4j46ZPomUuSwkXZUP0iw55NC0gruKGHWdDj3cYRoXER2/EMw6kT69brjq9hWpd9lFpIMS7EGlwPPotbaEgPfk+4a+P2Dgl1H8cvR8iVOMmd2I2WqqdZG5H120Gr7yoMqxpeeInthuifW3JM5r+J3DsIWAegtqBy1VcCgeYvXdfsyznuGWAFHzUq9Jos2nMJlfShaSxhDrO9whY3ukFvbXwMqtQja2Mr+8PE=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHjuysZ+HBgFMjzqQhfiRNp9XqMjDeo821bQEbGzQMO2k7sEs8DyvZsOV7oi98BfEFqNSps29d0R9nPo/K94z6E7s
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359173056&amp;s=wqJpX2wR+pQcb0i6jfHz/D7bIx1AcY/ysfIvF73H014="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 28 Jun 2020 04:22:22 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 05:46:13 GMT
Cache-Control: no-cache
Expires: Sun, 28 Jun 2020 05:46:13 GMT
Date: Sun, 28 Jun 2020 05:46:13 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sun, 28 Jun 2020 05:46:13 GMT
Date: Sun, 28 Jun 2020 05:46:13 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHjuysZ+HBgFMjzqQhfiRNp9XqMjDeo821bQEbGzQMO2k7sEs8DyvZsOV7oi98BfEFqNSps29d0R9nPo/K94z6E7s
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359173056&amp;s=wqJpX2wR+pQcb0i6jfHz/D7bIx1AcY/ysfIvF73H014="; Path=/; HttpOnly
Last-Modified: Sun, 28 Jun 2020 04:22:22 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200628 05:46:13.064" endtime="20200628 05:46:13.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.065" endtime="20200628 05:46:13.066"></status>
</kw>
<msg timestamp="20200628 05:46:13.066" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200628 05:46:13.028" endtime="20200628 05:46:13.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:13.066" endtime="20200628 05:46:13.067"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:12.961" endtime="20200628 05:46:13.067"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:12.961" endtime="20200628 05:46:13.067" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.073" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:13.070" endtime="20200628 05:46:13.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.077" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:13.076" endtime="20200628 05:46:13.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.077" endtime="20200628 05:46:13.077"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.069" endtime="20200628 05:46:13.078"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.069" endtime="20200628 05:46:13.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.082" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.097" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200628 05:46:13.078" endtime="20200628 05:46:13.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.099" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200628 05:46:13.098" endtime="20200628 05:46:13.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.099" endtime="20200628 05:46:13.100"></status>
</kw>
<msg timestamp="20200628 05:46:13.100" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200628 05:46:13.078" endtime="20200628 05:46:13.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:13.100" endtime="20200628 05:46:13.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.105" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.108" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200628 05:46:13.102" endtime="20200628 05:46:13.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.110" level="INFO">scm</msg>
<status status="PASS" starttime="20200628 05:46:13.109" endtime="20200628 05:46:13.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.110" endtime="20200628 05:46:13.111"></status>
</kw>
<msg timestamp="20200628 05:46:13.111" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200628 05:46:13.102" endtime="20200628 05:46:13.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200628 05:46:13.112" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200628 05:46:13.111" endtime="20200628 05:46:13.112"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:46:13.113" endtime="20200628 05:46:13.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.126" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:46:13.125" endtime="20200628 05:46:13.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.126" endtime="20200628 05:46:13.127"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.113" endtime="20200628 05:46:13.127"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.112" endtime="20200628 05:46:13.127"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.101" endtime="20200628 05:46:13.127"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.101" endtime="20200628 05:46:13.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:46:13.130" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:46:13.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:46:13.158" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200628 05:46:13.128" endtime="20200628 05:46:13.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:46:13.160" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xb4ef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaRhtz4Og9PZnYB/5uHFWOkICZ8+mSo9MNfZFzTkNQTSK6qx+I4KcsGsbxiqqJgx0jj29Cp5CPJF6v/IVIRxnaCmo1nE7C/InucyoMi4qLATAbPSmuRjjNR2B3LjBMbhI9/ztL1RZtNiq5ZcFOvqCfQ6FlN/LFIpRk1kZ7hf2QcrCVtDbZxdkSjswav6XkK7UZ0JV9z61KV9QjpEJCRa3MFk0m1JuTTmk3kJuzecnchkvCNQ211R0CWAGF2DUU30qU42PpaiIAIxYXPDJBMSyGm+6dKMYOEahtonPFjQgoAUB07oCC3+7kHl7oGd0u98jzFMiahwq0VdvIBscp0HWh/Ex1TYfZkpIHWMIHToAMCARKigcsEgcit0KEoJaSjo0N2MM2OyNItpseUMIHsDlJZZDJhEGpfyvBPHGLDsK3H0xbCquVq8NiohCk/vjMdb/4uFKOagOOE04U7ymTdk1a7KbLEuGEPz09MCtVDzAhCckRGTcLET1fucf2atrevEJR6O/tClTpXIKq8E4+Mqt2C9fl/mc0r/j1mT2o3gvwBSawH/+pkNRRjAHZkuFSeiVOwgfVmwrcC/fiTSrPiP41I7T0OaRgqpIg6Np9yEKgbQADzS0g3C2BOn8Ls0o0bRA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Date: Sun, 28 Jun 2020 05:46:13 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+tVPaY30RqLArmrfGQsh97Oi289hJWRJkV9OacIZZlR3H4PNHjrldTycvugA9jtLBJxN78AO3E4VkAZTVmx6iaO1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359173153&amp;s=y0LsjpwsGcsgHZnUJbnHvgvL0FMdD0z98VKGTzfpVrk="; Path=/; HttpOnly
&lt; Last-Modified: Sun, 28 Jun 2020 04:27:56 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 05:46:13 GMT
Cache-Control: no-cache
Expires: Sun, 28 Jun 2020 05:46:13 GMT
Date: Sun, 28 Jun 2020 05:46:13 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sun, 28 Jun 2020 05:46:13 GMT
Date: Sun, 28 Jun 2020 05:46:13 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+tVPaY30RqLArmrfGQsh97Oi289hJWRJkV9OacIZZlR3H4PNHjrldTycvugA9jtLBJxN78AO3E4VkAZTVmx6iaO1
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1593359173153&amp;s=y0LsjpwsGcsgHZnUJbnHvgvL0FMdD0z98VKGTzfpVrk="; Path=/; HttpOnly
Last-Modified: Sun, 28 Jun 2020 04:27:56 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200628 05:46:13.159" endtime="20200628 05:46:13.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:46:13.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:46:13.160" endtime="20200628 05:46:13.161"></status>
</kw>
<msg timestamp="20200628 05:46:13.161" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200628 05:46:13.128" endtime="20200628 05:46:13.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:46:13.162" endtime="20200628 05:46:13.162"></status>
</kw>
<status status="PASS" starttime="20200628 05:46:13.068" endtime="20200628 05:46:13.162"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 05:46:13.068" endtime="20200628 05:46:13.163" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200628 05:46:03.519" endtime="20200628 05:46:13.164"></status>
</suite>
<status status="PASS" starttime="20200628 05:46:03.485" endtime="20200628 05:46:13.167"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
