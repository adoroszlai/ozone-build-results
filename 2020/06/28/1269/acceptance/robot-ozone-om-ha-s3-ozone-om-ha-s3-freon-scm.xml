<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200628 04:47:35.357" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:47:35.424" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:47:44.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:47:44.294" level="INFO">${output} = 2020-06-28 04:47:37,083 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:37,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:35.417" endtime="20200628 04:47:44.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:47:44.295" level="INFO">2020-06-28 04:47:37,083 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:37,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 04:47:37,351 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 04:47:38,681 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-28 04:47:38,681 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-28 04:47:38,682 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-28 04:47:38,682 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-28 04:47:38,682 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-28 04:47:38,682 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-28 04:47:38,682 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-28 04:47:38,685 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-28 04:47:38,691 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:38,729 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-87324, with hadoop as owner.
2020-06-28 04:47:38,806 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-87324/bucket-0-33343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:47:39,378 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 04:47:39,693 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:40,693 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,073
Average Time spent in bucket creation: 00:00:00,041
Average Time spent in key creation: 00:00:00,093
Average Time spent in key write: 00:00:00,814
Total bytes written: 10240
Total Execution time: 00:00:06,277
***************************************************</msg>
<status status="PASS" starttime="20200628 04:47:44.294" endtime="20200628 04:47:44.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:47:44.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:47:44.295" endtime="20200628 04:47:44.296"></status>
</kw>
<msg timestamp="20200628 04:47:44.296" level="INFO">${result} = 2020-06-28 04:47:37,083 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:37,351 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:35.416" endtime="20200628 04:47:44.296"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 04:47:44.297" endtime="20200628 04:47:44.298"></status>
</kw>
<status status="PASS" starttime="20200628 04:47:44.297" endtime="20200628 04:47:44.298"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:47:35.415" endtime="20200628 04:47:44.298" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:47:44.303" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:47:50.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:47:50.139" level="INFO">${output} = 2020-06-28 04:47:45,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:46,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:44.300" endtime="20200628 04:47:50.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:47:50.140" level="INFO">2020-06-28 04:47:45,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:46,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 04:47:46,033 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 04:47:46,199 [main] INFO freon.BaseFreonGenerator: Executing test with prefix kl5cyvj9ai
2020-06-28 04:47:46,227 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:47,247 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:47,381 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-28 04:47:47,461 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:47:48,230 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 04:47:48,248 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:49,248 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 04:47:49,685 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1669.143389, max=1669.143389, mean=1669.143389, stddev=0.0, median=1669.143389, p75=1669.143389, p95=1669.143389, p98=1669.143389, p99=1669.143389, p999=1669.143389, mean_rate=0.4577624291215303, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 04:47:49,695 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-28 04:47:49,695 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 04:47:49,695 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 04:47:50.139" endtime="20200628 04:47:50.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:47:50.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:47:50.140" endtime="20200628 04:47:50.141"></status>
</kw>
<msg timestamp="20200628 04:47:50.141" level="INFO">${result} = 2020-06-28 04:47:45,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:46,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:44.300" endtime="20200628 04:47:50.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 04:47:50.142" endtime="20200628 04:47:50.142"></status>
</kw>
<status status="PASS" starttime="20200628 04:47:50.141" endtime="20200628 04:47:50.142"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:47:44.299" endtime="20200628 04:47:50.143" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:47:50.149" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:47:54.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:47:54.489" level="INFO">${output} = 2020-06-28 04:47:51,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:51,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:50.144" endtime="20200628 04:47:54.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:47:54.490" level="INFO">2020-06-28 04:47:51,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:51,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 04:47:51,955 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 04:47:52,187 [main] INFO freon.BaseFreonGenerator: Executing test with prefix wu8ongvi9o
2020-06-28 04:47:52,217 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:53,219 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:54,221 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 04:47:54,442 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=88.015522, max=88.015522, mean=88.015522, stddev=0.0, median=88.015522, p75=88.015522, p95=88.015522, p98=88.015522, p99=88.015522, p999=88.015522, mean_rate=0.8784758137516265, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 04:47:54,443 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-28 04:47:54,444 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 04:47:54,446 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 04:47:54.489" endtime="20200628 04:47:54.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:47:54.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:47:54.490" endtime="20200628 04:47:54.491"></status>
</kw>
<msg timestamp="20200628 04:47:54.492" level="INFO">${result} = 2020-06-28 04:47:51,715 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:51,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:50.144" endtime="20200628 04:47:54.492"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 04:47:54.492" endtime="20200628 04:47:54.493"></status>
</kw>
<status status="PASS" starttime="20200628 04:47:54.492" endtime="20200628 04:47:54.493"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:47:50.143" endtime="20200628 04:47:54.493" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:47:54.498" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:47:58.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:47:58.791" level="INFO">${output} = 2020-06-28 04:47:56,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:56,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:54.495" endtime="20200628 04:47:58.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:47:58.793" level="INFO">2020-06-28 04:47:56,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:56,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 04:47:56,286 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 04:47:56,477 [main] INFO freon.BaseFreonGenerator: Executing test with prefix u2uh4vez5g
2020-06-28 04:47:56,497 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:57,498 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-28 04:47:58,500 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-28 04:47:58,743 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=32.466824, max=32.466824, mean=32.466824, stddev=0.0, median=32.466824, p75=32.466824, p95=32.466824, p98=32.466824, p99=32.466824, p999=32.466824, mean_rate=0.8708773668053006, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-28 04:47:58,747 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-28 04:47:58,749 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-28 04:47:58,749 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200628 04:47:58.792" endtime="20200628 04:47:58.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:47:58.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:47:58.793" endtime="20200628 04:47:58.794"></status>
</kw>
<msg timestamp="20200628 04:47:58.794" level="INFO">${result} = 2020-06-28 04:47:56,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:47:56,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:47:54.494" endtime="20200628 04:47:58.794"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200628 04:47:58.795" endtime="20200628 04:47:58.796"></status>
</kw>
<status status="PASS" starttime="20200628 04:47:58.795" endtime="20200628 04:47:58.796"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:47:54.494" endtime="20200628 04:47:58.796" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200628 04:47:35.389" endtime="20200628 04:47:58.798"></status>
</suite>
<status status="PASS" starttime="20200628 04:47:35.357" endtime="20200628 04:47:58.801"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
