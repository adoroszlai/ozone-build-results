<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200628 04:55:20.722" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200628 04:55:20.778" endtime="20200628 04:55:20.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:55:20.784" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:55:20.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:55:20.873" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 04:55:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 28 Jun 2020 04:22:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200628 04:55:20.779" endtime="20200628 04:55:20.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:55:20.874" level="INFO">HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 04:55:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 28 Jun 2020 04:22:10 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200628 04:55:20.873" endtime="20200628 04:55:20.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:55:20.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:55:20.874" endtime="20200628 04:55:20.875"></status>
</kw>
<msg timestamp="20200628 04:55:20.875" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sun, 28 Jun 2020 04:55:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sun, 28 Jun 2020 04:22:10 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200628 04:55:20.779" endtime="20200628 04:55:20.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200628 04:55:20.875" endtime="20200628 04:55:20.875"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:55:20.778" endtime="20200628 04:55:20.876" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:55:20.877" endtime="20200628 04:55:20.877"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:55:20.886" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:31.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:31.140" level="INFO">${output} = 2020-06-28 04:55:22,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:55:22,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:55:20.878" endtime="20200628 04:56:31.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:31.142" level="INFO">2020-06-28 04:55:22,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:55:22,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-28 04:55:22,955 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-28 04:55:25,056 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-28 04:55:25,057 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-28 04:55:25,057 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-28 04:55:25,057 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-28 04:55:25,058 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-28 04:55:25,058 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-28 04:55:25,058 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-28 04:55:25,080 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-28 04:55:25,082 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-28 04:55:25,092 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-28 04:55:25,148 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83948, with hadoop as owner.
2020-06-28 04:55:25,419 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-20983, with hadoop as owner.
2020-06-28 04:55:25,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-96992, with hadoop as owner.
2020-06-28 04:55:25,438 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-16276, with hadoop as owner.
2020-06-28 04:55:25,452 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-87936, with hadoop as owner.
2020-06-28 04:55:25,477 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83948/bucket-0-52468, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,568 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20983/bucket-0-74311, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-96992/bucket-0-69634, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,592 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16276/bucket-0-75023, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87936/bucket-0-22816, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83948/bucket-1-94200, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20983/bucket-1-17138, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-96992/bucket-1-17980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,640 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16276/bucket-1-80250, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,652 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87936/bucket-1-82229, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83948/bucket-2-39469, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,672 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20983/bucket-2-19287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-96992/bucket-2-22205, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,688 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16276/bucket-2-44299, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,704 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87936/bucket-2-59429, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,716 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83948/bucket-3-66188, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,727 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20983/bucket-3-87620, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,733 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-96992/bucket-3-99615, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,767 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16276/bucket-3-79647, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,777 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87936/bucket-3-83170, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,788 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83948/bucket-4-67960, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,796 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-20983/bucket-4-37247, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,806 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-96992/bucket-4-09422, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,812 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16276/bucket-4-53372, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:25,819 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-87936/bucket-4-20062, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-28 04:55:26,103 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-28 04:55:26,791 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-28 04:55:27,104 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-28 04:55:28,104 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-28 04:55:29,105 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-28 04:55:30,105 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-06-28 04:55:31,106 [Thread-7] INFO freon.ProgressBar: Progress: 7.20 % (9 out of 125)
2020-06-28 04:55:32,106 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-06-28 04:55:33,107 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-28 04:55:34,108 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-28 04:55:35,109 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-28 04:55:36,109 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-28 04:55:37,110 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-28 04:55:38,115 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-28 04:55:39,116 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-28 04:55:40,116 [Thread-7] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2020-06-28 04:55:41,118 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-06-28 04:55:42,118 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-28 04:55:43,119 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-28 04:55:44,119 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-06-28 04:55:45,120 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-28 04:55:46,120 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-28 04:55:47,121 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-28 04:55:48,121 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-28 04:55:49,122 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-28 04:55:50,122 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-28 04:55:51,123 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-28 04:55:52,123 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-28 04:55:53,124 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-06-28 04:55:54,124 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-28 04:55:55,125 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-28 04:55:56,126 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-28 04:55:57,126 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-28 04:55:58,127 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-28 04:55:59,127 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-28 04:56:00,128 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-28 04:56:01,128 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-28 04:56:02,128 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-28 04:56:03,129 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-06-28 04:56:04,129 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-06-28 04:56:05,130 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-06-28 04:56:06,133 [Thread-7] INFO freon.ProgressBar: Progress: 73.60 % (92 out of 125)
2020-06-28 04:56:07,143 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-28 04:56:08,144 [Thread-7] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2020-06-28 04:56:09,144 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-28 04:56:10,145 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-28 04:56:11,145 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-06-28 04:56:12,146 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-06-28 04:56:13,146 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-28 04:56:14,146 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-28 04:56:15,148 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-06-28 04:56:16,149 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-06-28 04:56:17,149 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-06-28 04:56:18,150 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-28 04:56:19,150 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-06-28 04:56:20,151 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-06-28 04:56:21,152 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-28 04:56:22,152 [Thread-7] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2020-06-28 04:56:23,153 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-06-28 04:56:24,153 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-06-28 04:56:25,154 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-06-28 04:56:26,155 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,359
Average Time spent in bucket creation: 00:00:00,236
Average Time spent in key creation: 00:00:02,211
Average Time spent in key write: 00:00:00,868
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,628
***************************************************</msg>
<status status="PASS" starttime="20200628 04:56:31.141" endtime="20200628 04:56:31.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:31.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:31.142" endtime="20200628 04:56:31.143"></status>
</kw>
<msg timestamp="20200628 04:56:31.143" level="INFO">${result} = 2020-06-28 04:55:22,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-28 04:55:22,955 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200628 04:55:20.877" endtime="20200628 04:56:31.143"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:31.144" endtime="20200628 04:56:31.145"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:31.144" endtime="20200628 04:56:31.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:31.145" endtime="20200628 04:56:31.145"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200628 04:55:20.876" endtime="20200628 04:56:31.146" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200628 04:55:20.753" endtime="20200628 04:56:31.147"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200628 04:56:31.159" level="INFO">${random} = 49014</msg>
<status status="PASS" starttime="20200628 04:56:31.158" endtime="20200628 04:56:31.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200628 04:56:31.159" level="INFO">${prefix} = 49014</msg>
<status status="PASS" starttime="20200628 04:56:31.159" endtime="20200628 04:56:31.159"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:31.158" endtime="20200628 04:56:31.160"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:31.160" endtime="20200628 04:56:31.161"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:31.165" level="INFO">Running command 'ozone sh volume info o3://om:9862/49014-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:33.733" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 04:56:33.733" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49014-rpcwoport is not found</msg>
<status status="PASS" starttime="20200628 04:56:31.162" endtime="20200628 04:56:33.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:33.734" level="INFO">VOLUME_NOT_FOUND Volume 49014-rpcwoport is not found</msg>
<status status="PASS" starttime="20200628 04:56:33.734" endtime="20200628 04:56:33.735"></status>
</kw>
<msg timestamp="20200628 04:56:33.735" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49014-rpcwoport is not found</msg>
<status status="PASS" starttime="20200628 04:56:31.162" endtime="20200628 04:56:33.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:33.735" endtime="20200628 04:56:33.736"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:33.739" level="INFO">Running command 'ozone sh volume create o3://om:9862/49014-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:36.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:36.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:56:33.736" endtime="20200628 04:56:36.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:36.455" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:56:36.455" endtime="20200628 04:56:36.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:36.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:36.455" endtime="20200628 04:56:36.456"></status>
</kw>
<msg timestamp="20200628 04:56:36.456" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 04:56:33.736" endtime="20200628 04:56:36.456"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:36.456" endtime="20200628 04:56:36.457"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:36.459" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="49014-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:39.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:39.464" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200628 04:56:36.458" endtime="20200628 04:56:39.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:39.465" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 04:56:39.464" endtime="20200628 04:56:39.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:39.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:39.465" endtime="20200628 04:56:39.466"></status>
</kw>
<msg timestamp="20200628 04:56:39.466" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200628 04:56:36.457" endtime="20200628 04:56:39.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:39.466" endtime="20200628 04:56:39.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:39.469" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49014-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:42.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:42.512" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200628 04:56:39.467" endtime="20200628 04:56:42.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:42.513" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 04:56:42.512" endtime="20200628 04:56:42.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:42.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:42.514" endtime="20200628 04:56:42.514"></status>
</kw>
<msg timestamp="20200628 04:56:42.514" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:56:36.347Z",
  "modificationTime": "2020-06-28T04:56:36.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200628 04:56:39.467" endtime="20200628 04:56:42.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:42.515" endtime="20200628 04:56:42.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:42.518" level="INFO">Running command 'ozone sh volume update o3://om:9862/49014-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:45.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:45.563" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49014-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T04:56:36.347Z",
  "modificationTime" : "2020-06-28T04:56:45.116Z",
  "acl...</msg>
<status status="PASS" starttime="20200628 04:56:42.516" endtime="20200628 04:56:45.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:45.564" level="INFO">{
  "metadata" : { },
  "name" : "49014-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T04:56:36.347Z",
  "modificationTime" : "2020-06-28T04:56:45.116Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200628 04:56:45.564" endtime="20200628 04:56:45.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:45.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:45.565" endtime="20200628 04:56:45.565"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:42.515" endtime="20200628 04:56:45.565"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:45.569" level="INFO">Running command 'ozone sh volume info o3://om:9862/49014-rpcwoport | jq -r '. | select(.name=="49014-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:48.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:48.577" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200628 04:56:45.566" endtime="20200628 04:56:48.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:48.578" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200628 04:56:48.577" endtime="20200628 04:56:48.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:48.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:48.578" endtime="20200628 04:56:48.579"></status>
</kw>
<msg timestamp="20200628 04:56:48.579" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200628 04:56:45.566" endtime="20200628 04:56:48.579"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:48.579" endtime="20200628 04:56:48.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:48.582" level="INFO">Running command 'ozone sh bucket create o3://om:9862/49014-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:51.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:51.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:56:48.580" endtime="20200628 04:56:51.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:51.335" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:56:51.334" endtime="20200628 04:56:51.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:51.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:51.335" endtime="20200628 04:56:51.335"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:48.580" endtime="20200628 04:56:51.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:51.339" level="INFO">Running command 'ozone sh bucket info o3://om:9862/49014-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:54.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:54.332" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200628 04:56:51.336" endtime="20200628 04:56:54.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:54.333" level="INFO">DISK</msg>
<status status="PASS" starttime="20200628 04:56:54.332" endtime="20200628 04:56:54.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:54.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:54.333" endtime="20200628 04:56:54.334"></status>
</kw>
<msg timestamp="20200628 04:56:54.334" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200628 04:56:51.336" endtime="20200628 04:56:54.334"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:54.334" endtime="20200628 04:56:54.335"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:54.338" level="INFO">Running command 'ozone sh bucket list o3://om:9862/49014-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:56:57.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:56:57.264" level="INFO">${output} = 49014-rpcwoport</msg>
<status status="PASS" starttime="20200628 04:56:54.336" endtime="20200628 04:56:57.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:56:57.265" level="INFO">49014-rpcwoport</msg>
<status status="PASS" starttime="20200628 04:56:57.265" endtime="20200628 04:56:57.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:56:57.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:56:57.266" endtime="20200628 04:56:57.266"></status>
</kw>
<msg timestamp="20200628 04:56:57.266" level="INFO">${result} = 49014-rpcwoport</msg>
<status status="PASS" starttime="20200628 04:56:54.335" endtime="20200628 04:56:57.266"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200628 04:56:57.267" endtime="20200628 04:56:57.267"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:56:57.272" level="INFO">Running command 'ozone sh key put o3://om:9862/49014-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:02.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:02.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:56:57.269" endtime="20200628 04:57:02.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:02.058" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:02.057" endtime="20200628 04:57:02.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:02.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:02.058" endtime="20200628 04:57:02.059"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:57.268" endtime="20200628 04:57:02.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:02.062" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:02.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:02.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:02.060" endtime="20200628 04:57:02.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:02.065" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:02.065" endtime="20200628 04:57:02.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:02.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:02.066" endtime="20200628 04:57:02.066"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:02.059" endtime="20200628 04:57:02.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:02.070" level="INFO">Running command 'ozone sh key get o3://om:9862/49014-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:07.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:07.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:02.067" endtime="20200628 04:57:07.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:07.495" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:07.495" endtime="20200628 04:57:07.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:07.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:07.496" endtime="20200628 04:57:07.497"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:02.067" endtime="20200628 04:57:07.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:07.499" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:07.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:07.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:07.497" endtime="20200628 04:57:07.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:07.504" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:07.504" endtime="20200628 04:57:07.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:07.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:07.505" endtime="20200628 04:57:07.505"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:07.497" endtime="20200628 04:57:07.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:07.508" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/49014-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:12.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:12.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:07.506" endtime="20200628 04:57:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:12.417" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:12.417" endtime="20200628 04:57:12.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:12.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:12.418" endtime="20200628 04:57:12.418"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:07.505" endtime="20200628 04:57:12.418"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:12.421" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:12.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:12.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:12.419" endtime="20200628 04:57:12.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:12.424" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:12.424" endtime="20200628 04:57:12.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:12.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:12.425" endtime="20200628 04:57:12.425"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:12.419" endtime="20200628 04:57:12.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:12.428" level="INFO">Running command 'ozone sh key get o3://om:9862/49014-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:17.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:17.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:12.426" endtime="20200628 04:57:17.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:17.163" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:17.162" endtime="20200628 04:57:17.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:17.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:17.163" endtime="20200628 04:57:17.164"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:12.426" endtime="20200628 04:57:17.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:17.167" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:17.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:17.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:17.165" endtime="20200628 04:57:17.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:17.170" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:17.169" endtime="20200628 04:57:17.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:17.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:17.170" endtime="20200628 04:57:17.171"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:17.164" endtime="20200628 04:57:17.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:17.173" level="INFO">Running command 'ozone sh key info o3://om:9862/49014-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:20.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:20.056" level="INFO">${output} = {
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:57:10.073Z",
  "modificationTime": "2020-06-28T04:57:11.881Z",...</msg>
<status status="PASS" starttime="20200628 04:57:17.172" endtime="20200628 04:57:20.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:20.057" level="INFO">{
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:57:10.073Z",
  "modificationTime": "2020-06-28T04:57:11.881Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419834597998720,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 04:57:20.056" endtime="20200628 04:57:20.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:20.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:20.057" endtime="20200628 04:57:20.058"></status>
</kw>
<msg timestamp="20200628 04:57:20.058" level="INFO">${result} = {
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:57:10.073Z",
  "modificationTime": "2020-06-28T04:57:11.881Z",...</msg>
<status status="PASS" starttime="20200628 04:57:17.171" endtime="20200628 04:57:20.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:20.058" endtime="20200628 04:57:20.058"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:20.062" level="INFO">Running command 'ozone sh key delete o3://om:9862/49014-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:22.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:22.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:20.059" endtime="20200628 04:57:22.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:22.889" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:22.888" endtime="20200628 04:57:22.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:22.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:22.889" endtime="20200628 04:57:22.890"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:20.059" endtime="20200628 04:57:22.890"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:22.895" level="INFO">Running command 'ozone sh key cp o3://om:9862/49014-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:27.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:27.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:22.891" endtime="20200628 04:57:27.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:27.923" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:27.922" endtime="20200628 04:57:27.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:27.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:27.923" endtime="20200628 04:57:27.924"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:22.890" endtime="20200628 04:57:27.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:27.927" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:27.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:27.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:27.925" endtime="20200628 04:57:27.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:27.930" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:27.930" endtime="20200628 04:57:27.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:27.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:27.931" endtime="20200628 04:57:27.932"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:27.924" endtime="20200628 04:57:27.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:27.936" level="INFO">Running command 'ozone sh key get o3://om:9862/49014-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:32.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:32.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:27.933" endtime="20200628 04:57:32.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:32.521" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:32.520" endtime="20200628 04:57:32.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:32.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:32.521" endtime="20200628 04:57:32.521"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:27.932" endtime="20200628 04:57:32.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:32.524" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:32.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:32.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:32.522" endtime="20200628 04:57:32.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:32.528" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:32.527" endtime="20200628 04:57:32.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:32.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:32.528" endtime="20200628 04:57:32.529"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:32.522" endtime="20200628 04:57:32.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:32.532" level="INFO">Running command 'ozone sh key delete o3://om:9862/49014-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:35.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:35.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:32.530" endtime="20200628 04:57:35.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:35.311" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:35.310" endtime="20200628 04:57:35.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:35.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:35.311" endtime="20200628 04:57:35.312"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:32.529" endtime="20200628 04:57:35.312"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:35.316" level="INFO">Running command 'ozone sh key get o3://om:9862/49014-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:38.026" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 04:57:38.026" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 04:57:35.313" endtime="20200628 04:57:38.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:38.027" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 04:57:38.027" endtime="20200628 04:57:38.028"></status>
</kw>
<msg timestamp="20200628 04:57:38.028" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 04:57:35.312" endtime="20200628 04:57:38.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:38.028" endtime="20200628 04:57:38.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:38.032" level="INFO">Running command 'ozone sh key get --force o3://om:9862/49014-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:42.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:42.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:38.029" endtime="20200628 04:57:42.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:42.590" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:42.589" endtime="20200628 04:57:42.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:42.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:42.590" endtime="20200628 04:57:42.591"></status>
</kw>
<msg timestamp="20200628 04:57:42.591" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 04:57:38.029" endtime="20200628 04:57:42.591"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:42.591" endtime="20200628 04:57:42.592"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:42.595" level="INFO">Running command 'ozone sh key info o3://om:9862/49014-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:45.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:45.536" level="INFO">${output} = {
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:56:59.801Z",
  "modificationTime": "2020-06-28T04:57:01.565Z",
  "re...</msg>
<status status="PASS" starttime="20200628 04:57:42.592" endtime="20200628 04:57:45.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:45.537" level="INFO">{
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:56:59.801Z",
  "modificationTime": "2020-06-28T04:57:01.565Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419833924878460,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 04:57:45.537" endtime="20200628 04:57:45.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:45.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:45.538" endtime="20200628 04:57:45.538"></status>
</kw>
<msg timestamp="20200628 04:57:45.538" level="INFO">${result} = {
  "volumeName": "49014-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:56:59.801Z",
  "modificationTime": "2020-06-28T04:57:01.565Z",
  "re...</msg>
<status status="PASS" starttime="20200628 04:57:42.592" endtime="20200628 04:57:45.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:45.539" endtime="20200628 04:57:45.539"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:45.544" level="INFO">Running command 'ozone sh key list o3://om:9862/49014-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:48.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:48.611" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200628 04:57:45.540" endtime="20200628 04:57:48.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:48.612" level="INFO">key1</msg>
<status status="PASS" starttime="20200628 04:57:48.611" endtime="20200628 04:57:48.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:48.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:48.612" endtime="20200628 04:57:48.613"></status>
</kw>
<msg timestamp="20200628 04:57:48.613" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200628 04:57:45.539" endtime="20200628 04:57:48.613"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:48.613" endtime="20200628 04:57:48.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:48.616" level="INFO">Running command 'ozone sh key rename o3://om:9862/49014-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:51.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:51.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:48.615" endtime="20200628 04:57:51.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:51.541" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:51.540" endtime="20200628 04:57:51.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:51.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:51.542" endtime="20200628 04:57:51.543"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:48.614" endtime="20200628 04:57:51.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:51.547" level="INFO">Running command 'ozone sh key list o3://om:9862/49014-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:54.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:54.441" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200628 04:57:51.544" endtime="20200628 04:57:54.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:54.442" level="INFO">key2</msg>
<status status="PASS" starttime="20200628 04:57:54.442" endtime="20200628 04:57:54.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:54.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:54.443" endtime="20200628 04:57:54.443"></status>
</kw>
<msg timestamp="20200628 04:57:54.443" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200628 04:57:51.543" endtime="20200628 04:57:54.444"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200628 04:57:54.444" endtime="20200628 04:57:54.444"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:54.447" level="INFO">Running command 'ozone sh key delete o3://om:9862/49014-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:57.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:57.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:54.445" endtime="20200628 04:57:57.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:57.263" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:57.262" endtime="20200628 04:57:57.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:57.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:57.263" endtime="20200628 04:57:57.264"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:54.444" endtime="20200628 04:57:57.264"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:57.268" endtime="20200628 04:57:57.264"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:57.267" endtime="20200628 04:57:57.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:57.268" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/49014-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:57:59.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:57:59.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:57:57.265" endtime="20200628 04:57:59.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:57:59.903" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:57:59.903" endtime="20200628 04:57:59.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:57:59.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:57:59.904" endtime="20200628 04:57:59.904"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:57.264" endtime="20200628 04:57:59.904"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:57:59.907" level="INFO">Running command 'ozone sh volume delete o3://om:9862/49014-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:02.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:02.661" level="INFO">${output} = Volume 49014-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200628 04:57:59.905" endtime="20200628 04:58:02.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:02.663" level="INFO">Volume 49014-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200628 04:58:02.662" endtime="20200628 04:58:02.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:02.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:02.663" endtime="20200628 04:58:02.663"></status>
</kw>
<status status="PASS" starttime="20200628 04:57:59.905" endtime="20200628 04:58:02.664"></status>
</kw>
<status status="PASS" starttime="20200628 04:56:31.161" endtime="20200628 04:58:02.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 04:56:31.160" endtime="20200628 04:58:02.664" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:02.666" endtime="20200628 04:58:02.666"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:02.670" level="INFO">Running command 'ozone sh volume create o3://om:9862/49014-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:05.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:05.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:58:02.668" endtime="20200628 04:58:05.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:05.447" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:58:05.446" endtime="20200628 04:58:05.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:05.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:05.447" endtime="20200628 04:58:05.448"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:02.667" endtime="20200628 04:58:05.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:05.453" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49014-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:08.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:08.467" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:05.450" endtime="20200628 04:58:08.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:08.468" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:08.467" endtime="20200628 04:58:08.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:08.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:08.469" endtime="20200628 04:58:08.470"></status>
</kw>
<msg timestamp="20200628 04:58:08.470" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:05.449" endtime="20200628 04:58:08.470"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:08.470" endtime="20200628 04:58:08.471"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:08.474" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/49014-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:11.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:11.191" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:08.472" endtime="20200628 04:58:11.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:11.192" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:11.192" endtime="20200628 04:58:11.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:11.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:11.193" endtime="20200628 04:58:11.194"></status>
</kw>
<msg timestamp="20200628 04:58:11.194" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:08.471" endtime="20200628 04:58:11.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:11.197" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49014-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:14.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:14.509" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:11.195" endtime="20200628 04:58:14.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:14.511" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:14.510" endtime="20200628 04:58:14.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:14.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:14.511" endtime="20200628 04:58:14.512"></status>
</kw>
<msg timestamp="20200628 04:58:14.512" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:11.194" endtime="20200628 04:58:14.512"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:14.512" endtime="20200628 04:58:14.513"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:14.516" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/49014-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:17.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:17.400" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200628 04:58:14.514" endtime="20200628 04:58:17.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:17.401" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200628 04:58:17.401" endtime="20200628 04:58:17.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:17.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:17.402" endtime="20200628 04:58:17.403"></status>
</kw>
<msg timestamp="20200628 04:58:17.403" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200628 04:58:14.513" endtime="20200628 04:58:17.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:17.407" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49014-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:20.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:20.464" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:17.404" endtime="20200628 04:58:20.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:20.465" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:20.464" endtime="20200628 04:58:20.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:20.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:20.465" endtime="20200628 04:58:20.466"></status>
</kw>
<msg timestamp="20200628 04:58:20.466" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:17.404" endtime="20200628 04:58:20.466"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:20.466" endtime="20200628 04:58:20.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:20.471" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/49014-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:23.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:23.232" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:20.468" endtime="20200628 04:58:23.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:23.234" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:23.233" endtime="20200628 04:58:23.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:23.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:23.234" endtime="20200628 04:58:23.234"></status>
</kw>
<msg timestamp="20200628 04:58:23.235" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:20.468" endtime="20200628 04:58:23.235"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:23.237" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49014-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:26.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:26.265" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200628 04:58:23.236" endtime="20200628 04:58:26.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:26.266" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:26.266" endtime="20200628 04:58:26.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:26.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:26.267" endtime="20200628 04:58:26.267"></status>
</kw>
<msg timestamp="20200628 04:58:26.268" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200628 04:58:23.235" endtime="20200628 04:58:26.268"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:26.268" endtime="20200628 04:58:26.268"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:26.269" endtime="20200628 04:58:26.270"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:02.667" endtime="20200628 04:58:26.270"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 04:58:02.665" endtime="20200628 04:58:26.270" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:26.271" endtime="20200628 04:58:26.272"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:26.277" level="INFO">Running command 'ozone sh bucket create o3://om:9862/49014-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:29.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:29.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:58:26.274" endtime="20200628 04:58:29.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:29.041" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:58:29.040" endtime="20200628 04:58:29.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:29.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:29.041" endtime="20200628 04:58:29.042"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:26.273" endtime="20200628 04:58:29.042"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:29.046" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49014-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:32.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:32.051" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:29.044" endtime="20200628 04:58:32.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:32.052" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:32.051" endtime="20200628 04:58:32.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:32.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:32.053" endtime="20200628 04:58:32.053"></status>
</kw>
<msg timestamp="20200628 04:58:32.053" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:29.042" endtime="20200628 04:58:32.053"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:32.054" endtime="20200628 04:58:32.054"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:32.057" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/49014-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:34.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:34.709" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200628 04:58:32.055" endtime="20200628 04:58:34.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:34.711" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200628 04:58:34.710" endtime="20200628 04:58:34.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:34.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:34.711" endtime="20200628 04:58:34.711"></status>
</kw>
<msg timestamp="20200628 04:58:34.712" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200628 04:58:32.054" endtime="20200628 04:58:34.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:34.716" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49014-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:37.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:37.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:34.712" endtime="20200628 04:58:37.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:37.749" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:37.749" endtime="20200628 04:58:37.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:37.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:37.750" endtime="20200628 04:58:37.750"></status>
</kw>
<msg timestamp="20200628 04:58:37.751" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:34.712" endtime="20200628 04:58:37.751"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:37.751" endtime="20200628 04:58:37.752"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:37.754" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/49014-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:40.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:40.408" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:58:37.753" endtime="20200628 04:58:40.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:40.409" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:58:40.409" endtime="20200628 04:58:40.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:40.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:40.410" endtime="20200628 04:58:40.410"></status>
</kw>
<msg timestamp="20200628 04:58:40.411" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:58:37.752" endtime="20200628 04:58:40.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:40.415" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49014-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:43.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:43.467" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:40.412" endtime="20200628 04:58:43.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:43.468" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:43.468" endtime="20200628 04:58:43.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:43.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:43.469" endtime="20200628 04:58:43.469"></status>
</kw>
<msg timestamp="20200628 04:58:43.469" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:40.411" endtime="20200628 04:58:43.470"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:43.470" endtime="20200628 04:58:43.471"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:43.474" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/49014-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:46.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:46.259" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:43.471" endtime="20200628 04:58:46.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:46.260" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:46.260" endtime="20200628 04:58:46.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:46.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:46.261" endtime="20200628 04:58:46.261"></status>
</kw>
<msg timestamp="20200628 04:58:46.261" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:58:43.471" endtime="20200628 04:58:46.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:46.265" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49014-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:49.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:49.167" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200628 04:58:46.262" endtime="20200628 04:58:49.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:49.168" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:49.168" endtime="20200628 04:58:49.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:49.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:49.169" endtime="20200628 04:58:49.169"></status>
</kw>
<msg timestamp="20200628 04:58:49.170" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200628 04:58:46.262" endtime="20200628 04:58:49.170"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:49.170" endtime="20200628 04:58:49.170"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:49.171" endtime="20200628 04:58:49.171"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:26.272" endtime="20200628 04:58:49.172"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 04:58:26.270" endtime="20200628 04:58:49.172" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:49.174" endtime="20200628 04:58:49.174"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:49.179" level="INFO">Running command 'ozone sh key put o3://om:9862/49014-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:54.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:54.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:58:49.175" endtime="20200628 04:58:54.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:54.128" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:58:54.128" endtime="20200628 04:58:54.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:54.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:54.129" endtime="20200628 04:58:54.129"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:49.175" endtime="20200628 04:58:54.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:54.132" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49014-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:57.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:57.016" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:54.130" endtime="20200628 04:58:57.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:57.017" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:58:57.017" endtime="20200628 04:58:57.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:57.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:57.018" endtime="20200628 04:58:57.018"></status>
</kw>
<msg timestamp="20200628 04:58:57.019" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:54.130" endtime="20200628 04:58:57.019"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:58:57.019" endtime="20200628 04:58:57.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:57.024" level="INFO">Running command 'ozone sh key addacl o3://om:9862/49014-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:58:59.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:58:59.783" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:57.020" endtime="20200628 04:58:59.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:58:59.784" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:59.783" endtime="20200628 04:58:59.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:58:59.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:58:59.784" endtime="20200628 04:58:59.785"></status>
</kw>
<msg timestamp="20200628 04:58:59.785" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200628 04:58:57.020" endtime="20200628 04:58:59.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:58:59.789" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49014-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:02.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:02.790" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:59.786" endtime="20200628 04:59:02.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:02.791" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:59:02.790" endtime="20200628 04:59:02.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:02.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:02.791" endtime="20200628 04:59:02.792"></status>
</kw>
<msg timestamp="20200628 04:59:02.792" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:58:59.785" endtime="20200628 04:59:02.792"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:02.792" endtime="20200628 04:59:02.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:02.798" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/49014-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:05.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:05.585" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:59:02.795" endtime="20200628 04:59:05.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:05.586" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:59:05.586" endtime="20200628 04:59:05.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:05.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:05.587" endtime="20200628 04:59:05.587"></status>
</kw>
<msg timestamp="20200628 04:59:05.587" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200628 04:59:02.794" endtime="20200628 04:59:05.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:05.591" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49014-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:08.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:08.360" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:59:05.588" endtime="20200628 04:59:08.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:08.361" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:59:08.360" endtime="20200628 04:59:08.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:08.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:08.361" endtime="20200628 04:59:08.362"></status>
</kw>
<msg timestamp="20200628 04:59:08.362" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200628 04:59:05.588" endtime="20200628 04:59:08.362"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:08.362" endtime="20200628 04:59:08.363"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:08.365" level="INFO">Running command 'ozone sh key setacl o3://om:9862/49014-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:11.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:11.224" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:59:08.363" endtime="20200628 04:59:11.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:11.225" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:59:11.225" endtime="20200628 04:59:11.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:11.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:11.226" endtime="20200628 04:59:11.226"></status>
</kw>
<msg timestamp="20200628 04:59:11.227" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200628 04:59:08.363" endtime="20200628 04:59:11.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:11.230" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49014-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:14.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:14.156" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200628 04:59:11.228" endtime="20200628 04:59:14.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:14.157" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200628 04:59:14.156" endtime="20200628 04:59:14.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:14.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:14.157" endtime="20200628 04:59:14.158"></status>
</kw>
<msg timestamp="20200628 04:59:14.159" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200628 04:59:11.227" endtime="20200628 04:59:14.159"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:14.159" endtime="20200628 04:59:14.160"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:14.160" endtime="20200628 04:59:14.161"></status>
</kw>
<status status="PASS" starttime="20200628 04:58:49.174" endtime="20200628 04:59:14.161"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 04:58:49.173" endtime="20200628 04:59:14.161" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:14.162" endtime="20200628 04:59:14.163"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:14.166" level="INFO">Running command 'ozone sh volume info o3:///49014-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:16.847" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 04:59:16.848" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49014-rpcwport is not found</msg>
<status status="PASS" starttime="20200628 04:59:14.164" endtime="20200628 04:59:16.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:16.849" level="INFO">VOLUME_NOT_FOUND Volume 49014-rpcwport is not found</msg>
<status status="PASS" starttime="20200628 04:59:16.848" endtime="20200628 04:59:16.849"></status>
</kw>
<msg timestamp="20200628 04:59:16.849" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49014-rpcwport is not found</msg>
<status status="PASS" starttime="20200628 04:59:14.164" endtime="20200628 04:59:16.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:16.849" endtime="20200628 04:59:16.850"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:16.853" level="INFO">Running command 'ozone sh volume create o3:///49014-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:19.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:19.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:16.850" endtime="20200628 04:59:19.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:19.647" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:19.646" endtime="20200628 04:59:19.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:19.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:19.647" endtime="20200628 04:59:19.647"></status>
</kw>
<msg timestamp="20200628 04:59:19.648" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 04:59:16.850" endtime="20200628 04:59:19.648"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:19.648" endtime="20200628 04:59:19.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:19.651" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="49014-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:22.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:22.974" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200628 04:59:19.649" endtime="20200628 04:59:22.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:22.975" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 04:59:22.975" endtime="20200628 04:59:22.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:22.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:22.976" endtime="20200628 04:59:22.976"></status>
</kw>
<msg timestamp="20200628 04:59:22.976" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200628 04:59:19.648" endtime="20200628 04:59:22.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:22.977" endtime="20200628 04:59:22.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:22.980" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49014-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:25.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:25.872" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200628 04:59:22.978" endtime="20200628 04:59:25.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:25.873" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 04:59:25.872" endtime="20200628 04:59:25.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:25.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:25.874" endtime="20200628 04:59:25.874"></status>
</kw>
<msg timestamp="20200628 04:59:25.874" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T04:59:19.540Z",
  "modificationTime": "2020-06-28T04:59:19.540Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200628 04:59:22.978" endtime="20200628 04:59:25.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:25.875" endtime="20200628 04:59:25.875"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:25.878" level="INFO">Running command 'ozone sh volume update o3:///49014-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:28.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:28.728" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49014-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T04:59:19.540Z",
  "modificationTime" : "2020-06-28T04:59:28.380Z",
  "acls...</msg>
<status status="PASS" starttime="20200628 04:59:25.876" endtime="20200628 04:59:28.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:28.730" level="INFO">{
  "metadata" : { },
  "name" : "49014-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T04:59:19.540Z",
  "modificationTime" : "2020-06-28T04:59:28.380Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200628 04:59:28.729" endtime="20200628 04:59:28.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:28.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:28.730" endtime="20200628 04:59:28.730"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:25.875" endtime="20200628 04:59:28.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:28.735" level="INFO">Running command 'ozone sh volume info o3:///49014-rpcwport | jq -r '. | select(.name=="49014-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:31.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:31.701" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200628 04:59:28.732" endtime="20200628 04:59:31.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:31.703" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200628 04:59:31.702" endtime="20200628 04:59:31.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:31.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:31.703" endtime="20200628 04:59:31.704"></status>
</kw>
<msg timestamp="20200628 04:59:31.704" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200628 04:59:28.731" endtime="20200628 04:59:31.704"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:31.705" endtime="20200628 04:59:31.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:31.709" level="INFO">Running command 'ozone sh bucket create o3:///49014-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:34.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:34.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:31.706" endtime="20200628 04:59:34.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:34.509" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:34.509" endtime="20200628 04:59:34.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:34.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:34.510" endtime="20200628 04:59:34.510"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:31.705" endtime="20200628 04:59:34.510"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:34.515" level="INFO">Running command 'ozone sh bucket info o3:///49014-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:37.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:37.572" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200628 04:59:34.511" endtime="20200628 04:59:37.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:37.573" level="INFO">DISK</msg>
<status status="PASS" starttime="20200628 04:59:37.572" endtime="20200628 04:59:37.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:37.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:37.573" endtime="20200628 04:59:37.574"></status>
</kw>
<msg timestamp="20200628 04:59:37.574" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200628 04:59:34.511" endtime="20200628 04:59:37.574"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:37.574" endtime="20200628 04:59:37.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:37.579" level="INFO">Running command 'ozone sh bucket list o3:///49014-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:40.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:40.598" level="INFO">${output} = 49014-rpcwport</msg>
<status status="PASS" starttime="20200628 04:59:37.576" endtime="20200628 04:59:40.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:40.600" level="INFO">49014-rpcwport</msg>
<status status="PASS" starttime="20200628 04:59:40.599" endtime="20200628 04:59:40.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:40.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:40.600" endtime="20200628 04:59:40.601"></status>
</kw>
<msg timestamp="20200628 04:59:40.601" level="INFO">${result} = 49014-rpcwport</msg>
<status status="PASS" starttime="20200628 04:59:37.575" endtime="20200628 04:59:40.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200628 04:59:40.601" endtime="20200628 04:59:40.602"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:40.606" level="INFO">Running command 'ozone sh key put o3:///49014-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:45.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:45.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:40.604" endtime="20200628 04:59:45.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:45.244" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:45.243" endtime="20200628 04:59:45.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:45.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:45.244" endtime="20200628 04:59:45.245"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:40.603" endtime="20200628 04:59:45.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:45.248" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:45.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:45.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:45.246" endtime="20200628 04:59:45.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:45.252" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:45.252" endtime="20200628 04:59:45.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:45.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:45.253" endtime="20200628 04:59:45.253"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:45.245" endtime="20200628 04:59:45.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:45.256" level="INFO">Running command 'ozone sh key get o3:///49014-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:49.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:49.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:45.254" endtime="20200628 04:59:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:49.795" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:49.794" endtime="20200628 04:59:49.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:49.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:49.795" endtime="20200628 04:59:49.797"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:45.253" endtime="20200628 04:59:49.797"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:49.800" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:49.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:49.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:49.798" endtime="20200628 04:59:49.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:49.803" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:49.803" endtime="20200628 04:59:49.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:49.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:49.804" endtime="20200628 04:59:49.804"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:49.797" endtime="20200628 04:59:49.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:49.808" level="INFO">Running command 'ozone sh key put -t RATIS o3:///49014-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:54.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:54.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:49.805" endtime="20200628 04:59:54.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:54.586" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:54.585" endtime="20200628 04:59:54.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:54.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:54.586" endtime="20200628 04:59:54.587"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:49.805" endtime="20200628 04:59:54.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:54.590" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:54.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:54.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:54.588" endtime="20200628 04:59:54.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:54.594" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:54.594" endtime="20200628 04:59:54.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:54.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:54.594" endtime="20200628 04:59:54.595"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:54.587" endtime="20200628 04:59:54.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:54.598" level="INFO">Running command 'ozone sh key get o3:///49014-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:59.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:59.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:54.596" endtime="20200628 04:59:59.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:59.378" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:59.377" endtime="20200628 04:59:59.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:59.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:59.378" endtime="20200628 04:59:59.379"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:54.596" endtime="20200628 04:59:59.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:59.383" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 04:59:59.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 04:59:59.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 04:59:59.380" endtime="20200628 04:59:59.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 04:59:59.385" level="INFO"></msg>
<status status="PASS" starttime="20200628 04:59:59.385" endtime="20200628 04:59:59.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 04:59:59.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 04:59:59.385" endtime="20200628 04:59:59.386"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:59.379" endtime="20200628 04:59:59.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 04:59:59.390" level="INFO">Running command 'ozone sh key info o3:///49014-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:02.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:02.522" level="INFO">${output} = {
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:52.352Z",
  "modificationTime": "2020-06-28T04:59:54.147Z",
...</msg>
<status status="PASS" starttime="20200628 04:59:59.387" endtime="20200628 05:00:02.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:02.523" level="INFO">{
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:52.352Z",
  "modificationTime": "2020-06-28T04:59:54.147Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419845233049730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 05:00:02.523" endtime="20200628 05:00:02.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:02.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:02.523" endtime="20200628 05:00:02.524"></status>
</kw>
<msg timestamp="20200628 05:00:02.524" level="INFO">${result} = {
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:52.352Z",
  "modificationTime": "2020-06-28T04:59:54.147Z",
...</msg>
<status status="PASS" starttime="20200628 04:59:59.386" endtime="20200628 05:00:02.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:02.524" endtime="20200628 05:00:02.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:02.527" level="INFO">Running command 'ozone sh key delete o3:///49014-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:05.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:05.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:02.526" endtime="20200628 05:00:05.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:05.312" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:05.311" endtime="20200628 05:00:05.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:05.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:05.313" endtime="20200628 05:00:05.313"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:02.525" endtime="20200628 05:00:05.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:05.316" level="INFO">Running command 'ozone sh key cp o3:///49014-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:10.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:10.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:05.314" endtime="20200628 05:00:10.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:10.307" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:10.306" endtime="20200628 05:00:10.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:10.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:10.307" endtime="20200628 05:00:10.308"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:05.314" endtime="20200628 05:00:10.308"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:10.311" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:10.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:10.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:10.309" endtime="20200628 05:00:10.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:10.314" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:10.313" endtime="20200628 05:00:10.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:10.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:10.314" endtime="20200628 05:00:10.315"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:10.308" endtime="20200628 05:00:10.315"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:10.318" level="INFO">Running command 'ozone sh key get o3:///49014-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:15.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:15.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:10.316" endtime="20200628 05:00:15.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:15.042" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:15.041" endtime="20200628 05:00:15.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:15.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:15.042" endtime="20200628 05:00:15.043"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:10.315" endtime="20200628 05:00:15.043"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:15.046" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:15.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:15.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:15.044" endtime="20200628 05:00:15.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:15.051" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:15.050" endtime="20200628 05:00:15.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:15.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:15.051" endtime="20200628 05:00:15.052"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:15.044" endtime="20200628 05:00:15.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:15.055" level="INFO">Running command 'ozone sh key delete o3:///49014-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:17.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:17.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:15.052" endtime="20200628 05:00:17.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:17.837" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:17.837" endtime="20200628 05:00:17.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:17.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:17.838" endtime="20200628 05:00:17.838"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:15.052" endtime="20200628 05:00:17.838"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:17.842" level="INFO">Running command 'ozone sh key get o3:///49014-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:20.566" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 05:00:20.567" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:00:17.839" endtime="20200628 05:00:20.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:20.568" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:00:20.567" endtime="20200628 05:00:20.568"></status>
</kw>
<msg timestamp="20200628 05:00:20.568" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:00:17.839" endtime="20200628 05:00:20.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:20.569" endtime="20200628 05:00:20.569"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:20.572" level="INFO">Running command 'ozone sh key get --force o3:///49014-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:25.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:25.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:20.570" endtime="20200628 05:00:25.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:25.388" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:25.387" endtime="20200628 05:00:25.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:25.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:25.388" endtime="20200628 05:00:25.389"></status>
</kw>
<msg timestamp="20200628 05:00:25.389" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 05:00:20.569" endtime="20200628 05:00:25.389"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:25.389" endtime="20200628 05:00:25.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:25.392" level="INFO">Running command 'ozone sh key info o3:///49014-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:28.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:28.488" level="INFO">${output} = {
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:43.167Z",
  "modificationTime": "2020-06-28T04:59:44.812Z",
  "rep...</msg>
<status status="PASS" starttime="20200628 05:00:25.390" endtime="20200628 05:00:28.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:28.489" level="INFO">{
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:43.167Z",
  "modificationTime": "2020-06-28T04:59:44.812Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419844631167100,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 05:00:28.488" endtime="20200628 05:00:28.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:28.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:28.489" endtime="20200628 05:00:28.490"></status>
</kw>
<msg timestamp="20200628 05:00:28.490" level="INFO">${result} = {
  "volumeName": "49014-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T04:59:43.167Z",
  "modificationTime": "2020-06-28T04:59:44.812Z",
  "rep...</msg>
<status status="PASS" starttime="20200628 05:00:25.390" endtime="20200628 05:00:28.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:28.490" endtime="20200628 05:00:28.491"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:28.498" level="INFO">Running command 'ozone sh key list o3:///49014-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:31.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:31.512" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200628 05:00:28.492" endtime="20200628 05:00:31.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:31.514" level="INFO">key1</msg>
<status status="PASS" starttime="20200628 05:00:31.513" endtime="20200628 05:00:31.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:31.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:31.514" endtime="20200628 05:00:31.515"></status>
</kw>
<msg timestamp="20200628 05:00:31.515" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200628 05:00:28.491" endtime="20200628 05:00:31.515"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:31.515" endtime="20200628 05:00:31.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:31.519" level="INFO">Running command 'ozone sh key rename o3:///49014-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:34.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:34.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:31.516" endtime="20200628 05:00:34.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:34.430" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:34.430" endtime="20200628 05:00:34.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:34.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:34.431" endtime="20200628 05:00:34.431"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:31.516" endtime="20200628 05:00:34.432"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:34.434" level="INFO">Running command 'ozone sh key list o3:///49014-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:37.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:37.541" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200628 05:00:34.432" endtime="20200628 05:00:37.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:37.542" level="INFO">key2</msg>
<status status="PASS" starttime="20200628 05:00:37.542" endtime="20200628 05:00:37.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:37.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:37.542" endtime="20200628 05:00:37.543"></status>
</kw>
<msg timestamp="20200628 05:00:37.543" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200628 05:00:34.432" endtime="20200628 05:00:37.543"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:37.543" endtime="20200628 05:00:37.544"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:37.549" level="INFO">Running command 'ozone sh key delete o3:///49014-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:40.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:40.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:37.545" endtime="20200628 05:00:40.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:40.430" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:40.429" endtime="20200628 05:00:40.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:40.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:40.430" endtime="20200628 05:00:40.431"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:37.544" endtime="20200628 05:00:40.431"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:40.603" endtime="20200628 05:00:40.431"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:40.602" endtime="20200628 05:00:40.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:40.434" level="INFO">Running command 'ozone sh bucket delete o3:///49014-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:43.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:43.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:40.432" endtime="20200628 05:00:43.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:43.332" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:43.331" endtime="20200628 05:00:43.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:43.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:43.332" endtime="20200628 05:00:43.333"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:40.431" endtime="20200628 05:00:43.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:43.337" level="INFO">Running command 'ozone sh volume delete o3:///49014-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:46.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:46.229" level="INFO">${output} = Volume 49014-rpcwport is deleted</msg>
<status status="PASS" starttime="20200628 05:00:43.334" endtime="20200628 05:00:46.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:46.230" level="INFO">Volume 49014-rpcwport is deleted</msg>
<status status="PASS" starttime="20200628 05:00:46.229" endtime="20200628 05:00:46.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:46.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:46.230" endtime="20200628 05:00:46.231"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:43.333" endtime="20200628 05:00:46.231"></status>
</kw>
<status status="PASS" starttime="20200628 04:59:14.163" endtime="20200628 05:00:46.231"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 04:59:14.162" endtime="20200628 05:00:46.231" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:46.233" endtime="20200628 05:00:46.233"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:46.237" level="INFO">Running command 'ozone sh volume info /49014-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:49.336" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 05:00:49.336" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49014-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200628 05:00:46.235" endtime="20200628 05:00:49.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:49.338" level="INFO">VOLUME_NOT_FOUND Volume 49014-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200628 05:00:49.337" endtime="20200628 05:00:49.338"></status>
</kw>
<msg timestamp="20200628 05:00:49.338" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49014-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200628 05:00:46.234" endtime="20200628 05:00:49.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:49.338" endtime="20200628 05:00:49.339"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:49.341" level="INFO">Running command 'ozone sh volume create /49014-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:52.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:52.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:00:49.339" endtime="20200628 05:00:52.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:52.227" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:00:52.226" endtime="20200628 05:00:52.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:52.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:52.227" endtime="20200628 05:00:52.228"></status>
</kw>
<msg timestamp="20200628 05:00:52.228" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 05:00:49.339" endtime="20200628 05:00:52.228"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:52.228" endtime="20200628 05:00:52.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:52.232" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="49014-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:56.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:56.107" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200628 05:00:52.229" endtime="20200628 05:00:56.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:56.109" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 05:00:56.108" endtime="20200628 05:00:56.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:56.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:56.109" endtime="20200628 05:00:56.110"></status>
</kw>
<msg timestamp="20200628 05:00:56.110" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200628 05:00:52.229" endtime="20200628 05:00:56.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:56.110" endtime="20200628 05:00:56.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:56.114" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49014-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:00:58.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:00:58.919" level="INFO">${output} = {
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200628 05:00:56.112" endtime="20200628 05:00:58.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:00:58.920" level="INFO">{
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200628 05:00:58.919" endtime="20200628 05:00:58.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:00:58.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:00:58.920" endtime="20200628 05:00:58.921"></status>
</kw>
<msg timestamp="20200628 05:00:58.921" level="INFO">${result} = {
  "metadata": {},
  "name": "49014-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-28T05:00:52.096Z",
  "modificationTime": "2020-06-28T05:00:52.096Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200628 05:00:56.112" endtime="20200628 05:00:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 05:00:58.921" endtime="20200628 05:00:58.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:00:58.926" level="INFO">Running command 'ozone sh volume update /49014-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:01.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:01.959" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49014-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T05:00:52.096Z",
  "modificationTime" : "2020-06-28T05:01:01.517Z",
  "a...</msg>
<status status="PASS" starttime="20200628 05:00:58.922" endtime="20200628 05:01:01.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:01.960" level="INFO">{
  "metadata" : { },
  "name" : "49014-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-28T05:00:52.096Z",
  "modificationTime" : "2020-06-28T05:01:01.517Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200628 05:01:01.960" endtime="20200628 05:01:01.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:01.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:01.961" endtime="20200628 05:01:01.961"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:58.922" endtime="20200628 05:01:01.961"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:01.965" level="INFO">Running command 'ozone sh volume info /49014-rpcwoscheme | jq -r '. | select(.name=="49014-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:05.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:05.009" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200628 05:01:01.962" endtime="20200628 05:01:05.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:05.010" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200628 05:01:05.010" endtime="20200628 05:01:05.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:05.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:05.010" endtime="20200628 05:01:05.011"></status>
</kw>
<msg timestamp="20200628 05:01:05.011" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200628 05:01:01.961" endtime="20200628 05:01:05.011"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200628 05:01:05.012" endtime="20200628 05:01:05.012"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:05.015" level="INFO">Running command 'ozone sh bucket create /49014-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:07.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:07.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:05.013" endtime="20200628 05:01:07.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:07.832" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:07.832" endtime="20200628 05:01:07.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:07.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:07.833" endtime="20200628 05:01:07.833"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:05.012" endtime="20200628 05:01:07.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:07.836" level="INFO">Running command 'ozone sh bucket info /49014-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:10.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:10.947" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200628 05:01:07.834" endtime="20200628 05:01:10.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:10.948" level="INFO">DISK</msg>
<status status="PASS" starttime="20200628 05:01:10.948" endtime="20200628 05:01:10.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:10.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:10.949" endtime="20200628 05:01:10.949"></status>
</kw>
<msg timestamp="20200628 05:01:10.950" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200628 05:01:07.834" endtime="20200628 05:01:10.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200628 05:01:10.950" endtime="20200628 05:01:10.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:10.956" level="INFO">Running command 'ozone sh bucket list /49014-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:14.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:14.451" level="INFO">${output} = 49014-rpcwoscheme</msg>
<status status="PASS" starttime="20200628 05:01:10.951" endtime="20200628 05:01:14.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:14.453" level="INFO">49014-rpcwoscheme</msg>
<status status="PASS" starttime="20200628 05:01:14.452" endtime="20200628 05:01:14.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:14.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:14.453" endtime="20200628 05:01:14.454"></status>
</kw>
<msg timestamp="20200628 05:01:14.455" level="INFO">${result} = 49014-rpcwoscheme</msg>
<status status="PASS" starttime="20200628 05:01:10.950" endtime="20200628 05:01:14.455"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200628 05:01:14.456" endtime="20200628 05:01:14.456"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:14.461" level="INFO">Running command 'ozone sh key put /49014-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:20.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:20.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:14.458" endtime="20200628 05:01:20.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:20.009" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:20.008" endtime="20200628 05:01:20.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:20.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:20.009" endtime="20200628 05:01:20.010"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:14.457" endtime="20200628 05:01:20.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:20.015" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:20.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:20.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:20.011" endtime="20200628 05:01:20.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:20.017" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:20.017" endtime="20200628 05:01:20.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:20.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:20.018" endtime="20200628 05:01:20.018"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:20.010" endtime="20200628 05:01:20.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:20.021" level="INFO">Running command 'ozone sh key get /49014-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:25.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:25.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:20.019" endtime="20200628 05:01:25.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:25.088" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:25.087" endtime="20200628 05:01:25.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:25.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:25.089" endtime="20200628 05:01:25.089"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:20.018" endtime="20200628 05:01:25.089"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:25.092" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:25.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:25.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:25.090" endtime="20200628 05:01:25.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:25.096" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:25.095" endtime="20200628 05:01:25.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:25.096" endtime="20200628 05:01:25.097"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:25.090" endtime="20200628 05:01:25.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:25.100" level="INFO">Running command 'ozone sh key put -t RATIS /49014-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:29.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:29.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:25.098" endtime="20200628 05:01:29.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:29.954" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:29.953" endtime="20200628 05:01:29.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:29.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:29.954" endtime="20200628 05:01:29.956"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:25.097" endtime="20200628 05:01:29.957"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:29.961" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:29.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:29.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:29.957" endtime="20200628 05:01:29.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:29.963" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:29.963" endtime="20200628 05:01:29.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:29.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:29.964" endtime="20200628 05:01:29.964"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:29.957" endtime="20200628 05:01:29.964"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:29.968" level="INFO">Running command 'ozone sh key get /49014-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:34.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:34.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:29.965" endtime="20200628 05:01:34.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:34.802" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:34.802" endtime="20200628 05:01:34.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:34.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:34.803" endtime="20200628 05:01:34.803"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:29.965" endtime="20200628 05:01:34.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:34.808" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:34.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:34.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:34.804" endtime="20200628 05:01:34.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:34.810" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:34.810" endtime="20200628 05:01:34.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:34.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:34.811" endtime="20200628 05:01:34.811"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:34.804" endtime="20200628 05:01:34.812"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:34.815" level="INFO">Running command 'ozone sh key info /49014-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:37.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:37.859" level="INFO">${output} = {
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:27.743Z",
  "modificationTime": "2020-06-28T05:01:29.510Z...</msg>
<status status="PASS" starttime="20200628 05:01:34.812" endtime="20200628 05:01:37.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:37.860" level="INFO">{
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:27.743Z",
  "modificationTime": "2020-06-28T05:01:29.510Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419851484725380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 05:01:37.859" endtime="20200628 05:01:37.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:37.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:37.860" endtime="20200628 05:01:37.861"></status>
</kw>
<msg timestamp="20200628 05:01:37.861" level="INFO">${result} = {
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:27.743Z",
  "modificationTime": "2020-06-28T05:01:29.510Z...</msg>
<status status="PASS" starttime="20200628 05:01:34.812" endtime="20200628 05:01:37.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200628 05:01:37.861" endtime="20200628 05:01:37.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:37.866" level="INFO">Running command 'ozone sh key delete /49014-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:40.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:40.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:37.864" endtime="20200628 05:01:40.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:40.527" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:40.526" endtime="20200628 05:01:40.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:40.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:40.527" endtime="20200628 05:01:40.528"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:37.863" endtime="20200628 05:01:40.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:40.531" level="INFO">Running command 'ozone sh key cp /49014-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:45.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:45.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:40.529" endtime="20200628 05:01:45.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:45.616" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:45.615" endtime="20200628 05:01:45.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:45.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:45.616" endtime="20200628 05:01:45.617"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:40.528" endtime="20200628 05:01:45.617"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:45.622" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:45.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:45.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:45.618" endtime="20200628 05:01:45.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:45.624" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:45.623" endtime="20200628 05:01:45.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:45.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:45.624" endtime="20200628 05:01:45.626"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:45.618" endtime="20200628 05:01:45.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:45.630" level="INFO">Running command 'ozone sh key get /49014-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:50.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:50.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:45.627" endtime="20200628 05:01:50.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:50.242" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:50.241" endtime="20200628 05:01:50.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:50.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:50.243" endtime="20200628 05:01:50.243"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:45.626" endtime="20200628 05:01:50.243"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:50.248" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:50.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:50.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:50.244" endtime="20200628 05:01:50.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:50.250" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:50.249" endtime="20200628 05:01:50.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:50.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:50.250" endtime="20200628 05:01:50.251"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:50.244" endtime="20200628 05:01:50.251"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:50.256" level="INFO">Running command 'ozone sh key delete /49014-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:52.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:01:52.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:50.252" endtime="20200628 05:01:52.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:52.860" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:01:52.859" endtime="20200628 05:01:52.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:01:52.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:01:52.860" endtime="20200628 05:01:52.860"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:50.251" endtime="20200628 05:01:52.861"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:52.865" level="INFO">Running command 'ozone sh key get /49014-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:01:55.716" level="INFO">${rc} = 255</msg>
<msg timestamp="20200628 05:01:55.716" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:01:52.861" endtime="20200628 05:01:55.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:01:55.717" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:01:55.717" endtime="20200628 05:01:55.718"></status>
</kw>
<msg timestamp="20200628 05:01:55.718" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200628 05:01:52.861" endtime="20200628 05:01:55.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 05:01:55.718" endtime="20200628 05:01:55.718"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:01:55.721" level="INFO">Running command 'ozone sh key get --force /49014-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:00.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:00.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:01:55.719" endtime="20200628 05:02:00.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:00.517" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:02:00.517" endtime="20200628 05:02:00.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:00.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:00.518" endtime="20200628 05:02:00.518"></status>
</kw>
<msg timestamp="20200628 05:02:00.518" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200628 05:01:55.719" endtime="20200628 05:02:00.519"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200628 05:02:00.519" endtime="20200628 05:02:00.519"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:00.522" level="INFO">Running command 'ozone sh key info /49014-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:03.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:03.539" level="INFO">${output} = {
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:17.477Z",
  "modificationTime": "2020-06-28T05:01:19.608Z",
  "...</msg>
<status status="PASS" starttime="20200628 05:02:00.520" endtime="20200628 05:02:03.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:03.541" level="INFO">{
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:17.477Z",
  "modificationTime": "2020-06-28T05:01:19.608Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104419850811801730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200628 05:02:03.540" endtime="20200628 05:02:03.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:03.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:03.541" endtime="20200628 05:02:03.541"></status>
</kw>
<msg timestamp="20200628 05:02:03.542" level="INFO">${result} = {
  "volumeName": "49014-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-28T05:01:17.477Z",
  "modificationTime": "2020-06-28T05:01:19.608Z",
  "...</msg>
<status status="PASS" starttime="20200628 05:02:00.519" endtime="20200628 05:02:03.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200628 05:02:03.542" endtime="20200628 05:02:03.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:03.546" level="INFO">Running command 'ozone sh key list /49014-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:06.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:06.449" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200628 05:02:03.543" endtime="20200628 05:02:06.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:06.450" level="INFO">key1</msg>
<status status="PASS" starttime="20200628 05:02:06.450" endtime="20200628 05:02:06.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:06.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:06.450" endtime="20200628 05:02:06.451"></status>
</kw>
<msg timestamp="20200628 05:02:06.451" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200628 05:02:03.542" endtime="20200628 05:02:06.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200628 05:02:06.452" endtime="20200628 05:02:06.452"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:06.455" level="INFO">Running command 'ozone sh key rename /49014-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:09.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:09.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:02:06.453" endtime="20200628 05:02:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:09.154" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:02:09.153" endtime="20200628 05:02:09.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:09.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:09.154" endtime="20200628 05:02:09.155"></status>
</kw>
<status status="PASS" starttime="20200628 05:02:06.452" endtime="20200628 05:02:09.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:09.159" level="INFO">Running command 'ozone sh key list /49014-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:12.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:12.108" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200628 05:02:09.156" endtime="20200628 05:02:12.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:12.109" level="INFO">key2</msg>
<status status="PASS" starttime="20200628 05:02:12.108" endtime="20200628 05:02:12.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:12.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:12.109" endtime="20200628 05:02:12.110"></status>
</kw>
<msg timestamp="20200628 05:02:12.110" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200628 05:02:09.155" endtime="20200628 05:02:12.110"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200628 05:02:12.110" endtime="20200628 05:02:12.111"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:12.116" level="INFO">Running command 'ozone sh key delete /49014-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:14.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:14.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:02:12.112" endtime="20200628 05:02:14.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:14.818" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:02:14.817" endtime="20200628 05:02:14.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:14.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:14.818" endtime="20200628 05:02:14.819"></status>
</kw>
<status status="PASS" starttime="20200628 05:02:12.111" endtime="20200628 05:02:14.819"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:14.457" endtime="20200628 05:02:14.819"></status>
</kw>
<status status="PASS" starttime="20200628 05:01:14.456" endtime="20200628 05:02:14.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:14.822" level="INFO">Running command 'ozone sh bucket delete /49014-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:17.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:17.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200628 05:02:14.820" endtime="20200628 05:02:17.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:17.703" level="INFO"></msg>
<status status="PASS" starttime="20200628 05:02:17.702" endtime="20200628 05:02:17.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:17.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:17.703" endtime="20200628 05:02:17.704"></status>
</kw>
<status status="PASS" starttime="20200628 05:02:14.819" endtime="20200628 05:02:17.704"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200628 05:02:17.707" level="INFO">Running command 'ozone sh volume delete /49014-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200628 05:02:20.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200628 05:02:20.493" level="INFO">${output} = Volume 49014-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200628 05:02:17.705" endtime="20200628 05:02:20.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200628 05:02:20.494" level="INFO">Volume 49014-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200628 05:02:20.493" endtime="20200628 05:02:20.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200628 05:02:20.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200628 05:02:20.494" endtime="20200628 05:02:20.495"></status>
</kw>
<status status="PASS" starttime="20200628 05:02:17.704" endtime="20200628 05:02:20.495"></status>
</kw>
<status status="PASS" starttime="20200628 05:00:46.233" endtime="20200628 05:02:20.495"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200628 05:00:46.232" endtime="20200628 05:02:20.495" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200628 04:56:31.150" endtime="20200628 05:02:20.497"></status>
</suite>
<status status="PASS" starttime="20200628 04:55:20.723" endtime="20200628 05:02:20.502"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
