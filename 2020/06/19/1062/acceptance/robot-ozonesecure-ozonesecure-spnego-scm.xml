<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200619 01:52:35.639" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:35.707" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:35.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:35.708" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:35.702" endtime="20200619 01:52:35.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:35.709" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:35.709" endtime="20200619 01:52:35.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:35.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:35.709" endtime="20200619 01:52:35.710"></status>
</kw>
<msg timestamp="20200619 01:52:35.710" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:35.702" endtime="20200619 01:52:35.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:35.711" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:35.710" endtime="20200619 01:52:35.711"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:35.714" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:35.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:35.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:35.712" endtime="20200619 01:52:35.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:35.731" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:35.730" endtime="20200619 01:52:35.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:35.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:35.731" endtime="20200619 01:52:35.731"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:35.712" endtime="20200619 01:52:35.732"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:35.712" endtime="20200619 01:52:35.732"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:35.701" endtime="20200619 01:52:35.732"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:35.700" endtime="20200619 01:52:35.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:35.735" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.406" level="INFO">${output} = 2020-06-19 01:52:36,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:52:36,774 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:52:35.732" endtime="20200619 01:52:43.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.408" level="INFO">2020-06-19 01:52:36,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:52:36,774 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:52:36,774 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-19 01:52:37,834 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-19 01:52:37,835 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-19 01:52:37,879 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-19 01:52:37,892 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-06-19 01:52:37,927 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-91901, with testuser/scm@EXAMPLE.COM as owner.
2020-06-19 01:52:37,950 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-91901/bucket-0-46085, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:52:38,399 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-19 01:52:38,893 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,011
Average Time spent in key write: 00:00:00,098
Total bytes written: 2050
Total Execution time: 00:00:06,036
***************************************************</msg>
<status status="PASS" starttime="20200619 01:52:43.407" endtime="20200619 01:52:43.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.408" endtime="20200619 01:52:43.409"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:35.732" endtime="20200619 01:52:43.409"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:35.700" endtime="20200619 01:52:43.410" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.417" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.413" endtime="20200619 01:52:43.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.421" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.420" endtime="20200619 01:52:43.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.421" endtime="20200619 01:52:43.422"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.413" endtime="20200619 01:52:43.422"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.412" endtime="20200619 01:52:43.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.426" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.448" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200619 01:52:43.423" endtime="20200619 01:52:43.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.449" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200619 01:52:43.448" endtime="20200619 01:52:43.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.449" endtime="20200619 01:52:43.450"></status>
</kw>
<msg timestamp="20200619 01:52:43.450" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200619 01:52:43.422" endtime="20200619 01:52:43.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.450" endtime="20200619 01:52:43.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.455" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.457" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.453" endtime="20200619 01:52:43.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.458" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:43.457" endtime="20200619 01:52:43.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.458" endtime="20200619 01:52:43.459"></status>
</kw>
<msg timestamp="20200619 01:52:43.459" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.452" endtime="20200619 01:52:43.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:43.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:43.460" endtime="20200619 01:52:43.460"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.461" endtime="20200619 01:52:43.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.480" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.480" endtime="20200619 01:52:43.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.481" endtime="20200619 01:52:43.481"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.461" endtime="20200619 01:52:43.482"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.460" endtime="20200619 01:52:43.482"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.452" endtime="20200619 01:52:43.482"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.451" endtime="20200619 01:52:43.482"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.486" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.509" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200619 01:52:43.483" endtime="20200619 01:52:43.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.511" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x84ff20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYm30Qs1KzBRi+KWCy1FQX8QlHTjPKnGkP0+q33+anFIyCOg95A3yunPVMF9i47vMyYWZ4IVL5o+spgrxh+shUDpWkaWqn1LRAsu7i2RvSAl9rOjA5dU1GoOH/C9wq0jLRpHMHcvOfQvuwLnOLMhzVSksMU+cRPAmy0dut63VmAgbntTyNtYyAHC9g8bk584PUmbd6GgTdkSK4wwr4Q/ZM+mu1GF13Vd0P1wbW2tkwDqPL+s0mS6xLH68KInGVCoQkAHN27yXUZdEAjv6X5cv+597Da9omMzk23vWiyoA+zoltm5PK/v7B8r8v7oj9umwyeora3T6EVsJ6+gxH2BwUx+Ua7On6VpIHWMIHToAMCARKigcsEgcjvRiVgLH/reCD4DtoeSwnIGer4vQPiuDQbw9sFs5ebFUYaez44LqmFSmP6adyf7OQy6FQgL6RllDpjnuGPMPbp9cc/HW5rgCfGSEb1xL0Ar8W1MOK/L6w2tlFN8IDYL1L9AJk0aw3PA92LUD6yzDgeUhwXMal6dC5coI/9SdohnlRMI9+ZImdM6AK945Vh+9oBCsX/qTzHX9fVeILNARi+fuGVhmBR3nZXoOYD9hyFxoPTCNNd00cY1GFU+hgQpw+lSt2sOwh3og==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBO04nrdesTbMLmd4k4XAivFoskqTvE2qKxDMfFBMlsr/FEAPkaWl2uXqcNnghezNxY26NX6OK9RRIMwpEUjh2LK4=
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563505&amp;s=bBOXErd5RdwgXAyQ4lMZrOFCJ9pSKBfRs9yBzgKkEsU="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 19 Jun 2020 00:47:10 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:52:43 GMT
Cache-Control: no-cache
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBO04nrdesTbMLmd4k4XAivFoskqTvE2qKxDMfFBMlsr/FEAPkaWl2uXqcNnghezNxY26NX6OK9RRIMwpEUjh2LK4=
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563505&amp;s=bBOXErd5RdwgXAyQ4lMZrOFCJ9pSKBfRs9yBzgKkEsU="; Path=/; HttpOnly
Last-Modified: Fri, 19 Jun 2020 00:47:10 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200619 01:52:43.510" endtime="20200619 01:52:43.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.511" endtime="20200619 01:52:43.512"></status>
</kw>
<msg timestamp="20200619 01:52:43.512" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200619 01:52:43.482" endtime="20200619 01:52:43.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.512" endtime="20200619 01:52:43.513"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.411" endtime="20200619 01:52:43.513"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:43.411" endtime="20200619 01:52:43.513" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.519" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.516" endtime="20200619 01:52:43.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.523" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.522" endtime="20200619 01:52:43.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.523" endtime="20200619 01:52:43.523"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.516" endtime="20200619 01:52:43.524"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.515" endtime="20200619 01:52:43.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.527" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.538" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.524" endtime="20200619 01:52:43.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.539" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200619 01:52:43.539" endtime="20200619 01:52:43.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.540" endtime="20200619 01:52:43.540"></status>
</kw>
<msg timestamp="20200619 01:52:43.541" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.524" endtime="20200619 01:52:43.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.541" endtime="20200619 01:52:43.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.546" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.547" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.543" endtime="20200619 01:52:43.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.548" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:43.547" endtime="20200619 01:52:43.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.548" endtime="20200619 01:52:43.549"></status>
</kw>
<msg timestamp="20200619 01:52:43.549" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.542" endtime="20200619 01:52:43.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:43.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:43.549" endtime="20200619 01:52:43.550"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.551" endtime="20200619 01:52:43.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.562" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.562" endtime="20200619 01:52:43.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.563" endtime="20200619 01:52:43.563"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.550" endtime="20200619 01:52:43.563"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.550" endtime="20200619 01:52:43.563"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.542" endtime="20200619 01:52:43.564"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.541" endtime="20200619 01:52:43.564"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.567" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.617" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.564" endtime="20200619 01:52:43.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.618" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1194f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQY3RM6VkBBISMp+c3QMnW06G4sK5qitV+JelxkEnHGNDcyXVahvX6v8SEX6l8wR9B/KZI1gw+WIqSFB0AJu1jQ5ZKQvZBN077so4D2t1c4hZpd/J0xG5WimV5WG5Qt+u2u/nrt97oD7qUlcKcxwMbtRVUAmM/UJEUp0+TuBFRMXGV1gnmjHG0HFbihQ5aVLaeKjUeN0E4NEv3kALIleohPEcjulcNoCx5uJ5SNok2LTaKl9ZDAAasZ9Y5say9mr4SM/sbilGHY6VreFfFrq7uK7006BTy4gxdRQ25h5Dfq3PFOMpnpSxheTmr1Qqz/PSAS+V9YGUkQ3OWCa/X8jCIy/VlS/PZaVpIHWMIHToAMCARKigcsEgchKtv45mMn/cjJL7s4FBvoAtJLKbXT0LflfCHbUagrzIo/c8WuNWaQsX3auAkkHOv222d8LH8L34kuYmMZ1uLaqlc/1v7CluBK/KWEBkogNfma5mgh9keIj3pTJUXX1euuoNia45ifdMN3w56u5Y9FoUTPDRFXVixKv0djxXakOSV+aCQtIIfyKCI0MB+kenGpBARAwkTb4nohBDIvWrTTegYrQfWvKNFnsZnJLHYcMgfVxsceFNozrcEAgSWNE7rkjPfNr48sD2w==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC8HszrTGYvY3eIK33s3W3g7xWA1kwJTzPtXOr7mnxlIi0d7nAvZdiWjnMuXpMf5ddIDjRtzi0Dl3OYjz1QhAVAqq5
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563584&amp;s=xrX4j7wYNMHDoBAhQNERt/r0pD8DHRhEW3nTbiLMbpA="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592531563584.tgz"
&lt; Content-Length: 70873
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:52:43 GMT
Cache-Control: no-cache
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC8HszrTGYvY3eIK33s3W3g7xWA1kwJTzPtXOr7mnxlIi0d7nAvZdiWjnMuXpMf5ddIDjRtzi0Dl3OYjz1QhAVAqq5
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563584&amp;s=xrX4j7wYNMHDoBAhQNERt/r0pD8DHRhEW3nTbiLMbpA="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1592531563584.tgz"
Content-Length: 70873
</msg>
<status status="PASS" starttime="20200619 01:52:43.617" endtime="20200619 01:52:43.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.619" endtime="20200619 01:52:43.620"></status>
</kw>
<msg timestamp="20200619 01:52:43.621" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.564" endtime="20200619 01:52:43.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.621" endtime="20200619 01:52:43.621"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.515" endtime="20200619 01:52:43.622"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:43.514" endtime="20200619 01:52:43.622" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.627" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.625" endtime="20200619 01:52:43.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.633" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.632" endtime="20200619 01:52:43.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.633" endtime="20200619 01:52:43.634"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.625" endtime="20200619 01:52:43.634"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.624" endtime="20200619 01:52:43.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.638" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.649" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200619 01:52:43.635" endtime="20200619 01:52:43.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.650" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200619 01:52:43.649" endtime="20200619 01:52:43.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.650" endtime="20200619 01:52:43.651"></status>
</kw>
<msg timestamp="20200619 01:52:43.651" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200619 01:52:43.634" endtime="20200619 01:52:43.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.651" endtime="20200619 01:52:43.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.655" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.657" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.653" endtime="20200619 01:52:43.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.658" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:43.657" endtime="20200619 01:52:43.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.658" endtime="20200619 01:52:43.659"></status>
</kw>
<msg timestamp="20200619 01:52:43.659" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.653" endtime="20200619 01:52:43.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:43.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:43.659" endtime="20200619 01:52:43.660"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.661" endtime="20200619 01:52:43.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.678" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.678" endtime="20200619 01:52:43.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.678" endtime="20200619 01:52:43.679"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.660" endtime="20200619 01:52:43.679"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.660" endtime="20200619 01:52:43.679"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.652" endtime="20200619 01:52:43.679"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.652" endtime="20200619 01:52:43.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.682" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.716" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200619 01:52:43.680" endtime="20200619 01:52:43.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.717" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x781f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.4) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb+VCDUu8YixCsFKBGGGcsdeZuWtDVud9OqwqXHqloJPtRwyw1ZYUNY00RF4bY76rk13j8136xvgXg2AaISyvx4XQzyzfOX+X+JmA0EAH5bhKA/Wgk9EavIgv7NxNXBJ2+m+ZUpfaehWiPrE2mJ2KLmf9JRbMbmU0PubSgj7H6a/zBCRhXnxuev/tfVnhlc76v7hm2AIL7+ANjCRKP3efCy+jfNCI+dQWxvNGRSLz9d8VtWIimbMsEbhA9xLPGa4yXE+LUGQ3jSg+1dpBjfVyiUHemODSiW6uCYoNyODzYzkVaJNtsgMqYffKmeTCTw/COswIcwC5wQ+jwsrgWZyYPZ7vg82UnppIHWMIHToAMCARKigcsEgcgRabGDCoygD7kz+TOL1ThhSbsXpDcpeRfnj1zEY6/j6iocs8nOWbyQAjgZ6NV0s1f/ESZdojFS5N9cz2/vExhpnUf3uKHox2L30ICtTmLEAO6XAnT17cBTX6J5XAV9t5ivs801+iANHy5L9wJFv+EGtRn1xChUutQh74cB1NzXJbPhP3N3eo32XY7ymtDR3rd7pzjIDUtXsRMMiBB1jVa+QTXWDy8m2vznwMFxhsS5EC9/utwbdAukPjNSVqFBFLFtxc1DlOyUxQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHtqRus1d1n+iMaHCq1YpeLN/agHNxHtc+GN90zkw3prZuOUSn+oBncHIYn9xMTIdeTtIFcLYEoYYfvrF0W90WxkZ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563699&amp;s=iVhPqT4qPKQGK//dwzKTOBSvhtiK1g2tmBeH14VDCMw="; Path=/; HttpOnly
&lt; Content-Length: 534
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:52:43 GMT
Cache-Control: no-cache
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHtqRus1d1n+iMaHCq1YpeLN/agHNxHtc+GN90zkw3prZuOUSn+oBncHIYn9xMTIdeTtIFcLYEoYYfvrF0W90WxkZ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563699&amp;s=iVhPqT4qPKQGK//dwzKTOBSvhtiK1g2tmBeH14VDCMw="; Path=/; HttpOnly
Content-Length: 534
</msg>
<status status="PASS" starttime="20200619 01:52:43.717" endtime="20200619 01:52:43.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.718" endtime="20200619 01:52:43.718"></status>
</kw>
<msg timestamp="20200619 01:52:43.718" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.4...
* Connected to om (172.26.0.4) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200619 01:52:43.680" endtime="20200619 01:52:43.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.719" endtime="20200619 01:52:43.719"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.624" endtime="20200619 01:52:43.719"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:43.623" endtime="20200619 01:52:43.719" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.725" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.722" endtime="20200619 01:52:43.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.728" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.728" endtime="20200619 01:52:43.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.728" endtime="20200619 01:52:43.729"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.722" endtime="20200619 01:52:43.729"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.721" endtime="20200619 01:52:43.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.733" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.747" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200619 01:52:43.730" endtime="20200619 01:52:43.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.748" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200619 01:52:43.748" endtime="20200619 01:52:43.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.749" endtime="20200619 01:52:43.749"></status>
</kw>
<msg timestamp="20200619 01:52:43.749" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200619 01:52:43.729" endtime="20200619 01:52:43.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.749" endtime="20200619 01:52:43.750"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.753" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.755" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.751" endtime="20200619 01:52:43.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.756" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:43.756" endtime="20200619 01:52:43.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.757" endtime="20200619 01:52:43.757"></status>
</kw>
<msg timestamp="20200619 01:52:43.757" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.751" endtime="20200619 01:52:43.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:43.758" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:43.758" endtime="20200619 01:52:43.758"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.762" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.759" endtime="20200619 01:52:43.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.772" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.771" endtime="20200619 01:52:43.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.772" endtime="20200619 01:52:43.772"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.759" endtime="20200619 01:52:43.773"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.758" endtime="20200619 01:52:43.773"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.750" endtime="20200619 01:52:43.773"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.750" endtime="20200619 01:52:43.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.776" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.800" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200619 01:52:43.774" endtime="20200619 01:52:43.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.801" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x24baf20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.8) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGVpo4b7YSMu5+HYq3k+G9RBUHUQWhM5QIeWXsFQsxTZj+R9rgjwLMZ1Z/L5YjZPKLPWPGbpC7t2bqNtAKe5BHeckXQcDwK8lzU8+X+fo4slfVF2Fj7RqA7HNV704SrI+xS3feqx+rZP2uT/y+m8wf+ZtosuDZnyeAzkebwLejNAns3ozorKLg5qYX7QvrzXTDcefERX5FWiHiHZTwKjgN1ah0GWZZ8irqozI4yYrB9iy38ersLNnp/jXD1KFr9jOzuM3uKLYhJH5W93n46SyzA1vSE/MZN6hfF7aqN4OL+JUGxCqR9nYqUQISXm587hXJ0f2h+ZPsZQk0RuqhDnjzYv5zw4BBLKSB1jCB06ADAgESooHLBIHIr/+J5q4YCPkJ4ry/UX7zuGcClbm7r6KF6/E7VEMYbK5Zc9R4x0BaEeoXmnGjnQf7zETAk5n+PeWQ6x4/m6zFlDSSgtvOWF9N9CNxB/1bQ+/S0CKnJFRAgZ0aDTBagTh+rPEhYdMzDV5ema/f8GnQIgEhdbAiuC6RoewYf5KBJuuEwzVJiQbI7TV8nwEwp/q1NiUnn28d0LaVu91tz2OxP89eoW9yDq3lTYII3C/wJu2Q+N7rIhal0sBSnvZsR9J/EzvwoeGLTo8=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3DNEBVBJDqxP5TOuXxcd4SsaxrCkhSFH2XDs8kjkXhERBmwRRROXyDPHGEOtzntBpYK2uyAE8IFfa7Ho062iHcoZ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563796&amp;s=1+BB+dDQCFtdzxFWfmpR1LghV1rn5VsNG3N3t0Hefl0="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 19 Jun 2020 00:46:42 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:52:43 GMT
Cache-Control: no-cache
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3DNEBVBJDqxP5TOuXxcd4SsaxrCkhSFH2XDs8kjkXhERBmwRRROXyDPHGEOtzntBpYK2uyAE8IFfa7Ho062iHcoZ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563796&amp;s=1+BB+dDQCFtdzxFWfmpR1LghV1rn5VsNG3N3t0Hefl0="; Path=/; HttpOnly
Last-Modified: Fri, 19 Jun 2020 00:46:42 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200619 01:52:43.801" endtime="20200619 01:52:43.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.802" endtime="20200619 01:52:43.802"></status>
</kw>
<msg timestamp="20200619 01:52:43.803" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200619 01:52:43.773" endtime="20200619 01:52:43.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.803" endtime="20200619 01:52:43.803"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.721" endtime="20200619 01:52:43.803"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:43.720" endtime="20200619 01:52:43.803" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.809" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.806" endtime="20200619 01:52:43.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.812" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.811" endtime="20200619 01:52:43.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.812" endtime="20200619 01:52:43.813"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.806" endtime="20200619 01:52:43.813"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.805" endtime="20200619 01:52:43.813"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.817" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.829" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.814" endtime="20200619 01:52:43.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.830" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200619 01:52:43.830" endtime="20200619 01:52:43.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.831" endtime="20200619 01:52:43.831"></status>
</kw>
<msg timestamp="20200619 01:52:43.832" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.813" endtime="20200619 01:52:43.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.832" endtime="20200619 01:52:43.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.836" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.837" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.834" endtime="20200619 01:52:43.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.838" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:43.838" endtime="20200619 01:52:43.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.839" endtime="20200619 01:52:43.839"></status>
</kw>
<msg timestamp="20200619 01:52:43.839" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:43.833" endtime="20200619 01:52:43.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:52:43.840" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:52:43.840" endtime="20200619 01:52:43.840"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:43.841" endtime="20200619 01:52:43.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.854" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:43.853" endtime="20200619 01:52:43.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.854" endtime="20200619 01:52:43.854"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.841" endtime="20200619 01:52:43.855"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.840" endtime="20200619 01:52:43.855"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.833" endtime="20200619 01:52:43.855"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.832" endtime="20200619 01:52:43.855"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:43.858" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:43.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:43.883" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.856" endtime="20200619 01:52:43.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:43.884" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x19b9f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.3) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaW7WEQl+hYwDl6I9lUjd0VCB9aU5yQd9FSW2OOQyiD1urfyeVAjrudfQfNYUfGMFU4ZVn8CB48fkXpRz4bjV/LJSM5jqARp23/Hc7urR8ha2usOvcxq6H2kGkdNnv8nigSo8yW96a4dmZJgJyibXgzJIdsmNcV1cauVoVEwn45jkwV5VdwyR/zEs+HgCsGrhAxE1a6vAwGU7VtSJ+yjvFttA2AFF2cvfOF8XFiqRPBJJ8cLItUanSQb/vsTQZYQkQbofaOh8iUAKtZ49RjJjvG9Y8fX3YpZkGZqR1J3+r/7w8wOUDaf0FwcRF8mT6PEGF9QujN6+ngZ03QSemuorv/KMIATLXYpIHWMIHToAMCARKigcsEgcgf6eaa+Zb22CWDnJu0a5iDi9lzLjECM3DNAevfy2tB5oHzgODY+a56PN9r7SFcdZnoB34XsiBldaaG1nXEB/1IMrG4QwOs38Dx/bWjS44bOqgXk6FpKrMDyi33E3bP5l8EZEG7Mo1hXMEmRMgQZjAw41ODXCBY9mjJCOe9RAg9VxuQWBDGo1AuHt/phqf9+iNRb3gP9r2Y8S2zRpC8qX12AuzzmnFODdQ4KbN4KVGcEd4BuC2hLE95HEtop6h+po/xDRHkra3DAA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:43 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKOFcMH7bpgFf7Mo3OYRzzY5wNG0k4nZO+b5HFdLpTWQNawFRB/6fpIh4iHaIjx9qgDClyuor5duTWthzHbWGiU/h
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563878&amp;s=D4d79Z5RFqw1wyfv3385xDGQSa46gshmcs+JV2++I8c="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 19 Jun 2020 00:49:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:52:43 GMT
Cache-Control: no-cache
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Fri, 19 Jun 2020 01:52:43 GMT
Date: Fri, 19 Jun 2020 01:52:43 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKOFcMH7bpgFf7Mo3OYRzzY5wNG0k4nZO+b5HFdLpTWQNawFRB/6fpIh4iHaIjx9qgDClyuor5duTWthzHbWGiU/h
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567563878&amp;s=D4d79Z5RFqw1wyfv3385xDGQSa46gshmcs+JV2++I8c="; Path=/; HttpOnly
Last-Modified: Fri, 19 Jun 2020 00:49:38 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200619 01:52:43.883" endtime="20200619 01:52:43.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:43.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:43.884" endtime="20200619 01:52:43.885"></status>
</kw>
<msg timestamp="20200619 01:52:43.885" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200619 01:52:43.855" endtime="20200619 01:52:43.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:43.885" endtime="20200619 01:52:43.885"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:43.805" endtime="20200619 01:52:43.886"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:43.804" endtime="20200619 01:52:43.886" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200619 01:52:35.671" endtime="20200619 01:52:43.887"></status>
</suite>
<status status="PASS" starttime="20200619 01:52:35.640" endtime="20200619 01:52:43.889"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
