<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200619 01:13:57.855" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200619 01:13:57.911" endtime="20200619 01:13:57.911"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:13:57.916" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:13:57.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:13:57.985" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:13:57 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 19 Jun 2020 00:46:28 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200619 01:13:57.912" endtime="20200619 01:13:57.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:13:57.986" level="INFO">HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:13:57 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 19 Jun 2020 00:46:28 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200619 01:13:57.985" endtime="20200619 01:13:57.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:13:57.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:13:57.986" endtime="20200619 01:13:57.986"></status>
</kw>
<msg timestamp="20200619 01:13:57.987" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 19 Jun 2020 01:13:57 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 19 Jun 2020 00:46:28 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200619 01:13:57.911" endtime="20200619 01:13:57.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200619 01:13:57.987" endtime="20200619 01:13:57.987"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:13:57.910" endtime="20200619 01:13:57.988" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:13:57.990" endtime="20200619 01:13:57.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:13:57.993" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:06.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:06.305" level="INFO">${output} = 2020-06-19 01:13:58,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:13:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:13:57.991" endtime="20200619 01:15:06.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:06.307" level="INFO">2020-06-19 01:13:58,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:13:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:13:59,010 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-19 01:14:00,083 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-19 01:14:00,084 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-19 01:14:00,086 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-19 01:14:00,087 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-19 01:14:00,094 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-19 01:14:00,126 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-17960, with hadoop as owner.
2020-06-19 01:14:00,226 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-64947, with hadoop as owner.
2020-06-19 01:14:00,233 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-72400, with hadoop as owner.
2020-06-19 01:14:00,243 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-58535, with hadoop as owner.
2020-06-19 01:14:00,250 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-34751, with hadoop as owner.
2020-06-19 01:14:00,260 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17960/bucket-0-11612, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,283 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64947/bucket-0-51265, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,286 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72400/bucket-0-65357, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58535/bucket-0-75432, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,296 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34751/bucket-0-21980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,300 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17960/bucket-1-74268, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,304 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64947/bucket-1-56506, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,309 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72400/bucket-1-96547, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58535/bucket-1-48900, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,317 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34751/bucket-1-48832, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,322 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17960/bucket-2-42241, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,326 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64947/bucket-2-58489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,331 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72400/bucket-2-77924, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58535/bucket-2-57334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34751/bucket-2-82631, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,342 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17960/bucket-3-77506, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,345 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64947/bucket-3-43565, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72400/bucket-3-54709, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,353 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58535/bucket-3-05213, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34751/bucket-3-74897, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,360 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-17960/bucket-4-64861, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,364 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64947/bucket-4-42084, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-72400/bucket-4-07854, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,376 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-58535/bucket-4-91191, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:00,383 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-34751/bucket-4-27593, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:14:01,008 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-19 01:14:01,099 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-19 01:14:02,099 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-19 01:14:03,100 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-19 01:14:04,100 [Thread-5] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-19 01:14:05,101 [Thread-5] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-06-19 01:14:06,103 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-19 01:14:07,103 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-19 01:14:08,104 [Thread-5] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-06-19 01:14:09,107 [Thread-5] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-06-19 01:14:10,107 [Thread-5] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-06-19 01:14:11,108 [Thread-5] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-06-19 01:14:12,108 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-19 01:14:13,109 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-19 01:14:14,109 [Thread-5] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-06-19 01:14:15,110 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-19 01:14:16,110 [Thread-5] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-19 01:14:17,112 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-06-19 01:14:18,114 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-19 01:14:19,115 [Thread-5] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-06-19 01:14:20,115 [Thread-5] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-19 01:14:21,115 [Thread-5] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-19 01:14:22,116 [Thread-5] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2020-06-19 01:14:23,117 [Thread-5] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2020-06-19 01:14:24,118 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-19 01:14:25,118 [Thread-5] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-19 01:14:26,121 [Thread-5] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-06-19 01:14:27,122 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-19 01:14:28,123 [Thread-5] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-06-19 01:14:29,130 [Thread-5] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-06-19 01:14:30,130 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-19 01:14:31,131 [Thread-5] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-06-19 01:14:32,133 [Thread-5] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-06-19 01:14:33,133 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-19 01:14:34,134 [Thread-5] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-19 01:14:35,134 [Thread-5] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-06-19 01:14:36,135 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-19 01:14:37,135 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-19 01:14:38,137 [Thread-5] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-06-19 01:14:39,138 [Thread-5] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-19 01:14:40,138 [Thread-5] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-06-19 01:14:41,143 [Thread-5] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-19 01:14:42,144 [Thread-5] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-06-19 01:14:43,144 [Thread-5] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-06-19 01:14:44,145 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-19 01:14:45,145 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-19 01:14:46,146 [Thread-5] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-19 01:14:47,150 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-19 01:14:48,150 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-19 01:14:49,151 [Thread-5] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-06-19 01:14:50,151 [Thread-5] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-06-19 01:14:51,152 [Thread-5] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-06-19 01:14:52,152 [Thread-5] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-06-19 01:14:53,152 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-06-19 01:14:54,153 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-06-19 01:14:55,154 [Thread-5] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-06-19 01:14:56,154 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-19 01:14:57,155 [Thread-5] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-06-19 01:14:58,155 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-19 01:14:59,164 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-19 01:15:00,164 [Thread-5] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-06-19 01:15:01,164 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,133
Average Time spent in bucket creation: 00:00:00,082
Average Time spent in key creation: 00:00:01,386
Average Time spent in key write: 00:00:00,756
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:06,818
***************************************************</msg>
<status status="PASS" starttime="20200619 01:15:06.306" endtime="20200619 01:15:06.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:06.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:06.307" endtime="20200619 01:15:06.308"></status>
</kw>
<msg timestamp="20200619 01:15:06.308" level="INFO">${result} = 2020-06-19 01:13:58,867 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:13:59,010 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:13:57.990" endtime="20200619 01:15:06.308"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:06.309" endtime="20200619 01:15:06.309"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:06.308" endtime="20200619 01:15:06.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:06.309" endtime="20200619 01:15:06.310"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:13:57.989" endtime="20200619 01:15:06.310" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200619 01:13:57.885" endtime="20200619 01:15:06.311"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200619 01:15:06.320" level="INFO">${random} = 24330</msg>
<status status="PASS" starttime="20200619 01:15:06.319" endtime="20200619 01:15:06.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200619 01:15:06.320" level="INFO">${prefix} = 24330</msg>
<status status="PASS" starttime="20200619 01:15:06.320" endtime="20200619 01:15:06.320"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:06.319" endtime="20200619 01:15:06.320"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:06.321" endtime="20200619 01:15:06.322"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:06.324" level="INFO">Running command 'ozone sh volume info o3://om:9862/24330-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:07.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:15:07.918" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24330-rpcwoport is not found</msg>
<status status="PASS" starttime="20200619 01:15:06.323" endtime="20200619 01:15:07.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:07.920" level="INFO">VOLUME_NOT_FOUND Volume 24330-rpcwoport is not found</msg>
<status status="PASS" starttime="20200619 01:15:07.919" endtime="20200619 01:15:07.920"></status>
</kw>
<msg timestamp="20200619 01:15:07.920" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24330-rpcwoport is not found</msg>
<status status="PASS" starttime="20200619 01:15:06.322" endtime="20200619 01:15:07.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:07.920" endtime="20200619 01:15:07.920"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:07.923" level="INFO">Running command 'ozone sh volume create o3://om:9862/24330-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:09.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:09.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:07.921" endtime="20200619 01:15:09.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:09.594" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:09.593" endtime="20200619 01:15:09.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:09.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:09.594" endtime="20200619 01:15:09.595"></status>
</kw>
<msg timestamp="20200619 01:15:09.595" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:15:07.921" endtime="20200619 01:15:09.595"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:09.595" endtime="20200619 01:15:09.596"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:09.599" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="24330-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:11.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:11.563" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200619 01:15:09.596" endtime="20200619 01:15:11.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:11.564" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:15:11.564" endtime="20200619 01:15:11.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:11.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:11.565" endtime="20200619 01:15:11.565"></status>
</kw>
<msg timestamp="20200619 01:15:11.565" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200619 01:15:09.596" endtime="20200619 01:15:11.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:11.566" endtime="20200619 01:15:11.566"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:11.570" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24330-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:13.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:13.456" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200619 01:15:11.567" endtime="20200619 01:15:13.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:13.457" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:15:13.457" endtime="20200619 01:15:13.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:13.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:13.458" endtime="20200619 01:15:13.458"></status>
</kw>
<msg timestamp="20200619 01:15:13.458" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:15:09.481Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",...</msg>
<status status="PASS" starttime="20200619 01:15:11.566" endtime="20200619 01:15:13.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:13.459" endtime="20200619 01:15:13.459"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:13.463" level="INFO">Running command 'ozone sh volume update o3://om:9862/24330-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:15.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:15.355" level="INFO">${output} = {
  "metadata" : { },
  "name" : "24330-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:15:09.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop"...</msg>
<status status="PASS" starttime="20200619 01:15:13.460" endtime="20200619 01:15:15.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:15.356" level="INFO">{
  "metadata" : { },
  "name" : "24330-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:15:09.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200619 01:15:15.356" endtime="20200619 01:15:15.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:15.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:15.357" endtime="20200619 01:15:15.357"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:13.459" endtime="20200619 01:15:15.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:15.360" level="INFO">Running command 'ozone sh volume info o3://om:9862/24330-rpcwoport | jq -r '. | select(.name=="24330-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:17.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:17.153" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:15:15.358" endtime="20200619 01:15:17.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:17.154" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200619 01:15:17.153" endtime="20200619 01:15:17.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:17.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:17.154" endtime="20200619 01:15:17.155"></status>
</kw>
<msg timestamp="20200619 01:15:17.156" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:15:15.357" endtime="20200619 01:15:17.156"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:17.156" endtime="20200619 01:15:17.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:17.160" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24330-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:18.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:18.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:17.157" endtime="20200619 01:15:18.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:18.765" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:18.764" endtime="20200619 01:15:18.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:18.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:18.765" endtime="20200619 01:15:18.766"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:17.156" endtime="20200619 01:15:18.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:18.770" level="INFO">Running command 'ozone sh bucket info o3://om:9862/24330-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:20.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:20.676" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200619 01:15:18.767" endtime="20200619 01:15:20.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:20.678" level="INFO">DISK</msg>
<status status="PASS" starttime="20200619 01:15:20.677" endtime="20200619 01:15:20.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:20.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:20.678" endtime="20200619 01:15:20.678"></status>
</kw>
<msg timestamp="20200619 01:15:20.679" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200619 01:15:18.766" endtime="20200619 01:15:20.679"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:20.679" endtime="20200619 01:15:20.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:20.682" level="INFO">Running command 'ozone sh bucket list o3://om:9862/24330-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:22.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:22.551" level="INFO">${output} = 24330-rpcwoport</msg>
<status status="PASS" starttime="20200619 01:15:20.680" endtime="20200619 01:15:22.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:22.552" level="INFO">24330-rpcwoport</msg>
<status status="PASS" starttime="20200619 01:15:22.551" endtime="20200619 01:15:22.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:22.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:22.552" endtime="20200619 01:15:22.552"></status>
</kw>
<msg timestamp="20200619 01:15:22.553" level="INFO">${result} = 24330-rpcwoport</msg>
<status status="PASS" starttime="20200619 01:15:20.679" endtime="20200619 01:15:22.553"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:22.553" endtime="20200619 01:15:22.553"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:22.557" level="INFO">Running command 'ozone sh key put o3://om:9862/24330-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:28.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:28.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:22.555" endtime="20200619 01:15:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:28.416" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:28.415" endtime="20200619 01:15:28.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:28.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:28.417" endtime="20200619 01:15:28.417"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:22.554" endtime="20200619 01:15:28.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:28.420" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:28.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:28.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:28.418" endtime="20200619 01:15:28.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:28.424" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:28.423" endtime="20200619 01:15:28.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:28.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:28.424" endtime="20200619 01:15:28.425"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:28.418" endtime="20200619 01:15:28.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:28.428" level="INFO">Running command 'ozone sh key get o3://om:9862/24330-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:31.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:31.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:28.426" endtime="20200619 01:15:31.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:31.730" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:31.729" endtime="20200619 01:15:31.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:31.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:31.730" endtime="20200619 01:15:31.731"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:28.425" endtime="20200619 01:15:31.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:31.735" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:31.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:31.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:31.732" endtime="20200619 01:15:31.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:31.739" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:31.738" endtime="20200619 01:15:31.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:31.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:31.739" endtime="20200619 01:15:31.740"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:31.731" endtime="20200619 01:15:31.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:31.744" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/24330-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:35.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:35.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:31.741" endtime="20200619 01:15:35.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:35.190" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:35.189" endtime="20200619 01:15:35.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:35.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:35.190" endtime="20200619 01:15:35.191"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:31.740" endtime="20200619 01:15:35.191"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:35.194" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:35.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:35.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:35.192" endtime="20200619 01:15:35.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:35.198" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:35.197" endtime="20200619 01:15:35.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:35.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:35.198" endtime="20200619 01:15:35.199"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:35.191" endtime="20200619 01:15:35.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:35.203" level="INFO">Running command 'ozone sh key get o3://om:9862/24330-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:38.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:38.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:35.200" endtime="20200619 01:15:38.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:38.424" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:38.423" endtime="20200619 01:15:38.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:38.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:38.424" endtime="20200619 01:15:38.425"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:35.199" endtime="20200619 01:15:38.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:38.428" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:38.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:38.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:38.426" endtime="20200619 01:15:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:38.431" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:38.431" endtime="20200619 01:15:38.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:38.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:38.432" endtime="20200619 01:15:38.432"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:38.425" endtime="20200619 01:15:38.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:38.437" level="INFO">Running command 'ozone sh key info o3://om:9862/24330-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:40.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:40.328" level="INFO">${output} = {
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:33.521Z",
  "modificationTime": "2020-06-19T01:15:34.844Z",...</msg>
<status status="PASS" starttime="20200619 01:15:38.434" endtime="20200619 01:15:40.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:40.329" level="INFO">{
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:33.521Z",
  "modificationTime": "2020-06-19T01:15:34.844Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368002401566850,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:15:40.329" endtime="20200619 01:15:40.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:40.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:40.330" endtime="20200619 01:15:40.330"></status>
</kw>
<msg timestamp="20200619 01:15:40.330" level="INFO">${result} = {
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:33.521Z",
  "modificationTime": "2020-06-19T01:15:34.844Z",...</msg>
<status status="PASS" starttime="20200619 01:15:38.433" endtime="20200619 01:15:40.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:40.331" endtime="20200619 01:15:40.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:40.334" level="INFO">Running command 'ozone sh key delete o3://om:9862/24330-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:42.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:42.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:40.332" endtime="20200619 01:15:42.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:42.195" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:42.194" endtime="20200619 01:15:42.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:42.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:42.195" endtime="20200619 01:15:42.195"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:40.331" endtime="20200619 01:15:42.196"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:42.199" level="INFO">Running command 'ozone sh key cp o3://om:9862/24330-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:45.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:45.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:42.197" endtime="20200619 01:15:45.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:45.692" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:45.691" endtime="20200619 01:15:45.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:45.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:45.692" endtime="20200619 01:15:45.693"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:42.196" endtime="20200619 01:15:45.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:45.697" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:45.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:45.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:45.693" endtime="20200619 01:15:45.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:45.700" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:45.699" endtime="20200619 01:15:45.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:45.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:45.700" endtime="20200619 01:15:45.701"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:45.693" endtime="20200619 01:15:45.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:45.705" level="INFO">Running command 'ozone sh key get o3://om:9862/24330-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:49.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:49.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:45.702" endtime="20200619 01:15:49.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:49.213" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:49.212" endtime="20200619 01:15:49.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:49.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:49.213" endtime="20200619 01:15:49.214"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:45.702" endtime="20200619 01:15:49.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:49.218" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:49.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:49.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:49.215" endtime="20200619 01:15:49.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:49.220" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:49.219" endtime="20200619 01:15:49.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:49.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:49.220" endtime="20200619 01:15:49.221"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:49.214" endtime="20200619 01:15:49.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:49.224" level="INFO">Running command 'ozone sh key delete o3://om:9862/24330-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:51.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:51.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:49.222" endtime="20200619 01:15:51.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:51.017" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:51.016" endtime="20200619 01:15:51.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:51.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:51.017" endtime="20200619 01:15:51.018"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:49.221" endtime="20200619 01:15:51.018"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:51.022" level="INFO">Running command 'ozone sh key get o3://om:9862/24330-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:52.772" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:15:52.772" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:15:51.019" endtime="20200619 01:15:52.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:52.773" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:15:52.772" endtime="20200619 01:15:52.773"></status>
</kw>
<msg timestamp="20200619 01:15:52.774" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:15:51.018" endtime="20200619 01:15:52.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:52.774" endtime="20200619 01:15:52.774"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:52.777" level="INFO">Running command 'ozone sh key get --force o3://om:9862/24330-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:56.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:56.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:52.775" endtime="20200619 01:15:56.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:56.112" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:15:56.111" endtime="20200619 01:15:56.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:56.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:56.112" endtime="20200619 01:15:56.113"></status>
</kw>
<msg timestamp="20200619 01:15:56.113" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:15:52.774" endtime="20200619 01:15:56.113"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:56.113" endtime="20200619 01:15:56.113"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:56.116" level="INFO">Running command 'ozone sh key info o3://om:9862/24330-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:58.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:58.002" level="INFO">${output} = {
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:24.170Z",
  "modificationTime": "2020-06-19T01:15:27.955Z",
  "re...</msg>
<status status="PASS" starttime="20200619 01:15:56.114" endtime="20200619 01:15:58.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:58.003" level="INFO">{
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:24.170Z",
  "modificationTime": "2020-06-19T01:15:27.955Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368001788739710,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:15:58.002" endtime="20200619 01:15:58.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:58.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:58.003" endtime="20200619 01:15:58.004"></status>
</kw>
<msg timestamp="20200619 01:15:58.004" level="INFO">${result} = {
  "volumeName": "24330-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:15:24.170Z",
  "modificationTime": "2020-06-19T01:15:27.955Z",
  "re...</msg>
<status status="PASS" starttime="20200619 01:15:56.114" endtime="20200619 01:15:58.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:58.004" endtime="20200619 01:15:58.004"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:58.008" level="INFO">Running command 'ozone sh key list o3://om:9862/24330-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:15:59.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:15:59.863" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200619 01:15:58.005" endtime="20200619 01:15:59.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:15:59.864" level="INFO">key1</msg>
<status status="PASS" starttime="20200619 01:15:59.863" endtime="20200619 01:15:59.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:15:59.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:15:59.864" endtime="20200619 01:15:59.865"></status>
</kw>
<msg timestamp="20200619 01:15:59.865" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200619 01:15:58.005" endtime="20200619 01:15:59.865"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:15:59.865" endtime="20200619 01:15:59.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:15:59.869" level="INFO">Running command 'ozone sh key rename o3://om:9862/24330-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:01.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:01.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:15:59.866" endtime="20200619 01:16:01.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:01.695" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:01.695" endtime="20200619 01:16:01.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:01.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:01.696" endtime="20200619 01:16:01.696"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:59.866" endtime="20200619 01:16:01.696"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:01.700" level="INFO">Running command 'ozone sh key list o3://om:9862/24330-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:03.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:03.660" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200619 01:16:01.697" endtime="20200619 01:16:03.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:03.661" level="INFO">key2</msg>
<status status="PASS" starttime="20200619 01:16:03.660" endtime="20200619 01:16:03.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:03.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:03.661" endtime="20200619 01:16:03.662"></status>
</kw>
<msg timestamp="20200619 01:16:03.662" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200619 01:16:01.697" endtime="20200619 01:16:03.662"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:03.662" endtime="20200619 01:16:03.663"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:03.665" level="INFO">Running command 'ozone sh key delete o3://om:9862/24330-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:05.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:05.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:03.663" endtime="20200619 01:16:05.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:05.335" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:05.334" endtime="20200619 01:16:05.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:05.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:05.335" endtime="20200619 01:16:05.336"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:03.663" endtime="20200619 01:16:05.336"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:22.554" endtime="20200619 01:16:05.336"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:22.554" endtime="20200619 01:16:05.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:05.339" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/24330-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:06.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:06.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:05.337" endtime="20200619 01:16:06.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:06.994" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:06.993" endtime="20200619 01:16:06.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:06.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:06.994" endtime="20200619 01:16:06.995"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:05.337" endtime="20200619 01:16:06.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:06.999" level="INFO">Running command 'ozone sh volume delete o3://om:9862/24330-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:08.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:08.692" level="INFO">${output} = Volume 24330-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200619 01:16:06.996" endtime="20200619 01:16:08.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:08.693" level="INFO">Volume 24330-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200619 01:16:08.692" endtime="20200619 01:16:08.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:08.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:08.694" endtime="20200619 01:16:08.694"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:06.995" endtime="20200619 01:16:08.694"></status>
</kw>
<status status="PASS" starttime="20200619 01:15:06.322" endtime="20200619 01:16:08.694"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:15:06.320" endtime="20200619 01:16:08.695" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:08.696" endtime="20200619 01:16:08.697"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:08.700" level="INFO">Running command 'ozone sh volume create o3://om:9862/24330-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:10.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:10.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:08.698" endtime="20200619 01:16:10.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:10.289" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:10.289" endtime="20200619 01:16:10.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:10.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:10.289" endtime="20200619 01:16:10.290"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:08.697" endtime="20200619 01:16:10.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:10.294" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24330-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:12.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:12.141" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:10.291" endtime="20200619 01:16:12.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:12.142" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:12.142" endtime="20200619 01:16:12.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:12.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:12.142" endtime="20200619 01:16:12.143"></status>
</kw>
<msg timestamp="20200619 01:16:12.143" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:10.290" endtime="20200619 01:16:12.143"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:12.143" endtime="20200619 01:16:12.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:12.147" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/24330-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:13.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:13.859" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:12.145" endtime="20200619 01:16:13.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:13.860" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:13.860" endtime="20200619 01:16:13.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:13.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:13.861" endtime="20200619 01:16:13.861"></status>
</kw>
<msg timestamp="20200619 01:16:13.862" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:12.145" endtime="20200619 01:16:13.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:13.865" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24330-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:15.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:15.694" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:13.862" endtime="20200619 01:16:15.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:15.695" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:15.694" endtime="20200619 01:16:15.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:15.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:15.695" endtime="20200619 01:16:15.696"></status>
</kw>
<msg timestamp="20200619 01:16:15.696" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:13.862" endtime="20200619 01:16:15.696"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:15.697" endtime="20200619 01:16:15.698"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:15.701" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/24330-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:17.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:17.315" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200619 01:16:15.698" endtime="20200619 01:16:17.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:17.316" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200619 01:16:17.315" endtime="20200619 01:16:17.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:17.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:17.316" endtime="20200619 01:16:17.317"></status>
</kw>
<msg timestamp="20200619 01:16:17.317" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200619 01:16:15.698" endtime="20200619 01:16:17.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:17.321" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24330-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:19.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:19.097" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:17.318" endtime="20200619 01:16:19.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:19.098" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:19.098" endtime="20200619 01:16:19.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:19.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:19.099" endtime="20200619 01:16:19.099"></status>
</kw>
<msg timestamp="20200619 01:16:19.099" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:17.317" endtime="20200619 01:16:19.099"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:19.100" endtime="20200619 01:16:19.101"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:19.103" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/24330-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:20.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:20.788" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:19.101" endtime="20200619 01:16:20.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:20.789" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:20.788" endtime="20200619 01:16:20.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:20.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:20.789" endtime="20200619 01:16:20.790"></status>
</kw>
<msg timestamp="20200619 01:16:20.790" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:19.101" endtime="20200619 01:16:20.790"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:20.793" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/24330-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:22.723" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200619 01:16:20.791" endtime="20200619 01:16:22.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:22.724" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:22.724" endtime="20200619 01:16:22.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:22.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:22.725" endtime="20200619 01:16:22.725"></status>
</kw>
<msg timestamp="20200619 01:16:22.725" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200619 01:16:20.790" endtime="20200619 01:16:22.725"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:22.726" endtime="20200619 01:16:22.726"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:22.726" endtime="20200619 01:16:22.727"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:08.697" endtime="20200619 01:16:22.727"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:16:08.696" endtime="20200619 01:16:22.728" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:22.730" endtime="20200619 01:16:22.730"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:22.737" level="INFO">Running command 'ozone sh bucket create o3://om:9862/24330-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:24.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:24.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:22.732" endtime="20200619 01:16:24.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:24.386" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:24.386" endtime="20200619 01:16:24.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:24.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:24.386" endtime="20200619 01:16:24.387"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:22.731" endtime="20200619 01:16:24.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:24.390" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24330-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:26.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:26.202" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:24.388" endtime="20200619 01:16:26.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:26.204" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:26.203" endtime="20200619 01:16:26.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:26.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:26.204" endtime="20200619 01:16:26.205"></status>
</kw>
<msg timestamp="20200619 01:16:26.205" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:24.387" endtime="20200619 01:16:26.205"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:26.205" endtime="20200619 01:16:26.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:26.209" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/24330-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:27.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:27.971" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200619 01:16:26.206" endtime="20200619 01:16:27.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:27.972" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200619 01:16:27.972" endtime="20200619 01:16:27.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:27.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:27.973" endtime="20200619 01:16:27.973"></status>
</kw>
<msg timestamp="20200619 01:16:27.973" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200619 01:16:26.206" endtime="20200619 01:16:27.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:27.977" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24330-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:29.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:29.921" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:27.974" endtime="20200619 01:16:29.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:29.922" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:29.921" endtime="20200619 01:16:29.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:29.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:29.922" endtime="20200619 01:16:29.923"></status>
</kw>
<msg timestamp="20200619 01:16:29.923" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:27.974" endtime="20200619 01:16:29.923"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:29.923" endtime="20200619 01:16:29.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:29.928" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/24330-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:31.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:31.694" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:29.925" endtime="20200619 01:16:31.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:31.695" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:31.695" endtime="20200619 01:16:31.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:31.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:31.696" endtime="20200619 01:16:31.696"></status>
</kw>
<msg timestamp="20200619 01:16:31.697" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:29.925" endtime="20200619 01:16:31.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:31.701" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24330-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:33.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:33.714" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:31.697" endtime="20200619 01:16:33.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:33.715" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:33.715" endtime="20200619 01:16:33.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:33.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:33.716" endtime="20200619 01:16:33.716"></status>
</kw>
<msg timestamp="20200619 01:16:33.716" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:31.697" endtime="20200619 01:16:33.716"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:33.717" endtime="20200619 01:16:33.718"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:33.721" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/24330-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:35.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:35.355" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:33.718" endtime="20200619 01:16:35.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:35.356" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:35.355" endtime="20200619 01:16:35.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:35.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:35.356" endtime="20200619 01:16:35.357"></status>
</kw>
<msg timestamp="20200619 01:16:35.357" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:33.718" endtime="20200619 01:16:35.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:35.360" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/24330-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:37.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:37.100" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200619 01:16:35.358" endtime="20200619 01:16:37.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:37.101" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:37.100" endtime="20200619 01:16:37.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:37.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:37.101" endtime="20200619 01:16:37.101"></status>
</kw>
<msg timestamp="20200619 01:16:37.102" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200619 01:16:35.357" endtime="20200619 01:16:37.102"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:37.102" endtime="20200619 01:16:37.102"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:37.102" endtime="20200619 01:16:37.103"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:22.730" endtime="20200619 01:16:37.103"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:16:22.729" endtime="20200619 01:16:37.103" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:37.105" endtime="20200619 01:16:37.105"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:37.108" level="INFO">Running command 'ozone sh key put o3://om:9862/24330-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:40.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:40.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:37.106" endtime="20200619 01:16:40.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:40.468" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:40.467" endtime="20200619 01:16:40.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:40.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:40.468" endtime="20200619 01:16:40.469"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:37.106" endtime="20200619 01:16:40.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:40.472" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24330-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:42.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:42.280" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:40.470" endtime="20200619 01:16:42.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:42.281" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:42.280" endtime="20200619 01:16:42.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:42.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:42.281" endtime="20200619 01:16:42.282"></status>
</kw>
<msg timestamp="20200619 01:16:42.282" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:40.469" endtime="20200619 01:16:42.282"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:42.282" endtime="20200619 01:16:42.283"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:42.286" level="INFO">Running command 'ozone sh key addacl o3://om:9862/24330-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:43.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:43.939" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:42.284" endtime="20200619 01:16:43.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:43.940" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:43.940" endtime="20200619 01:16:43.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:43.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:43.941" endtime="20200619 01:16:43.941"></status>
</kw>
<msg timestamp="20200619 01:16:43.941" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200619 01:16:42.283" endtime="20200619 01:16:43.941"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:43.945" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24330-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:45.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:45.820" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:43.942" endtime="20200619 01:16:45.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:45.821" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:45.821" endtime="20200619 01:16:45.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:45.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:45.822" endtime="20200619 01:16:45.822"></status>
</kw>
<msg timestamp="20200619 01:16:45.822" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:43.941" endtime="20200619 01:16:45.822"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:45.823" endtime="20200619 01:16:45.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:45.826" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/24330-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:47.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:47.574" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:45.825" endtime="20200619 01:16:47.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:47.576" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:47.575" endtime="20200619 01:16:47.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:47.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:47.576" endtime="20200619 01:16:47.576"></status>
</kw>
<msg timestamp="20200619 01:16:47.577" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200619 01:16:45.824" endtime="20200619 01:16:47.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:47.580" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24330-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:49.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:49.477" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:47.577" endtime="20200619 01:16:49.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:49.478" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:49.478" endtime="20200619 01:16:49.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:49.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:49.479" endtime="20200619 01:16:49.480"></status>
</kw>
<msg timestamp="20200619 01:16:49.480" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200619 01:16:47.577" endtime="20200619 01:16:49.480"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:49.480" endtime="20200619 01:16:49.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:49.484" level="INFO">Running command 'ozone sh key setacl o3://om:9862/24330-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:51.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:51.190" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:49.481" endtime="20200619 01:16:51.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:51.191" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:51.190" endtime="20200619 01:16:51.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:51.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:51.191" endtime="20200619 01:16:51.192"></status>
</kw>
<msg timestamp="20200619 01:16:51.192" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200619 01:16:49.481" endtime="20200619 01:16:51.192"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:51.196" level="INFO">Running command 'ozone sh key getacl o3://om:9862/24330-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:53.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:53.110" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200619 01:16:51.193" endtime="20200619 01:16:53.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:53.111" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200619 01:16:53.111" endtime="20200619 01:16:53.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:53.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:53.112" endtime="20200619 01:16:53.112"></status>
</kw>
<msg timestamp="20200619 01:16:53.112" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200619 01:16:51.192" endtime="20200619 01:16:53.112"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:53.113" endtime="20200619 01:16:53.113"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:53.113" endtime="20200619 01:16:53.114"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:37.105" endtime="20200619 01:16:53.114"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:16:37.104" endtime="20200619 01:16:53.114" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:53.116" endtime="20200619 01:16:53.116"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:53.120" level="INFO">Running command 'ozone sh volume info o3:///24330-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:54.882" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:16:54.882" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24330-rpcwport is not found</msg>
<status status="PASS" starttime="20200619 01:16:53.118" endtime="20200619 01:16:54.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:54.884" level="INFO">VOLUME_NOT_FOUND Volume 24330-rpcwport is not found</msg>
<status status="PASS" starttime="20200619 01:16:54.883" endtime="20200619 01:16:54.884"></status>
</kw>
<msg timestamp="20200619 01:16:54.884" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24330-rpcwport is not found</msg>
<status status="PASS" starttime="20200619 01:16:53.117" endtime="20200619 01:16:54.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:54.884" endtime="20200619 01:16:54.884"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:54.888" level="INFO">Running command 'ozone sh volume create o3:///24330-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:56.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:56.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:16:54.885" endtime="20200619 01:16:56.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:56.671" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:16:56.671" endtime="20200619 01:16:56.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:56.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:56.672" endtime="20200619 01:16:56.672"></status>
</kw>
<msg timestamp="20200619 01:16:56.672" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:16:54.885" endtime="20200619 01:16:56.673"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:56.673" endtime="20200619 01:16:56.673"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:56.677" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="24330-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:16:58.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:16:58.661" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200619 01:16:56.674" endtime="20200619 01:16:58.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:16:58.662" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:16:58.661" endtime="20200619 01:16:58.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:16:58.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:16:58.662" endtime="20200619 01:16:58.663"></status>
</kw>
<msg timestamp="20200619 01:16:58.663" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200619 01:16:56.673" endtime="20200619 01:16:58.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:16:58.663" endtime="20200619 01:16:58.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:16:58.667" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24330-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:00.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:00.593" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200619 01:16:58.664" endtime="20200619 01:17:00.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:00.594" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:17:00.593" endtime="20200619 01:17:00.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:00.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:00.594" endtime="20200619 01:17:00.595"></status>
</kw>
<msg timestamp="20200619 01:17:00.595" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:16:56.554Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
...</msg>
<status status="PASS" starttime="20200619 01:16:58.664" endtime="20200619 01:17:00.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:00.595" endtime="20200619 01:17:00.595"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:00.598" level="INFO">Running command 'ozone sh volume update o3:///24330-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:02.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:02.625" level="INFO">${output} = {
  "metadata" : { },
  "name" : "24330-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:16:56.554Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",...</msg>
<status status="PASS" starttime="20200619 01:17:00.596" endtime="20200619 01:17:02.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:02.626" level="INFO">{
  "metadata" : { },
  "name" : "24330-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:16:56.554Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200619 01:17:02.626" endtime="20200619 01:17:02.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:02.627" endtime="20200619 01:17:02.627"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:00.596" endtime="20200619 01:17:02.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:02.631" level="INFO">Running command 'ozone sh volume info o3:///24330-rpcwport | jq -r '. | select(.name=="24330-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:04.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:04.524" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:17:02.628" endtime="20200619 01:17:04.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:04.525" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200619 01:17:04.524" endtime="20200619 01:17:04.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:04.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:04.525" endtime="20200619 01:17:04.526"></status>
</kw>
<msg timestamp="20200619 01:17:04.526" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:17:02.628" endtime="20200619 01:17:04.526"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:04.526" endtime="20200619 01:17:04.527"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:04.530" level="INFO">Running command 'ozone sh bucket create o3:///24330-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:06.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:06.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:04.528" endtime="20200619 01:17:06.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:06.328" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:06.327" endtime="20200619 01:17:06.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:06.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:06.328" endtime="20200619 01:17:06.329"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:04.527" endtime="20200619 01:17:06.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:06.333" level="INFO">Running command 'ozone sh bucket info o3:///24330-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:08.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:08.213" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200619 01:17:06.330" endtime="20200619 01:17:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:08.214" level="INFO">DISK</msg>
<status status="PASS" starttime="20200619 01:17:08.213" endtime="20200619 01:17:08.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:08.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:08.214" endtime="20200619 01:17:08.215"></status>
</kw>
<msg timestamp="20200619 01:17:08.215" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200619 01:17:06.329" endtime="20200619 01:17:08.215"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:08.215" endtime="20200619 01:17:08.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:08.219" level="INFO">Running command 'ozone sh bucket list o3:///24330-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:10.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:10.033" level="INFO">${output} = 24330-rpcwport</msg>
<status status="PASS" starttime="20200619 01:17:08.216" endtime="20200619 01:17:10.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:10.034" level="INFO">24330-rpcwport</msg>
<status status="PASS" starttime="20200619 01:17:10.033" endtime="20200619 01:17:10.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:10.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:10.034" endtime="20200619 01:17:10.035"></status>
</kw>
<msg timestamp="20200619 01:17:10.035" level="INFO">${result} = 24330-rpcwport</msg>
<status status="PASS" starttime="20200619 01:17:08.216" endtime="20200619 01:17:10.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:10.035" endtime="20200619 01:17:10.036"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:10.040" level="INFO">Running command 'ozone sh key put o3:///24330-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:13.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:13.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:10.037" endtime="20200619 01:17:13.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:13.519" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:13.518" endtime="20200619 01:17:13.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:13.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:13.519" endtime="20200619 01:17:13.520"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:10.037" endtime="20200619 01:17:13.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:13.524" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:13.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:13.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:13.521" endtime="20200619 01:17:13.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:13.528" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:13.527" endtime="20200619 01:17:13.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:13.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:13.528" endtime="20200619 01:17:13.529"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:13.521" endtime="20200619 01:17:13.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:13.533" level="INFO">Running command 'ozone sh key get o3:///24330-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:16.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:16.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:13.530" endtime="20200619 01:17:16.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:16.721" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:16.721" endtime="20200619 01:17:16.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:16.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:16.721" endtime="20200619 01:17:16.722"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:13.529" endtime="20200619 01:17:16.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:16.725" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:16.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:16.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:16.723" endtime="20200619 01:17:16.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:16.728" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:16.727" endtime="20200619 01:17:16.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:16.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:16.728" endtime="20200619 01:17:16.729"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:16.722" endtime="20200619 01:17:16.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:16.732" level="INFO">Running command 'ozone sh key put -t RATIS o3:///24330-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:20.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:20.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:16.730" endtime="20200619 01:17:20.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:20.153" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:20.152" endtime="20200619 01:17:20.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:20.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:20.154" endtime="20200619 01:17:20.154"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:16.729" endtime="20200619 01:17:20.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:20.158" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:20.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:20.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:20.155" endtime="20200619 01:17:20.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:20.162" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:20.161" endtime="20200619 01:17:20.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:20.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:20.162" endtime="20200619 01:17:20.163"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:20.155" endtime="20200619 01:17:20.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:20.166" level="INFO">Running command 'ozone sh key get o3:///24330-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:23.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:23.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:20.164" endtime="20200619 01:17:23.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:23.419" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:23.418" endtime="20200619 01:17:23.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:23.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:23.419" endtime="20200619 01:17:23.420"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:20.163" endtime="20200619 01:17:23.420"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:23.423" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:23.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:23.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:23.421" endtime="20200619 01:17:23.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:23.427" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:23.426" endtime="20200619 01:17:23.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:23.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:23.427" endtime="20200619 01:17:23.428"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:23.420" endtime="20200619 01:17:23.428"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:23.432" level="INFO">Running command 'ozone sh key info o3:///24330-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:25.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:25.208" level="INFO">${output} = {
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:18.329Z",
  "modificationTime": "2020-06-19T01:17:19.705Z",
...</msg>
<status status="PASS" starttime="20200619 01:17:23.429" endtime="20200619 01:17:25.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:25.209" level="INFO">{
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:18.329Z",
  "modificationTime": "2020-06-19T01:17:19.705Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368009270067330,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:17:25.208" endtime="20200619 01:17:25.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:25.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:25.210" endtime="20200619 01:17:25.210"></status>
</kw>
<msg timestamp="20200619 01:17:25.210" level="INFO">${result} = {
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:18.329Z",
  "modificationTime": "2020-06-19T01:17:19.705Z",
...</msg>
<status status="PASS" starttime="20200619 01:17:23.428" endtime="20200619 01:17:25.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:25.210" endtime="20200619 01:17:25.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:25.215" level="INFO">Running command 'ozone sh key delete o3:///24330-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:26.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:26.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:25.212" endtime="20200619 01:17:26.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:26.977" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:26.976" endtime="20200619 01:17:26.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:26.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:26.977" endtime="20200619 01:17:26.978"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:25.211" endtime="20200619 01:17:26.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:26.982" level="INFO">Running command 'ozone sh key cp o3:///24330-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:30.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:30.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:26.979" endtime="20200619 01:17:30.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:30.428" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:30.427" endtime="20200619 01:17:30.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:30.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:30.429" endtime="20200619 01:17:30.429"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:26.978" endtime="20200619 01:17:30.430"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:30.433" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:30.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:30.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:30.430" endtime="20200619 01:17:30.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:30.436" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:30.436" endtime="20200619 01:17:30.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:30.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:30.437" endtime="20200619 01:17:30.437"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:30.430" endtime="20200619 01:17:30.438"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:30.442" level="INFO">Running command 'ozone sh key get o3:///24330-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:33.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:33.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:30.438" endtime="20200619 01:17:33.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:33.687" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:33.686" endtime="20200619 01:17:33.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:33.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:33.688" endtime="20200619 01:17:33.688"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:30.438" endtime="20200619 01:17:33.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:33.691" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:33.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:33.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:33.689" endtime="20200619 01:17:33.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:33.695" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:33.694" endtime="20200619 01:17:33.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:33.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:33.696" endtime="20200619 01:17:33.697"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:33.689" endtime="20200619 01:17:33.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:33.701" level="INFO">Running command 'ozone sh key delete o3:///24330-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:35.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:35.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:33.698" endtime="20200619 01:17:35.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:35.445" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:35.445" endtime="20200619 01:17:35.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:35.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:35.446" endtime="20200619 01:17:35.446"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:33.697" endtime="20200619 01:17:35.446"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:35.451" level="INFO">Running command 'ozone sh key get o3:///24330-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:37.173" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:17:37.173" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:17:35.448" endtime="20200619 01:17:37.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:37.174" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:17:37.173" endtime="20200619 01:17:37.174"></status>
</kw>
<msg timestamp="20200619 01:17:37.174" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:17:35.447" endtime="20200619 01:17:37.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:37.174" endtime="20200619 01:17:37.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:37.178" level="INFO">Running command 'ozone sh key get --force o3:///24330-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:40.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:40.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:37.176" endtime="20200619 01:17:40.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:40.468" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:40.467" endtime="20200619 01:17:40.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:40.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:40.468" endtime="20200619 01:17:40.469"></status>
</kw>
<msg timestamp="20200619 01:17:40.469" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:17:37.175" endtime="20200619 01:17:40.469"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:40.469" endtime="20200619 01:17:40.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:40.473" level="INFO">Running command 'ozone sh key info o3:///24330-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:42.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:42.357" level="INFO">${output} = {
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:11.708Z",
  "modificationTime": "2020-06-19T01:17:13.071Z",
  "rep...</msg>
<status status="PASS" starttime="20200619 01:17:40.471" endtime="20200619 01:17:42.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:42.358" level="INFO">{
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:11.708Z",
  "modificationTime": "2020-06-19T01:17:13.071Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368008836415620,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:17:42.357" endtime="20200619 01:17:42.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:42.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:42.358" endtime="20200619 01:17:42.359"></status>
</kw>
<msg timestamp="20200619 01:17:42.359" level="INFO">${result} = {
  "volumeName": "24330-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:17:11.708Z",
  "modificationTime": "2020-06-19T01:17:13.071Z",
  "rep...</msg>
<status status="PASS" starttime="20200619 01:17:40.470" endtime="20200619 01:17:42.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:42.359" endtime="20200619 01:17:42.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:42.363" level="INFO">Running command 'ozone sh key list o3:///24330-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:44.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:44.201" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200619 01:17:42.360" endtime="20200619 01:17:44.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:44.202" level="INFO">key1</msg>
<status status="PASS" starttime="20200619 01:17:44.201" endtime="20200619 01:17:44.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:44.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:44.202" endtime="20200619 01:17:44.203"></status>
</kw>
<msg timestamp="20200619 01:17:44.203" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200619 01:17:42.360" endtime="20200619 01:17:44.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:44.203" endtime="20200619 01:17:44.204"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:44.206" level="INFO">Running command 'ozone sh key rename o3:///24330-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:45.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:45.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:44.205" endtime="20200619 01:17:45.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:45.941" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:45.941" endtime="20200619 01:17:45.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:45.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:45.942" endtime="20200619 01:17:45.942"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:44.204" endtime="20200619 01:17:45.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:45.946" level="INFO">Running command 'ozone sh key list o3:///24330-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:47.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:47.819" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200619 01:17:45.943" endtime="20200619 01:17:47.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:47.821" level="INFO">key2</msg>
<status status="PASS" starttime="20200619 01:17:47.820" endtime="20200619 01:17:47.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:47.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:47.821" endtime="20200619 01:17:47.821"></status>
</kw>
<msg timestamp="20200619 01:17:47.822" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200619 01:17:45.942" endtime="20200619 01:17:47.822"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:47.822" endtime="20200619 01:17:47.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:47.826" level="INFO">Running command 'ozone sh key delete o3:///24330-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:49.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:49.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:47.823" endtime="20200619 01:17:49.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:49.459" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:49.458" endtime="20200619 01:17:49.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:49.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:49.459" endtime="20200619 01:17:49.460"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:47.823" endtime="20200619 01:17:49.460"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:10.036" endtime="20200619 01:17:49.460"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:10.036" endtime="20200619 01:17:49.460"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:49.464" level="INFO">Running command 'ozone sh bucket delete o3:///24330-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:51.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:51.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:49.461" endtime="20200619 01:17:51.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:51.144" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:51.143" endtime="20200619 01:17:51.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:51.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:51.144" endtime="20200619 01:17:51.145"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:49.460" endtime="20200619 01:17:51.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:51.148" level="INFO">Running command 'ozone sh volume delete o3:///24330-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:52.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:52.819" level="INFO">${output} = Volume 24330-rpcwport is deleted</msg>
<status status="PASS" starttime="20200619 01:17:51.145" endtime="20200619 01:17:52.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:52.820" level="INFO">Volume 24330-rpcwport is deleted</msg>
<status status="PASS" starttime="20200619 01:17:52.820" endtime="20200619 01:17:52.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:52.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:52.821" endtime="20200619 01:17:52.821"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:51.145" endtime="20200619 01:17:52.821"></status>
</kw>
<status status="PASS" starttime="20200619 01:16:53.117" endtime="20200619 01:17:52.821"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:16:53.115" endtime="20200619 01:17:52.822" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:52.823" endtime="20200619 01:17:52.823"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:52.827" level="INFO">Running command 'ozone sh volume info /24330-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:54.547" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:17:54.547" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24330-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200619 01:17:52.825" endtime="20200619 01:17:54.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:54.548" level="INFO">VOLUME_NOT_FOUND Volume 24330-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200619 01:17:54.547" endtime="20200619 01:17:54.548"></status>
</kw>
<msg timestamp="20200619 01:17:54.548" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24330-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200619 01:17:52.824" endtime="20200619 01:17:54.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:54.549" endtime="20200619 01:17:54.549"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:54.553" level="INFO">Running command 'ozone sh volume create /24330-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:56.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:56.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:17:54.550" endtime="20200619 01:17:56.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:56.326" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:17:56.326" endtime="20200619 01:17:56.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:56.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:56.327" endtime="20200619 01:17:56.327"></status>
</kw>
<msg timestamp="20200619 01:17:56.327" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:17:54.549" endtime="20200619 01:17:56.327"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:56.328" endtime="20200619 01:17:56.328"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:56.332" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="24330-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:17:58.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:17:58.270" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200619 01:17:56.329" endtime="20200619 01:17:58.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:17:58.271" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:17:58.270" endtime="20200619 01:17:58.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:17:58.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:17:58.271" endtime="20200619 01:17:58.272"></status>
</kw>
<msg timestamp="20200619 01:17:58.272" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200619 01:17:56.328" endtime="20200619 01:17:58.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:17:58.272" endtime="20200619 01:17:58.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:17:58.275" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24330-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:00.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:00.159" level="INFO">${output} = {
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200619 01:17:58.273" endtime="20200619 01:18:00.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:00.160" level="INFO">{
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200619 01:18:00.159" endtime="20200619 01:18:00.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:00.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:00.160" endtime="20200619 01:18:00.161"></status>
</kw>
<msg timestamp="20200619 01:18:00.161" level="INFO">${result} = {
  "metadata": {},
  "name": "24330-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-19T01:17:56.208Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop...</msg>
<status status="PASS" starttime="20200619 01:17:58.273" endtime="20200619 01:18:00.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:00.161" endtime="20200619 01:18:00.162"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:00.165" level="INFO">Running command 'ozone sh volume update /24330-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:02.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:02.174" level="INFO">${output} = {
  "metadata" : { },
  "name" : "24330-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:17:56.208Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoo...</msg>
<status status="PASS" starttime="20200619 01:18:00.162" endtime="20200619 01:18:02.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:02.175" level="INFO">{
  "metadata" : { },
  "name" : "24330-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-19T01:17:56.208Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200619 01:18:02.175" endtime="20200619 01:18:02.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:02.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:02.176" endtime="20200619 01:18:02.176"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:00.162" endtime="20200619 01:18:02.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:02.182" level="INFO">Running command 'ozone sh volume info /24330-rpcwoscheme | jq -r '. | select(.name=="24330-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:04.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:04.185" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:18:02.177" endtime="20200619 01:18:04.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:04.186" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200619 01:18:04.186" endtime="20200619 01:18:04.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:04.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:04.187" endtime="20200619 01:18:04.187"></status>
</kw>
<msg timestamp="20200619 01:18:04.188" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200619 01:18:02.177" endtime="20200619 01:18:04.188"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:04.188" endtime="20200619 01:18:04.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:04.192" level="INFO">Running command 'ozone sh bucket create /24330-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:05.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:05.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:04.189" endtime="20200619 01:18:05.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:05.934" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:05.933" endtime="20200619 01:18:05.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:05.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:05.934" endtime="20200619 01:18:05.935"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:04.188" endtime="20200619 01:18:05.935"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:05.939" level="INFO">Running command 'ozone sh bucket info /24330-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:07.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:07.875" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200619 01:18:05.936" endtime="20200619 01:18:07.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:07.876" level="INFO">DISK</msg>
<status status="PASS" starttime="20200619 01:18:07.875" endtime="20200619 01:18:07.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:07.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:07.876" endtime="20200619 01:18:07.877"></status>
</kw>
<msg timestamp="20200619 01:18:07.877" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200619 01:18:05.935" endtime="20200619 01:18:07.877"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:07.877" endtime="20200619 01:18:07.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:07.882" level="INFO">Running command 'ozone sh bucket list /24330-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:09.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:09.628" level="INFO">${output} = 24330-rpcwoscheme</msg>
<status status="PASS" starttime="20200619 01:18:07.879" endtime="20200619 01:18:09.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:09.629" level="INFO">24330-rpcwoscheme</msg>
<status status="PASS" starttime="20200619 01:18:09.628" endtime="20200619 01:18:09.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:09.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:09.629" endtime="20200619 01:18:09.630"></status>
</kw>
<msg timestamp="20200619 01:18:09.630" level="INFO">${result} = 24330-rpcwoscheme</msg>
<status status="PASS" starttime="20200619 01:18:07.878" endtime="20200619 01:18:09.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:09.630" endtime="20200619 01:18:09.631"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:09.635" level="INFO">Running command 'ozone sh key put /24330-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:13.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:13.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:09.632" endtime="20200619 01:18:13.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:13.169" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:13.169" endtime="20200619 01:18:13.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:13.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:13.170" endtime="20200619 01:18:13.170"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:09.632" endtime="20200619 01:18:13.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:13.174" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:13.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:13.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:13.171" endtime="20200619 01:18:13.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:13.177" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:13.177" endtime="20200619 01:18:13.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:13.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:13.178" endtime="20200619 01:18:13.178"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:13.171" endtime="20200619 01:18:13.179"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:13.181" level="INFO">Running command 'ozone sh key get /24330-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:16.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:16.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:13.179" endtime="20200619 01:18:16.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:16.415" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:16.415" endtime="20200619 01:18:16.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:16.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:16.416" endtime="20200619 01:18:16.416"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:13.179" endtime="20200619 01:18:16.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:16.419" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:16.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:16.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:16.417" endtime="20200619 01:18:16.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:16.423" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:16.423" endtime="20200619 01:18:16.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:16.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:16.423" endtime="20200619 01:18:16.424"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:16.417" endtime="20200619 01:18:16.424"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:16.427" level="INFO">Running command 'ozone sh key put -t RATIS /24330-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:19.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:19.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:16.425" endtime="20200619 01:18:19.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:19.847" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:19.846" endtime="20200619 01:18:19.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:19.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:19.847" endtime="20200619 01:18:19.848"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:16.424" endtime="20200619 01:18:19.848"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:19.852" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:19.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:19.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:19.849" endtime="20200619 01:18:19.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:19.856" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:19.855" endtime="20200619 01:18:19.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:19.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:19.856" endtime="20200619 01:18:19.857"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:19.849" endtime="20200619 01:18:19.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:19.861" level="INFO">Running command 'ozone sh key get /24330-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:23.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:23.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:19.858" endtime="20200619 01:18:23.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:23.129" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:23.129" endtime="20200619 01:18:23.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:23.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:23.130" endtime="20200619 01:18:23.130"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:19.857" endtime="20200619 01:18:23.131"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:23.133" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:23.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:23.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:23.131" endtime="20200619 01:18:23.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:23.136" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:23.136" endtime="20200619 01:18:23.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:23.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:23.136" endtime="20200619 01:18:23.137"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:23.131" endtime="20200619 01:18:23.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:23.141" level="INFO">Running command 'ozone sh key info /24330-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:25.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:25.016" level="INFO">${output} = {
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:18.080Z",
  "modificationTime": "2020-06-19T01:18:19.398Z...</msg>
<status status="PASS" starttime="20200619 01:18:23.138" endtime="20200619 01:18:25.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:25.018" level="INFO">{
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:18.080Z",
  "modificationTime": "2020-06-19T01:18:19.398Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368013186039940,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:18:25.017" endtime="20200619 01:18:25.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:25.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:25.018" endtime="20200619 01:18:25.018"></status>
</kw>
<msg timestamp="20200619 01:18:25.019" level="INFO">${result} = {
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:18.080Z",
  "modificationTime": "2020-06-19T01:18:19.398Z...</msg>
<status status="PASS" starttime="20200619 01:18:23.137" endtime="20200619 01:18:25.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:25.019" endtime="20200619 01:18:25.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:25.022" level="INFO">Running command 'ozone sh key delete /24330-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:26.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:26.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:25.020" endtime="20200619 01:18:26.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:26.738" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:26.737" endtime="20200619 01:18:26.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:26.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:26.738" endtime="20200619 01:18:26.739"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:25.019" endtime="20200619 01:18:26.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:26.743" level="INFO">Running command 'ozone sh key cp /24330-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:30.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:30.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:26.740" endtime="20200619 01:18:30.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:30.269" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:30.268" endtime="20200619 01:18:30.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:30.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:30.269" endtime="20200619 01:18:30.270"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:26.739" endtime="20200619 01:18:30.270"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:30.275" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:30.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:30.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:30.271" endtime="20200619 01:18:30.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:30.277" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:30.277" endtime="20200619 01:18:30.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:30.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:30.278" endtime="20200619 01:18:30.279"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:30.270" endtime="20200619 01:18:30.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:30.283" level="INFO">Running command 'ozone sh key get /24330-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:33.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:33.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:30.280" endtime="20200619 01:18:33.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:33.574" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:33.573" endtime="20200619 01:18:33.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:33.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:33.574" endtime="20200619 01:18:33.575"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:30.279" endtime="20200619 01:18:33.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:33.579" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:33.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:33.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:33.576" endtime="20200619 01:18:33.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:33.581" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:33.581" endtime="20200619 01:18:33.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:33.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:33.581" endtime="20200619 01:18:33.582"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:33.575" endtime="20200619 01:18:33.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:33.586" level="INFO">Running command 'ozone sh key delete /24330-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:35.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:35.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:33.583" endtime="20200619 01:18:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:35.282" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:35.281" endtime="20200619 01:18:35.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:35.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:35.282" endtime="20200619 01:18:35.282"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:33.582" endtime="20200619 01:18:35.283"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:35.285" level="INFO">Running command 'ozone sh key get /24330-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:37.045" level="INFO">${rc} = 255</msg>
<msg timestamp="20200619 01:18:37.045" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:18:35.283" endtime="20200619 01:18:37.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:37.046" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:18:37.045" endtime="20200619 01:18:37.046"></status>
</kw>
<msg timestamp="20200619 01:18:37.047" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200619 01:18:35.283" endtime="20200619 01:18:37.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:37.047" endtime="20200619 01:18:37.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:37.051" level="INFO">Running command 'ozone sh key get --force /24330-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:40.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:40.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:37.048" endtime="20200619 01:18:40.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:40.140" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:40.139" endtime="20200619 01:18:40.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:40.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:40.140" endtime="20200619 01:18:40.141"></status>
</kw>
<msg timestamp="20200619 01:18:40.141" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200619 01:18:37.047" endtime="20200619 01:18:40.141"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:40.141" endtime="20200619 01:18:40.142"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:40.145" level="INFO">Running command 'ozone sh key info /24330-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:41.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:41.964" level="INFO">${output} = {
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:11.389Z",
  "modificationTime": "2020-06-19T01:18:12.826Z",
  "...</msg>
<status status="PASS" starttime="20200619 01:18:40.143" endtime="20200619 01:18:41.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:41.966" level="INFO">{
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:11.389Z",
  "modificationTime": "2020-06-19T01:18:12.826Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104368012747669630,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200619 01:18:41.965" endtime="20200619 01:18:41.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:41.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:41.966" endtime="20200619 01:18:41.966"></status>
</kw>
<msg timestamp="20200619 01:18:41.967" level="INFO">${result} = {
  "volumeName": "24330-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-19T01:18:11.389Z",
  "modificationTime": "2020-06-19T01:18:12.826Z",
  "...</msg>
<status status="PASS" starttime="20200619 01:18:40.142" endtime="20200619 01:18:41.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:41.967" endtime="20200619 01:18:41.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:41.970" level="INFO">Running command 'ozone sh key list /24330-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:43.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:43.860" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200619 01:18:41.968" endtime="20200619 01:18:43.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:43.861" level="INFO">key1</msg>
<status status="PASS" starttime="20200619 01:18:43.861" endtime="20200619 01:18:43.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:43.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:43.862" endtime="20200619 01:18:43.862"></status>
</kw>
<msg timestamp="20200619 01:18:43.862" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200619 01:18:41.967" endtime="20200619 01:18:43.862"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:43.862" endtime="20200619 01:18:43.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:43.866" level="INFO">Running command 'ozone sh key rename /24330-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:45.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:45.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:43.864" endtime="20200619 01:18:45.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:45.586" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:45.586" endtime="20200619 01:18:45.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:45.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:45.587" endtime="20200619 01:18:45.587"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:43.863" endtime="20200619 01:18:45.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:45.591" level="INFO">Running command 'ozone sh key list /24330-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:47.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:47.391" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200619 01:18:45.588" endtime="20200619 01:18:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:47.393" level="INFO">key2</msg>
<status status="PASS" starttime="20200619 01:18:47.392" endtime="20200619 01:18:47.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:47.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:47.393" endtime="20200619 01:18:47.393"></status>
</kw>
<msg timestamp="20200619 01:18:47.394" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200619 01:18:45.587" endtime="20200619 01:18:47.394"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200619 01:18:47.394" endtime="20200619 01:18:47.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:47.398" level="INFO">Running command 'ozone sh key delete /24330-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:49.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:49.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:47.395" endtime="20200619 01:18:49.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:49.082" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:49.082" endtime="20200619 01:18:49.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:49.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:49.083" endtime="20200619 01:18:49.083"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:47.394" endtime="20200619 01:18:49.083"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:09.631" endtime="20200619 01:18:49.084"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:09.631" endtime="20200619 01:18:49.084"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:49.087" level="INFO">Running command 'ozone sh bucket delete /24330-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:50.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:50.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:18:49.084" endtime="20200619 01:18:50.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:50.678" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:18:50.677" endtime="20200619 01:18:50.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:50.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:50.678" endtime="20200619 01:18:50.679"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:49.084" endtime="20200619 01:18:50.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:18:50.683" level="INFO">Running command 'ozone sh volume delete /24330-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:18:52.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:18:52.352" level="INFO">${output} = Volume 24330-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200619 01:18:50.680" endtime="20200619 01:18:52.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:18:52.353" level="INFO">Volume 24330-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200619 01:18:52.352" endtime="20200619 01:18:52.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:18:52.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:18:52.353" endtime="20200619 01:18:52.354"></status>
</kw>
<status status="PASS" starttime="20200619 01:18:50.679" endtime="20200619 01:18:52.354"></status>
</kw>
<status status="PASS" starttime="20200619 01:17:52.824" endtime="20200619 01:18:52.354"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200619 01:17:52.822" endtime="20200619 01:18:52.354" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200619 01:15:06.313" endtime="20200619 01:18:52.356"></status>
</suite>
<status status="PASS" starttime="20200619 01:13:57.856" endtime="20200619 01:18:52.361"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
