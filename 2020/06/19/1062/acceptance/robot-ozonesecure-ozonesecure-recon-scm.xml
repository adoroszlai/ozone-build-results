<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200619 01:51:30.171" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:30.233" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:30.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:30.236" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:51:30.229" endtime="20200619 01:51:30.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:30.237" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:51:30.236" endtime="20200619 01:51:30.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:30.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:30.237" endtime="20200619 01:51:30.238"></status>
</kw>
<msg timestamp="20200619 01:51:30.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:51:30.229" endtime="20200619 01:51:30.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200619 01:51:30.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200619 01:51:30.238" endtime="20200619 01:51:30.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:30.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:30.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:30.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:51:30.241" endtime="20200619 01:51:30.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:30.257" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:51:30.256" endtime="20200619 01:51:30.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:30.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:30.257" endtime="20200619 01:51:30.257"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:30.240" endtime="20200619 01:51:30.258"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:30.240" endtime="20200619 01:51:30.258"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:30.228" endtime="20200619 01:51:30.258"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:30.228" endtime="20200619 01:51:30.258"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:30.262" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:38.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:38.033" level="INFO">${output} = 2020-06-19 01:51:31,197 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:51:31,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:51:30.258" endtime="20200619 01:51:38.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:38.034" level="INFO">2020-06-19 01:51:31,197 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:51:31,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:51:31,345 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-06-19 01:51:32,528 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-06-19 01:51:32,529 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-19 01:51:32,529 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-19 01:51:32,529 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-06-19 01:51:32,529 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-06-19 01:51:32,529 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-19 01:51:32,530 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-19 01:51:32,547 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-19 01:51:32,551 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-06-19 01:51:32,573 [pool-2-thread-2] INFO rpc.RpcClient: Creating Volume: vol-0-08013, with testuser/scm@EXAMPLE.COM as owner.
2020-06-19 01:51:32,605 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-08013/bucket-0-70070, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:51:33,055 [pool-2-thread-10] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-19 01:51:33,553 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,003
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,082
Average Time spent in key write: 00:00:00,456
Total bytes written: 10250
Total Execution time: 00:00:06,142
***************************************************</msg>
<status status="PASS" starttime="20200619 01:51:38.034" endtime="20200619 01:51:38.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:38.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:38.035" endtime="20200619 01:51:38.036"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:30.258" endtime="20200619 01:51:38.036"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:51:30.227" endtime="20200619 01:51:38.036" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:38.043" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:38.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:38.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:51:38.040" endtime="20200619 01:51:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:38.047" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:51:38.046" endtime="20200619 01:51:38.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:38.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:38.047" endtime="20200619 01:51:38.048"></status>
</kw>
<msg timestamp="20200619 01:51:38.048" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:51:38.040" endtime="20200619 01:51:38.048"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:38.051" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:38.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:38.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:51:38.049" endtime="20200619 01:51:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:38.063" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:51:38.062" endtime="20200619 01:51:38.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:38.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:38.063" endtime="20200619 01:51:38.064"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:38.049" endtime="20200619 01:51:38.064"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:38.048" endtime="20200619 01:51:38.064"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:38.039" endtime="20200619 01:51:38.064"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:38.039" endtime="20200619 01:51:38.064"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:38.068" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:38.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:38.260" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:38.065" endtime="20200619 01:51:38.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:38.261" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    413      0 --:--:-- --:--:-- --:--:--   413
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":140}]}}</msg>
<status status="PASS" starttime="20200619 01:51:38.260" endtime="20200619 01:51:38.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:38.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:38.261" endtime="20200619 01:51:38.262"></status>
</kw>
<msg timestamp="20200619 01:51:38.262" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:38.064" endtime="20200619 01:51:38.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:51:38.263" endtime="20200619 01:51:38.264"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:38.267" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:38.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:38.298" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:38.265" endtime="20200619 01:51:38.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:38.299" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   117k      0 --:--:-- --:--:-- --:--:--  118k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200619 01:51:38.299" endtime="20200619 01:51:38.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:38.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:38.300" endtime="20200619 01:51:38.300"></status>
</kw>
<msg timestamp="20200619 01:51:38.300" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:38.264" endtime="20200619 01:51:38.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200619 01:51:38.302" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:38 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   117k      0 --:--:-- --:--:-- --:--:--  118k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200619 01:51:38.301" endtime="20200619 01:51:38.302"></status>
</kw>
<status status="FAIL" starttime="20200619 01:51:38.038" endtime="20200619 01:51:38.302"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:48.307" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:48.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:48.309" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:51:48.305" endtime="20200619 01:51:48.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:48.310" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:51:48.309" endtime="20200619 01:51:48.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:48.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:48.310" endtime="20200619 01:51:48.311"></status>
</kw>
<msg timestamp="20200619 01:51:48.311" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:51:48.304" endtime="20200619 01:51:48.311"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:48.314" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:48.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:48.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:51:48.312" endtime="20200619 01:51:48.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:48.324" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:51:48.324" endtime="20200619 01:51:48.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:48.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:48.325" endtime="20200619 01:51:48.325"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:48.312" endtime="20200619 01:51:48.325"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:48.311" endtime="20200619 01:51:48.325"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:48.304" endtime="20200619 01:51:48.326"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:48.303" endtime="20200619 01:51:48.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:48.329" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:48.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:48.347" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:48.326" endtime="20200619 01:51:48.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:48.348" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7408      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":140}]}}</msg>
<status status="PASS" starttime="20200619 01:51:48.348" endtime="20200619 01:51:48.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:48.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:48.348" endtime="20200619 01:51:48.349"></status>
</kw>
<msg timestamp="20200619 01:51:48.349" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:48.326" endtime="20200619 01:51:48.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:51:48.349" endtime="20200619 01:51:48.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:48.353" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:48.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:48.370" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:48.350" endtime="20200619 01:51:48.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:48.371" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   237k      0 --:--:-- --:--:-- --:--:--  258k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200619 01:51:48.370" endtime="20200619 01:51:48.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:48.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:48.371" endtime="20200619 01:51:48.372"></status>
</kw>
<msg timestamp="20200619 01:51:48.372" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:48.350" endtime="20200619 01:51:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200619 01:51:48.373" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:48 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   237k      0 --:--:-- --:--:-- --:--:--  258k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200619 01:51:48.372" endtime="20200619 01:51:48.373"></status>
</kw>
<status status="FAIL" starttime="20200619 01:51:48.302" endtime="20200619 01:51:48.373"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:58.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:58.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:58.383" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:51:58.376" endtime="20200619 01:51:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:58.384" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:51:58.383" endtime="20200619 01:51:58.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:58.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:58.384" endtime="20200619 01:51:58.385"></status>
</kw>
<msg timestamp="20200619 01:51:58.386" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:51:58.376" endtime="20200619 01:51:58.386"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:58.390" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:58.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:58.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:51:58.387" endtime="20200619 01:51:58.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:58.409" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:51:58.408" endtime="20200619 01:51:58.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:58.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:58.409" endtime="20200619 01:51:58.410"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:58.387" endtime="20200619 01:51:58.410"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:58.386" endtime="20200619 01:51:58.410"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:58.375" endtime="20200619 01:51:58.411"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:58.375" endtime="20200619 01:51:58.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:58.415" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:58.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:58.438" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:58.412" endtime="20200619 01:51:58.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:58.439" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   9832      0 --:--:-- --:--:-- --:--:-- 11000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":140}]}}</msg>
<status status="PASS" starttime="20200619 01:51:58.438" endtime="20200619 01:51:58.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:58.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:58.439" endtime="20200619 01:51:58.440"></status>
</kw>
<msg timestamp="20200619 01:51:58.440" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:58.411" endtime="20200619 01:51:58.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:51:58.440" endtime="20200619 01:51:58.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:51:58.445" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:51:58.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:51:58.460" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:58.442" endtime="20200619 01:51:58.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:51:58.461" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   266k      0 --:--:-- --:--:-- --:--:--  284k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200619 01:51:58.461" endtime="20200619 01:51:58.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:51:58.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:51:58.462" endtime="20200619 01:51:58.462"></status>
</kw>
<msg timestamp="20200619 01:51:58.463" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:51:58.441" endtime="20200619 01:51:58.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200619 01:51:58.464" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Date: Fri, 19 Jun 2020 01:51:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   266k      0 --:--:-- --:--:-- --:--:--  284k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200619 01:51:58.463" endtime="20200619 01:51:58.464"></status>
</kw>
<status status="FAIL" starttime="20200619 01:51:58.374" endtime="20200619 01:51:58.464"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:08.471" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:08.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:08.474" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:08.467" endtime="20200619 01:52:08.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:08.475" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:08.474" endtime="20200619 01:52:08.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:08.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:08.475" endtime="20200619 01:52:08.476"></status>
</kw>
<msg timestamp="20200619 01:52:08.476" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:08.467" endtime="20200619 01:52:08.476"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:08.481" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:08.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:08.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:08.478" endtime="20200619 01:52:08.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:08.493" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:08.492" endtime="20200619 01:52:08.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:08.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:08.493" endtime="20200619 01:52:08.494"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:08.477" endtime="20200619 01:52:08.494"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:08.477" endtime="20200619 01:52:08.494"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:08.466" endtime="20200619 01:52:08.495"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:08.465" endtime="20200619 01:52:08.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:08.499" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:08.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:08.520" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:08.495" endtime="20200619 01:52:08.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:08.522" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7074      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":140}]}}</msg>
<status status="PASS" starttime="20200619 01:52:08.521" endtime="20200619 01:52:08.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:08.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:08.523" endtime="20200619 01:52:08.524"></status>
</kw>
<msg timestamp="20200619 01:52:08.524" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:08.495" endtime="20200619 01:52:08.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:08.524" endtime="20200619 01:52:08.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:08.531" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:08.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:08.548" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:08.527" endtime="20200619 01:52:08.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:08.549" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   228k      0 --:--:-- --:--:-- --:--:--  237k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200619 01:52:08.549" endtime="20200619 01:52:08.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:08.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:08.550" endtime="20200619 01:52:08.550"></status>
</kw>
<msg timestamp="20200619 01:52:08.551" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:08.525" endtime="20200619 01:52:08.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200619 01:52:08.552" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   228k      0 --:--:-- --:--:-- --:--:--  237k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200619 01:52:08.551" endtime="20200619 01:52:08.552"></status>
</kw>
<status status="FAIL" starttime="20200619 01:52:08.465" endtime="20200619 01:52:08.553"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:18.559" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:18.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:18.562" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:18.556" endtime="20200619 01:52:18.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:18.563" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:18.562" endtime="20200619 01:52:18.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:18.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:18.563" endtime="20200619 01:52:18.564"></status>
</kw>
<msg timestamp="20200619 01:52:18.564" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:18.556" endtime="20200619 01:52:18.565"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:18.568" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:18.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:18.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:18.566" endtime="20200619 01:52:18.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:18.581" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:18.580" endtime="20200619 01:52:18.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:18.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:18.581" endtime="20200619 01:52:18.582"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:18.565" endtime="20200619 01:52:18.582"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:18.565" endtime="20200619 01:52:18.583"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:18.555" endtime="20200619 01:52:18.583"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:18.555" endtime="20200619 01:52:18.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:18.587" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:18.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:18.602" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:18.584" endtime="20200619 01:52:18.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:18.604" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7604      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":140}]}}</msg>
<status status="PASS" starttime="20200619 01:52:18.603" endtime="20200619 01:52:18.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:18.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:18.604" endtime="20200619 01:52:18.605"></status>
</kw>
<msg timestamp="20200619 01:52:18.605" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:18.583" endtime="20200619 01:52:18.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:18.605" endtime="20200619 01:52:18.606"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:18.610" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:18.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:18.627" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:18.606" endtime="20200619 01:52:18.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:18.628" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   284k      0 --:--:-- --:--:-- --:--:--  316k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200619 01:52:18.627" endtime="20200619 01:52:18.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:18.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:18.628" endtime="20200619 01:52:18.629"></status>
</kw>
<msg timestamp="20200619 01:52:18.629" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:18.606" endtime="20200619 01:52:18.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200619 01:52:18.630" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:18 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2913
&lt; 
{ [data not shown]

100  2913  100  2913    0     0   284k      0 --:--:-- --:--:-- --:--:--  316k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200619 01:52:18.630" endtime="20200619 01:52:18.631"></status>
</kw>
<status status="FAIL" starttime="20200619 01:52:18.554" endtime="20200619 01:52:18.631"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.637" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.640" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:28.634" endtime="20200619 01:52:28.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.641" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:28.640" endtime="20200619 01:52:28.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.641" endtime="20200619 01:52:28.642"></status>
</kw>
<msg timestamp="20200619 01:52:28.642" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:28.633" endtime="20200619 01:52:28.642"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.646" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:28.644" endtime="20200619 01:52:28.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.659" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:28.659" endtime="20200619 01:52:28.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.660" endtime="20200619 01:52:28.661"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.643" endtime="20200619 01:52:28.661"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.643" endtime="20200619 01:52:28.661"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.633" endtime="20200619 01:52:28.661"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.632" endtime="20200619 01:52:28.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.666" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.683" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.662" endtime="20200619 01:52:28.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.685" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 147
&lt; 
{ [data not shown]

100   147  100   147    0     0  11701      0 --:--:-- --:--:-- --:--:-- 12250
* Connection #0 to host recon left intact
{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":140},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20200619 01:52:28.684" endtime="20200619 01:52:28.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.685" endtime="20200619 01:52:28.686"></status>
</kw>
<msg timestamp="20200619 01:52:28.686" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.662" endtime="20200619 01:52:28.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.686" endtime="20200619 01:52:28.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.690" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.708" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.688" endtime="20200619 01:52:28.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.709" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2991
&lt; 
{ [data not shown]

100  2991  100  2991    0     0   247k      0 --:--:-- --:--:-- --:--:--  265k
* Connection #0 to host recon left intact
[{"volume":"vol-0-57647","bucket":"bucket-2-37436","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-4-27807","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-1-99459","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-4-57690","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-4-36868","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-0-97069","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-0-80554","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-2-54997","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-1-69825","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-3-14691","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-0-02298","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-2-61449","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-1-09275","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-1-45522","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-0-64742","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-3-79149","fileSize":16384,"count":5},{"volume":"vol-3-81090","bucket":"bucket-2-06389","fileSize":16384,"count":5},{"volume":"vol-4-37415","bucket":"bucket-3-60137","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-2-20600","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-0-25315","fileSize":16384,"count":5},{"volume":"vol-0-57647","bucket":"bucket-3-31037","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-1-52301","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-3-00776","fileSize":16384,"count":5},{"volume":"vol-1-99717","bucket":"bucket-4-45695","fileSize":16384,"count":5},{"volume":"vol-2-21213","bucket":"bucket-4-97044","fileSize":16384,"count":5},{"volume":"95416-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"95416-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"95416-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest","bucket":"bucket1","fileSize":1024,"count":0},{"volume":"fstest","bucket":"bucket1","fileSize":32768,"count":0},{"volume":"s3v","bucket":"bucket-66027","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70209","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-80387","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-70209","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-54139","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-46564","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-70639","fileSize":1024,"count":1},{"volume":"vol-0-08013","bucket":"bucket-0-70070","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200619 01:52:28.709" endtime="20200619 01:52:28.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.710" endtime="20200619 01:52:28.710"></status>
</kw>
<msg timestamp="20200619 01:52:28.711" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.687" endtime="20200619 01:52:28.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.711" endtime="20200619 01:52:28.711"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.631" endtime="20200619 01:52:28.712"></status>
</kw>
<status status="PASS" starttime="20200619 01:51:38.038" endtime="20200619 01:52:28.712"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:51:38.037" endtime="20200619 01:52:28.712" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.717" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.752" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.715" endtime="20200619 01:52:28.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.753" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  63565      0 --:--:-- --:--:-- --:--:-- 64714
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"4ea3ad7e-63bd-4751-8b59-4872df86ea3a","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592531523856,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14780440576},"pipelines":[{"pipelineID":"b997fd06-e5c8-4e6c-bf6c-dfbca09f97ec","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"f3df33b8-7702-4483-b017-75ac2a630da3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"a8fa185e-61d0-4981-8415-cc27b126f66a","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592531524894,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14780440576},"pipelines":[{"pipelineID":"d101d86d-6721-4388-ac99-dd5399166b22","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"f3df33b8-7702-4483-b017-75ac2a630da3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":1,"leaderCount":1},{"uuid":"37d1cbe2-8743-4047-9e04-f86155fed2c3","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1592531523838,"storageReport":{"capacity":89311358976,"used":8192,"remaining":14780432384},"pipelines":[{"pipelineID":"d4951aab-f6d8-4122-bb35-93881b1c9483","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"f3df33b8-7702-4483-b017-75ac2a630da3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200619 01:52:28.752" endtime="20200619 01:52:28.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.753" endtime="20200619 01:52:28.754"></status>
</kw>
<msg timestamp="20200619 01:52:28.754" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.714" endtime="20200619 01:52:28.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.754" endtime="20200619 01:52:28.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.755" endtime="20200619 01:52:28.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.755" endtime="20200619 01:52:28.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.756" endtime="20200619 01:52:28.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.767" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.791" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.757" endtime="20200619 01:52:28.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.792" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1364
&lt; 
{ [data not shown]

100  1364  100  1364    0     0  70798      0 --:--:-- --:--:-- --:--:-- 75777
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"b997fd06-e5c8-4e6c-bf6c-dfbca09f97ec","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":978553,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"d4951aab-f6d8-4122-bb35-93881b1c9483","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":977732,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"d101d86d-6721-4388-ac99-dd5399166b22","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":978033,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":0},{"pipelineId":"f3df33b8-7702-4483-b017-75ac2a630da3","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":977704,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200619 01:52:28.791" endtime="20200619 01:52:28.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.792" endtime="20200619 01:52:28.793"></status>
</kw>
<msg timestamp="20200619 01:52:28.793" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.757" endtime="20200619 01:52:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.793" endtime="20200619 01:52:28.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.794" endtime="20200619 01:52:28.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.795" endtime="20200619 01:52:28.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.795" endtime="20200619 01:52:28.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.796" endtime="20200619 01:52:28.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.796" endtime="20200619 01:52:28.797"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.800" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.821" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.798" endtime="20200619 01:52:28.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.822" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  13167      0 --:--:-- --:--:-- --:--:-- 13285
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":44341313536},"containers":3,"volumes":25,"buckets":52,"keys":157}</msg>
<status status="PASS" starttime="20200619 01:52:28.821" endtime="20200619 01:52:28.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.822" endtime="20200619 01:52:28.822"></status>
</kw>
<msg timestamp="20200619 01:52:28.823" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.797" endtime="20200619 01:52:28.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.823" endtime="20200619 01:52:28.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.824" endtime="20200619 01:52:28.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.824" endtime="20200619 01:52:28.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.827" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.847" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.825" endtime="20200619 01:52:28.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.849" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  29996      0 --:--:-- --:--:-- --:--:-- 30266
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1592530595051,"lastReportTimestamp":1592531493866},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1592530594736,"lastReportTimestamp":1592531464604},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1592530594951,"lastReportTimestamp":1592531494913}]</msg>
<status status="PASS" starttime="20200619 01:52:28.848" endtime="20200619 01:52:28.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.849" endtime="20200619 01:52:28.849"></status>
</kw>
<msg timestamp="20200619 01:52:28.850" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.825" endtime="20200619 01:52:28.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.850" endtime="20200619 01:52:28.850"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:28.713" endtime="20200619 01:52:28.850" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.855" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.858" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200619 01:52:28.853" endtime="20200619 01:52:28.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.859" level="INFO">scm</msg>
<status status="PASS" starttime="20200619 01:52:28.858" endtime="20200619 01:52:28.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.859" endtime="20200619 01:52:28.859"></status>
</kw>
<msg timestamp="20200619 01:52:28.860" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200619 01:52:28.853" endtime="20200619 01:52:28.860"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.862" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200619 01:52:28.861" endtime="20200619 01:52:28.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.881" level="INFO"></msg>
<status status="PASS" starttime="20200619 01:52:28.880" endtime="20200619 01:52:28.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.881" endtime="20200619 01:52:28.882"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.860" endtime="20200619 01:52:28.882"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.860" endtime="20200619 01:52:28.882"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.853" endtime="20200619 01:52:28.882"></status>
</kw>
<status status="PASS" starttime="20200619 01:52:28.852" endtime="20200619 01:52:28.882"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:52:28.884" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:52:28.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:52:28.917" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.883" endtime="20200619 01:52:28.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:52:28.918" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.3...
* Connected to recon (172.26.0.3) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  28326      0 --:--:-- --:--:-- --:--:-- 29466
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1af7f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.3) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQLUiEfdexgaPn3cqheIuS1Djod1x9p3aKE8wwoVdYjXD+MiRcNn5ImBkqN778EQQo0gzU+olRP0tWLnXe+EjLtbm2TgiLwKtQ72K79IbGMUA/xoZQSSzz7hTDvDI8w8NaiKhEjH+PK5B7YkrpKQdX+vCg7EyNGfXehmcKEmlyZ6+2I7PrTia5ep5Fi2uWHWtlOGR7l2mVrjccUKEj6seD4mq0GF2sMUhHI+1Z92VZTXbWBPLfjLV+4sEQk99n6M1sAyTBQ5mEOVX1GYvocrEU55PH72laUNYjO/7OpvnfjwipLmfAWYTSmtqEzi7r8PFAIly1Ofgzmbj5BrHK6jmse7ylmkgdIwgc+gAwIBEqKBxwSBxLbwCHX27YKm5qg1yDPENhpEQBrPo9UgHuu3NkQsY2MbB2U6r1vKV8rZbYy1OkgP5FgbB4WpiFTrdJysPt4PcbCVLs9gNNivZAVytf3UQJ5VUGC77CpEZn+YGcHKCLuouQRWIEA8gD2Sc1HeQFn5ANrI1566dxN22kBZDHmbeDKdGYDr8Np40D2uSnqL/Ir2gZytXu8TH+gQXiYHibHgdHNLrELKB6Uenebk4QvJCNJSuldpem+d9r+kvWfImsAqkDo5+No=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Date: Fri, 19 Jun 2020 01:52:28 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCCm0aZqCCu6dVmNY55dAU1BqxCvPMCrI1z42IUItr5WUP/C+ANuSRKZNmxKrQS3IdnzP+CSQii2rLtBEF2tBTdIr3
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1592567548912&amp;s=SlLGVRoWvJ2KmaXeu6iNSQ4NNdv3YySBJu6wekNUPIY="; Path=/; HttpOnly
&lt; Last-Modified: Fri, 19 Jun 2020 00:49:38 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  87239      0 --:--:-- --:--:-- --:--:-- 87239
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.5f7ee777.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.06f69d64.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.917" endtime="20200619 01:52:28.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:52:28.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:52:28.918" endtime="20200619 01:52:28.918"></status>
</kw>
<msg timestamp="20200619 01:52:28.919" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200619 01:52:28.882" endtime="20200619 01:52:28.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200619 01:52:28.919" endtime="20200619 01:52:28.919"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:52:28.851" endtime="20200619 01:52:28.920" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200619 01:51:30.201" endtime="20200619 01:52:28.921"></status>
</suite>
<status status="PASS" starttime="20200619 01:51:30.172" endtime="20200619 01:52:28.924"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
