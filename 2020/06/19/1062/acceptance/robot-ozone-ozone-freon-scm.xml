<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200619 01:27:10.501" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:27:10.559" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:27:17.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:27:17.824" level="INFO">${output} = 2020-06-19 01:27:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:11,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:10.556" endtime="20200619 01:27:17.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:27:17.826" level="INFO">2020-06-19 01:27:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:11,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:27:11,596 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-19 01:27:12,363 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-19 01:27:12,364 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-19 01:27:12,367 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-19 01:27:12,385 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-19 01:27:12,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27847, with hadoop as owner.
2020-06-19 01:27:12,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27847/bucket-0-54852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:27:12,862 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-19 01:27:13,388 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,032
Average Time spent in bucket creation: 00:00:00,006
Average Time spent in key creation: 00:00:00,034
Average Time spent in key write: 00:00:00,590
Total bytes written: 10240
Total Execution time: 00:00:05,694
***************************************************</msg>
<status status="PASS" starttime="20200619 01:27:17.825" endtime="20200619 01:27:17.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:27:17.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:27:17.827" endtime="20200619 01:27:17.827"></status>
</kw>
<msg timestamp="20200619 01:27:17.827" level="INFO">${result} = 2020-06-19 01:27:11,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:11,596 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:10.555" endtime="20200619 01:27:17.828"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:27:17.828" endtime="20200619 01:27:17.829"></status>
</kw>
<status status="PASS" starttime="20200619 01:27:17.828" endtime="20200619 01:27:17.829"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:27:10.555" endtime="20200619 01:27:17.829" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:27:17.833" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:27:22.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:27:22.130" level="INFO">${output} = 2020-06-19 01:27:18,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:18,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:17.831" endtime="20200619 01:27:22.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:27:22.132" level="INFO">2020-06-19 01:27:18,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:18,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:27:18,886 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-19 01:27:19,078 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lv4cjjckvh
2020-06-19 01:27:19,096 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-19 01:27:19,649 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-19 01:27:19,664 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-19 01:27:20,107 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-19 01:27:20,233 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-19 01:27:21,107 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-19 01:27:21,804 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1263.021871, max=1263.021871, mean=1263.021871, stddev=0.0, median=1263.021871, p75=1263.021871, p95=1263.021871, p98=1263.021871, p99=1263.021871, p999=1263.021871, mean_rate=0.470396531773145, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-19 01:27:21,804 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-19 01:27:21,805 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-19 01:27:21,805 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200619 01:27:22.131" endtime="20200619 01:27:22.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:27:22.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:27:22.132" endtime="20200619 01:27:22.133"></status>
</kw>
<msg timestamp="20200619 01:27:22.133" level="INFO">${result} = 2020-06-19 01:27:18,745 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:18,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:17.831" endtime="20200619 01:27:22.133"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:27:22.134" endtime="20200619 01:27:22.134"></status>
</kw>
<status status="PASS" starttime="20200619 01:27:22.133" endtime="20200619 01:27:22.134"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:27:17.830" endtime="20200619 01:27:22.134" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:27:22.139" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:27:25.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:27:25.136" level="INFO">${output} = 2020-06-19 01:27:23,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:23,246 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:22.137" endtime="20200619 01:27:25.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:27:25.138" level="INFO">2020-06-19 01:27:23,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:23,246 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:27:23,246 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-19 01:27:23,454 [main] INFO freon.BaseFreonGenerator: Executing test with prefix iwlcvmqbym
2020-06-19 01:27:23,472 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-19 01:27:24,474 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-19 01:27:25,124 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=27.837385, max=27.837385, mean=27.837385, stddev=0.0, median=27.837385, p75=27.837385, p95=27.837385, p98=27.837385, p99=27.837385, p999=27.837385, mean_rate=0.8992548545864164, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-19 01:27:25,125 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-19 01:27:25,125 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-19 01:27:25,125 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200619 01:27:25.137" endtime="20200619 01:27:25.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:27:25.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:27:25.138" endtime="20200619 01:27:25.139"></status>
</kw>
<msg timestamp="20200619 01:27:25.139" level="INFO">${result} = 2020-06-19 01:27:23,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:23,246 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:22.136" endtime="20200619 01:27:25.139"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:27:25.140" endtime="20200619 01:27:25.140"></status>
</kw>
<status status="PASS" starttime="20200619 01:27:25.139" endtime="20200619 01:27:25.141"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:27:22.135" endtime="20200619 01:27:25.141" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200619 01:27:25.147" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200619 01:27:28.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200619 01:27:28.223" level="INFO">${output} = 2020-06-19 01:27:26,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:26,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:25.143" endtime="20200619 01:27:28.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200619 01:27:28.224" level="INFO">2020-06-19 01:27:26,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:26,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-19 01:27:26,302 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-19 01:27:26,507 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ywbfvjzbrm
2020-06-19 01:27:26,525 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-19 01:27:27,528 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-19 01:27:28,212 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=5.204915, max=5.204915, mean=5.204915, stddev=0.0, median=5.204915, p75=5.204915, p95=5.204915, p98=5.204915, p99=5.204915, p999=5.204915, mean_rate=0.901467854337824, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-19 01:27:28,213 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-19 01:27:28,213 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-19 01:27:28,213 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200619 01:27:28.224" endtime="20200619 01:27:28.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200619 01:27:28.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200619 01:27:28.225" endtime="20200619 01:27:28.225"></status>
</kw>
<msg timestamp="20200619 01:27:28.226" level="INFO">${result} = 2020-06-19 01:27:26,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-19 01:27:26,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200619 01:27:25.142" endtime="20200619 01:27:28.226"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200619 01:27:28.226" endtime="20200619 01:27:28.227"></status>
</kw>
<status status="PASS" starttime="20200619 01:27:28.226" endtime="20200619 01:27:28.227"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200619 01:27:25.141" endtime="20200619 01:27:28.227" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200619 01:27:10.530" endtime="20200619 01:27:28.228"></status>
</suite>
<status status="PASS" starttime="20200619 01:27:10.502" endtime="20200619 01:27:28.232"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
