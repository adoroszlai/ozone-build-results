<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 01:53:17.481" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:17.527" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:17.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:17.528" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:53:17.523" endtime="20200709 01:53:17.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:17.529" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:53:17.528" endtime="20200709 01:53:17.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:17.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:17.529" endtime="20200709 01:53:17.529"></status>
</kw>
<msg timestamp="20200709 01:53:17.529" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:53:17.522" endtime="20200709 01:53:17.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:53:17.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:53:17.530" endtime="20200709 01:53:17.530"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:17.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:17.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:17.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:53:17.531" endtime="20200709 01:53:17.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:17.546" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:53:17.545" endtime="20200709 01:53:17.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:17.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:17.546" endtime="20200709 01:53:17.546"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:17.531" endtime="20200709 01:53:17.546"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:17.530" endtime="20200709 01:53:17.546"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:17.522" endtime="20200709 01:53:17.546"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:17.522" endtime="20200709 01:53:17.547"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:17.548" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:25.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:25.848" level="INFO">${output} = 2020-07-09 01:53:18,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:53:18,965 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:53:17.547" endtime="20200709 01:53:25.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:25.849" level="INFO">2020-07-09 01:53:18,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:53:18,965 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:53:18,965 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-09 01:53:20,339 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 01:53:20,340 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 01:53:20,350 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 01:53:20,352 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-09 01:53:20,393 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-35137, with testuser/scm@EXAMPLE.COM as owner.
2020-07-09 01:53:20,420 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-35137/bucket-0-14261, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:53:20,841 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:53:21,364 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,116
Average Time spent in key write: 00:00:00,384
Total bytes written: 10250
Total Execution time: 00:00:06,353
***************************************************</msg>
<status status="PASS" starttime="20200709 01:53:25.848" endtime="20200709 01:53:25.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:25.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:25.849" endtime="20200709 01:53:25.849"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:17.547" endtime="20200709 01:53:25.850"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:53:17.521" endtime="20200709 01:53:25.850" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:25.855" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:25.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:25.857" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:53:25.853" endtime="20200709 01:53:25.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:25.858" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:53:25.858" endtime="20200709 01:53:25.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:25.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:25.858" endtime="20200709 01:53:25.859"></status>
</kw>
<msg timestamp="20200709 01:53:25.859" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:53:25.853" endtime="20200709 01:53:25.859"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:25.863" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:25.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:25.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:53:25.860" endtime="20200709 01:53:25.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:25.878" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:53:25.878" endtime="20200709 01:53:25.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:25.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:25.879" endtime="20200709 01:53:25.879"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:25.860" endtime="20200709 01:53:25.879"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:25.859" endtime="20200709 01:53:25.879"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:25.852" endtime="20200709 01:53:25.880"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:25.852" endtime="20200709 01:53:25.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:25.882" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:26.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:26.038" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:25.880" endtime="20200709 01:53:26.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:26.039" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:25 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:25 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:25 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    511      0 --:--:-- --:--:-- --:--:--   513
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:53:26.038" endtime="20200709 01:53:26.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:26.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:26.039" endtime="20200709 01:53:26.040"></status>
</kw>
<msg timestamp="20200709 01:53:26.040" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:25.880" endtime="20200709 01:53:26.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:53:26.040" endtime="20200709 01:53:26.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:26.047" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:26.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:26.082" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:26.041" endtime="20200709 01:53:26.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:26.083" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0  98563      0 --:--:-- --:--:-- --:--:--   99k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:53:26.083" endtime="20200709 01:53:26.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:26.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:26.083" endtime="20200709 01:53:26.084"></status>
</kw>
<msg timestamp="20200709 01:53:26.084" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:26.041" endtime="20200709 01:53:26.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:53:26.085" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0  98563      0 --:--:-- --:--:-- --:--:--   99k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:53:26.084" endtime="20200709 01:53:26.085"></status>
</kw>
<status status="FAIL" starttime="20200709 01:53:25.851" endtime="20200709 01:53:26.085"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:36.090" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:36.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:36.092" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:53:36.088" endtime="20200709 01:53:36.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:36.093" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:53:36.092" endtime="20200709 01:53:36.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:36.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:36.093" endtime="20200709 01:53:36.093"></status>
</kw>
<msg timestamp="20200709 01:53:36.094" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:53:36.087" endtime="20200709 01:53:36.094"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:36.096" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:36.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:36.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:53:36.094" endtime="20200709 01:53:36.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:36.107" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:53:36.107" endtime="20200709 01:53:36.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:36.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:36.107" endtime="20200709 01:53:36.108"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:36.094" endtime="20200709 01:53:36.108"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:36.094" endtime="20200709 01:53:36.108"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:36.087" endtime="20200709 01:53:36.108"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:36.086" endtime="20200709 01:53:36.108"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:36.111" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:36.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:36.128" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:36.109" endtime="20200709 01:53:36.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:36.129" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7271      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:53:36.128" endtime="20200709 01:53:36.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:36.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:36.129" endtime="20200709 01:53:36.129"></status>
</kw>
<msg timestamp="20200709 01:53:36.130" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:36.108" endtime="20200709 01:53:36.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:53:36.130" endtime="20200709 01:53:36.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:36.132" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:36.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:36.144" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:36.131" endtime="20200709 01:53:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:36.145" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   418k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:53:36.145" endtime="20200709 01:53:36.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:36.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:36.145" endtime="20200709 01:53:36.146"></status>
</kw>
<msg timestamp="20200709 01:53:36.146" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:36.130" endtime="20200709 01:53:36.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:53:36.147" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   418k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:53:36.146" endtime="20200709 01:53:36.147"></status>
</kw>
<status status="FAIL" starttime="20200709 01:53:36.086" endtime="20200709 01:53:36.147"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:46.153" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:46.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:46.154" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:53:46.149" endtime="20200709 01:53:46.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:46.155" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:53:46.155" endtime="20200709 01:53:46.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:46.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:46.155" endtime="20200709 01:53:46.156"></status>
</kw>
<msg timestamp="20200709 01:53:46.156" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:53:46.149" endtime="20200709 01:53:46.156"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:46.160" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:46.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:46.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:53:46.157" endtime="20200709 01:53:46.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:46.176" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:53:46.175" endtime="20200709 01:53:46.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:46.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:46.176" endtime="20200709 01:53:46.177"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:46.157" endtime="20200709 01:53:46.177"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:46.157" endtime="20200709 01:53:46.177"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:46.149" endtime="20200709 01:53:46.177"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:46.148" endtime="20200709 01:53:46.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:46.181" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:46.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:46.205" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:46.178" endtime="20200709 01:53:46.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:46.206" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   5014      0 --:--:-- --:--:-- --:--:--  5133
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:53:46.206" endtime="20200709 01:53:46.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:46.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:46.207" endtime="20200709 01:53:46.207"></status>
</kw>
<msg timestamp="20200709 01:53:46.207" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:46.177" endtime="20200709 01:53:46.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:53:46.207" endtime="20200709 01:53:46.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:46.210" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:46.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:46.225" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:46.208" endtime="20200709 01:53:46.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:46.226" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   415k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:53:46.225" endtime="20200709 01:53:46.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:46.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:46.226" endtime="20200709 01:53:46.227"></status>
</kw>
<msg timestamp="20200709 01:53:46.227" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:46.208" endtime="20200709 01:53:46.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:53:46.228" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:46 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   415k      0 --:--:-- --:--:-- --:--:--  427k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:53:46.227" endtime="20200709 01:53:46.228"></status>
</kw>
<status status="FAIL" starttime="20200709 01:53:46.147" endtime="20200709 01:53:46.228"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:56.233" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:56.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:56.236" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:53:56.231" endtime="20200709 01:53:56.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:56.237" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:53:56.236" endtime="20200709 01:53:56.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:56.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:56.237" endtime="20200709 01:53:56.238"></status>
</kw>
<msg timestamp="20200709 01:53:56.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:53:56.230" endtime="20200709 01:53:56.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:56.242" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:56.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:56.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:53:56.239" endtime="20200709 01:53:56.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:56.258" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:53:56.257" endtime="20200709 01:53:56.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:56.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:56.258" endtime="20200709 01:53:56.258"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:56.238" endtime="20200709 01:53:56.258"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:56.238" endtime="20200709 01:53:56.259"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:56.230" endtime="20200709 01:53:56.259"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:56.229" endtime="20200709 01:53:56.259"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:56.262" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:56.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:56.282" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:56.259" endtime="20200709 01:53:56.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:56.283" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   8589      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:53:56.282" endtime="20200709 01:53:56.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:56.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:56.283" endtime="20200709 01:53:56.283"></status>
</kw>
<msg timestamp="20200709 01:53:56.284" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:56.259" endtime="20200709 01:53:56.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:53:56.284" endtime="20200709 01:53:56.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:53:56.286" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:53:56.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:53:56.303" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:56.284" endtime="20200709 01:53:56.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:53:56.304" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   298k      0 --:--:-- --:--:-- --:--:--  332k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:53:56.304" endtime="20200709 01:53:56.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:53:56.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:53:56.304" endtime="20200709 01:53:56.305"></status>
</kw>
<msg timestamp="20200709 01:53:56.305" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:53:56.284" endtime="20200709 01:53:56.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:53:56.306" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Date: Thu, 09 Jul 2020 01:53:56 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   298k      0 --:--:-- --:--:-- --:--:--  332k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:53:56.305" endtime="20200709 01:53:56.306"></status>
</kw>
<status status="FAIL" starttime="20200709 01:53:56.228" endtime="20200709 01:53:56.306"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:06.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:06.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:06.314" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:06.309" endtime="20200709 01:54:06.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:06.315" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:06.314" endtime="20200709 01:54:06.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:06.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:06.315" endtime="20200709 01:54:06.315"></status>
</kw>
<msg timestamp="20200709 01:54:06.315" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:06.308" endtime="20200709 01:54:06.315"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:06.318" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:06.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:06.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:06.316" endtime="20200709 01:54:06.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:06.330" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:06.330" endtime="20200709 01:54:06.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:06.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:06.330" endtime="20200709 01:54:06.331"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:06.316" endtime="20200709 01:54:06.331"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:06.315" endtime="20200709 01:54:06.331"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:06.308" endtime="20200709 01:54:06.331"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:06.307" endtime="20200709 01:54:06.331"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:06.333" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:06.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:06.343" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:06.331" endtime="20200709 01:54:06.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:06.344" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  14801      0 --:--:-- --:--:-- --:--:-- 15400
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:54:06.343" endtime="20200709 01:54:06.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:06.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:06.344" endtime="20200709 01:54:06.345"></status>
</kw>
<msg timestamp="20200709 01:54:06.345" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:06.331" endtime="20200709 01:54:06.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:06.345" endtime="20200709 01:54:06.345"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:06.347" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:06.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:06.359" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:06.346" endtime="20200709 01:54:06.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:06.359" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   459k      0 --:--:-- --:--:-- --:--:--  499k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:54:06.359" endtime="20200709 01:54:06.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:06.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:06.360" endtime="20200709 01:54:06.360"></status>
</kw>
<msg timestamp="20200709 01:54:06.360" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:06.345" endtime="20200709 01:54:06.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:54:06.361" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   459k      0 --:--:-- --:--:-- --:--:--  499k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:54:06.360" endtime="20200709 01:54:06.361"></status>
</kw>
<status status="FAIL" starttime="20200709 01:54:06.307" endtime="20200709 01:54:06.361"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:16.367" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:16.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:16.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:16.364" endtime="20200709 01:54:16.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:16.370" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:16.370" endtime="20200709 01:54:16.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:16.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:16.371" endtime="20200709 01:54:16.371"></status>
</kw>
<msg timestamp="20200709 01:54:16.372" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:16.364" endtime="20200709 01:54:16.372"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:16.374" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:16.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:16.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:16.373" endtime="20200709 01:54:16.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:16.385" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:16.385" endtime="20200709 01:54:16.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:16.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:16.385" endtime="20200709 01:54:16.386"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:16.372" endtime="20200709 01:54:16.386"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:16.372" endtime="20200709 01:54:16.386"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:16.363" endtime="20200709 01:54:16.386"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:16.363" endtime="20200709 01:54:16.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:16.388" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:16.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:16.402" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:16.387" endtime="20200709 01:54:16.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:16.402" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   9422      0 --:--:-- --:--:-- --:--:--  9625
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":146}]}}</msg>
<status status="PASS" starttime="20200709 01:54:16.402" endtime="20200709 01:54:16.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:16.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:16.403" endtime="20200709 01:54:16.403"></status>
</kw>
<msg timestamp="20200709 01:54:16.403" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:16.386" endtime="20200709 01:54:16.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:16.404" endtime="20200709 01:54:16.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:16.407" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:16.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:16.420" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:16.404" endtime="20200709 01:54:16.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:16.421" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   339k      0 --:--:-- --:--:-- --:--:--  374k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200709 01:54:16.421" endtime="20200709 01:54:16.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:16.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:16.421" endtime="20200709 01:54:16.422"></status>
</kw>
<msg timestamp="20200709 01:54:16.422" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:16.404" endtime="20200709 01:54:16.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 01:54:16.423" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3066
&lt; 
{ [data not shown]

100  3066  100  3066    0     0   339k      0 --:--:-- --:--:-- --:--:--  374k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 01:54:16.422" endtime="20200709 01:54:16.423"></status>
</kw>
<status status="FAIL" starttime="20200709 01:54:16.362" endtime="20200709 01:54:16.423"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.428" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.431" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:26.426" endtime="20200709 01:54:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.431" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:26.431" endtime="20200709 01:54:26.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.432" endtime="20200709 01:54:26.432"></status>
</kw>
<msg timestamp="20200709 01:54:26.432" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:26.425" endtime="20200709 01:54:26.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.436" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:26.433" endtime="20200709 01:54:26.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.446" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:26.446" endtime="20200709 01:54:26.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.447" endtime="20200709 01:54:26.448"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.433" endtime="20200709 01:54:26.448"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.432" endtime="20200709 01:54:26.448"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.425" endtime="20200709 01:54:26.448"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.424" endtime="20200709 01:54:26.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.451" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.466" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.449" endtime="20200709 01:54:26.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.467" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  18805      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20200709 01:54:26.466" endtime="20200709 01:54:26.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.467" endtime="20200709 01:54:26.467"></status>
</kw>
<msg timestamp="20200709 01:54:26.468" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.448" endtime="20200709 01:54:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.468" endtime="20200709 01:54:26.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.472" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.487" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.469" endtime="20200709 01:54:26.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.488" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   324k      0 --:--:-- --:--:-- --:--:--  341k
* Connection #0 to host recon left intact
[{"volume":"vol-0-82482","bucket":"bucket-4-91283","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-4-44260","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-1-94500","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-2-73661","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-1-09201","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-0-36503","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-3-95924","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-3-96477","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-2-33652","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-3-58524","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-4-02964","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-4-31877","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-0-68037","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-0-87761","fileSize":16384,"count":5},{"volume":"vol-4-88328","bucket":"bucket-1-20503","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-3-77066","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-0-33656","fileSize":16384,"count":5},{"volume":"vol-2-93826","bucket":"bucket-2-90956","fileSize":16384,"count":5},{"volume":"vol-0-82482","bucket":"bucket-1-54277","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-2-38278","fileSize":16384,"count":5},{"volume":"vol-1-53601","bucket":"bucket-3-34430","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-4-85704","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-0-06369","fileSize":16384,"count":5},{"volume":"vol-3-21306","bucket":"bucket-1-57103","fileSize":16384,"count":5},{"volume":"10864-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"10864-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"10864-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest338","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-82350","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-02032","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-02032","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-41297","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-70592","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-02932","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-95197","fileSize":1024,"count":2},{"volume":"vol-0-35137","bucket":"bucket-0-14261","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200709 01:54:26.487" endtime="20200709 01:54:26.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.488" endtime="20200709 01:54:26.489"></status>
</kw>
<msg timestamp="20200709 01:54:26.489" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.469" endtime="20200709 01:54:26.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.489" endtime="20200709 01:54:26.490"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.424" endtime="20200709 01:54:26.490"></status>
</kw>
<status status="PASS" starttime="20200709 01:53:25.851" endtime="20200709 01:54:26.490"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:53:25.850" endtime="20200709 01:54:26.490" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.495" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.528" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.493" endtime="20200709 01:54:26.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.529" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  64362      0 --:--:-- --:--:-- --:--:-- 64714
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"b7ca2e85-b11c-4fe2-9e11-b4909144c557","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594259661737,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25369907200},"pipelines":[{"pipelineID":"71a2d739-b255-4650-9f1e-38fbd08bde80","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"f814c25e-65f4-4f7a-bb9d-962a70eb1d4c","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"f524eec7-0dea-4244-b110-b2cace3f6952","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594259661617,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25369907200},"pipelines":[{"pipelineID":"f814c25e-65f4-4f7a-bb9d-962a70eb1d4c","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"9988cf26-4eff-42d9-9ea8-a2bbdd43ac67","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"d76920ae-3f1c-4f1d-a77a-d728d81efc86","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594259661615,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25369907200},"pipelines":[{"pipelineID":"f814c25e-65f4-4f7a-bb9d-962a70eb1d4c","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"a30d61b5-b162-4402-97ae-952d73cffa28","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200709 01:54:26.529" endtime="20200709 01:54:26.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.530" endtime="20200709 01:54:26.530"></status>
</kw>
<msg timestamp="20200709 01:54:26.530" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.492" endtime="20200709 01:54:26.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.531" endtime="20200709 01:54:26.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.531" endtime="20200709 01:54:26.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.531" endtime="20200709 01:54:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.532" endtime="20200709 01:54:26.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.536" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.555" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.533" endtime="20200709 01:54:26.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.556" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  88042      0 --:--:-- --:--:-- --:--:-- 91200
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"71a2d739-b255-4650-9f1e-38fbd08bde80","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1156391,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f814c25e-65f4-4f7a-bb9d-962a70eb1d4c","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1156372,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"a30d61b5-b162-4402-97ae-952d73cffa28","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1156479,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"9988cf26-4eff-42d9-9ea8-a2bbdd43ac67","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1156729,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200709 01:54:26.556" endtime="20200709 01:54:26.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.556" endtime="20200709 01:54:26.557"></status>
</kw>
<msg timestamp="20200709 01:54:26.557" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.532" endtime="20200709 01:54:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.557" endtime="20200709 01:54:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.558" endtime="20200709 01:54:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.558" endtime="20200709 01:54:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.558" endtime="20200709 01:54:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.559" endtime="20200709 01:54:26.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.559" endtime="20200709 01:54:26.559"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.562" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.577" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.560" endtime="20200709 01:54:26.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.578" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  16884      0 --:--:-- --:--:-- --:--:-- 18600
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76109721600},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200709 01:54:26.577" endtime="20200709 01:54:26.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.578" endtime="20200709 01:54:26.578"></status>
</kw>
<msg timestamp="20200709 01:54:26.578" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.559" endtime="20200709 01:54:26.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.579" endtime="20200709 01:54:26.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.579" endtime="20200709 01:54:26.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.579" endtime="20200709 01:54:26.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.583" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.605" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.580" endtime="20200709 01:54:26.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.606" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  33814      0 --:--:-- --:--:-- --:--:-- 34923
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594258537284,"lastReportTimestamp":1594259631625},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594258537561,"lastReportTimestamp":1594259661617},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594258537616,"lastReportTimestamp":1594259601761}]</msg>
<status status="PASS" starttime="20200709 01:54:26.606" endtime="20200709 01:54:26.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.607" endtime="20200709 01:54:26.607"></status>
</kw>
<msg timestamp="20200709 01:54:26.607" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.580" endtime="20200709 01:54:26.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.607" endtime="20200709 01:54:26.608"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:26.491" endtime="20200709 01:54:26.608" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.611" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.615" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:26.610" endtime="20200709 01:54:26.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.616" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:26.616" endtime="20200709 01:54:26.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.616" endtime="20200709 01:54:26.617"></status>
</kw>
<msg timestamp="20200709 01:54:26.617" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:26.610" endtime="20200709 01:54:26.617"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.619" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:26.618" endtime="20200709 01:54:26.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.636" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:26.636" endtime="20200709 01:54:26.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.637" endtime="20200709 01:54:26.637"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.617" endtime="20200709 01:54:26.637"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.617" endtime="20200709 01:54:26.637"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.609" endtime="20200709 01:54:26.637"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:26.609" endtime="20200709 01:54:26.637"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:26.640" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:26.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:26.678" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.638" endtime="20200709 01:54:26.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:26.679" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  18626      0 --:--:-- --:--:-- --:--:-- 19217
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x186bf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQLBW0qfNxY5Y79nmDiXsBtmOZtOjFsrVCx6MVMPMFjtNFJ79u5saV1tcWbbu3mGZ0Q4rUXil5q2Xm6AAl7lPsIluN2g/QsIYOoWb7Et5PvY23K4rtIRS48v5ZhM5f4lfruuveoReGUbNp9Tc4kZXJM6OLl9wPVrCTYVy5126EnTYK1T/fJIRyaJv6e4FOiflg6I44XnphAdA5gAxxGM2d+GpFN1jEuEwMj6EsCJagkqvPa2A6Z9kz/j5Z8kZm+jvTL3IgFA9JgdfrXe9+8zk6XJ+o+O7h9FQYnzo6K7aHQHZ2ETfxhW4/TOpVsLtyHwUg/Bp5N0W+Muekn3Y3qUTliSNPekgdIwgc+gAwIBEqKBxwSBxLQQcjmXUz2KYEzZHsRcohMn3Uup5xRZnc+nA9sHqrHy1KhrMdLeWHT0VjI96RKxsJqkMaOp+y4YP2O5e97V9fO7HA3na/cMTBEaUPY1DzMHRHgBfL7ycT3/yEo5Uw7kXVXhbrV+00MaB9wV8Qvn2yFXS5E2ByDQ18tiW+DuJHJHK42Y6ihHc9pVU6i9kY9Bo/yYC7caw2wUWRwHmh8kM+l5NX7rnXcfmiV+7/lSkOUtJ+vEOjGS2FxwT9M60tJMuv+pq/8=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:26 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCuoN7KD1AdmNEG28NaU6okAefgQXpFQboWyb6ntSg3BL34aHyMiO1LEgQ0PRo5ta+i8givrziDKRsOaO9M+HS9UTo
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295666673&amp;s=AjJkILY+cE+A+awZbo69sJEEctYa/vKKfVqThu0DJGg="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 00:48:20 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  70161      0 --:--:-- --:--:-- --:--:-- 70161
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.678" endtime="20200709 01:54:26.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:26.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:26.679" endtime="20200709 01:54:26.679"></status>
</kw>
<msg timestamp="20200709 01:54:26.679" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 01:54:26.637" endtime="20200709 01:54:26.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:26.680" endtime="20200709 01:54:26.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:26.608" endtime="20200709 01:54:26.680" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200709 01:53:17.502" endtime="20200709 01:54:26.681"></status>
</suite>
<status status="PASS" starttime="20200709 01:53:17.481" endtime="20200709 01:54:26.683"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
