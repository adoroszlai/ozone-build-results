<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 01:11:17.968" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200709 01:11:18.008" endtime="20200709 01:11:18.009"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:11:18.013" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:11:18.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:11:18.099" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:11:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 00:44:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200709 01:11:18.009" endtime="20200709 01:11:18.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:11:18.100" level="INFO">HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:11:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 00:44:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200709 01:11:18.100" endtime="20200709 01:11:18.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:11:18.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:11:18.101" endtime="20200709 01:11:18.101"></status>
</kw>
<msg timestamp="20200709 01:11:18.101" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:11:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 00:44:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200709 01:11:18.009" endtime="20200709 01:11:18.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200709 01:11:18.101" endtime="20200709 01:11:18.102"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:11:18.008" endtime="20200709 01:11:18.102" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:11:18.103" endtime="20200709 01:11:18.104"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:11:18.110" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:15.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:15.992" level="INFO">${output} = 2020-07-09 01:11:19,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:11:19,660 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:11:18.104" endtime="20200709 01:12:15.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:15.993" level="INFO">2020-07-09 01:11:19,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:11:19,660 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:11:19,660 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:11:21,340 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 01:11:21,341 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-09 01:11:21,344 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-09 01:11:21,345 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 01:11:21,352 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-09 01:11:21,407 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-58955, with hadoop as owner.
2020-07-09 01:11:21,620 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-78283, with hadoop as owner.
2020-07-09 01:11:21,633 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-25846, with hadoop as owner.
2020-07-09 01:11:21,641 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-56580, with hadoop as owner.
2020-07-09 01:11:21,647 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-28044, with hadoop as owner.
2020-07-09 01:11:21,660 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58955/bucket-0-57943, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,703 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78283/bucket-0-93266, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,708 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25846/bucket-0-93579, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,713 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56580/bucket-0-44937, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,719 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-28044/bucket-0-36762, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,723 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58955/bucket-1-07602, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,727 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78283/bucket-1-51822, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,730 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25846/bucket-1-16017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,737 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56580/bucket-1-52539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,741 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-28044/bucket-1-63490, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,755 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58955/bucket-2-26015, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,771 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78283/bucket-2-23644, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,777 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25846/bucket-2-90615, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,788 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56580/bucket-2-48226, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,792 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-28044/bucket-2-61287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,797 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58955/bucket-3-32330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,800 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78283/bucket-3-42958, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,804 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25846/bucket-3-16524, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,807 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56580/bucket-3-56198, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,811 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-28044/bucket-3-65140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,814 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58955/bucket-4-18127, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,818 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-78283/bucket-4-24329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,823 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-25846/bucket-4-12782, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,828 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-56580/bucket-4-74440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:21,832 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-28044/bucket-4-69330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:11:22,363 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-09 01:11:22,635 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:11:23,363 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-09 01:11:24,364 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-09 01:11:25,368 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-09 01:11:26,369 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-07-09 01:11:27,369 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-07-09 01:11:28,369 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-09 01:11:29,370 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-09 01:11:30,371 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-09 01:11:31,371 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-09 01:11:32,372 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-09 01:11:33,373 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-09 01:11:34,373 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-09 01:11:35,374 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-09 01:11:36,375 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-09 01:11:37,384 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-09 01:11:38,384 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-09 01:11:39,385 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-09 01:11:40,385 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-09 01:11:41,386 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-09 01:11:42,387 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-09 01:11:43,388 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-09 01:11:44,388 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-09 01:11:45,389 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-09 01:11:46,389 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-09 01:11:47,390 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-09 01:11:48,390 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-09 01:11:49,390 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-07-09 01:11:50,391 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-07-09 01:11:51,391 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-09 01:11:52,392 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-07-09 01:11:53,393 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-07-09 01:11:54,393 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-09 01:11:55,394 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-09 01:11:56,394 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-09 01:11:57,394 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-09 01:11:58,399 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-09 01:11:59,399 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-09 01:12:00,399 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-09 01:12:01,400 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-09 01:12:02,400 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-09 01:12:03,401 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-09 01:12:04,401 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-09 01:12:05,402 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-09 01:12:06,403 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-09 01:12:07,403 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-09 01:12:08,404 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-09 01:12:09,404 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-09 01:12:10,407 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-07-09 01:12:11,407 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,271
Average Time spent in bucket creation: 00:00:00,111
Average Time spent in key creation: 00:00:01,799
Average Time spent in key write: 00:00:00,696
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:55,810
***************************************************</msg>
<status status="PASS" starttime="20200709 01:12:15.993" endtime="20200709 01:12:15.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:15.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:15.994" endtime="20200709 01:12:15.994"></status>
</kw>
<msg timestamp="20200709 01:12:15.994" level="INFO">${result} = 2020-07-09 01:11:19,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:11:19,660 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:11:18.104" endtime="20200709 01:12:15.994"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:15.995" endtime="20200709 01:12:15.995"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:15.994" endtime="20200709 01:12:15.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:15.995" endtime="20200709 01:12:15.995"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:11:18.103" endtime="20200709 01:12:15.995" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 01:11:17.990" endtime="20200709 01:12:15.996"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200709 01:12:16.002" level="INFO">${random} = 31822</msg>
<status status="PASS" starttime="20200709 01:12:16.002" endtime="20200709 01:12:16.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200709 01:12:16.002" level="INFO">${prefix} = 31822</msg>
<status status="PASS" starttime="20200709 01:12:16.002" endtime="20200709 01:12:16.002"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:16.001" endtime="20200709 01:12:16.003"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:16.003" endtime="20200709 01:12:16.003"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:16.006" level="INFO">Running command 'ozone sh volume info o3://om:9862/31822-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:18.071" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:12:18.071" level="INFO">${output} = VOLUME_NOT_FOUND Volume 31822-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 01:12:16.004" endtime="20200709 01:12:18.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:18.072" level="INFO">VOLUME_NOT_FOUND Volume 31822-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 01:12:18.071" endtime="20200709 01:12:18.072"></status>
</kw>
<msg timestamp="20200709 01:12:18.072" level="INFO">${result} = VOLUME_NOT_FOUND Volume 31822-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 01:12:16.004" endtime="20200709 01:12:18.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:18.072" endtime="20200709 01:12:18.073"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:18.075" level="INFO">Running command 'ozone sh volume create o3://om:9862/31822-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:20.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:20.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:18.073" endtime="20200709 01:12:20.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:20.314" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:20.314" endtime="20200709 01:12:20.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:20.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:20.314" endtime="20200709 01:12:20.315"></status>
</kw>
<msg timestamp="20200709 01:12:20.315" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:12:18.073" endtime="20200709 01:12:20.315"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:20.315" endtime="20200709 01:12:20.315"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:20.318" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="31822-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:22.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:22.554" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 01:12:20.316" endtime="20200709 01:12:22.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:22.555" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:12:22.554" endtime="20200709 01:12:22.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:22.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:22.555" endtime="20200709 01:12:22.555"></status>
</kw>
<msg timestamp="20200709 01:12:22.556" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 01:12:20.316" endtime="20200709 01:12:22.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:22.556" endtime="20200709 01:12:22.556"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:22.559" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31822-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:25.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:25.098" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 01:12:22.556" endtime="20200709 01:12:25.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:25.099" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:12:25.098" endtime="20200709 01:12:25.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:25.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:25.099" endtime="20200709 01:12:25.099"></status>
</kw>
<msg timestamp="20200709 01:12:25.099" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:12:20.159Z",
  "modificationTime": "2020-07-09T01:12:20.159Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 01:12:22.556" endtime="20200709 01:12:25.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:25.099" endtime="20200709 01:12:25.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:25.103" level="INFO">Running command 'ozone sh volume update o3://om:9862/31822-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:27.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:27.647" level="INFO">${output} = {
  "metadata" : { },
  "name" : "31822-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:12:20.159Z",
  "modificationTime" : "2020-07-09T01:12:27.122Z",
  "acl...</msg>
<status status="PASS" starttime="20200709 01:12:25.100" endtime="20200709 01:12:27.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:27.648" level="INFO">{
  "metadata" : { },
  "name" : "31822-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:12:20.159Z",
  "modificationTime" : "2020-07-09T01:12:27.122Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 01:12:27.647" endtime="20200709 01:12:27.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:27.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:27.648" endtime="20200709 01:12:27.648"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:25.100" endtime="20200709 01:12:27.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:27.651" level="INFO">Running command 'ozone sh volume info o3://om:9862/31822-rpcwoport | jq -r '. | select(.name=="31822-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:30.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:30.012" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:12:27.649" endtime="20200709 01:12:30.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:30.014" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 01:12:30.013" endtime="20200709 01:12:30.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:30.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:30.014" endtime="20200709 01:12:30.014"></status>
</kw>
<msg timestamp="20200709 01:12:30.015" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:12:27.648" endtime="20200709 01:12:30.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:30.015" endtime="20200709 01:12:30.015"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:30.018" level="INFO">Running command 'ozone sh bucket create o3://om:9862/31822-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:32.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:32.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:30.016" endtime="20200709 01:12:32.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:32.058" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:32.057" endtime="20200709 01:12:32.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:32.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:32.058" endtime="20200709 01:12:32.058"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:30.015" endtime="20200709 01:12:32.058"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:32.061" level="INFO">Running command 'ozone sh bucket info o3://om:9862/31822-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:34.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:34.493" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 01:12:32.059" endtime="20200709 01:12:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:34.494" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 01:12:34.493" endtime="20200709 01:12:34.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:34.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:34.494" endtime="20200709 01:12:34.494"></status>
</kw>
<msg timestamp="20200709 01:12:34.495" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 01:12:32.058" endtime="20200709 01:12:34.495"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:34.495" endtime="20200709 01:12:34.495"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:34.498" level="INFO">Running command 'ozone sh bucket list o3://om:9862/31822-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:36.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:36.925" level="INFO">${output} = 31822-rpcwoport</msg>
<status status="PASS" starttime="20200709 01:12:34.496" endtime="20200709 01:12:36.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:36.926" level="INFO">31822-rpcwoport</msg>
<status status="PASS" starttime="20200709 01:12:36.925" endtime="20200709 01:12:36.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:36.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:36.926" endtime="20200709 01:12:36.926"></status>
</kw>
<msg timestamp="20200709 01:12:36.926" level="INFO">${result} = 31822-rpcwoport</msg>
<status status="PASS" starttime="20200709 01:12:34.495" endtime="20200709 01:12:36.926"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:36.927" endtime="20200709 01:12:36.927"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:36.930" level="INFO">Running command 'ozone sh key put o3://om:9862/31822-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:40.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:40.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:36.928" endtime="20200709 01:12:40.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:40.853" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:40.853" endtime="20200709 01:12:40.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:40.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:40.854" endtime="20200709 01:12:40.854"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:36.928" endtime="20200709 01:12:40.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:40.857" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:40.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:40.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:40.855" endtime="20200709 01:12:40.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:40.859" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:40.859" endtime="20200709 01:12:40.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:40.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:40.860" endtime="20200709 01:12:40.861"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:40.854" endtime="20200709 01:12:40.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:40.866" level="INFO">Running command 'ozone sh key get o3://om:9862/31822-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:44.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:44.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:40.863" endtime="20200709 01:12:44.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:44.489" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:44.488" endtime="20200709 01:12:44.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:44.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:44.489" endtime="20200709 01:12:44.490"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:40.862" endtime="20200709 01:12:44.490"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:44.492" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:44.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:44.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:44.490" endtime="20200709 01:12:44.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:44.497" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:44.496" endtime="20200709 01:12:44.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:44.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:44.497" endtime="20200709 01:12:44.497"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:44.490" endtime="20200709 01:12:44.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:44.499" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/31822-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:48.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:48.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:44.498" endtime="20200709 01:12:48.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:48.371" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:48.370" endtime="20200709 01:12:48.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:48.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:48.371" endtime="20200709 01:12:48.371"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:44.497" endtime="20200709 01:12:48.371"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:48.374" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:48.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:48.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:48.372" endtime="20200709 01:12:48.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:48.377" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:48.376" endtime="20200709 01:12:48.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:48.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:48.377" endtime="20200709 01:12:48.377"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:48.372" endtime="20200709 01:12:48.378"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:48.380" level="INFO">Running command 'ozone sh key get o3://om:9862/31822-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:52.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:52.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:48.378" endtime="20200709 01:12:52.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:52.007" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:52.006" endtime="20200709 01:12:52.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:52.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:52.007" endtime="20200709 01:12:52.007"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:48.378" endtime="20200709 01:12:52.007"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:52.009" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:52.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:52.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:52.008" endtime="20200709 01:12:52.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:52.013" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:52.013" endtime="20200709 01:12:52.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:52.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:52.013" endtime="20200709 01:12:52.014"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:52.007" endtime="20200709 01:12:52.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:52.016" level="INFO">Running command 'ozone sh key info o3://om:9862/31822-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:54.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:54.387" level="INFO">${output} = {
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:46.495Z",
  "modificationTime": "2020-07-09T01:12:47.908Z",...</msg>
<status status="PASS" starttime="20200709 01:12:52.015" endtime="20200709 01:12:54.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:54.388" level="INFO">{
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:46.495Z",
  "modificationTime": "2020-07-09T01:12:47.908Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481237663285380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:12:54.388" endtime="20200709 01:12:54.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:54.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:54.389" endtime="20200709 01:12:54.389"></status>
</kw>
<msg timestamp="20200709 01:12:54.389" level="INFO">${result} = {
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:46.495Z",
  "modificationTime": "2020-07-09T01:12:47.908Z",...</msg>
<status status="PASS" starttime="20200709 01:12:52.014" endtime="20200709 01:12:54.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 01:12:54.389" endtime="20200709 01:12:54.390"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:54.398" level="INFO">Running command 'ozone sh key delete o3://om:9862/31822-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:12:56.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:12:56.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:54.391" endtime="20200709 01:12:56.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:12:56.966" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:12:56.965" endtime="20200709 01:12:56.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:12:56.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:12:56.966" endtime="20200709 01:12:56.966"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:54.391" endtime="20200709 01:12:56.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:12:56.969" level="INFO">Running command 'ozone sh key cp o3://om:9862/31822-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:01.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:01.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:12:56.968" endtime="20200709 01:13:01.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:01.341" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:01.341" endtime="20200709 01:13:01.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:01.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:01.341" endtime="20200709 01:13:01.342"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:56.967" endtime="20200709 01:13:01.342"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:01.346" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:01.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:01.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:01.342" endtime="20200709 01:13:01.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:01.348" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:01.348" endtime="20200709 01:13:01.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:01.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:01.348" endtime="20200709 01:13:01.349"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:01.342" endtime="20200709 01:13:01.349"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:01.352" level="INFO">Running command 'ozone sh key get o3://om:9862/31822-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:05.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:05.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:01.349" endtime="20200709 01:13:05.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:05.091" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:05.091" endtime="20200709 01:13:05.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:05.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:05.092" endtime="20200709 01:13:05.092"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:01.349" endtime="20200709 01:13:05.092"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:05.095" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:05.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:05.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:05.093" endtime="20200709 01:13:05.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:05.098" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:05.097" endtime="20200709 01:13:05.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:05.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:05.098" endtime="20200709 01:13:05.098"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:05.092" endtime="20200709 01:13:05.099"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:05.101" level="INFO">Running command 'ozone sh key delete o3://om:9862/31822-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:07.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:07.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:05.099" endtime="20200709 01:13:07.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:07.443" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:07.443" endtime="20200709 01:13:07.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:07.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:07.443" endtime="20200709 01:13:07.444"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:05.099" endtime="20200709 01:13:07.444"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:07.446" level="INFO">Running command 'ozone sh key get o3://om:9862/31822-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:09.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:13:09.586" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:13:07.444" endtime="20200709 01:13:09.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:09.586" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:13:09.586" endtime="20200709 01:13:09.587"></status>
</kw>
<msg timestamp="20200709 01:13:09.587" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:13:07.444" endtime="20200709 01:13:09.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:09.587" endtime="20200709 01:13:09.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:09.590" level="INFO">Running command 'ozone sh key get --force o3://om:9862/31822-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:13.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:13.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:09.588" endtime="20200709 01:13:13.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:13.132" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:13.131" endtime="20200709 01:13:13.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:13.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:13.132" endtime="20200709 01:13:13.132"></status>
</kw>
<msg timestamp="20200709 01:13:13.133" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:13:09.587" endtime="20200709 01:13:13.133"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:13.133" endtime="20200709 01:13:13.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:13.136" level="INFO">Running command 'ozone sh key info o3://om:9862/31822-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:15.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:15.417" level="INFO">${output} = {
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:39.046Z",
  "modificationTime": "2020-07-09T01:12:40.477Z",
  "re...</msg>
<status status="PASS" starttime="20200709 01:13:13.134" endtime="20200709 01:13:15.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:15.418" level="INFO">{
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:39.046Z",
  "modificationTime": "2020-07-09T01:12:40.477Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481237175173250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:13:15.417" endtime="20200709 01:13:15.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:15.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:15.418" endtime="20200709 01:13:15.419"></status>
</kw>
<msg timestamp="20200709 01:13:15.419" level="INFO">${result} = {
  "volumeName": "31822-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:12:39.046Z",
  "modificationTime": "2020-07-09T01:12:40.477Z",
  "re...</msg>
<status status="PASS" starttime="20200709 01:13:13.133" endtime="20200709 01:13:15.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:15.419" endtime="20200709 01:13:15.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:15.422" level="INFO">Running command 'ozone sh key list o3://om:9862/31822-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:17.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:17.629" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 01:13:15.420" endtime="20200709 01:13:17.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:17.630" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 01:13:17.630" endtime="20200709 01:13:17.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:17.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:17.630" endtime="20200709 01:13:17.631"></status>
</kw>
<msg timestamp="20200709 01:13:17.631" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 01:13:15.419" endtime="20200709 01:13:17.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:17.631" endtime="20200709 01:13:17.632"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:17.635" level="INFO">Running command 'ozone sh key rename o3://om:9862/31822-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:19.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:19.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:17.632" endtime="20200709 01:13:19.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:19.939" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:19.938" endtime="20200709 01:13:19.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:19.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:19.939" endtime="20200709 01:13:19.940"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:17.632" endtime="20200709 01:13:19.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:19.942" level="INFO">Running command 'ozone sh key list o3://om:9862/31822-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:22.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:22.266" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 01:13:19.940" endtime="20200709 01:13:22.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:22.267" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 01:13:22.266" endtime="20200709 01:13:22.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:22.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:22.267" endtime="20200709 01:13:22.268"></status>
</kw>
<msg timestamp="20200709 01:13:22.268" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 01:13:19.940" endtime="20200709 01:13:22.268"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:22.268" endtime="20200709 01:13:22.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:22.272" level="INFO">Running command 'ozone sh key delete o3://om:9862/31822-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:24.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:24.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:22.269" endtime="20200709 01:13:24.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:24.438" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:24.438" endtime="20200709 01:13:24.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:24.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:24.438" endtime="20200709 01:13:24.439"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:22.269" endtime="20200709 01:13:24.439"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:36.927" endtime="20200709 01:13:24.439"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:36.927" endtime="20200709 01:13:24.439"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:24.443" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/31822-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:26.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:26.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:24.440" endtime="20200709 01:13:26.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:26.620" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:26.619" endtime="20200709 01:13:26.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:26.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:26.620" endtime="20200709 01:13:26.621"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:24.440" endtime="20200709 01:13:26.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:26.624" level="INFO">Running command 'ozone sh volume delete o3://om:9862/31822-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:28.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:28.750" level="INFO">${output} = Volume 31822-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200709 01:13:26.621" endtime="20200709 01:13:28.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:28.751" level="INFO">Volume 31822-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200709 01:13:28.751" endtime="20200709 01:13:28.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:28.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:28.752" endtime="20200709 01:13:28.752"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:26.621" endtime="20200709 01:13:28.752"></status>
</kw>
<status status="PASS" starttime="20200709 01:12:16.003" endtime="20200709 01:13:28.752"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:12:16.003" endtime="20200709 01:13:28.753" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:28.754" endtime="20200709 01:13:28.755"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:28.757" level="INFO">Running command 'ozone sh volume create o3://om:9862/31822-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:30.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:30.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:28.755" endtime="20200709 01:13:30.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:30.858" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:30.857" endtime="20200709 01:13:30.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:30.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:30.858" endtime="20200709 01:13:30.858"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:28.755" endtime="20200709 01:13:30.859"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:30.861" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31822-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:32.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:32.986" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:30.859" endtime="20200709 01:13:32.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:32.987" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:32.987" endtime="20200709 01:13:32.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:32.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:32.987" endtime="20200709 01:13:32.988"></status>
</kw>
<msg timestamp="20200709 01:13:32.988" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:30.859" endtime="20200709 01:13:32.988"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:32.988" endtime="20200709 01:13:32.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:32.991" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/31822-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:35.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:35.321" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 01:13:32.989" endtime="20200709 01:13:35.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:35.322" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 01:13:35.321" endtime="20200709 01:13:35.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:35.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:35.322" endtime="20200709 01:13:35.323"></status>
</kw>
<msg timestamp="20200709 01:13:35.323" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 01:13:32.989" endtime="20200709 01:13:35.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:35.326" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31822-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:37.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:37.565" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:35.323" endtime="20200709 01:13:37.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:37.566" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:37.566" endtime="20200709 01:13:37.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:37.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:37.566" endtime="20200709 01:13:37.567"></status>
</kw>
<msg timestamp="20200709 01:13:37.567" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:35.323" endtime="20200709 01:13:37.567"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:37.567" endtime="20200709 01:13:37.568"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:37.572" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/31822-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:39.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:39.653" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 01:13:37.569" endtime="20200709 01:13:39.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:39.654" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 01:13:39.654" endtime="20200709 01:13:39.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:39.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:39.655" endtime="20200709 01:13:39.655"></status>
</kw>
<msg timestamp="20200709 01:13:39.655" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 01:13:37.568" endtime="20200709 01:13:39.655"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:39.659" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31822-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:41.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:41.897" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:39.656" endtime="20200709 01:13:41.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:41.897" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:41.897" endtime="20200709 01:13:41.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:41.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:41.898" endtime="20200709 01:13:41.898"></status>
</kw>
<msg timestamp="20200709 01:13:41.898" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:39.655" endtime="20200709 01:13:41.898"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:41.898" endtime="20200709 01:13:41.899"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:41.902" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/31822-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:44.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:44.029" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:13:41.900" endtime="20200709 01:13:44.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:44.030" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:13:44.029" endtime="20200709 01:13:44.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:44.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:44.030" endtime="20200709 01:13:44.031"></status>
</kw>
<msg timestamp="20200709 01:13:44.031" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:13:41.899" endtime="20200709 01:13:44.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:44.034" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/31822-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:46.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:46.487" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200709 01:13:44.032" endtime="20200709 01:13:46.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:46.488" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:46.487" endtime="20200709 01:13:46.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:46.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:46.488" endtime="20200709 01:13:46.489"></status>
</kw>
<msg timestamp="20200709 01:13:46.489" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200709 01:13:44.031" endtime="20200709 01:13:46.489"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:46.489" endtime="20200709 01:13:46.490"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:46.490" endtime="20200709 01:13:46.490"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:28.755" endtime="20200709 01:13:46.491"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:13:28.753" endtime="20200709 01:13:46.491" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:46.491" endtime="20200709 01:13:46.492"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:46.496" level="INFO">Running command 'ozone sh bucket create o3://om:9862/31822-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:48.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:48.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:13:46.493" endtime="20200709 01:13:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:48.712" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:13:48.711" endtime="20200709 01:13:48.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:48.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:48.712" endtime="20200709 01:13:48.712"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:46.493" endtime="20200709 01:13:48.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:48.714" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31822-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:51.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:51.100" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:48.713" endtime="20200709 01:13:51.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:51.101" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:51.100" endtime="20200709 01:13:51.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:51.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:51.101" endtime="20200709 01:13:51.102"></status>
</kw>
<msg timestamp="20200709 01:13:51.102" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:48.712" endtime="20200709 01:13:51.102"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:51.102" endtime="20200709 01:13:51.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:51.105" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/31822-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:53.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:53.182" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 01:13:51.103" endtime="20200709 01:13:53.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:53.183" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 01:13:53.182" endtime="20200709 01:13:53.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:53.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:53.183" endtime="20200709 01:13:53.184"></status>
</kw>
<msg timestamp="20200709 01:13:53.184" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 01:13:51.103" endtime="20200709 01:13:53.184"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:53.186" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31822-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:55.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:55.671" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:53.184" endtime="20200709 01:13:55.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:55.672" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:13:55.672" endtime="20200709 01:13:55.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:55.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:55.673" endtime="20200709 01:13:55.673"></status>
</kw>
<msg timestamp="20200709 01:13:55.673" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:53.184" endtime="20200709 01:13:55.673"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:13:55.673" endtime="20200709 01:13:55.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:55.677" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/31822-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:13:57.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:13:57.805" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:13:55.675" endtime="20200709 01:13:57.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:13:57.806" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:13:57.806" endtime="20200709 01:13:57.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:13:57.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:13:57.806" endtime="20200709 01:13:57.807"></status>
</kw>
<msg timestamp="20200709 01:13:57.807" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:13:55.674" endtime="20200709 01:13:57.807"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:13:57.810" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31822-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:00.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:00.287" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:57.808" endtime="20200709 01:14:00.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:00.288" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:00.288" endtime="20200709 01:14:00.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:00.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:00.289" endtime="20200709 01:14:00.289"></status>
</kw>
<msg timestamp="20200709 01:14:00.289" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:13:57.807" endtime="20200709 01:14:00.289"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:00.289" endtime="20200709 01:14:00.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:00.295" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/31822-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:02.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:02.677" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:00.291" endtime="20200709 01:14:02.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:02.678" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:02.678" endtime="20200709 01:14:02.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:02.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:02.679" endtime="20200709 01:14:02.680"></status>
</kw>
<msg timestamp="20200709 01:14:02.680" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:00.291" endtime="20200709 01:14:02.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:02.683" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/31822-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:05.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:05.034" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 01:14:02.681" endtime="20200709 01:14:05.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:05.035" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:05.034" endtime="20200709 01:14:05.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:05.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:05.035" endtime="20200709 01:14:05.035"></status>
</kw>
<msg timestamp="20200709 01:14:05.036" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 01:14:02.680" endtime="20200709 01:14:05.036"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:05.036" endtime="20200709 01:14:05.036"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:05.037" endtime="20200709 01:14:05.037"></status>
</kw>
<status status="PASS" starttime="20200709 01:13:46.492" endtime="20200709 01:14:05.037"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:13:46.491" endtime="20200709 01:14:05.037" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:05.039" endtime="20200709 01:14:05.039"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:05.042" level="INFO">Running command 'ozone sh key put o3://om:9862/31822-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:08.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:08.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:05.040" endtime="20200709 01:14:08.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:08.887" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:08.887" endtime="20200709 01:14:08.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:08.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:08.887" endtime="20200709 01:14:08.888"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:05.039" endtime="20200709 01:14:08.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:08.892" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31822-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:11.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:11.032" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:08.889" endtime="20200709 01:14:11.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:11.033" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:11.033" endtime="20200709 01:14:11.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:11.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:11.034" endtime="20200709 01:14:11.034"></status>
</kw>
<msg timestamp="20200709 01:14:11.034" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:08.888" endtime="20200709 01:14:11.034"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:11.034" endtime="20200709 01:14:11.035"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:11.038" level="INFO">Running command 'ozone sh key addacl o3://om:9862/31822-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:13.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:13.162" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 01:14:11.035" endtime="20200709 01:14:13.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:13.163" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 01:14:13.162" endtime="20200709 01:14:13.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:13.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:13.163" endtime="20200709 01:14:13.163"></status>
</kw>
<msg timestamp="20200709 01:14:13.164" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 01:14:11.035" endtime="20200709 01:14:13.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:13.167" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31822-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:15.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:15.382" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:13.164" endtime="20200709 01:14:15.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:15.383" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:15.382" endtime="20200709 01:14:15.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:15.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:15.383" endtime="20200709 01:14:15.383"></status>
</kw>
<msg timestamp="20200709 01:14:15.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:13.164" endtime="20200709 01:14:15.384"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:15.384" endtime="20200709 01:14:15.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:15.388" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/31822-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:17.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:17.491" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:14:15.385" endtime="20200709 01:14:17.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:17.492" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:14:17.492" endtime="20200709 01:14:17.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:17.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:17.493" endtime="20200709 01:14:17.493"></status>
</kw>
<msg timestamp="20200709 01:14:17.493" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 01:14:15.385" endtime="20200709 01:14:17.493"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:17.496" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31822-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:19.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:19.904" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:17.494" endtime="20200709 01:14:19.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:19.905" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:19.904" endtime="20200709 01:14:19.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:19.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:19.905" endtime="20200709 01:14:19.905"></status>
</kw>
<msg timestamp="20200709 01:14:19.906" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 01:14:17.493" endtime="20200709 01:14:19.906"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:19.906" endtime="20200709 01:14:19.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:19.909" level="INFO">Running command 'ozone sh key setacl o3://om:9862/31822-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:22.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:22.077" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:19.907" endtime="20200709 01:14:22.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:22.078" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:22.078" endtime="20200709 01:14:22.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:22.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:22.079" endtime="20200709 01:14:22.079"></status>
</kw>
<msg timestamp="20200709 01:14:22.079" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 01:14:19.906" endtime="20200709 01:14:22.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:22.083" level="INFO">Running command 'ozone sh key getacl o3://om:9862/31822-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:24.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:24.423" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 01:14:22.080" endtime="20200709 01:14:24.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:24.424" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 01:14:24.423" endtime="20200709 01:14:24.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:24.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:24.424" endtime="20200709 01:14:24.424"></status>
</kw>
<msg timestamp="20200709 01:14:24.425" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 01:14:22.079" endtime="20200709 01:14:24.425"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:24.425" endtime="20200709 01:14:24.425"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:24.425" endtime="20200709 01:14:24.426"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:05.039" endtime="20200709 01:14:24.426"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:14:05.038" endtime="20200709 01:14:24.426" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:24.427" endtime="20200709 01:14:24.427"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:24.430" level="INFO">Running command 'ozone sh volume info o3:///31822-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:26.530" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:14:26.530" level="INFO">${output} = VOLUME_NOT_FOUND Volume 31822-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 01:14:24.429" endtime="20200709 01:14:26.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:26.531" level="INFO">VOLUME_NOT_FOUND Volume 31822-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 01:14:26.531" endtime="20200709 01:14:26.531"></status>
</kw>
<msg timestamp="20200709 01:14:26.532" level="INFO">${result} = VOLUME_NOT_FOUND Volume 31822-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 01:14:24.428" endtime="20200709 01:14:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:26.532" endtime="20200709 01:14:26.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:26.534" level="INFO">Running command 'ozone sh volume create o3:///31822-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:28.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:28.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:26.532" endtime="20200709 01:14:28.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:28.722" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:28.721" endtime="20200709 01:14:28.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:28.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:28.722" endtime="20200709 01:14:28.722"></status>
</kw>
<msg timestamp="20200709 01:14:28.722" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:14:26.532" endtime="20200709 01:14:28.723"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:28.723" endtime="20200709 01:14:28.723"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:28.726" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="31822-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:31.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:31.007" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 01:14:28.724" endtime="20200709 01:14:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:31.008" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:14:31.008" endtime="20200709 01:14:31.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:31.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:31.009" endtime="20200709 01:14:31.009"></status>
</kw>
<msg timestamp="20200709 01:14:31.009" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 01:14:28.723" endtime="20200709 01:14:31.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:31.009" endtime="20200709 01:14:31.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:31.012" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31822-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:33.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:33.317" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 01:14:31.010" endtime="20200709 01:14:33.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:33.318" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:14:33.317" endtime="20200709 01:14:33.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:33.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:33.318" endtime="20200709 01:14:33.319"></status>
</kw>
<msg timestamp="20200709 01:14:33.319" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:14:28.564Z",
  "modificationTime": "2020-07-09T01:14:28.564Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 01:14:31.010" endtime="20200709 01:14:33.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:33.319" endtime="20200709 01:14:33.319"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:33.323" level="INFO">Running command 'ozone sh volume update o3:///31822-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:35.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:35.587" level="INFO">${output} = {
  "metadata" : { },
  "name" : "31822-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:14:28.564Z",
  "modificationTime" : "2020-07-09T01:14:35.239Z",
  "acls...</msg>
<status status="PASS" starttime="20200709 01:14:33.320" endtime="20200709 01:14:35.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:35.588" level="INFO">{
  "metadata" : { },
  "name" : "31822-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:14:28.564Z",
  "modificationTime" : "2020-07-09T01:14:35.239Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 01:14:35.588" endtime="20200709 01:14:35.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:35.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:35.588" endtime="20200709 01:14:35.589"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:33.319" endtime="20200709 01:14:35.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:35.592" level="INFO">Running command 'ozone sh volume info o3:///31822-rpcwport | jq -r '. | select(.name=="31822-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:37.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:37.826" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:14:35.590" endtime="20200709 01:14:37.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:37.827" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 01:14:37.826" endtime="20200709 01:14:37.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:37.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:37.827" endtime="20200709 01:14:37.827"></status>
</kw>
<msg timestamp="20200709 01:14:37.828" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:14:35.589" endtime="20200709 01:14:37.828"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:37.828" endtime="20200709 01:14:37.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:37.830" level="INFO">Running command 'ozone sh bucket create o3:///31822-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:39.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:39.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:37.829" endtime="20200709 01:14:39.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:39.943" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:39.942" endtime="20200709 01:14:39.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:39.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:39.943" endtime="20200709 01:14:39.943"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:37.828" endtime="20200709 01:14:39.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:39.947" level="INFO">Running command 'ozone sh bucket info o3:///31822-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:42.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:42.272" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 01:14:39.944" endtime="20200709 01:14:42.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:42.273" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 01:14:42.272" endtime="20200709 01:14:42.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:42.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:42.274" endtime="20200709 01:14:42.275"></status>
</kw>
<msg timestamp="20200709 01:14:42.275" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 01:14:39.944" endtime="20200709 01:14:42.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:42.275" endtime="20200709 01:14:42.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:42.278" level="INFO">Running command 'ozone sh bucket list o3:///31822-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:44.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:44.597" level="INFO">${output} = 31822-rpcwport</msg>
<status status="PASS" starttime="20200709 01:14:42.276" endtime="20200709 01:14:44.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:44.598" level="INFO">31822-rpcwport</msg>
<status status="PASS" starttime="20200709 01:14:44.597" endtime="20200709 01:14:44.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:44.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:44.598" endtime="20200709 01:14:44.599"></status>
</kw>
<msg timestamp="20200709 01:14:44.599" level="INFO">${result} = 31822-rpcwport</msg>
<status status="PASS" starttime="20200709 01:14:42.275" endtime="20200709 01:14:44.599"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 01:14:44.599" endtime="20200709 01:14:44.599"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:44.603" level="INFO">Running command 'ozone sh key put o3:///31822-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:48.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:48.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:44.600" endtime="20200709 01:14:48.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:48.455" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:48.455" endtime="20200709 01:14:48.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:48.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:48.456" endtime="20200709 01:14:48.456"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:44.600" endtime="20200709 01:14:48.456"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:48.459" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:48.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:48.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:48.456" endtime="20200709 01:14:48.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:48.462" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:48.461" endtime="20200709 01:14:48.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:48.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:48.462" endtime="20200709 01:14:48.462"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:48.456" endtime="20200709 01:14:48.462"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:48.465" level="INFO">Running command 'ozone sh key get o3:///31822-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:51.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:51.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:48.463" endtime="20200709 01:14:51.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:51.989" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:51.988" endtime="20200709 01:14:51.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:51.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:51.989" endtime="20200709 01:14:51.989"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:48.463" endtime="20200709 01:14:51.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:51.992" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:51.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:51.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:51.990" endtime="20200709 01:14:51.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:51.995" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:51.994" endtime="20200709 01:14:51.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:51.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:51.995" endtime="20200709 01:14:51.995"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:51.989" endtime="20200709 01:14:51.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:51.998" level="INFO">Running command 'ozone sh key put -t RATIS o3:///31822-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:55.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:55.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:51.996" endtime="20200709 01:14:55.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:55.870" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:55.870" endtime="20200709 01:14:55.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:55.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:55.870" endtime="20200709 01:14:55.871"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:51.996" endtime="20200709 01:14:55.871"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:55.873" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:55.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:55.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:55.871" endtime="20200709 01:14:55.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:55.876" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:55.875" endtime="20200709 01:14:55.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:55.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:55.876" endtime="20200709 01:14:55.876"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:55.871" endtime="20200709 01:14:55.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:55.879" level="INFO">Running command 'ozone sh key get o3:///31822-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:59.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:59.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:55.877" endtime="20200709 01:14:59.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:59.626" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:59.625" endtime="20200709 01:14:59.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:59.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:59.626" endtime="20200709 01:14:59.626"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:55.876" endtime="20200709 01:14:59.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:59.629" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:14:59.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:14:59.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:14:59.627" endtime="20200709 01:14:59.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:14:59.633" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:14:59.632" endtime="20200709 01:14:59.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:14:59.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:14:59.633" endtime="20200709 01:14:59.634"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:59.627" endtime="20200709 01:14:59.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:14:59.638" level="INFO">Running command 'ozone sh key info o3:///31822-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:02.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:02.075" level="INFO">${output} = {
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:54.042Z",
  "modificationTime": "2020-07-09T01:14:55.419Z",
...</msg>
<status status="PASS" starttime="20200709 01:14:59.635" endtime="20200709 01:15:02.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:02.075" level="INFO">{
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:54.042Z",
  "modificationTime": "2020-07-09T01:14:55.419Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481246022271100,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:15:02.075" endtime="20200709 01:15:02.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:02.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:02.076" endtime="20200709 01:15:02.076"></status>
</kw>
<msg timestamp="20200709 01:15:02.076" level="INFO">${result} = {
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:54.042Z",
  "modificationTime": "2020-07-09T01:14:55.419Z",
...</msg>
<status status="PASS" starttime="20200709 01:14:59.634" endtime="20200709 01:15:02.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:02.076" endtime="20200709 01:15:02.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:02.080" level="INFO">Running command 'ozone sh key delete o3:///31822-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:04.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:04.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:02.077" endtime="20200709 01:15:04.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:04.226" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:04.225" endtime="20200709 01:15:04.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:04.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:04.226" endtime="20200709 01:15:04.226"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:02.077" endtime="20200709 01:15:04.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:04.229" level="INFO">Running command 'ozone sh key cp o3:///31822-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:08.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:08.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:04.227" endtime="20200709 01:15:08.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:08.754" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:08.753" endtime="20200709 01:15:08.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:08.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:08.754" endtime="20200709 01:15:08.754"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:04.226" endtime="20200709 01:15:08.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:08.757" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:08.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:08.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:08.755" endtime="20200709 01:15:08.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:08.760" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:08.760" endtime="20200709 01:15:08.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:08.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:08.760" endtime="20200709 01:15:08.761"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:08.754" endtime="20200709 01:15:08.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:08.763" level="INFO">Running command 'ozone sh key get o3:///31822-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:12.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:12.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:08.761" endtime="20200709 01:15:12.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:12.372" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:12.371" endtime="20200709 01:15:12.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:12.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:12.372" endtime="20200709 01:15:12.373"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:08.761" endtime="20200709 01:15:12.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:12.375" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:12.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:12.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:12.373" endtime="20200709 01:15:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:12.378" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:12.378" endtime="20200709 01:15:12.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:12.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:12.378" endtime="20200709 01:15:12.379"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:12.373" endtime="20200709 01:15:12.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:12.381" level="INFO">Running command 'ozone sh key delete o3:///31822-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:14.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:14.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:12.380" endtime="20200709 01:15:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:14.501" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:14.501" endtime="20200709 01:15:14.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:14.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:14.501" endtime="20200709 01:15:14.502"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:12.379" endtime="20200709 01:15:14.502"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:14.506" level="INFO">Running command 'ozone sh key get o3:///31822-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:17.026" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:15:17.026" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:15:14.503" endtime="20200709 01:15:17.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:17.027" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:15:17.027" endtime="20200709 01:15:17.027"></status>
</kw>
<msg timestamp="20200709 01:15:17.028" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:15:14.502" endtime="20200709 01:15:17.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:17.028" endtime="20200709 01:15:17.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:17.031" level="INFO">Running command 'ozone sh key get --force o3:///31822-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:20.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:20.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:17.029" endtime="20200709 01:15:20.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:20.787" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:20.786" endtime="20200709 01:15:20.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:20.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:20.787" endtime="20200709 01:15:20.787"></status>
</kw>
<msg timestamp="20200709 01:15:20.787" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:15:17.028" endtime="20200709 01:15:20.787"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:20.787" endtime="20200709 01:15:20.788"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:20.790" level="INFO">Running command 'ozone sh key info o3:///31822-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:23.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:23.123" level="INFO">${output} = {
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:46.724Z",
  "modificationTime": "2020-07-09T01:14:47.997Z",
  "rep...</msg>
<status status="PASS" starttime="20200709 01:15:20.788" endtime="20200709 01:15:23.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:23.124" level="INFO">{
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:46.724Z",
  "modificationTime": "2020-07-09T01:14:47.997Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481245542678660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:15:23.124" endtime="20200709 01:15:23.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:23.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:23.124" endtime="20200709 01:15:23.125"></status>
</kw>
<msg timestamp="20200709 01:15:23.125" level="INFO">${result} = {
  "volumeName": "31822-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:14:46.724Z",
  "modificationTime": "2020-07-09T01:14:47.997Z",
  "rep...</msg>
<status status="PASS" starttime="20200709 01:15:20.788" endtime="20200709 01:15:23.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:23.125" endtime="20200709 01:15:23.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:23.129" level="INFO">Running command 'ozone sh key list o3:///31822-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:25.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:25.580" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 01:15:23.126" endtime="20200709 01:15:25.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:25.581" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 01:15:25.581" endtime="20200709 01:15:25.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:25.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:25.581" endtime="20200709 01:15:25.582"></status>
</kw>
<msg timestamp="20200709 01:15:25.582" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 01:15:23.125" endtime="20200709 01:15:25.582"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:25.582" endtime="20200709 01:15:25.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:25.585" level="INFO">Running command 'ozone sh key rename o3:///31822-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:27.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:27.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:25.583" endtime="20200709 01:15:27.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:27.763" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:27.762" endtime="20200709 01:15:27.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:27.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:27.763" endtime="20200709 01:15:27.763"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:25.583" endtime="20200709 01:15:27.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:27.766" level="INFO">Running command 'ozone sh key list o3:///31822-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:30.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:30.100" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 01:15:27.764" endtime="20200709 01:15:30.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:30.101" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 01:15:30.101" endtime="20200709 01:15:30.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:30.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:30.102" endtime="20200709 01:15:30.102"></status>
</kw>
<msg timestamp="20200709 01:15:30.102" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 01:15:27.764" endtime="20200709 01:15:30.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:30.102" endtime="20200709 01:15:30.103"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:30.106" level="INFO">Running command 'ozone sh key delete o3:///31822-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:32.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:32.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:30.104" endtime="20200709 01:15:32.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:32.254" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:32.253" endtime="20200709 01:15:32.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:32.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:32.254" endtime="20200709 01:15:32.255"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:30.103" endtime="20200709 01:15:32.255"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:44.599" endtime="20200709 01:15:32.255"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:44.599" endtime="20200709 01:15:32.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:32.258" level="INFO">Running command 'ozone sh bucket delete o3:///31822-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:34.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:34.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:32.256" endtime="20200709 01:15:34.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:34.410" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:34.410" endtime="20200709 01:15:34.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:34.411" endtime="20200709 01:15:34.411"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:32.255" endtime="20200709 01:15:34.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:34.415" level="INFO">Running command 'ozone sh volume delete o3:///31822-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:36.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:36.538" level="INFO">${output} = Volume 31822-rpcwport is deleted</msg>
<status status="PASS" starttime="20200709 01:15:34.412" endtime="20200709 01:15:36.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:36.539" level="INFO">Volume 31822-rpcwport is deleted</msg>
<status status="PASS" starttime="20200709 01:15:36.538" endtime="20200709 01:15:36.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:36.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:36.539" endtime="20200709 01:15:36.539"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:34.411" endtime="20200709 01:15:36.539"></status>
</kw>
<status status="PASS" starttime="20200709 01:14:24.427" endtime="20200709 01:15:36.539"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:14:24.427" endtime="20200709 01:15:36.540" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:36.541" endtime="20200709 01:15:36.541"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:36.545" level="INFO">Running command 'ozone sh volume info /31822-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:38.618" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:15:38.618" level="INFO">${output} = VOLUME_NOT_FOUND Volume 31822-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 01:15:36.542" endtime="20200709 01:15:38.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:38.619" level="INFO">VOLUME_NOT_FOUND Volume 31822-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 01:15:38.618" endtime="20200709 01:15:38.619"></status>
</kw>
<msg timestamp="20200709 01:15:38.619" level="INFO">${result} = VOLUME_NOT_FOUND Volume 31822-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 01:15:36.542" endtime="20200709 01:15:38.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:38.619" endtime="20200709 01:15:38.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:38.625" level="INFO">Running command 'ozone sh volume create /31822-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:40.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:40.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:38.620" endtime="20200709 01:15:40.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:40.777" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:40.776" endtime="20200709 01:15:40.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:40.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:40.777" endtime="20200709 01:15:40.778"></status>
</kw>
<msg timestamp="20200709 01:15:40.778" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:15:38.620" endtime="20200709 01:15:40.778"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:40.778" endtime="20200709 01:15:40.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:40.781" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="31822-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:43.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:43.054" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 01:15:40.779" endtime="20200709 01:15:43.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:43.056" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:15:43.054" endtime="20200709 01:15:43.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:43.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:43.056" endtime="20200709 01:15:43.056"></status>
</kw>
<msg timestamp="20200709 01:15:43.057" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 01:15:40.778" endtime="20200709 01:15:43.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:43.057" endtime="20200709 01:15:43.057"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:43.060" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="31822-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:45.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:45.341" level="INFO">${output} = {
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 01:15:43.058" endtime="20200709 01:15:45.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:45.342" level="INFO">{
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 01:15:45.341" endtime="20200709 01:15:45.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:45.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:45.342" endtime="20200709 01:15:45.343"></status>
</kw>
<msg timestamp="20200709 01:15:45.343" level="INFO">${result} = {
  "metadata": {},
  "name": "31822-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T01:15:40.588Z",
  "modificationTime": "2020-07-09T01:15:40.588Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 01:15:43.057" endtime="20200709 01:15:45.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:45.343" endtime="20200709 01:15:45.343"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:45.347" level="INFO">Running command 'ozone sh volume update /31822-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:47.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:47.610" level="INFO">${output} = {
  "metadata" : { },
  "name" : "31822-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:15:40.588Z",
  "modificationTime" : "2020-07-09T01:15:47.310Z",
  "a...</msg>
<status status="PASS" starttime="20200709 01:15:45.344" endtime="20200709 01:15:47.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:47.612" level="INFO">{
  "metadata" : { },
  "name" : "31822-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T01:15:40.588Z",
  "modificationTime" : "2020-07-09T01:15:47.310Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 01:15:47.611" endtime="20200709 01:15:47.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:47.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:47.612" endtime="20200709 01:15:47.612"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:45.343" endtime="20200709 01:15:47.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:47.615" level="INFO">Running command 'ozone sh volume info /31822-rpcwoscheme | jq -r '. | select(.name=="31822-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:49.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:49.793" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:15:47.613" endtime="20200709 01:15:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:49.793" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 01:15:49.793" endtime="20200709 01:15:49.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:49.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:49.794" endtime="20200709 01:15:49.794"></status>
</kw>
<msg timestamp="20200709 01:15:49.794" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 01:15:47.613" endtime="20200709 01:15:49.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:49.794" endtime="20200709 01:15:49.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:49.797" level="INFO">Running command 'ozone sh bucket create /31822-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:51.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:51.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:49.795" endtime="20200709 01:15:51.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:51.710" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:15:51.709" endtime="20200709 01:15:51.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:51.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:51.710" endtime="20200709 01:15:51.711"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:49.795" endtime="20200709 01:15:51.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:51.713" level="INFO">Running command 'ozone sh bucket info /31822-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:54.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:54.101" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 01:15:51.711" endtime="20200709 01:15:54.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:54.102" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 01:15:54.102" endtime="20200709 01:15:54.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:54.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:54.103" endtime="20200709 01:15:54.103"></status>
</kw>
<msg timestamp="20200709 01:15:54.103" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 01:15:51.711" endtime="20200709 01:15:54.103"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:54.103" endtime="20200709 01:15:54.104"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:54.107" level="INFO">Running command 'ozone sh bucket list /31822-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:15:56.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:15:56.347" level="INFO">${output} = 31822-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 01:15:54.104" endtime="20200709 01:15:56.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:15:56.348" level="INFO">31822-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 01:15:56.347" endtime="20200709 01:15:56.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:15:56.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:15:56.348" endtime="20200709 01:15:56.348"></status>
</kw>
<msg timestamp="20200709 01:15:56.348" level="INFO">${result} = 31822-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 01:15:54.104" endtime="20200709 01:15:56.348"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 01:15:56.349" endtime="20200709 01:15:56.349"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:15:56.353" level="INFO">Running command 'ozone sh key put /31822-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:00.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:00.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:15:56.350" endtime="20200709 01:16:00.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:00.320" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:00.319" endtime="20200709 01:16:00.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:00.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:00.320" endtime="20200709 01:16:00.321"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:56.350" endtime="20200709 01:16:00.321"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:00.323" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:00.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:00.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:00.321" endtime="20200709 01:16:00.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:00.327" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:00.326" endtime="20200709 01:16:00.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:00.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:00.327" endtime="20200709 01:16:00.327"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:00.321" endtime="20200709 01:16:00.328"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:00.330" level="INFO">Running command 'ozone sh key get /31822-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:04.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:04.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:00.328" endtime="20200709 01:16:04.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:04.015" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:04.014" endtime="20200709 01:16:04.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:04.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:04.015" endtime="20200709 01:16:04.015"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:00.328" endtime="20200709 01:16:04.016"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:04.018" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:04.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:04.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:04.016" endtime="20200709 01:16:04.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:04.021" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:04.020" endtime="20200709 01:16:04.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:04.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:04.021" endtime="20200709 01:16:04.021"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:04.016" endtime="20200709 01:16:04.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:04.023" level="INFO">Running command 'ozone sh key put -t RATIS /31822-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:08.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:08.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:04.022" endtime="20200709 01:16:08.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:08.066" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:08.065" endtime="20200709 01:16:08.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:08.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:08.066" endtime="20200709 01:16:08.066"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:04.021" endtime="20200709 01:16:08.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:08.069" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:08.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:08.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:08.067" endtime="20200709 01:16:08.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:08.071" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:08.071" endtime="20200709 01:16:08.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:08.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:08.071" endtime="20200709 01:16:08.072"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:08.067" endtime="20200709 01:16:08.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:08.074" level="INFO">Running command 'ozone sh key get /31822-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:11.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:11.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:08.072" endtime="20200709 01:16:11.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:11.587" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:11.586" endtime="20200709 01:16:11.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:11.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:11.587" endtime="20200709 01:16:11.587"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:08.072" endtime="20200709 01:16:11.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:11.590" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:11.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:11.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:11.588" endtime="20200709 01:16:11.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:11.593" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:11.593" endtime="20200709 01:16:11.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:11.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:11.593" endtime="20200709 01:16:11.594"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:11.588" endtime="20200709 01:16:11.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:11.596" level="INFO">Running command 'ozone sh key info /31822-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:13.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:13.882" level="INFO">${output} = {
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:16:06.145Z",
  "modificationTime": "2020-07-09T01:16:07.638Z...</msg>
<status status="PASS" starttime="20200709 01:16:11.595" endtime="20200709 01:16:13.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:13.883" level="INFO">{
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:16:06.145Z",
  "modificationTime": "2020-07-09T01:16:07.638Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481250747613310,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:16:13.883" endtime="20200709 01:16:13.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:13.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:13.884" endtime="20200709 01:16:13.884"></status>
</kw>
<msg timestamp="20200709 01:16:13.884" level="INFO">${result} = {
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:16:06.145Z",
  "modificationTime": "2020-07-09T01:16:07.638Z...</msg>
<status status="PASS" starttime="20200709 01:16:11.594" endtime="20200709 01:16:13.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:13.884" endtime="20200709 01:16:13.885"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:13.888" level="INFO">Running command 'ozone sh key delete /31822-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:15.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:15.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:13.885" endtime="20200709 01:16:15.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:15.951" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:15.951" endtime="20200709 01:16:15.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:15.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:15.951" endtime="20200709 01:16:15.952"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:13.885" endtime="20200709 01:16:15.952"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:15.954" level="INFO">Running command 'ozone sh key cp /31822-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:20.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:20.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:15.952" endtime="20200709 01:16:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:20.060" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:20.059" endtime="20200709 01:16:20.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:20.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:20.060" endtime="20200709 01:16:20.061"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:15.952" endtime="20200709 01:16:20.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:20.064" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:20.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:20.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:20.062" endtime="20200709 01:16:20.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:20.067" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:20.066" endtime="20200709 01:16:20.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:20.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:20.067" endtime="20200709 01:16:20.068"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:20.061" endtime="20200709 01:16:20.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:20.071" level="INFO">Running command 'ozone sh key get /31822-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:23.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:23.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:20.069" endtime="20200709 01:16:23.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:23.795" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:23.794" endtime="20200709 01:16:23.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:23.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:23.795" endtime="20200709 01:16:23.795"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:20.069" endtime="20200709 01:16:23.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:23.799" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:23.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:23.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:23.796" endtime="20200709 01:16:23.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:23.802" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:23.801" endtime="20200709 01:16:23.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:23.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:23.802" endtime="20200709 01:16:23.803"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:23.796" endtime="20200709 01:16:23.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:23.805" level="INFO">Running command 'ozone sh key delete /31822-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:25.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:25.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:23.803" endtime="20200709 01:16:25.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:25.951" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:25.950" endtime="20200709 01:16:25.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:25.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:25.951" endtime="20200709 01:16:25.951"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:23.803" endtime="20200709 01:16:25.951"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:25.954" level="INFO">Running command 'ozone sh key get /31822-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:28.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 01:16:28.060" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:16:25.952" endtime="20200709 01:16:28.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:28.061" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:16:28.060" endtime="20200709 01:16:28.061"></status>
</kw>
<msg timestamp="20200709 01:16:28.061" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 01:16:25.951" endtime="20200709 01:16:28.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:28.061" endtime="20200709 01:16:28.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:28.064" level="INFO">Running command 'ozone sh key get --force /31822-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:31.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:31.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:28.062" endtime="20200709 01:16:31.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:31.765" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:31.764" endtime="20200709 01:16:31.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:31.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:31.765" endtime="20200709 01:16:31.766"></status>
</kw>
<msg timestamp="20200709 01:16:31.766" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 01:16:28.061" endtime="20200709 01:16:31.766"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:31.766" endtime="20200709 01:16:31.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:31.769" level="INFO">Running command 'ozone sh key info /31822-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:34.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:34.183" level="INFO">${output} = {
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:15:58.473Z",
  "modificationTime": "2020-07-09T01:15:59.822Z",
  "...</msg>
<status status="PASS" starttime="20200709 01:16:31.767" endtime="20200709 01:16:34.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:34.184" level="INFO">{
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:15:58.473Z",
  "modificationTime": "2020-07-09T01:15:59.822Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104481250244886660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 01:16:34.184" endtime="20200709 01:16:34.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:34.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:34.185" endtime="20200709 01:16:34.185"></status>
</kw>
<msg timestamp="20200709 01:16:34.185" level="INFO">${result} = {
  "volumeName": "31822-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T01:15:58.473Z",
  "modificationTime": "2020-07-09T01:15:59.822Z",
  "...</msg>
<status status="PASS" starttime="20200709 01:16:31.767" endtime="20200709 01:16:34.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:34.185" endtime="20200709 01:16:34.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:34.188" level="INFO">Running command 'ozone sh key list /31822-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:36.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:36.482" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 01:16:34.186" endtime="20200709 01:16:36.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:36.483" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 01:16:36.482" endtime="20200709 01:16:36.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:36.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:36.483" endtime="20200709 01:16:36.483"></status>
</kw>
<msg timestamp="20200709 01:16:36.483" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 01:16:34.186" endtime="20200709 01:16:36.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:36.483" endtime="20200709 01:16:36.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:36.487" level="INFO">Running command 'ozone sh key rename /31822-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:38.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:38.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:36.484" endtime="20200709 01:16:38.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:38.703" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:38.703" endtime="20200709 01:16:38.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:38.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:38.704" endtime="20200709 01:16:38.704"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:36.484" endtime="20200709 01:16:38.704"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:38.707" level="INFO">Running command 'ozone sh key list /31822-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:41.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:41.068" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 01:16:38.705" endtime="20200709 01:16:41.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:41.069" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 01:16:41.068" endtime="20200709 01:16:41.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:41.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:41.069" endtime="20200709 01:16:41.069"></status>
</kw>
<msg timestamp="20200709 01:16:41.070" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 01:16:38.704" endtime="20200709 01:16:41.070"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 01:16:41.070" endtime="20200709 01:16:41.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:41.072" level="INFO">Running command 'ozone sh key delete /31822-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:43.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:43.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:41.070" endtime="20200709 01:16:43.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:43.455" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:43.454" endtime="20200709 01:16:43.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:43.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:43.455" endtime="20200709 01:16:43.456"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:41.070" endtime="20200709 01:16:43.456"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:56.349" endtime="20200709 01:16:43.456"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:56.349" endtime="20200709 01:16:43.456"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:43.458" level="INFO">Running command 'ozone sh bucket delete /31822-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:45.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:45.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:16:43.457" endtime="20200709 01:16:45.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:45.401" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:16:45.400" endtime="20200709 01:16:45.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:45.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:45.401" endtime="20200709 01:16:45.401"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:43.456" endtime="20200709 01:16:45.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:16:45.404" level="INFO">Running command 'ozone sh volume delete /31822-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:16:47.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:16:47.435" level="INFO">${output} = Volume 31822-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200709 01:16:45.402" endtime="20200709 01:16:47.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:16:47.436" level="INFO">Volume 31822-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200709 01:16:47.435" endtime="20200709 01:16:47.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:16:47.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:16:47.436" endtime="20200709 01:16:47.436"></status>
</kw>
<status status="PASS" starttime="20200709 01:16:45.401" endtime="20200709 01:16:47.436"></status>
</kw>
<status status="PASS" starttime="20200709 01:15:36.541" endtime="20200709 01:16:47.437"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 01:15:36.540" endtime="20200709 01:16:47.437" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200709 01:12:15.997" endtime="20200709 01:16:47.438"></status>
</suite>
<status status="PASS" starttime="20200709 01:11:17.969" endtime="20200709 01:16:47.442"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
