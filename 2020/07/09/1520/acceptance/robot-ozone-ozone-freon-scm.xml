<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 01:26:12.001" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:26:12.042" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:26:19.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:26:19.901" level="INFO">${output} = 2020-07-09 01:26:13,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:13,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:12.038" endtime="20200709 01:26:19.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:26:19.902" level="INFO">2020-07-09 01:26:13,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:13,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:26:13,436 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:26:14,403 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 01:26:14,404 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 01:26:14,404 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 01:26:14,404 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-09 01:26:14,404 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 01:26:14,404 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 01:26:14,405 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 01:26:14,410 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 01:26:14,418 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:14,457 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-76123, with hadoop as owner.
2020-07-09 01:26:14,499 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-76123/bucket-0-40578, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:26:14,893 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:26:15,419 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,074
Average Time spent in bucket creation: 00:00:00,012
Average Time spent in key creation: 00:00:00,060
Average Time spent in key write: 00:00:00,479
Total bytes written: 10240
Total Execution time: 00:00:05,943
***************************************************</msg>
<status status="PASS" starttime="20200709 01:26:19.902" endtime="20200709 01:26:19.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:26:19.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:26:19.903" endtime="20200709 01:26:19.903"></status>
</kw>
<msg timestamp="20200709 01:26:19.903" level="INFO">${result} = 2020-07-09 01:26:13,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:13,436 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:12.037" endtime="20200709 01:26:19.903"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:26:19.904" endtime="20200709 01:26:19.904"></status>
</kw>
<status status="PASS" starttime="20200709 01:26:19.903" endtime="20200709 01:26:19.904"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:26:12.037" endtime="20200709 01:26:19.904" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:26:19.908" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:26:24.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:26:24.920" level="INFO">${output} = 2020-07-09 01:26:21,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:21,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:19.906" endtime="20200709 01:26:24.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:26:24.921" level="INFO">2020-07-09 01:26:21,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:21,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:26:21,208 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:26:21,409 [main] INFO freon.BaseFreonGenerator: Executing test with prefix t2forr3e40
2020-07-09 01:26:21,424 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:22,255 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-09 01:26:22,301 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:26:22,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:22,820 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:26:23,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:24,437 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:26:24,568 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1269.488618, max=1269.488618, mean=1269.488618, stddev=0.0, median=1269.488618, p75=1269.488618, p95=1269.488618, p98=1269.488618, p99=1269.488618, p999=1269.488618, mean_rate=0.44589807693148725, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:26:24,568 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-09 01:26:24,589 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:26:24,589 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:26:24.920" endtime="20200709 01:26:24.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:26:24.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:26:24.922" endtime="20200709 01:26:24.922"></status>
</kw>
<msg timestamp="20200709 01:26:24.922" level="INFO">${result} = 2020-07-09 01:26:21,017 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:21,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:19.905" endtime="20200709 01:26:24.922"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:26:24.923" endtime="20200709 01:26:24.923"></status>
</kw>
<status status="PASS" starttime="20200709 01:26:24.922" endtime="20200709 01:26:24.923"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:26:19.905" endtime="20200709 01:26:24.923" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:26:24.927" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:26:28.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:26:28.293" level="INFO">${output} = 2020-07-09 01:26:25,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:26,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:24.925" endtime="20200709 01:26:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:26:28.294" level="INFO">2020-07-09 01:26:25,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:26,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:26:26,155 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:26:26,291 [main] INFO freon.BaseFreonGenerator: Executing test with prefix getdyltx78
2020-07-09 01:26:26,311 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:27,313 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:26:28,241 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=101.744849, max=101.744849, mean=101.744849, stddev=0.0, median=101.744849, p75=101.744849, p95=101.744849, p98=101.744849, p99=101.744849, p999=101.744849, mean_rate=0.8906396933561737, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:26:28,254 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 01:26:28,254 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:26:28,254 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:26:28.293" endtime="20200709 01:26:28.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:26:28.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:26:28.294" endtime="20200709 01:26:28.295"></status>
</kw>
<msg timestamp="20200709 01:26:28.295" level="INFO">${result} = 2020-07-09 01:26:25,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:26,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:24.925" endtime="20200709 01:26:28.295"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:26:28.296" endtime="20200709 01:26:28.296"></status>
</kw>
<status status="PASS" starttime="20200709 01:26:28.295" endtime="20200709 01:26:28.296"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:26:24.924" endtime="20200709 01:26:28.296" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:26:28.301" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:26:31.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:26:31.843" level="INFO">${output} = 2020-07-09 01:26:29,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:29,724 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:28.298" endtime="20200709 01:26:31.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:26:31.844" level="INFO">2020-07-09 01:26:29,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:29,724 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:26:29,724 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:26:29,867 [main] INFO freon.BaseFreonGenerator: Executing test with prefix k3nwm8d0x8
2020-07-09 01:26:29,885 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:26:30,890 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:26:31,818 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=22.836499, max=22.836499, mean=22.836499, stddev=0.0, median=22.836499, p75=22.836499, p95=22.836499, p98=22.836499, p99=22.836499, p999=22.836499, mean_rate=0.8830908620303548, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:26:31,819 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 01:26:31,820 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:26:31,820 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:26:31.843" endtime="20200709 01:26:31.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:26:31.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:26:31.844" endtime="20200709 01:26:31.845"></status>
</kw>
<msg timestamp="20200709 01:26:31.845" level="INFO">${result} = 2020-07-09 01:26:29,522 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:26:29,724 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:26:28.297" endtime="20200709 01:26:31.845"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:26:31.845" endtime="20200709 01:26:31.845"></status>
</kw>
<status status="PASS" starttime="20200709 01:26:31.845" endtime="20200709 01:26:31.845"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:26:28.297" endtime="20200709 01:26:31.846" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 01:26:12.021" endtime="20200709 01:26:31.847"></status>
</suite>
<status status="PASS" starttime="20200709 01:26:12.002" endtime="20200709 01:26:31.849"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
