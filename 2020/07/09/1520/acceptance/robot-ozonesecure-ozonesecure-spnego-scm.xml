<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 01:54:44.682" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:44.733" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:44.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:44.735" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:44.729" endtime="20200709 01:54:44.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:44.736" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:44.735" endtime="20200709 01:54:44.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:44.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:44.736" endtime="20200709 01:54:44.737"></status>
</kw>
<msg timestamp="20200709 01:54:44.737" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:44.729" endtime="20200709 01:54:44.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:44.738" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:44.737" endtime="20200709 01:54:44.738"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:44.741" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:44.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:44.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:44.739" endtime="20200709 01:54:44.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:44.753" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:44.752" endtime="20200709 01:54:44.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:44.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:44.753" endtime="20200709 01:54:44.754"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:44.739" endtime="20200709 01:54:44.754"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:44.738" endtime="20200709 01:54:44.754"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:44.729" endtime="20200709 01:54:44.754"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:44.728" endtime="20200709 01:54:44.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:44.756" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.882" level="INFO">${output} = 2020-07-09 01:54:45,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:54:46,000 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:54:44.755" endtime="20200709 01:54:52.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.883" level="INFO">2020-07-09 01:54:45,801 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:54:46,000 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:54:46,000 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-09 01:54:47,368 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 01:54:47,369 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 01:54:47,382 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 01:54:47,389 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-09 01:54:47,419 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27899, with testuser/scm@EXAMPLE.COM as owner.
2020-07-09 01:54:47,450 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-27899/bucket-0-95976, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:54:47,826 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:54:48,394 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,021
Average Time spent in key write: 00:00:00,065
Total bytes written: 2050
Total Execution time: 00:00:06,341
***************************************************</msg>
<status status="PASS" starttime="20200709 01:54:52.883" endtime="20200709 01:54:52.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.884" endtime="20200709 01:54:52.884"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:44.754" endtime="20200709 01:54:52.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:44.727" endtime="20200709 01:54:52.884" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.889" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:52.886" endtime="20200709 01:54:52.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.893" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:52.892" endtime="20200709 01:54:52.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.893" endtime="20200709 01:54:52.893"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.886" endtime="20200709 01:54:52.893"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.886" endtime="20200709 01:54:52.894"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.895" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.915" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 01:54:52.894" endtime="20200709 01:54:52.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.916" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 01:54:52.915" endtime="20200709 01:54:52.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.916" endtime="20200709 01:54:52.917"></status>
</kw>
<msg timestamp="20200709 01:54:52.917" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 01:54:52.894" endtime="20200709 01:54:52.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:52.917" endtime="20200709 01:54:52.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.920" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.922" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:52.918" endtime="20200709 01:54:52.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.923" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:52.923" endtime="20200709 01:54:52.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.923" endtime="20200709 01:54:52.924"></status>
</kw>
<msg timestamp="20200709 01:54:52.924" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:52.918" endtime="20200709 01:54:52.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:52.925" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:52.924" endtime="20200709 01:54:52.925"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.928" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:52.926" endtime="20200709 01:54:52.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.944" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:52.943" endtime="20200709 01:54:52.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.944" endtime="20200709 01:54:52.944"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.925" endtime="20200709 01:54:52.945"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.925" endtime="20200709 01:54:52.945"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.918" endtime="20200709 01:54:52.945"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.917" endtime="20200709 01:54:52.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.948" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.970" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 01:54:52.945" endtime="20200709 01:54:52.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.971" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x1584f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQb8QemaRaZ4SF6OmqRkumrhYcav6WQuExC6jtnSMDeuTSyAikQIY/zf0HRBbYRnfXcf8TU8dAX0Fgn8zxYK6x/7ez/1y1D1SS7bR347PP4ZvzzOCkDZjrwhRgBYyEV2Z7hAWrUQJMCoLf40ZIDBsVjkP0VMSKYvlmunBlk+ERN6sYYNk6gpBmRUwZ6EikmwssmEw2q78aMkMb05MGXfTAvneTokFPbfyg3zT8S7hEWCM4yK5qSHRZGoAojjxkXFzjRQKRItFRxDGzax4YVsKjxNAzULATC+uCptpmHLqXKkJ9cQ9+dSgJpOrmwumID79ydFY0VR9MUWS1Avqx5InNHd790dIG+ypIHWMIHToAMCARKigcsEgcgGbyAAhr92fGq6ErkwNjE3xF2nMOVQfNx3zeAlB7pbRGWnna2CV1giWeS9TQc4O8sf/Bo25/bEgfDKWqpMAX6rVKkwKeDOHSoZmvt4sqasezX0nEQQbG1zO/yQffg9p+dw50iGySm2tGthvvbEpiceMz231CuEBLqpnwyNFN0gmLtaPXRQktgQVcSjj063L7yvxsL4CAEJkRrTk33xxOOel42yTJWVVT/90n7gAuHIfRPG6XF13tX6QbSSOvXNcmEGgAUIZjGfgA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:52 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:52 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:52 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 01:54:52 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:52 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCZIAr7HFGEv1ylRMvyfE7/4iBxGfuo8/P0eHx+ZmCq6J8MMi9iDhaN7is2y50KFaDHit4Yex3OgkuOFpva3WoFJcJ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295692965&amp;s=PYPoD2FQQpFfjZib9GWegjoMT5+bCzdagEVlJpfxVvs="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 00:44:32 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:54:52 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 01:54:52 GMT
Date: Thu, 09 Jul 2020 01:54:52 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 01:54:52 GMT
Date: Thu, 09 Jul 2020 01:54:52 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCZIAr7HFGEv1ylRMvyfE7/4iBxGfuo8/P0eHx+ZmCq6J8MMi9iDhaN7is2y50KFaDHit4Yex3OgkuOFpva3WoFJcJ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295692965&amp;s=PYPoD2FQQpFfjZib9GWegjoMT5+bCzdagEVlJpfxVvs="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 00:44:32 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200709 01:54:52.970" endtime="20200709 01:54:52.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.971" endtime="20200709 01:54:52.971"></status>
</kw>
<msg timestamp="20200709 01:54:52.972" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 01:54:52.945" endtime="20200709 01:54:52.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:52.972" endtime="20200709 01:54:52.972"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.885" endtime="20200709 01:54:52.972"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:52.885" endtime="20200709 01:54:52.972" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.977" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:52.974" endtime="20200709 01:54:52.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.980" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:52.980" endtime="20200709 01:54:52.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.980" endtime="20200709 01:54:52.981"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.974" endtime="20200709 01:54:52.981"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.974" endtime="20200709 01:54:52.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:52.985" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:52.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:52.998" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 01:54:52.982" endtime="20200709 01:54:52.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:52.998" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200709 01:54:52.998" endtime="20200709 01:54:52.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:52.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:52.999" endtime="20200709 01:54:52.999"></status>
</kw>
<msg timestamp="20200709 01:54:52.999" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 01:54:52.981" endtime="20200709 01:54:53.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.000" endtime="20200709 01:54:53.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.004" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.005" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.001" endtime="20200709 01:54:53.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.006" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:53.005" endtime="20200709 01:54:53.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.006" endtime="20200709 01:54:53.006"></status>
</kw>
<msg timestamp="20200709 01:54:53.007" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.001" endtime="20200709 01:54:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:53.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:53.007" endtime="20200709 01:54:53.007"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.011" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.008" endtime="20200709 01:54:53.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.021" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.020" endtime="20200709 01:54:53.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.021" endtime="20200709 01:54:53.022"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.008" endtime="20200709 01:54:53.022"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.007" endtime="20200709 01:54:53.022"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.001" endtime="20200709 01:54:53.022"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.000" endtime="20200709 01:54:53.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.024" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.081" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.023" endtime="20200709 01:54:53.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.082" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x18a9f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYxCJobH4wPDQ6NYVUMxAzCY3x81igNBKUXjGcBTEJUfyDrpCurnzEfZY56UoNcC/Gq1nzAuIagXUGuw3etmS9ywT7V5dwb5RDAinAQUdP9H02lx+DN7ruI2BDjl9OSJd3AKbzJW9qAZf/gV8GzDgfKQfksWm0wSCwhq9IeQhws7L0gvGPqYenSO2ZrSGcKMpmHFWO0zxZ96IAlZcgMeSVxmm3qWEcIA4e2aEXnc1v1LgOD8VUjGaY5UOXaI0vbZ+d4+EgqhDOuBs6rmkRCSrYjuYgNfjen7myds/s/h5zzSrSDxige2bbbOhMG5LojOX1dT6Bc81ny1uSyGy2bSwYBrDWT4CBRpIHWMIHToAMCARKigcsEgcjyflu4dDnLJBuHe5yFHQpX2OjdqtCHv5DVUt935CMn2vtgaMZZRlY3eVT126UZkWfYWUoX+5aieHEYeCUFcaDoCEw0n8ygQOPNXL9hYr7OB7bM2HeXbM/vuB3DdUUio3Y+ammR+F1Ys8vs6J4IKSdUUTubAGed6dwYozoiX1uamb5DkE1hpWfSvO+JbIdt6uVqqIwr2xLCTelr2QK8Qs0VnUR5U9932j1QPuwTNbxAcrk/g4JnpOZJLqgJtxMQuNIj3lKPifJo/A==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWprqB+ZVwkp6Mk3pioUZSZZ4qia/3q3GcMFonLuIGhZcTry/Xg80ZA2l923o2MYBQ4Dv7vWkeiLiGlczsJBmQGSS
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693042&amp;s=Q9jDYb5lOONWOQ2abEm7U+AsWFYcT/oESy5KSU16tPY="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594259693042.tgz"
&lt; Content-Length: 75357
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:54:53 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWprqB+ZVwkp6Mk3pioUZSZZ4qia/3q3GcMFonLuIGhZcTry/Xg80ZA2l923o2MYBQ4Dv7vWkeiLiGlczsJBmQGSS
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693042&amp;s=Q9jDYb5lOONWOQ2abEm7U+AsWFYcT/oESy5KSU16tPY="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594259693042.tgz"
Content-Length: 75357
</msg>
<status status="PASS" starttime="20200709 01:54:53.081" endtime="20200709 01:54:53.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.082" endtime="20200709 01:54:53.083"></status>
</kw>
<msg timestamp="20200709 01:54:53.083" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.022" endtime="20200709 01:54:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.083" endtime="20200709 01:54:53.083"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:52.973" endtime="20200709 01:54:53.083"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:52.973" endtime="20200709 01:54:53.084" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.089" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.086" endtime="20200709 01:54:53.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.092" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.091" endtime="20200709 01:54:53.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.092" endtime="20200709 01:54:53.093"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.086" endtime="20200709 01:54:53.093"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.085" endtime="20200709 01:54:53.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.096" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.109" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 01:54:53.094" endtime="20200709 01:54:53.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.110" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200709 01:54:53.110" endtime="20200709 01:54:53.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.110" endtime="20200709 01:54:53.111"></status>
</kw>
<msg timestamp="20200709 01:54:53.111" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 01:54:53.093" endtime="20200709 01:54:53.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.111" endtime="20200709 01:54:53.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.115" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.116" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.112" endtime="20200709 01:54:53.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.117" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:53.116" endtime="20200709 01:54:53.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.117" endtime="20200709 01:54:53.117"></status>
</kw>
<msg timestamp="20200709 01:54:53.118" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.112" endtime="20200709 01:54:53.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:53.118" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:53.118" endtime="20200709 01:54:53.118"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.120" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.119" endtime="20200709 01:54:53.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.138" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.138" endtime="20200709 01:54:53.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.138" endtime="20200709 01:54:53.139"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.118" endtime="20200709 01:54:53.139"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.118" endtime="20200709 01:54:53.139"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.112" endtime="20200709 01:54:53.139"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.111" endtime="20200709 01:54:53.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.141" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.170" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 01:54:53.139" endtime="20200709 01:54:53.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.171" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xe5ff50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.6) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaVQj0Moydd0lYZj3t+cNCKN05QY25qj/KEwmPtG4qdFEm2fIVOidcs2D7tlCLDTdYomnNDpzThJ8rAAE7nvcw83uoXJ6oQDNYMDilKY9t85Ts3/bjr4OjGeDit5TIIJ3uVgTA+Z6LzRyBKppa/0mlVFzDwJmlrb0MYP7Dg9qN8cR1zcoztmpjut4jaO+kPVh9mBvy5a6I0yLJXi+BxKSu0Y+C3ZL1kdYfyYhn2T2ZAHZ55U1dSQy5OJoZQvxpvBN0sIXVDOhdPLjGB8aJT2cZWGcW0spOHb/iGgok7x/+hYKJnNm/Y9A4JFVNtAFmXdb4F9x7gZFM/WZ02RYHsZF/s9AabCJLqpIHWMIHToAMCARKigcsEgch1GcY2yj2cQiP/7PxhapIaHvWeUxvW6lDnj9qH4mW4ADNtJhQnnJkhvvi8/ArtIlZAlgf4GFRfoQz6XI3qKTw/JUfhcOVz5YN3t+uZChWZ4SNaZ34LI6x0m6GTOMQ3BCTHDaNrhDtPUIJcPu3kahryBkodjpsnykI/sStwW19adLacdKkm2u0yucDCELbZH936bxO25ZUbcfo/BZc18ujuYQGZrdt2+Xd51mTbrRpxwgUdL37aNczQo7JQQ8g8TcDQ4Z1vwPc8+Q==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWnR87FoMOJlAsHz7EjYvyXNfOq4PbjdPW7QTrtIP3k80kzumD8q5pbAun9YIEQzFUkU475fkg1IxwY9uYky/fRPm
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693160&amp;s=FZw0wdNHNd6b1tjf8nhAB2S6iawxAUVHXhOCNcJ+7wI="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:54:53 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWnR87FoMOJlAsHz7EjYvyXNfOq4PbjdPW7QTrtIP3k80kzumD8q5pbAun9YIEQzFUkU475fkg1IxwY9uYky/fRPm
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693160&amp;s=FZw0wdNHNd6b1tjf8nhAB2S6iawxAUVHXhOCNcJ+7wI="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200709 01:54:53.171" endtime="20200709 01:54:53.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.172" endtime="20200709 01:54:53.172"></status>
</kw>
<msg timestamp="20200709 01:54:53.172" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.6...
* Connected to om (172.26.0.6) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 01:54:53.139" endtime="20200709 01:54:53.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.173" endtime="20200709 01:54:53.173"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.085" endtime="20200709 01:54:53.173"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:53.084" endtime="20200709 01:54:53.173" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.176" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.174" endtime="20200709 01:54:53.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.180" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.179" endtime="20200709 01:54:53.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.180" endtime="20200709 01:54:53.180"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.174" endtime="20200709 01:54:53.180"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.174" endtime="20200709 01:54:53.180"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.183" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.211" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 01:54:53.181" endtime="20200709 01:54:53.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.212" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 01:54:53.211" endtime="20200709 01:54:53.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.212" endtime="20200709 01:54:53.212"></status>
</kw>
<msg timestamp="20200709 01:54:53.212" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 01:54:53.181" endtime="20200709 01:54:53.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.214" endtime="20200709 01:54:53.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.218" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.216" endtime="20200709 01:54:53.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.221" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:53.220" endtime="20200709 01:54:53.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.221" endtime="20200709 01:54:53.221"></status>
</kw>
<msg timestamp="20200709 01:54:53.222" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.216" endtime="20200709 01:54:53.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:53.222" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:53.222" endtime="20200709 01:54:53.222"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.224" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.223" endtime="20200709 01:54:53.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.235" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.235" endtime="20200709 01:54:53.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.235" endtime="20200709 01:54:53.236"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.222" endtime="20200709 01:54:53.236"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.222" endtime="20200709 01:54:53.236"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.215" endtime="20200709 01:54:53.236"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.215" endtime="20200709 01:54:53.236"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.238" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.262" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 01:54:53.236" endtime="20200709 01:54:53.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.263" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0xa2ef20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGAaamVGdwbT/le7dfbYc0bubFg+8ipyD99jK4jR9bXnK+RmHPKuKi1AUqlylVzhHb7afegQ652Tjjbt29PJuHC/wraqf8rRA1UaFeR944JhbVewySU/X86cKOb4568ypoKKEiIEbMIuaIn0uSD625xoYDgubHdFcgCMGZBApe03ellgn0jIZa01Y5WuzBzBNNqThqr413kLwMupWf88WJrGiwzZVF6Y4Ol/jSLHTI40nVRibIVOaOwjXb5KGRmL+ac+REl/7nSiCEhRCFACLdxN549RD4iZgWERN+Cb0ZXqmaTZ4QYcqiKpOYaQ0vOs/eq+mbBJ+UJl/f+Qw1R19IfXbdwK67B6SB1jCB06ADAgESooHLBIHIq3eq4GY5ClpGo9DEz+oKy6MNCYEn6ObgCtMAJrg6kthKawxaz1RXKKX23ToDiXMzIxEOuC22U4usgZVDRsu+hvzrWwae7c4IBAjxzzm2rf9QUXTOF22dknZBfc55xq6d9EIGQt/Sef6gbYTIu4jYy+d46xGSlQrM/PfGLhSo9da7QvbEXGaVGQhyyNJB6ahJIniHUYkAHYEH4f8Ce22Zrf+X4gAkadFjkXY0i7UnmGKRZlIDthQohV6aRvLR7TVBRuQSg26XvtQ=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0yPwoQRFsJhEKc5cJYJy4FjGo+ZkKtnPFPLgLUHmS/b5j8zFTB4EbXkRiCR5oIYyW1WcqEH0u+xlGKbAvK2TAz2U
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693259&amp;s=OxbyJiOKkIMc83WutmvOfyvUqbS9pgaMBrQsXzmCCvE="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 00:44:14 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:54:53 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0yPwoQRFsJhEKc5cJYJy4FjGo+ZkKtnPFPLgLUHmS/b5j8zFTB4EbXkRiCR5oIYyW1WcqEH0u+xlGKbAvK2TAz2U
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693259&amp;s=OxbyJiOKkIMc83WutmvOfyvUqbS9pgaMBrQsXzmCCvE="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 00:44:14 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200709 01:54:53.263" endtime="20200709 01:54:53.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.263" endtime="20200709 01:54:53.264"></status>
</kw>
<msg timestamp="20200709 01:54:53.264" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 01:54:53.236" endtime="20200709 01:54:53.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.264" endtime="20200709 01:54:53.264"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.174" endtime="20200709 01:54:53.265"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:53.173" endtime="20200709 01:54:53.265" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.270" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.267" endtime="20200709 01:54:53.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.272" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.272" endtime="20200709 01:54:53.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.272" endtime="20200709 01:54:53.273"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.267" endtime="20200709 01:54:53.273"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.266" endtime="20200709 01:54:53.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.276" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.291" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.274" endtime="20200709 01:54:53.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.292" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 01:54:53.292" endtime="20200709 01:54:53.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.292" endtime="20200709 01:54:53.293"></status>
</kw>
<msg timestamp="20200709 01:54:53.293" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.273" endtime="20200709 01:54:53.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.293" endtime="20200709 01:54:53.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.296" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.298" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.294" endtime="20200709 01:54:53.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.298" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 01:54:53.298" endtime="20200709 01:54:53.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.299" endtime="20200709 01:54:53.299"></status>
</kw>
<msg timestamp="20200709 01:54:53.299" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 01:54:53.294" endtime="20200709 01:54:53.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 01:54:53.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 01:54:53.299" endtime="20200709 01:54:53.300"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 01:54:53.300" endtime="20200709 01:54:53.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.311" level="INFO"></msg>
<status status="PASS" starttime="20200709 01:54:53.311" endtime="20200709 01:54:53.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.311" endtime="20200709 01:54:53.312"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.300" endtime="20200709 01:54:53.312"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.300" endtime="20200709 01:54:53.312"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.294" endtime="20200709 01:54:53.312"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.293" endtime="20200709 01:54:53.312"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:54:53.315" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:54:53.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:54:53.342" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.313" endtime="20200709 01:54:53.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:54:53.343" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1e0cf20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.9) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbB4+tSAoD1d2JmbGZJYUx7b12AJ/x2H998K3GnIRdpM0uT8PpmFynBu8n4IEBsVrAWS4E1s/r+zhSt88mf9v/QVvf9mOfd+o6vl+OuPRyjXhrc+jjxm+jgcUBUBGKixZ71mbJui2fsKFa4gg3k9XyNP5ukw6JkPGT3CK7Yx0e8H33hwFYroSc474ftjn/w7cuclgcHlKqhp/QIQ0wTgTwNdMVPLH1j22SBbVR0M/NFq4qvgKgBD/3HyYw7U4zqqSWw3ejSXh99gQx6B1WMnXfnBKGkpkQswooIzsZa8t+v1Xg13uaqxribgH8GMMoz0qRsn5DULgeaw3k3wjfdcDW30izK7gxwpIHWMIHToAMCARKigcsEgcjPzriDlnOTEsEVhQD2yKU0KSZRChgt+AQsO83dCZ85WWAfVhwb+23S8XmGO5teTY67SJ9DP1xN/Ht6ZOnrNVoBc6eIuBPyh5O/bDLPuL5vbD/V+dYpmSWS1dLpxPo8GrMPXeTfpU9eT8UY53RPnvSD+K5K0ChKR/9XMB8XDbEgD7UtZXqwj2/aYJXBi6Si/XghMyAmof7Y3RHY3nyIy56Cc7R9Toe5vGqTXZfHbw80vxv9trU4x/BJ0nVkrwX6MEy7X97sGWI1WQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Date: Thu, 09 Jul 2020 01:54:53 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCGJ3F+YA63MaL+8ccKO/MATV1lVPut3FNhicl2pspNfU3UMUtZtxrLwiFzN486W8UzYfzpLapoXi0Nhe3HwZNCo49
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693334&amp;s=GnJvSIsy2vBI03t5SC8BQdMNGkKsX1M4gWlfTY2AOho="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 00:48:20 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 01:54:53 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 01:54:53 GMT
Date: Thu, 09 Jul 2020 01:54:53 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCGJ3F+YA63MaL+8ccKO/MATV1lVPut3FNhicl2pspNfU3UMUtZtxrLwiFzN486W8UzYfzpLapoXi0Nhe3HwZNCo49
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594295693334&amp;s=GnJvSIsy2vBI03t5SC8BQdMNGkKsX1M4gWlfTY2AOho="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 00:48:20 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200709 01:54:53.342" endtime="20200709 01:54:53.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:54:53.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:54:53.343" endtime="20200709 01:54:53.344"></status>
</kw>
<msg timestamp="20200709 01:54:53.344" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.9...
* Connected to recon (172.26.0.9) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 01:54:53.312" endtime="20200709 01:54:53.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 01:54:53.344" endtime="20200709 01:54:53.344"></status>
</kw>
<status status="PASS" starttime="20200709 01:54:53.266" endtime="20200709 01:54:53.345"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:54:53.265" endtime="20200709 01:54:53.345" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200709 01:54:44.704" endtime="20200709 01:54:53.346"></status>
</suite>
<status status="PASS" starttime="20200709 01:54:44.683" endtime="20200709 01:54:53.349"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
