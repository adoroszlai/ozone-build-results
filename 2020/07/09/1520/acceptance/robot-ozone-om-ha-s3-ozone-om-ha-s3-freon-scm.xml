<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 01:03:59.343" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:03:59.391" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:04:07.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:04:07.573" level="INFO">${output} = 2020-07-09 01:04:00,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:01,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:03:59.386" endtime="20200709 01:04:07.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:04:07.574" level="INFO">2020-07-09 01:04:00,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:01,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:04:01,004 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:04:02,101 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 01:04:02,102 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 01:04:02,105 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 01:04:02,111 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:02,168 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-22029, with hadoop as owner.
2020-07-09 01:04:02,217 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-22029/bucket-0-88026, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:04:02,767 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:04:03,113 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,095
Average Time spent in bucket creation: 00:00:00,027
Average Time spent in key creation: 00:00:00,079
Average Time spent in key write: 00:00:00,645
Total bytes written: 10240
Total Execution time: 00:00:06,038
***************************************************</msg>
<status status="PASS" starttime="20200709 01:04:07.574" endtime="20200709 01:04:07.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:04:07.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:04:07.575" endtime="20200709 01:04:07.575"></status>
</kw>
<msg timestamp="20200709 01:04:07.575" level="INFO">${result} = 2020-07-09 01:04:00,771 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:01,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:03:59.385" endtime="20200709 01:04:07.575"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:04:07.576" endtime="20200709 01:04:07.577"></status>
</kw>
<status status="PASS" starttime="20200709 01:04:07.576" endtime="20200709 01:04:07.577"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:03:59.385" endtime="20200709 01:04:07.577" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:04:07.581" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:04:12.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:04:12.817" level="INFO">${output} = 2020-07-09 01:04:08,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:09,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:07.579" endtime="20200709 01:04:12.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:04:12.818" level="INFO">2020-07-09 01:04:08,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:09,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:04:09,079 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:04:09,255 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bnifque2lz
2020-07-09 01:04:09,281 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:10,240 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-09 01:04:10,287 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 01:04:10,287 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:10,906 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 01:04:11,287 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:12,288 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:04:12,462 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1374.37207, max=1374.37207, mean=1374.37207, stddev=0.0, median=1374.37207, p75=1374.37207, p95=1374.37207, p98=1374.37207, p99=1374.37207, p999=1374.37207, mean_rate=0.4693401511661179, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:04:12,463 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-09 01:04:12,465 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:04:12,465 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:04:12.817" endtime="20200709 01:04:12.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:04:12.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:04:12.818" endtime="20200709 01:04:12.819"></status>
</kw>
<msg timestamp="20200709 01:04:12.819" level="INFO">${result} = 2020-07-09 01:04:08,896 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:09,079 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:07.578" endtime="20200709 01:04:12.819"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:04:12.820" endtime="20200709 01:04:12.820"></status>
</kw>
<status status="PASS" starttime="20200709 01:04:12.819" endtime="20200709 01:04:12.820"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:04:07.578" endtime="20200709 01:04:12.821" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:04:12.825" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:04:16.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:04:16.582" level="INFO">${output} = 2020-07-09 01:04:14,069 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:14,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:12.823" endtime="20200709 01:04:16.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:04:16.583" level="INFO">2020-07-09 01:04:14,069 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:14,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:04:14,275 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:04:14,407 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5sqwev5s29
2020-07-09 01:04:14,421 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:15,424 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:16,426 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:04:16,545 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=65.326419, max=65.326419, mean=65.326419, stddev=0.0, median=65.326419, p75=65.326419, p95=65.326419, p98=65.326419, p99=65.326419, p999=65.326419, mean_rate=0.8343958314298504, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:04:16,546 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 01:04:16,557 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:04:16,557 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:04:16.582" endtime="20200709 01:04:16.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:04:16.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:04:16.583" endtime="20200709 01:04:16.584"></status>
</kw>
<msg timestamp="20200709 01:04:16.584" level="INFO">${result} = 2020-07-09 01:04:14,069 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:14,275 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:12.822" endtime="20200709 01:04:16.584"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:04:16.584" endtime="20200709 01:04:16.585"></status>
</kw>
<status status="PASS" starttime="20200709 01:04:16.584" endtime="20200709 01:04:16.585"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:04:12.821" endtime="20200709 01:04:16.585" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 01:04:16.589" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 01:04:20.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 01:04:20.104" level="INFO">${output} = 2020-07-09 01:04:17,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:17,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:16.587" endtime="20200709 01:04:20.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 01:04:20.105" level="INFO">2020-07-09 01:04:17,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:17,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 01:04:17,956 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 01:04:18,097 [main] INFO freon.BaseFreonGenerator: Executing test with prefix yte9y2eacg
2020-07-09 01:04:18,112 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 01:04:19,124 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 01:04:20,076 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.906518, max=18.906518, mean=18.906518, stddev=0.0, median=18.906518, p75=18.906518, p95=18.906518, p98=18.906518, p99=18.906518, p999=18.906518, mean_rate=0.8875395920317761, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 01:04:20,078 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 01:04:20,079 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 01:04:20,079 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 01:04:20.105" endtime="20200709 01:04:20.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 01:04:20.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 01:04:20.106" endtime="20200709 01:04:20.106"></status>
</kw>
<msg timestamp="20200709 01:04:20.106" level="INFO">${result} = 2020-07-09 01:04:17,815 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 01:04:17,956 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 01:04:16.586" endtime="20200709 01:04:20.106"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 01:04:20.107" endtime="20200709 01:04:20.107"></status>
</kw>
<status status="PASS" starttime="20200709 01:04:20.107" endtime="20200709 01:04:20.107"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 01:04:16.585" endtime="20200709 01:04:20.108" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 01:03:59.367" endtime="20200709 01:04:20.109"></status>
</suite>
<status status="PASS" starttime="20200709 01:03:59.344" endtime="20200709 01:04:20.112"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
