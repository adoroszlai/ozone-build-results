<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 13:20:53.247" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:53.300" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:21:01.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:21:01.554" level="INFO">${output} = 2020-07-09 13:20:54,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:20:54,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:20:53.294" endtime="20200709 13:21:01.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:21:01.555" level="INFO">2020-07-09 13:20:54,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:20:54,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:20:54,897 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:20:56,047 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 13:20:56,048 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 13:20:56,050 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 13:20:56,052 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:20:56,095 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-51258, with hadoop as owner.
2020-07-09 13:20:56,154 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51258/bucket-0-40870, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:20:56,702 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:20:57,061 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,069
Average Time spent in bucket creation: 00:00:00,029
Average Time spent in key creation: 00:00:00,077
Average Time spent in key write: 00:00:00,675
Total bytes written: 10240
Total Execution time: 00:00:06,059
***************************************************</msg>
<status status="PASS" starttime="20200709 13:21:01.554" endtime="20200709 13:21:01.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:21:01.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:21:01.555" endtime="20200709 13:21:01.556"></status>
</kw>
<msg timestamp="20200709 13:21:01.556" level="INFO">${result} = 2020-07-09 13:20:54,676 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:20:54,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:20:53.294" endtime="20200709 13:21:01.556"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:21:01.557" endtime="20200709 13:21:01.557"></status>
</kw>
<status status="PASS" starttime="20200709 13:21:01.556" endtime="20200709 13:21:01.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:20:53.293" endtime="20200709 13:21:01.557" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:21:01.562" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:21:06.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:21:06.803" level="INFO">${output} = 2020-07-09 13:21:02,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:03,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:01.559" endtime="20200709 13:21:06.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:21:06.804" level="INFO">2020-07-09 13:21:02,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:03,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:21:03,100 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:21:03,287 [main] INFO freon.BaseFreonGenerator: Executing test with prefix y13kaex44t
2020-07-09 13:21:03,300 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:04,187 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-09 13:21:04,231 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:21:04,309 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:04,830 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:21:05,310 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:06,310 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 13:21:06,437 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1353.051913, max=1353.051913, mean=1353.051913, stddev=0.0, median=1353.051913, p75=1353.051913, p95=1353.051913, p98=1353.051913, p99=1353.051913, p999=1353.051913, mean_rate=0.46188082729087865, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 13:21:06,442 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-09 13:21:06,470 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 13:21:06,470 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 13:21:06.803" endtime="20200709 13:21:06.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:21:06.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:21:06.805" endtime="20200709 13:21:06.805"></status>
</kw>
<msg timestamp="20200709 13:21:06.805" level="INFO">${result} = 2020-07-09 13:21:02,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:03,100 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:01.558" endtime="20200709 13:21:06.805"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:21:06.806" endtime="20200709 13:21:06.806"></status>
</kw>
<status status="PASS" starttime="20200709 13:21:06.805" endtime="20200709 13:21:06.806"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:21:01.558" endtime="20200709 13:21:06.806" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:21:06.811" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:21:10.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:21:10.651" level="INFO">${output} = 2020-07-09 13:21:08,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:08,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:06.808" endtime="20200709 13:21:10.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:21:10.652" level="INFO">2020-07-09 13:21:08,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:08,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:21:08,325 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:21:08,471 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gl4cfnjht6
2020-07-09 13:21:08,487 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:09,495 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:10,497 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 13:21:10,636 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=72.969735, max=72.969735, mean=72.969735, stddev=0.0, median=72.969735, p75=72.969735, p95=72.969735, p98=72.969735, p99=72.969735, p999=72.969735, mean_rate=0.7974013283974117, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 13:21:10,637 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 13:21:10,637 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 13:21:10,637 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 13:21:10.651" endtime="20200709 13:21:10.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:21:10.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:21:10.652" endtime="20200709 13:21:10.653"></status>
</kw>
<msg timestamp="20200709 13:21:10.653" level="INFO">${result} = 2020-07-09 13:21:08,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:08,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:06.808" endtime="20200709 13:21:10.653"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:21:10.653" endtime="20200709 13:21:10.654"></status>
</kw>
<status status="PASS" starttime="20200709 13:21:10.653" endtime="20200709 13:21:10.654"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:21:06.807" endtime="20200709 13:21:10.654" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:21:10.658" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:21:14.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:21:14.395" level="INFO">${output} = 2020-07-09 13:21:11,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:10.656" endtime="20200709 13:21:14.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:21:14.397" level="INFO">2020-07-09 13:21:11,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:21:12,105 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:21:12,268 [main] INFO freon.BaseFreonGenerator: Executing test with prefix noz2zwpiiz
2020-07-09 13:21:12,287 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 13:21:13,298 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 13:21:14,323 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=13.876163, max=13.876163, mean=13.876163, stddev=0.0, median=13.876163, p75=13.876163, p95=13.876163, p98=13.876163, p99=13.876163, p999=13.876163, mean_rate=0.8874506886693665, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 13:21:14,324 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 13:21:14,351 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 13:21:14,351 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 13:21:14.396" endtime="20200709 13:21:14.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:21:14.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:21:14.397" endtime="20200709 13:21:14.397"></status>
</kw>
<msg timestamp="20200709 13:21:14.398" level="INFO">${result} = 2020-07-09 13:21:11,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:21:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:21:10.655" endtime="20200709 13:21:14.398"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:21:14.398" endtime="20200709 13:21:14.399"></status>
</kw>
<status status="PASS" starttime="20200709 13:21:14.398" endtime="20200709 13:21:14.399"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:21:10.654" endtime="20200709 13:21:14.399" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 13:20:53.273" endtime="20200709 13:21:14.401"></status>
</suite>
<status status="PASS" starttime="20200709 13:20:53.248" endtime="20200709 13:21:14.404"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
