<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 12:44:29.731" rpa="false">
<suite id="s1" name="ozone-csi-csi" source="/opt/hadoop/smoketest/csi.robot">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="commonlib">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:44:29.778" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:44:29.780" level="INFO">${rc} = 1</msg>
<msg timestamp="20200709 12:44:29.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 12:44:29.775" endtime="20200709 12:44:29.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:44:29.781" level="INFO"></msg>
<status status="PASS" starttime="20200709 12:44:29.780" endtime="20200709 12:44:29.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:44:29.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200709 12:44:29.782" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20200709 12:44:29.781" endtime="20200709 12:44:29.782"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:29.774" endtime="20200709 12:44:29.782"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:29.774" endtime="20200709 12:44:29.782"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="commonlib">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:44:30.787" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:44:30.788" level="INFO">${rc} = 1</msg>
<msg timestamp="20200709 12:44:30.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 12:44:30.784" endtime="20200709 12:44:30.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:44:30.789" level="INFO"></msg>
<status status="PASS" starttime="20200709 12:44:30.788" endtime="20200709 12:44:30.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:44:30.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200709 12:44:30.790" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20200709 12:44:30.789" endtime="20200709 12:44:30.790"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:30.783" endtime="20200709 12:44:30.790"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:30.783" endtime="20200709 12:44:30.790"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="commonlib">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:44:31.794" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:44:31.795" level="INFO">${rc} = 1</msg>
<msg timestamp="20200709 12:44:31.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 12:44:31.791" endtime="20200709 12:44:31.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:44:31.796" level="INFO"></msg>
<status status="PASS" starttime="20200709 12:44:31.795" endtime="20200709 12:44:31.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:44:31.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200709 12:44:31.797" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20200709 12:44:31.796" endtime="20200709 12:44:31.797"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:31.791" endtime="20200709 12:44:31.797"></status>
</kw>
<status status="FAIL" starttime="20200709 12:44:31.791" endtime="20200709 12:44:31.797"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="commonlib">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:44:32.801" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:44:32.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:44:32.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 12:44:32.799" endtime="20200709 12:44:32.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:44:32.804" level="INFO"></msg>
<status status="PASS" starttime="20200709 12:44:32.803" endtime="20200709 12:44:32.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:44:32.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:44:32.804" endtime="20200709 12:44:32.805"></status>
</kw>
<status status="PASS" starttime="20200709 12:44:32.799" endtime="20200709 12:44:32.805"></status>
</kw>
<status status="PASS" starttime="20200709 12:44:32.797" endtime="20200709 12:44:32.805"></status>
</kw>
<status status="PASS" starttime="20200709 12:44:29.774" endtime="20200709 12:44:32.805"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200709 12:44:29.773" endtime="20200709 12:44:32.805" critical="yes"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="commonlib">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:44:32.809" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:44:33.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:44:33.098" level="INFO">${output} = "org.apache.hadoop.ozone"	"0.6.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20200709 12:44:32.807" endtime="20200709 12:44:33.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:44:33.099" level="INFO">"org.apache.hadoop.ozone"	"0.6.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20200709 12:44:33.099" endtime="20200709 12:44:33.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:44:33.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:44:33.100" endtime="20200709 12:44:33.100"></status>
</kw>
<msg timestamp="20200709 12:44:33.100" level="INFO">${result} = "org.apache.hadoop.ozone"	"0.6.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20200709 12:44:32.807" endtime="20200709 12:44:33.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" starttime="20200709 12:44:33.100" endtime="20200709 12:44:33.101"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200709 12:44:32.806" endtime="20200709 12:44:33.101" critical="yes"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" starttime="20200709 12:44:29.731" endtime="20200709 12:44:33.102"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="ozone-csi-csi">ozone-csi-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
