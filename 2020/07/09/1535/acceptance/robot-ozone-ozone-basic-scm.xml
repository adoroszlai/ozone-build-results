<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 13:04:48.324" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200709 13:04:48.368" endtime="20200709 13:04:48.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:04:48.373" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:04:48.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:04:48.440" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:04:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 12:35:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200709 13:04:48.369" endtime="20200709 13:04:48.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:04:48.441" level="INFO">HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:04:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 12:35:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200709 13:04:48.440" endtime="20200709 13:04:48.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:04:48.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:04:48.441" endtime="20200709 13:04:48.442"></status>
</kw>
<msg timestamp="20200709 13:04:48.442" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:04:48 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 09 Jul 2020 12:35:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200709 13:04:48.369" endtime="20200709 13:04:48.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200709 13:04:48.442" endtime="20200709 13:04:48.443"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:04:48.368" endtime="20200709 13:04:48.443" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:04:48.445" endtime="20200709 13:04:48.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:04:48.448" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:05:51.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:05:51.972" level="INFO">${output} = 2020-07-09 13:04:49,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:04:50,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:04:48.446" endtime="20200709 13:05:51.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:05:51.973" level="INFO">2020-07-09 13:04:49,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:04:50,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:04:50,052 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:04:52,036 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 13:04:52,036 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-09 13:04:52,037 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-09 13:04:52,037 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-09 13:04:52,037 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 13:04:52,037 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 13:04:52,037 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-09 13:04:52,046 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-09 13:04:52,055 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 13:04:52,069 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-09 13:04:52,124 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-83082, with hadoop as owner.
2020-07-09 13:04:52,359 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-32684, with hadoop as owner.
2020-07-09 13:04:52,366 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-75847, with hadoop as owner.
2020-07-09 13:04:52,381 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-31497, with hadoop as owner.
2020-07-09 13:04:52,392 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-48040, with hadoop as owner.
2020-07-09 13:04:52,406 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83082/bucket-0-30207, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,491 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32684/bucket-0-37296, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75847/bucket-0-24563, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,516 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-31497/bucket-0-10216, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,524 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48040/bucket-0-06568, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,528 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83082/bucket-1-12503, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,531 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32684/bucket-1-80403, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75847/bucket-1-29958, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,538 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-31497/bucket-1-71864, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,547 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48040/bucket-1-84557, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,550 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83082/bucket-2-16852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,554 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32684/bucket-2-73057, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,556 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75847/bucket-2-77942, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,559 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-31497/bucket-2-11370, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,562 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48040/bucket-2-60229, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,565 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83082/bucket-3-91500, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,568 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32684/bucket-3-82534, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,571 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75847/bucket-3-96248, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,575 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-31497/bucket-3-67440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,583 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48040/bucket-3-94970, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,591 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-83082/bucket-4-38311, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,600 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-32684/bucket-4-73404, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-75847/bucket-4-01555, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,608 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-31497/bucket-4-78874, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:52,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-48040/bucket-4-44244, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:04:53,070 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-09 13:04:53,450 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:04:54,072 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-09 13:04:55,073 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-09 13:04:56,135 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-09 13:04:57,135 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-09 13:04:58,136 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-09 13:04:59,136 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-09 13:05:00,142 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-09 13:05:01,145 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-07-09 13:05:02,146 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-09 13:05:03,146 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-09 13:05:04,147 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-09 13:05:05,147 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-09 13:05:06,148 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-09 13:05:07,148 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-09 13:05:08,149 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-09 13:05:09,150 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-09 13:05:10,150 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-09 13:05:11,151 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-09 13:05:12,152 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-09 13:05:13,152 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-09 13:05:14,153 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-09 13:05:15,153 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-09 13:05:16,154 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-09 13:05:17,155 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-07-09 13:05:18,155 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-07-09 13:05:19,156 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-09 13:05:20,157 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-09 13:05:21,157 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-09 13:05:22,157 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-09 13:05:23,158 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-09 13:05:24,159 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-07-09 13:05:25,159 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-09 13:05:26,160 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-09 13:05:27,160 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-09 13:05:28,160 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-09 13:05:29,161 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-09 13:05:30,162 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-09 13:05:31,162 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-09 13:05:32,163 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-09 13:05:33,163 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-07-09 13:05:34,164 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-09 13:05:35,164 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-09 13:05:36,165 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-09 13:05:37,165 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-09 13:05:38,166 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-09 13:05:39,166 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-09 13:05:40,167 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-09 13:05:41,167 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-07-09 13:05:42,168 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-07-09 13:05:43,168 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-07-09 13:05:44,169 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-07-09 13:05:45,170 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-07-09 13:05:46,170 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-07-09 13:05:47,171 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,324
Average Time spent in bucket creation: 00:00:00,154
Average Time spent in key creation: 00:00:01,995
Average Time spent in key write: 00:00:00,614
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:01,375
***************************************************</msg>
<status status="PASS" starttime="20200709 13:05:51.972" endtime="20200709 13:05:51.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:05:51.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:05:51.973" endtime="20200709 13:05:51.974"></status>
</kw>
<msg timestamp="20200709 13:05:51.974" level="INFO">${result} = 2020-07-09 13:04:49,911 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:04:50,051 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:04:48.445" endtime="20200709 13:05:51.974"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:51.975" endtime="20200709 13:05:51.976"></status>
</kw>
<status status="PASS" starttime="20200709 13:05:51.975" endtime="20200709 13:05:51.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:51.976" endtime="20200709 13:05:51.976"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:04:48.444" endtime="20200709 13:05:51.976" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 13:04:48.349" endtime="20200709 13:05:51.978"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200709 13:05:51.985" level="INFO">${random} = 03112</msg>
<status status="PASS" starttime="20200709 13:05:51.984" endtime="20200709 13:05:51.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200709 13:05:51.985" level="INFO">${prefix} = 03112</msg>
<status status="PASS" starttime="20200709 13:05:51.985" endtime="20200709 13:05:51.985"></status>
</kw>
<status status="PASS" starttime="20200709 13:05:51.984" endtime="20200709 13:05:51.985"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:51.986" endtime="20200709 13:05:51.986"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:05:51.990" level="INFO">Running command 'ozone sh volume info o3://om:9862/03112-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:05:54.279" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:05:54.279" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03112-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 13:05:51.987" endtime="20200709 13:05:54.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:05:54.280" level="INFO">VOLUME_NOT_FOUND Volume 03112-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 13:05:54.279" endtime="20200709 13:05:54.280"></status>
</kw>
<msg timestamp="20200709 13:05:54.280" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03112-rpcwoport is not found</msg>
<status status="PASS" starttime="20200709 13:05:51.987" endtime="20200709 13:05:54.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:54.280" endtime="20200709 13:05:54.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:05:54.283" level="INFO">Running command 'ozone sh volume create o3://om:9862/03112-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:05:56.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:05:56.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:05:54.281" endtime="20200709 13:05:56.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:05:56.844" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:05:56.843" endtime="20200709 13:05:56.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:05:56.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:05:56.844" endtime="20200709 13:05:56.844"></status>
</kw>
<msg timestamp="20200709 13:05:56.845" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:05:54.281" endtime="20200709 13:05:56.845"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:56.845" endtime="20200709 13:05:56.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:05:56.848" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="03112-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:05:59.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:05:59.727" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 13:05:56.846" endtime="20200709 13:05:59.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:05:59.729" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:05:59.728" endtime="20200709 13:05:59.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:05:59.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:05:59.729" endtime="20200709 13:05:59.729"></status>
</kw>
<msg timestamp="20200709 13:05:59.729" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 13:05:56.845" endtime="20200709 13:05:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:05:59.730" endtime="20200709 13:05:59.730"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:05:59.733" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03112-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:02.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:02.616" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 13:05:59.730" endtime="20200709 13:06:02.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:02.619" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:06:02.617" endtime="20200709 13:06:02.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:02.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:02.620" endtime="20200709 13:06:02.621"></status>
</kw>
<msg timestamp="20200709 13:06:02.621" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:05:56.719Z",
  "modificationTime": "2020-07-09T13:05:56.719Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200709 13:05:59.730" endtime="20200709 13:06:02.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:02.621" endtime="20200709 13:06:02.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:02.625" level="INFO">Running command 'ozone sh volume update o3://om:9862/03112-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:05.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:05.578" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03112-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:05:56.719Z",
  "modificationTime" : "2020-07-09T13:06:05.106Z",
  "acl...</msg>
<status status="PASS" starttime="20200709 13:06:02.623" endtime="20200709 13:06:05.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:05.579" level="INFO">{
  "metadata" : { },
  "name" : "03112-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:05:56.719Z",
  "modificationTime" : "2020-07-09T13:06:05.106Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 13:06:05.579" endtime="20200709 13:06:05.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:05.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:05.580" endtime="20200709 13:06:05.580"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:02.622" endtime="20200709 13:06:05.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:05.584" level="INFO">Running command 'ozone sh volume info o3://om:9862/03112-rpcwoport | jq -r '. | select(.name=="03112-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:08.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:08.353" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:06:05.582" endtime="20200709 13:06:08.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:08.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 13:06:08.353" endtime="20200709 13:06:08.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:08.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:08.354" endtime="20200709 13:06:08.355"></status>
</kw>
<msg timestamp="20200709 13:06:08.355" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:06:05.580" endtime="20200709 13:06:08.355"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:08.355" endtime="20200709 13:06:08.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:08.359" level="INFO">Running command 'ozone sh bucket create o3://om:9862/03112-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:10.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:10.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:08.356" endtime="20200709 13:06:10.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:10.785" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:10.784" endtime="20200709 13:06:10.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:10.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:10.785" endtime="20200709 13:06:10.786"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:08.356" endtime="20200709 13:06:10.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:10.788" level="INFO">Running command 'ozone sh bucket info o3://om:9862/03112-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:13.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:13.628" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 13:06:10.786" endtime="20200709 13:06:13.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:13.630" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 13:06:13.629" endtime="20200709 13:06:13.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:13.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:13.630" endtime="20200709 13:06:13.630"></status>
</kw>
<msg timestamp="20200709 13:06:13.631" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 13:06:10.786" endtime="20200709 13:06:13.631"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:13.631" endtime="20200709 13:06:13.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:13.635" level="INFO">Running command 'ozone sh bucket list o3://om:9862/03112-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:16.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:16.273" level="INFO">${output} = 03112-rpcwoport</msg>
<status status="PASS" starttime="20200709 13:06:13.632" endtime="20200709 13:06:16.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:16.274" level="INFO">03112-rpcwoport</msg>
<status status="PASS" starttime="20200709 13:06:16.273" endtime="20200709 13:06:16.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:16.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:16.275" endtime="20200709 13:06:16.275"></status>
</kw>
<msg timestamp="20200709 13:06:16.276" level="INFO">${result} = 03112-rpcwoport</msg>
<status status="PASS" starttime="20200709 13:06:13.632" endtime="20200709 13:06:16.276"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:16.276" endtime="20200709 13:06:16.276"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:16.280" level="INFO">Running command 'ozone sh key put o3://om:9862/03112-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:20.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:20.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:16.278" endtime="20200709 13:06:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:20.653" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:20.653" endtime="20200709 13:06:20.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:20.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:20.653" endtime="20200709 13:06:20.654"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:16.277" endtime="20200709 13:06:20.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:20.657" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:20.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:20.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:20.655" endtime="20200709 13:06:20.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:20.660" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:20.659" endtime="20200709 13:06:20.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:20.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:20.660" endtime="20200709 13:06:20.661"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:20.654" endtime="20200709 13:06:20.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:20.664" level="INFO">Running command 'ozone sh key get o3://om:9862/03112-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:25.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:25.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:20.661" endtime="20200709 13:06:25.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:25.084" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:25.084" endtime="20200709 13:06:25.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:25.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:25.085" endtime="20200709 13:06:25.086"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:20.661" endtime="20200709 13:06:25.086"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:25.089" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:25.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:25.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:25.086" endtime="20200709 13:06:25.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:25.096" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:25.096" endtime="20200709 13:06:25.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:25.096" endtime="20200709 13:06:25.097"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:25.086" endtime="20200709 13:06:25.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:25.100" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/03112-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:29.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:29.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:25.098" endtime="20200709 13:06:29.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:29.824" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:29.823" endtime="20200709 13:06:29.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:29.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:29.824" endtime="20200709 13:06:29.825"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:25.097" endtime="20200709 13:06:29.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:29.828" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:29.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:29.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:29.826" endtime="20200709 13:06:29.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:29.831" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:29.831" endtime="20200709 13:06:29.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:29.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:29.832" endtime="20200709 13:06:29.832"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:29.825" endtime="20200709 13:06:29.832"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:29.836" level="INFO">Running command 'ozone sh key get o3://om:9862/03112-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:34.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:34.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:29.833" endtime="20200709 13:06:34.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:34.747" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:34.746" endtime="20200709 13:06:34.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:34.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:34.747" endtime="20200709 13:06:34.748"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:29.832" endtime="20200709 13:06:34.748"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:34.751" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:34.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:34.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:34.749" endtime="20200709 13:06:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:34.755" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:34.754" endtime="20200709 13:06:34.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:34.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:34.755" endtime="20200709 13:06:34.755"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:34.748" endtime="20200709 13:06:34.755"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:34.758" level="INFO">Running command 'ozone sh key info o3://om:9862/03112-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:37.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:37.611" level="INFO">${output} = {
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:27.595Z",
  "modificationTime": "2020-07-09T13:06:29.319Z",...</msg>
<status status="PASS" starttime="20200709 13:06:34.756" endtime="20200709 13:06:37.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:37.612" level="INFO">{
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:27.595Z",
  "modificationTime": "2020-07-09T13:06:29.319Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484043986829440,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:06:37.612" endtime="20200709 13:06:37.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:37.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:37.613" endtime="20200709 13:06:37.613"></status>
</kw>
<msg timestamp="20200709 13:06:37.613" level="INFO">${result} = {
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:27.595Z",
  "modificationTime": "2020-07-09T13:06:29.319Z",...</msg>
<status status="PASS" starttime="20200709 13:06:34.756" endtime="20200709 13:06:37.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:37.614" endtime="20200709 13:06:37.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:37.619" level="INFO">Running command 'ozone sh key delete o3://om:9862/03112-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:40.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:40.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:37.615" endtime="20200709 13:06:40.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:40.283" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:40.282" endtime="20200709 13:06:40.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:40.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:40.283" endtime="20200709 13:06:40.283"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:37.614" endtime="20200709 13:06:40.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:40.287" level="INFO">Running command 'ozone sh key cp o3://om:9862/03112-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:45.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:45.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:40.284" endtime="20200709 13:06:45.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:45.160" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:45.160" endtime="20200709 13:06:45.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:45.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:45.161" endtime="20200709 13:06:45.161"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:40.284" endtime="20200709 13:06:45.161"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:45.164" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:45.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:45.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:45.162" endtime="20200709 13:06:45.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:45.167" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:45.166" endtime="20200709 13:06:45.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:45.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:45.167" endtime="20200709 13:06:45.167"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:45.161" endtime="20200709 13:06:45.168"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:45.170" level="INFO">Running command 'ozone sh key get o3://om:9862/03112-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:49.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:49.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:45.168" endtime="20200709 13:06:49.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:49.470" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:49.469" endtime="20200709 13:06:49.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:49.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:49.470" endtime="20200709 13:06:49.470"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:45.168" endtime="20200709 13:06:49.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:49.473" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:49.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:49.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:49.471" endtime="20200709 13:06:49.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:49.476" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:49.476" endtime="20200709 13:06:49.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:49.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:49.476" endtime="20200709 13:06:49.477"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:49.471" endtime="20200709 13:06:49.477"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:49.481" level="INFO">Running command 'ozone sh key delete o3://om:9862/03112-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:52.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:52.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:49.478" endtime="20200709 13:06:52.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:52.016" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:52.016" endtime="20200709 13:06:52.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:52.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:52.017" endtime="20200709 13:06:52.017"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:49.477" endtime="20200709 13:06:52.017"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:52.020" level="INFO">Running command 'ozone sh key get o3://om:9862/03112-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:54.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:06:54.708" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:06:52.018" endtime="20200709 13:06:54.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:54.709" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:06:54.708" endtime="20200709 13:06:54.709"></status>
</kw>
<msg timestamp="20200709 13:06:54.709" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:06:52.018" endtime="20200709 13:06:54.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:54.709" endtime="20200709 13:06:54.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:54.713" level="INFO">Running command 'ozone sh key get --force o3://om:9862/03112-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:06:58.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:06:58.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:06:54.711" endtime="20200709 13:06:58.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:06:58.864" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:06:58.864" endtime="20200709 13:06:58.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:06:58.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:06:58.865" endtime="20200709 13:06:58.865"></status>
</kw>
<msg timestamp="20200709 13:06:58.865" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:06:54.710" endtime="20200709 13:06:58.865"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:06:58.866" endtime="20200709 13:06:58.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:06:58.870" level="INFO">Running command 'ozone sh key info o3://om:9862/03112-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:01.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:01.726" level="INFO">${output} = {
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:18.651Z",
  "modificationTime": "2020-07-09T13:06:20.261Z",
  "re...</msg>
<status status="PASS" starttime="20200709 13:06:58.867" endtime="20200709 13:07:01.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:01.727" level="INFO">{
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:18.651Z",
  "modificationTime": "2020-07-09T13:06:20.261Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484043400872060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:07:01.726" endtime="20200709 13:07:01.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:01.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:01.727" endtime="20200709 13:07:01.728"></status>
</kw>
<msg timestamp="20200709 13:07:01.728" level="INFO">${result} = {
  "volumeName": "03112-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:06:18.651Z",
  "modificationTime": "2020-07-09T13:06:20.261Z",
  "re...</msg>
<status status="PASS" starttime="20200709 13:06:58.866" endtime="20200709 13:07:01.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:01.728" endtime="20200709 13:07:01.729"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:01.732" level="INFO">Running command 'ozone sh key list o3://om:9862/03112-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:04.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:04.471" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 13:07:01.730" endtime="20200709 13:07:04.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:04.472" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 13:07:04.472" endtime="20200709 13:07:04.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:04.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:04.473" endtime="20200709 13:07:04.473"></status>
</kw>
<msg timestamp="20200709 13:07:04.473" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 13:07:01.729" endtime="20200709 13:07:04.473"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:04.474" endtime="20200709 13:07:04.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:04.477" level="INFO">Running command 'ozone sh key rename o3://om:9862/03112-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:06.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:06.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:04.475" endtime="20200709 13:07:06.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:06.757" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:07:06.756" endtime="20200709 13:07:06.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:06.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:06.757" endtime="20200709 13:07:06.757"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:04.474" endtime="20200709 13:07:06.758"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:06.760" level="INFO">Running command 'ozone sh key list o3://om:9862/03112-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:09.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:09.500" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 13:07:06.758" endtime="20200709 13:07:09.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:09.501" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 13:07:09.501" endtime="20200709 13:07:09.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:09.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:09.501" endtime="20200709 13:07:09.502"></status>
</kw>
<msg timestamp="20200709 13:07:09.502" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 13:07:06.758" endtime="20200709 13:07:09.502"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:09.502" endtime="20200709 13:07:09.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:09.506" level="INFO">Running command 'ozone sh key delete o3://om:9862/03112-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:11.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:11.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:09.503" endtime="20200709 13:07:11.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:11.917" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:07:11.917" endtime="20200709 13:07:11.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:11.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:11.918" endtime="20200709 13:07:11.918"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:09.503" endtime="20200709 13:07:11.919"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:16.277" endtime="20200709 13:07:11.919"></status>
</kw>
<status status="PASS" starttime="20200709 13:06:16.276" endtime="20200709 13:07:11.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:11.923" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/03112-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:14.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:14.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:11.919" endtime="20200709 13:07:14.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:14.403" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:07:14.403" endtime="20200709 13:07:14.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:14.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:14.404" endtime="20200709 13:07:14.404"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:11.919" endtime="20200709 13:07:14.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:14.408" level="INFO">Running command 'ozone sh volume delete o3://om:9862/03112-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:16.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:16.945" level="INFO">${output} = Volume 03112-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200709 13:07:14.406" endtime="20200709 13:07:16.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:16.947" level="INFO">Volume 03112-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200709 13:07:16.946" endtime="20200709 13:07:16.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:16.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:16.947" endtime="20200709 13:07:16.947"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:14.404" endtime="20200709 13:07:16.948"></status>
</kw>
<status status="PASS" starttime="20200709 13:05:51.986" endtime="20200709 13:07:16.948"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:05:51.985" endtime="20200709 13:07:16.948" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:16.949" endtime="20200709 13:07:16.950"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:16.953" level="INFO">Running command 'ozone sh volume create o3://om:9862/03112-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:19.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:19.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:16.951" endtime="20200709 13:07:19.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:19.649" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:07:19.649" endtime="20200709 13:07:19.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:19.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:19.649" endtime="20200709 13:07:19.650"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:16.950" endtime="20200709 13:07:19.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:19.654" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03112-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:22.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:22.183" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:19.651" endtime="20200709 13:07:22.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:22.184" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:22.183" endtime="20200709 13:07:22.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:22.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:22.184" endtime="20200709 13:07:22.184"></status>
</kw>
<msg timestamp="20200709 13:07:22.185" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:19.650" endtime="20200709 13:07:22.185"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:22.185" endtime="20200709 13:07:22.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:22.189" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/03112-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:24.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:24.755" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 13:07:22.186" endtime="20200709 13:07:24.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:24.757" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 13:07:24.756" endtime="20200709 13:07:24.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:24.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:24.757" endtime="20200709 13:07:24.758"></status>
</kw>
<msg timestamp="20200709 13:07:24.758" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200709 13:07:22.186" endtime="20200709 13:07:24.758"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:24.761" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03112-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:27.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:27.396" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:24.759" endtime="20200709 13:07:27.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:27.397" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:27.396" endtime="20200709 13:07:27.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:27.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:27.398" endtime="20200709 13:07:27.398"></status>
</kw>
<msg timestamp="20200709 13:07:27.398" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:24.758" endtime="20200709 13:07:27.398"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:27.399" endtime="20200709 13:07:27.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:27.402" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/03112-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:29.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:29.861" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 13:07:27.400" endtime="20200709 13:07:29.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:29.862" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 13:07:29.861" endtime="20200709 13:07:29.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:29.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:29.862" endtime="20200709 13:07:29.863"></status>
</kw>
<msg timestamp="20200709 13:07:29.863" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200709 13:07:27.400" endtime="20200709 13:07:29.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:29.866" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03112-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:32.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:32.539" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:29.864" endtime="20200709 13:07:32.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:32.540" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:32.540" endtime="20200709 13:07:32.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:32.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:32.541" endtime="20200709 13:07:32.541"></status>
</kw>
<msg timestamp="20200709 13:07:32.542" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:29.863" endtime="20200709 13:07:32.542"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:32.542" endtime="20200709 13:07:32.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:32.547" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/03112-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:34.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:34.931" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:32.544" endtime="20200709 13:07:34.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:34.932" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:34.932" endtime="20200709 13:07:34.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:34.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:34.932" endtime="20200709 13:07:34.933"></status>
</kw>
<msg timestamp="20200709 13:07:34.933" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:32.543" endtime="20200709 13:07:34.933"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:34.936" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/03112-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:37.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:37.402" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200709 13:07:34.934" endtime="20200709 13:07:37.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:37.403" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:37.403" endtime="20200709 13:07:37.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:37.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:37.404" endtime="20200709 13:07:37.404"></status>
</kw>
<msg timestamp="20200709 13:07:37.404" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200709 13:07:34.933" endtime="20200709 13:07:37.404"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:37.405" endtime="20200709 13:07:37.405"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:37.405" endtime="20200709 13:07:37.406"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:16.950" endtime="20200709 13:07:37.406"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:07:16.949" endtime="20200709 13:07:37.406" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:37.408" endtime="20200709 13:07:37.408"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:37.413" level="INFO">Running command 'ozone sh bucket create o3://om:9862/03112-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:40.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:40.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:37.410" endtime="20200709 13:07:40.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:40.010" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:07:40.009" endtime="20200709 13:07:40.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:40.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:40.010" endtime="20200709 13:07:40.011"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:37.409" endtime="20200709 13:07:40.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:40.014" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03112-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:42.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:42.648" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:40.012" endtime="20200709 13:07:42.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:42.649" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:42.648" endtime="20200709 13:07:42.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:42.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:42.649" endtime="20200709 13:07:42.650"></status>
</kw>
<msg timestamp="20200709 13:07:42.650" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:40.011" endtime="20200709 13:07:42.650"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:42.650" endtime="20200709 13:07:42.651"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:42.654" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/03112-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:44.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:44.992" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 13:07:42.651" endtime="20200709 13:07:44.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:44.993" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 13:07:44.993" endtime="20200709 13:07:44.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:44.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:44.994" endtime="20200709 13:07:44.994"></status>
</kw>
<msg timestamp="20200709 13:07:44.994" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200709 13:07:42.651" endtime="20200709 13:07:44.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:44.998" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03112-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:47.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:47.586" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:44.995" endtime="20200709 13:07:47.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:47.587" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:47.586" endtime="20200709 13:07:47.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:47.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:47.587" endtime="20200709 13:07:47.588"></status>
</kw>
<msg timestamp="20200709 13:07:47.588" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:44.994" endtime="20200709 13:07:47.588"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:47.588" endtime="20200709 13:07:47.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:47.592" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/03112-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:50.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:50.146" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:07:47.589" endtime="20200709 13:07:50.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:50.147" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:07:50.146" endtime="20200709 13:07:50.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:50.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:50.147" endtime="20200709 13:07:50.148"></status>
</kw>
<msg timestamp="20200709 13:07:50.148" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:07:47.589" endtime="20200709 13:07:50.148"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:50.152" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03112-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:52.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:52.811" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:50.149" endtime="20200709 13:07:52.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:52.812" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:52.812" endtime="20200709 13:07:52.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:52.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:52.813" endtime="20200709 13:07:52.813"></status>
</kw>
<msg timestamp="20200709 13:07:52.813" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:07:50.148" endtime="20200709 13:07:52.813"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:52.814" endtime="20200709 13:07:52.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:52.817" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/03112-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:55.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:55.340" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:52.815" endtime="20200709 13:07:55.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:55.342" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:55.341" endtime="20200709 13:07:55.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:55.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:55.342" endtime="20200709 13:07:55.342"></status>
</kw>
<msg timestamp="20200709 13:07:55.343" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:07:52.815" endtime="20200709 13:07:55.343"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:55.346" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/03112-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:07:57.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:07:57.945" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 13:07:55.343" endtime="20200709 13:07:57.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:07:57.946" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:07:57.946" endtime="20200709 13:07:57.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:07:57.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:07:57.946" endtime="20200709 13:07:57.947"></status>
</kw>
<msg timestamp="20200709 13:07:57.947" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 13:07:55.343" endtime="20200709 13:07:57.947"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:57.947" endtime="20200709 13:07:57.948"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:57.948" endtime="20200709 13:07:57.948"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:37.408" endtime="20200709 13:07:57.949"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:07:37.407" endtime="20200709 13:07:57.949" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:07:57.950" endtime="20200709 13:07:57.950"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:07:57.953" level="INFO">Running command 'ozone sh key put o3://om:9862/03112-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:02.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:02.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:07:57.951" endtime="20200709 13:08:02.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:02.179" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:02.178" endtime="20200709 13:08:02.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:02.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:02.179" endtime="20200709 13:08:02.180"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:57.951" endtime="20200709 13:08:02.180"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:02.182" level="INFO">Running command 'ozone sh key getacl o3://om:9862/03112-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:05.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:05.023" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:02.180" endtime="20200709 13:08:05.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:05.024" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:08:05.023" endtime="20200709 13:08:05.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:05.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:05.024" endtime="20200709 13:08:05.025"></status>
</kw>
<msg timestamp="20200709 13:08:05.025" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:02.180" endtime="20200709 13:08:05.025"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:05.025" endtime="20200709 13:08:05.025"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:05.028" level="INFO">Running command 'ozone sh key addacl o3://om:9862/03112-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:07.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:07.469" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 13:08:05.026" endtime="20200709 13:08:07.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:07.470" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 13:08:07.469" endtime="20200709 13:08:07.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:07.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:07.470" endtime="20200709 13:08:07.471"></status>
</kw>
<msg timestamp="20200709 13:08:07.471" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200709 13:08:05.025" endtime="20200709 13:08:07.471"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:07.474" level="INFO">Running command 'ozone sh key getacl o3://om:9862/03112-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:10.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:10.118" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:07.472" endtime="20200709 13:08:10.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:10.119" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:08:10.119" endtime="20200709 13:08:10.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:10.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:10.120" endtime="20200709 13:08:10.120"></status>
</kw>
<msg timestamp="20200709 13:08:10.120" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:07.471" endtime="20200709 13:08:10.120"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:10.121" endtime="20200709 13:08:10.122"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:10.125" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/03112-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:12.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:12.487" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:08:10.122" endtime="20200709 13:08:12.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:12.488" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:08:12.488" endtime="20200709 13:08:12.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:12.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:12.489" endtime="20200709 13:08:12.489"></status>
</kw>
<msg timestamp="20200709 13:08:12.489" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200709 13:08:10.122" endtime="20200709 13:08:12.489"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:12.492" level="INFO">Running command 'ozone sh key getacl o3://om:9862/03112-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:15.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:15.011" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:12.490" endtime="20200709 13:08:15.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:15.012" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:08:15.012" endtime="20200709 13:08:15.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:15.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:15.013" endtime="20200709 13:08:15.013"></status>
</kw>
<msg timestamp="20200709 13:08:15.013" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200709 13:08:12.489" endtime="20200709 13:08:15.013"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:15.013" endtime="20200709 13:08:15.014"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:15.017" level="INFO">Running command 'ozone sh key setacl o3://om:9862/03112-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:17.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:17.537" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:08:15.015" endtime="20200709 13:08:17.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:17.538" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:08:17.538" endtime="20200709 13:08:17.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:17.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:17.539" endtime="20200709 13:08:17.539"></status>
</kw>
<msg timestamp="20200709 13:08:17.540" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200709 13:08:15.014" endtime="20200709 13:08:17.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:17.543" level="INFO">Running command 'ozone sh key getacl o3://om:9862/03112-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:20.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:20.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 13:08:17.540" endtime="20200709 13:08:20.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:20.134" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200709 13:08:20.134" endtime="20200709 13:08:20.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:20.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:20.135" endtime="20200709 13:08:20.135"></status>
</kw>
<msg timestamp="20200709 13:08:20.135" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200709 13:08:17.540" endtime="20200709 13:08:20.135"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:20.136" endtime="20200709 13:08:20.136"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:20.136" endtime="20200709 13:08:20.137"></status>
</kw>
<status status="PASS" starttime="20200709 13:07:57.950" endtime="20200709 13:08:20.137"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:07:57.949" endtime="20200709 13:08:20.137" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:20.138" endtime="20200709 13:08:20.139"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:20.142" level="INFO">Running command 'ozone sh volume info o3:///03112-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:22.430" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:08:22.430" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03112-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 13:08:20.140" endtime="20200709 13:08:22.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:22.431" level="INFO">VOLUME_NOT_FOUND Volume 03112-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 13:08:22.431" endtime="20200709 13:08:22.431"></status>
</kw>
<msg timestamp="20200709 13:08:22.432" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03112-rpcwport is not found</msg>
<status status="PASS" starttime="20200709 13:08:20.139" endtime="20200709 13:08:22.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:22.432" endtime="20200709 13:08:22.432"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:22.435" level="INFO">Running command 'ozone sh volume create o3:///03112-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:24.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:24.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:22.433" endtime="20200709 13:08:24.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:24.904" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:24.903" endtime="20200709 13:08:24.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:24.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:24.904" endtime="20200709 13:08:24.904"></status>
</kw>
<msg timestamp="20200709 13:08:24.905" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:08:22.432" endtime="20200709 13:08:24.905"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:24.905" endtime="20200709 13:08:24.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:24.910" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="03112-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:27.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:27.610" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 13:08:24.906" endtime="20200709 13:08:27.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:27.612" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:08:27.611" endtime="20200709 13:08:27.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:27.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:27.612" endtime="20200709 13:08:27.612"></status>
</kw>
<msg timestamp="20200709 13:08:27.613" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 13:08:24.905" endtime="20200709 13:08:27.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:27.613" endtime="20200709 13:08:27.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:27.617" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03112-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:30.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:30.136" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 13:08:27.613" endtime="20200709 13:08:30.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:30.137" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:08:30.137" endtime="20200709 13:08:30.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:30.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:30.138" endtime="20200709 13:08:30.138"></status>
</kw>
<msg timestamp="20200709 13:08:30.138" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:08:24.834Z",
  "modificationTime": "2020-07-09T13:08:24.834Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200709 13:08:27.613" endtime="20200709 13:08:30.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:30.138" endtime="20200709 13:08:30.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:30.141" level="INFO">Running command 'ozone sh volume update o3:///03112-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:32.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:32.934" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03112-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:08:24.834Z",
  "modificationTime" : "2020-07-09T13:08:32.558Z",
  "acls...</msg>
<status status="PASS" starttime="20200709 13:08:30.139" endtime="20200709 13:08:32.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:32.935" level="INFO">{
  "metadata" : { },
  "name" : "03112-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:08:24.834Z",
  "modificationTime" : "2020-07-09T13:08:32.558Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 13:08:32.934" endtime="20200709 13:08:32.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:32.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:32.935" endtime="20200709 13:08:32.936"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:30.139" endtime="20200709 13:08:32.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:32.940" level="INFO">Running command 'ozone sh volume info o3:///03112-rpcwport | jq -r '. | select(.name=="03112-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:35.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:35.638" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:08:32.937" endtime="20200709 13:08:35.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:35.639" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 13:08:35.638" endtime="20200709 13:08:35.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:35.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:35.639" endtime="20200709 13:08:35.640"></status>
</kw>
<msg timestamp="20200709 13:08:35.640" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:08:32.936" endtime="20200709 13:08:35.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:35.640" endtime="20200709 13:08:35.641"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:35.643" level="INFO">Running command 'ozone sh bucket create o3:///03112-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:38.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:38.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:35.641" endtime="20200709 13:08:38.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:38.207" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:38.207" endtime="20200709 13:08:38.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:38.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:38.208" endtime="20200709 13:08:38.208"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:35.641" endtime="20200709 13:08:38.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:38.211" level="INFO">Running command 'ozone sh bucket info o3:///03112-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:40.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:40.874" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 13:08:38.209" endtime="20200709 13:08:40.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:40.875" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 13:08:40.874" endtime="20200709 13:08:40.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:40.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:40.875" endtime="20200709 13:08:40.876"></status>
</kw>
<msg timestamp="20200709 13:08:40.876" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 13:08:38.208" endtime="20200709 13:08:40.876"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:40.876" endtime="20200709 13:08:40.877"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:40.880" level="INFO">Running command 'ozone sh bucket list o3:///03112-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:43.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:43.372" level="INFO">${output} = 03112-rpcwport</msg>
<status status="PASS" starttime="20200709 13:08:40.877" endtime="20200709 13:08:43.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:43.373" level="INFO">03112-rpcwport</msg>
<status status="PASS" starttime="20200709 13:08:43.373" endtime="20200709 13:08:43.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:43.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:43.373" endtime="20200709 13:08:43.374"></status>
</kw>
<msg timestamp="20200709 13:08:43.374" level="INFO">${result} = 03112-rpcwport</msg>
<status status="PASS" starttime="20200709 13:08:40.877" endtime="20200709 13:08:43.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 13:08:43.374" endtime="20200709 13:08:43.375"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:43.379" level="INFO">Running command 'ozone sh key put o3:///03112-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:50.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:50.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:43.376" endtime="20200709 13:08:50.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:50.040" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:50.040" endtime="20200709 13:08:50.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:50.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:50.040" endtime="20200709 13:08:50.041"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:43.375" endtime="20200709 13:08:50.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:50.044" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:50.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:50.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:50.042" endtime="20200709 13:08:50.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:50.047" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:50.047" endtime="20200709 13:08:50.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:50.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:50.047" endtime="20200709 13:08:50.048"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:50.041" endtime="20200709 13:08:50.048"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:50.050" level="INFO">Running command 'ozone sh key get o3:///03112-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:54.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:54.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:50.048" endtime="20200709 13:08:54.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:54.779" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:54.778" endtime="20200709 13:08:54.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:54.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:54.779" endtime="20200709 13:08:54.779"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:50.048" endtime="20200709 13:08:54.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:54.783" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:54.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:54.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:54.780" endtime="20200709 13:08:54.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:54.785" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:54.785" endtime="20200709 13:08:54.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:54.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:54.785" endtime="20200709 13:08:54.786"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:54.780" endtime="20200709 13:08:54.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:54.789" level="INFO">Running command 'ozone sh key put -t RATIS o3:///03112-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:59.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:59.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:54.786" endtime="20200709 13:08:59.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:59.156" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:59.155" endtime="20200709 13:08:59.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:59.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:59.156" endtime="20200709 13:08:59.157"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:54.786" endtime="20200709 13:08:59.157"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:59.160" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:08:59.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:08:59.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:59.157" endtime="20200709 13:08:59.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:08:59.163" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:08:59.162" endtime="20200709 13:08:59.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:08:59.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:08:59.163" endtime="20200709 13:08:59.163"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:59.157" endtime="20200709 13:08:59.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:08:59.167" level="INFO">Running command 'ozone sh key get o3:///03112-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:03.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:03.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:08:59.164" endtime="20200709 13:09:03.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:03.462" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:03.462" endtime="20200709 13:09:03.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:03.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:03.462" endtime="20200709 13:09:03.463"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:59.164" endtime="20200709 13:09:03.463"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:03.466" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:03.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:03.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:03.464" endtime="20200709 13:09:03.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:03.469" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:03.468" endtime="20200709 13:09:03.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:03.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:03.469" endtime="20200709 13:09:03.469"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:03.463" endtime="20200709 13:09:03.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:03.474" level="INFO">Running command 'ozone sh key info o3:///03112-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:06.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:06.327" level="INFO">${output} = {
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:57.117Z",
  "modificationTime": "2020-07-09T13:08:58.669Z",
...</msg>
<status status="PASS" starttime="20200709 13:09:03.470" endtime="20200709 13:09:06.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:06.328" level="INFO">{
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:57.117Z",
  "modificationTime": "2020-07-09T13:08:58.669Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484053786034300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:09:06.327" endtime="20200709 13:09:06.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:06.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:06.328" endtime="20200709 13:09:06.328"></status>
</kw>
<msg timestamp="20200709 13:09:06.329" level="INFO">${result} = {
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:57.117Z",
  "modificationTime": "2020-07-09T13:08:58.669Z",
...</msg>
<status status="PASS" starttime="20200709 13:09:03.470" endtime="20200709 13:09:06.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:06.329" endtime="20200709 13:09:06.329"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:06.333" level="INFO">Running command 'ozone sh key delete o3:///03112-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:08.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:08.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:06.330" endtime="20200709 13:09:08.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:08.874" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:08.873" endtime="20200709 13:09:08.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:08.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:08.874" endtime="20200709 13:09:08.875"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:06.329" endtime="20200709 13:09:08.875"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:08.878" level="INFO">Running command 'ozone sh key cp o3:///03112-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:13.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:13.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:08.876" endtime="20200709 13:09:13.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:13.630" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:13.629" endtime="20200709 13:09:13.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:13.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:13.630" endtime="20200709 13:09:13.630"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:08.875" endtime="20200709 13:09:13.630"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:13.633" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:13.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:13.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:13.631" endtime="20200709 13:09:13.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:13.636" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:13.636" endtime="20200709 13:09:13.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:13.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:13.636" endtime="20200709 13:09:13.637"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:13.631" endtime="20200709 13:09:13.637"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:13.641" level="INFO">Running command 'ozone sh key get o3:///03112-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:17.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:17.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:13.638" endtime="20200709 13:09:17.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:17.815" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:17.815" endtime="20200709 13:09:17.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:17.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:17.816" endtime="20200709 13:09:17.816"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:13.637" endtime="20200709 13:09:17.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:17.820" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:17.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:17.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:17.817" endtime="20200709 13:09:17.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:17.823" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:17.823" endtime="20200709 13:09:17.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:17.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:17.823" endtime="20200709 13:09:17.824"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:17.816" endtime="20200709 13:09:17.824"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:17.829" level="INFO">Running command 'ozone sh key delete o3:///03112-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:20.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:20.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:17.826" endtime="20200709 13:09:20.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:20.278" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:20.278" endtime="20200709 13:09:20.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:20.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:20.279" endtime="20200709 13:09:20.279"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:17.825" endtime="20200709 13:09:20.279"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:20.282" level="INFO">Running command 'ozone sh key get o3:///03112-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:22.668" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:09:22.668" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:09:20.280" endtime="20200709 13:09:22.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:22.669" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:09:22.668" endtime="20200709 13:09:22.669"></status>
</kw>
<msg timestamp="20200709 13:09:22.669" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:09:20.279" endtime="20200709 13:09:22.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:22.669" endtime="20200709 13:09:22.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:22.673" level="INFO">Running command 'ozone sh key get --force o3:///03112-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:26.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:26.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:22.670" endtime="20200709 13:09:26.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:26.898" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:26.897" endtime="20200709 13:09:26.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:26.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:26.898" endtime="20200709 13:09:26.898"></status>
</kw>
<msg timestamp="20200709 13:09:26.899" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:09:22.670" endtime="20200709 13:09:26.899"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:26.899" endtime="20200709 13:09:26.899"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:26.902" level="INFO">Running command 'ozone sh key info o3:///03112-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:29.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:29.598" level="INFO">${output} = {
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:45.533Z",
  "modificationTime": "2020-07-09T13:08:49.653Z",
  "rep...</msg>
<status status="PASS" starttime="20200709 13:09:26.900" endtime="20200709 13:09:29.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:29.599" level="INFO">{
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:45.533Z",
  "modificationTime": "2020-07-09T13:08:49.653Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484053026865280,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:09:29.598" endtime="20200709 13:09:29.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:29.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:29.599" endtime="20200709 13:09:29.599"></status>
</kw>
<msg timestamp="20200709 13:09:29.600" level="INFO">${result} = {
  "volumeName": "03112-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:08:45.533Z",
  "modificationTime": "2020-07-09T13:08:49.653Z",
  "rep...</msg>
<status status="PASS" starttime="20200709 13:09:26.899" endtime="20200709 13:09:29.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:29.600" endtime="20200709 13:09:29.600"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:29.603" level="INFO">Running command 'ozone sh key list o3:///03112-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:32.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:32.365" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 13:09:29.601" endtime="20200709 13:09:32.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:32.366" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 13:09:32.365" endtime="20200709 13:09:32.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:32.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:32.366" endtime="20200709 13:09:32.367"></status>
</kw>
<msg timestamp="20200709 13:09:32.367" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 13:09:29.600" endtime="20200709 13:09:32.367"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:32.367" endtime="20200709 13:09:32.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:32.371" level="INFO">Running command 'ozone sh key rename o3:///03112-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:34.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:34.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:32.368" endtime="20200709 13:09:34.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:34.711" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:34.711" endtime="20200709 13:09:34.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:34.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:34.712" endtime="20200709 13:09:34.712"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:32.368" endtime="20200709 13:09:34.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:34.715" level="INFO">Running command 'ozone sh key list o3:///03112-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:37.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:37.410" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 13:09:34.713" endtime="20200709 13:09:37.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:37.411" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 13:09:37.410" endtime="20200709 13:09:37.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:37.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:37.411" endtime="20200709 13:09:37.411"></status>
</kw>
<msg timestamp="20200709 13:09:37.412" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 13:09:34.712" endtime="20200709 13:09:37.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:37.412" endtime="20200709 13:09:37.413"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:37.416" level="INFO">Running command 'ozone sh key delete o3:///03112-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:39.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:39.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:37.414" endtime="20200709 13:09:39.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:39.896" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:39.895" endtime="20200709 13:09:39.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:39.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:39.896" endtime="20200709 13:09:39.897"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:37.413" endtime="20200709 13:09:39.897"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:43.375" endtime="20200709 13:09:39.897"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:43.375" endtime="20200709 13:09:39.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:39.901" level="INFO">Running command 'ozone sh bucket delete o3:///03112-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:42.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:42.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:39.898" endtime="20200709 13:09:42.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:42.211" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:42.210" endtime="20200709 13:09:42.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:42.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:42.211" endtime="20200709 13:09:42.212"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:39.897" endtime="20200709 13:09:42.212"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:42.215" level="INFO">Running command 'ozone sh volume delete o3:///03112-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:44.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:44.518" level="INFO">${output} = Volume 03112-rpcwport is deleted</msg>
<status status="PASS" starttime="20200709 13:09:42.213" endtime="20200709 13:09:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:44.519" level="INFO">Volume 03112-rpcwport is deleted</msg>
<status status="PASS" starttime="20200709 13:09:44.518" endtime="20200709 13:09:44.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:44.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:44.519" endtime="20200709 13:09:44.519"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:42.212" endtime="20200709 13:09:44.520"></status>
</kw>
<status status="PASS" starttime="20200709 13:08:20.139" endtime="20200709 13:09:44.520"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:08:20.138" endtime="20200709 13:09:44.520" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:44.521" endtime="20200709 13:09:44.522"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:44.527" level="INFO">Running command 'ozone sh volume info /03112-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:47.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:09:47.060" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03112-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 13:09:44.524" endtime="20200709 13:09:47.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:47.061" level="INFO">VOLUME_NOT_FOUND Volume 03112-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 13:09:47.061" endtime="20200709 13:09:47.061"></status>
</kw>
<msg timestamp="20200709 13:09:47.062" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03112-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200709 13:09:44.523" endtime="20200709 13:09:47.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:47.062" endtime="20200709 13:09:47.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:47.065" level="INFO">Running command 'ozone sh volume create /03112-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:49.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:49.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:09:47.063" endtime="20200709 13:09:49.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:49.468" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:09:49.467" endtime="20200709 13:09:49.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:49.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:49.468" endtime="20200709 13:09:49.469"></status>
</kw>
<msg timestamp="20200709 13:09:49.469" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:09:47.062" endtime="20200709 13:09:49.469"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:49.469" endtime="20200709 13:09:49.469"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:49.472" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="03112-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:52.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:52.071" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 13:09:49.470" endtime="20200709 13:09:52.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:52.073" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:09:52.071" endtime="20200709 13:09:52.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:52.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:52.073" endtime="20200709 13:09:52.073"></status>
</kw>
<msg timestamp="20200709 13:09:52.074" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 13:09:49.470" endtime="20200709 13:09:52.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:52.074" endtime="20200709 13:09:52.074"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:52.077" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03112-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:54.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:54.718" level="INFO">${output} = {
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 13:09:52.075" endtime="20200709 13:09:54.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:54.719" level="INFO">{
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200709 13:09:54.718" endtime="20200709 13:09:54.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:54.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:54.719" endtime="20200709 13:09:54.719"></status>
</kw>
<msg timestamp="20200709 13:09:54.719" level="INFO">${result} = {
  "metadata": {},
  "name": "03112-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-09T13:09:49.315Z",
  "modificationTime": "2020-07-09T13:09:49.315Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200709 13:09:52.074" endtime="20200709 13:09:54.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:09:54.720" endtime="20200709 13:09:54.720"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:54.723" level="INFO">Running command 'ozone sh volume update /03112-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:09:57.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:09:57.361" level="INFO">${output} = {
  "metadata" : { },
  "name" : "03112-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:09:49.315Z",
  "modificationTime" : "2020-07-09T13:09:57.009Z",
  "a...</msg>
<status status="PASS" starttime="20200709 13:09:54.720" endtime="20200709 13:09:57.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:09:57.362" level="INFO">{
  "metadata" : { },
  "name" : "03112-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-09T13:09:49.315Z",
  "modificationTime" : "2020-07-09T13:09:57.009Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200709 13:09:57.361" endtime="20200709 13:09:57.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:09:57.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:09:57.362" endtime="20200709 13:09:57.363"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:54.720" endtime="20200709 13:09:57.363"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:09:57.367" level="INFO">Running command 'ozone sh volume info /03112-rpcwoscheme | jq -r '. | select(.name=="03112-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:00.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:00.125" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:09:57.364" endtime="20200709 13:10:00.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:00.126" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200709 13:10:00.125" endtime="20200709 13:10:00.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:00.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:00.126" endtime="20200709 13:10:00.127"></status>
</kw>
<msg timestamp="20200709 13:10:00.127" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200709 13:09:57.363" endtime="20200709 13:10:00.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:00.127" endtime="20200709 13:10:00.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:00.131" level="INFO">Running command 'ozone sh bucket create /03112-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:02.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:02.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:00.128" endtime="20200709 13:10:02.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:02.698" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:02.697" endtime="20200709 13:10:02.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:02.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:02.698" endtime="20200709 13:10:02.699"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:00.128" endtime="20200709 13:10:02.699"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:02.702" level="INFO">Running command 'ozone sh bucket info /03112-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:05.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:05.393" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200709 13:10:02.700" endtime="20200709 13:10:05.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:05.394" level="INFO">DISK</msg>
<status status="PASS" starttime="20200709 13:10:05.394" endtime="20200709 13:10:05.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:05.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:05.395" endtime="20200709 13:10:05.395"></status>
</kw>
<msg timestamp="20200709 13:10:05.395" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200709 13:10:02.699" endtime="20200709 13:10:05.395"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:05.395" endtime="20200709 13:10:05.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:05.399" level="INFO">Running command 'ozone sh bucket list /03112-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:08.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:08.076" level="INFO">${output} = 03112-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 13:10:05.396" endtime="20200709 13:10:08.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:08.078" level="INFO">03112-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 13:10:08.077" endtime="20200709 13:10:08.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:08.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:08.078" endtime="20200709 13:10:08.079"></status>
</kw>
<msg timestamp="20200709 13:10:08.079" level="INFO">${result} = 03112-rpcwoscheme</msg>
<status status="PASS" starttime="20200709 13:10:05.396" endtime="20200709 13:10:08.079"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:08.079" endtime="20200709 13:10:08.079"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:08.083" level="INFO">Running command 'ozone sh key put /03112-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:14.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:14.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:08.081" endtime="20200709 13:10:14.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:14.968" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:14.967" endtime="20200709 13:10:14.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:14.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:14.968" endtime="20200709 13:10:14.969"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:08.080" endtime="20200709 13:10:14.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:14.971" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:14.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:14.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:14.969" endtime="20200709 13:10:14.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:14.974" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:14.974" endtime="20200709 13:10:14.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:14.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:14.975" endtime="20200709 13:10:14.975"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:14.969" endtime="20200709 13:10:14.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:14.978" level="INFO">Running command 'ozone sh key get /03112-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:19.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:19.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:14.976" endtime="20200709 13:10:19.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:19.216" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:19.215" endtime="20200709 13:10:19.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:19.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:19.216" endtime="20200709 13:10:19.217"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:14.975" endtime="20200709 13:10:19.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:19.220" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:19.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:19.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:19.217" endtime="20200709 13:10:19.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:19.223" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:19.223" endtime="20200709 13:10:19.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:19.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:19.223" endtime="20200709 13:10:19.224"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:19.217" endtime="20200709 13:10:19.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:19.226" level="INFO">Running command 'ozone sh key put -t RATIS /03112-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:23.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:23.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:19.224" endtime="20200709 13:10:23.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:23.495" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:23.494" endtime="20200709 13:10:23.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:23.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:23.495" endtime="20200709 13:10:23.495"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:19.224" endtime="20200709 13:10:23.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:23.499" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:23.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:23.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:23.496" endtime="20200709 13:10:23.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:23.502" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:23.501" endtime="20200709 13:10:23.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:23.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:23.502" endtime="20200709 13:10:23.502"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:23.496" endtime="20200709 13:10:23.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:23.505" level="INFO">Running command 'ozone sh key get /03112-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:27.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:27.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:23.503" endtime="20200709 13:10:27.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:27.796" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:27.796" endtime="20200709 13:10:27.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:27.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:27.797" endtime="20200709 13:10:27.797"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:23.503" endtime="20200709 13:10:27.797"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:27.800" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:27.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:27.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:27.798" endtime="20200709 13:10:27.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:27.803" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:27.803" endtime="20200709 13:10:27.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:27.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:27.803" endtime="20200709 13:10:27.804"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:27.797" endtime="20200709 13:10:27.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:27.808" level="INFO">Running command 'ozone sh key info /03112-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:30.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:30.753" level="INFO">${output} = {
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:21.575Z",
  "modificationTime": "2020-07-09T13:10:23.075Z...</msg>
<status status="PASS" starttime="20200709 13:10:27.805" endtime="20200709 13:10:30.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:30.755" level="INFO">{
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:21.575Z",
  "modificationTime": "2020-07-09T13:10:23.075Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484059321073800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:10:30.754" endtime="20200709 13:10:30.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:30.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:30.755" endtime="20200709 13:10:30.756"></status>
</kw>
<msg timestamp="20200709 13:10:30.756" level="INFO">${result} = {
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:21.575Z",
  "modificationTime": "2020-07-09T13:10:23.075Z...</msg>
<status status="PASS" starttime="20200709 13:10:27.804" endtime="20200709 13:10:30.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:30.757" endtime="20200709 13:10:30.757"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:30.760" level="INFO">Running command 'ozone sh key delete /03112-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:33.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:33.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:30.758" endtime="20200709 13:10:33.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:33.204" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:33.204" endtime="20200709 13:10:33.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:33.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:33.205" endtime="20200709 13:10:33.205"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:30.757" endtime="20200709 13:10:33.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:33.209" level="INFO">Running command 'ozone sh key cp /03112-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:37.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:37.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:33.206" endtime="20200709 13:10:37.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:37.863" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:37.862" endtime="20200709 13:10:37.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:37.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:37.863" endtime="20200709 13:10:37.864"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:33.205" endtime="20200709 13:10:37.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:37.867" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:37.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:37.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:37.864" endtime="20200709 13:10:37.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:37.870" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:37.870" endtime="20200709 13:10:37.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:37.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:37.870" endtime="20200709 13:10:37.872"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:37.864" endtime="20200709 13:10:37.872"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:37.875" level="INFO">Running command 'ozone sh key get /03112-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:42.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:42.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:37.872" endtime="20200709 13:10:42.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:42.262" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:42.262" endtime="20200709 13:10:42.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:42.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:42.263" endtime="20200709 13:10:42.263"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:37.872" endtime="20200709 13:10:42.263"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:42.266" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:42.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:42.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:42.264" endtime="20200709 13:10:42.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:42.269" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:42.268" endtime="20200709 13:10:42.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:42.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:42.269" endtime="20200709 13:10:42.270"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:42.263" endtime="20200709 13:10:42.270"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:42.272" level="INFO">Running command 'ozone sh key delete /03112-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:44.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:44.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:42.270" endtime="20200709 13:10:44.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:44.705" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:44.705" endtime="20200709 13:10:44.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:44.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:44.705" endtime="20200709 13:10:44.706"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:42.270" endtime="20200709 13:10:44.706"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:44.710" level="INFO">Running command 'ozone sh key get /03112-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:47.085" level="INFO">${rc} = 255</msg>
<msg timestamp="20200709 13:10:47.085" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:10:44.707" endtime="20200709 13:10:47.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:47.086" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:10:47.085" endtime="20200709 13:10:47.086"></status>
</kw>
<msg timestamp="20200709 13:10:47.086" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200709 13:10:44.706" endtime="20200709 13:10:47.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:47.087" endtime="20200709 13:10:47.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:47.090" level="INFO">Running command 'ozone sh key get --force /03112-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:51.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:51.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:47.088" endtime="20200709 13:10:51.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:51.195" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:51.194" endtime="20200709 13:10:51.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:51.195" endtime="20200709 13:10:51.196"></status>
</kw>
<msg timestamp="20200709 13:10:51.196" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200709 13:10:47.087" endtime="20200709 13:10:51.196"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:51.196" endtime="20200709 13:10:51.197"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:51.200" level="INFO">Running command 'ozone sh key info /03112-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:53.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:53.906" level="INFO">${output} = {
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:10.389Z",
  "modificationTime": "2020-07-09T13:10:14.443Z",
  "...</msg>
<status status="PASS" starttime="20200709 13:10:51.197" endtime="20200709 13:10:53.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:53.907" level="INFO">{
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:10.389Z",
  "modificationTime": "2020-07-09T13:10:14.443Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104484058588053630,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200709 13:10:53.907" endtime="20200709 13:10:53.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:53.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:53.908" endtime="20200709 13:10:53.908"></status>
</kw>
<msg timestamp="20200709 13:10:53.909" level="INFO">${result} = {
  "volumeName": "03112-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-09T13:10:10.389Z",
  "modificationTime": "2020-07-09T13:10:14.443Z",
  "...</msg>
<status status="PASS" starttime="20200709 13:10:51.197" endtime="20200709 13:10:53.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:53.909" endtime="20200709 13:10:53.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:53.912" level="INFO">Running command 'ozone sh key list /03112-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:56.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:56.691" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200709 13:10:53.910" endtime="20200709 13:10:56.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:56.692" level="INFO">key1</msg>
<status status="PASS" starttime="20200709 13:10:56.691" endtime="20200709 13:10:56.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:56.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:56.692" endtime="20200709 13:10:56.693"></status>
</kw>
<msg timestamp="20200709 13:10:56.693" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200709 13:10:53.909" endtime="20200709 13:10:56.693"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:10:56.693" endtime="20200709 13:10:56.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:56.697" level="INFO">Running command 'ozone sh key rename /03112-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:10:59.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:10:59.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:10:56.694" endtime="20200709 13:10:59.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:10:59.208" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:10:59.207" endtime="20200709 13:10:59.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:10:59.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:10:59.208" endtime="20200709 13:10:59.209"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:56.694" endtime="20200709 13:10:59.209"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:10:59.212" level="INFO">Running command 'ozone sh key list /03112-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:11:01.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:11:01.861" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200709 13:10:59.209" endtime="20200709 13:11:01.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:11:01.862" level="INFO">key2</msg>
<status status="PASS" starttime="20200709 13:11:01.861" endtime="20200709 13:11:01.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:11:01.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:11:01.862" endtime="20200709 13:11:01.863"></status>
</kw>
<msg timestamp="20200709 13:11:01.863" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200709 13:10:59.209" endtime="20200709 13:11:01.863"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:11:01.863" endtime="20200709 13:11:01.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:11:01.866" level="INFO">Running command 'ozone sh key delete /03112-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:11:04.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:11:04.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:11:01.864" endtime="20200709 13:11:04.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:11:04.280" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:11:04.280" endtime="20200709 13:11:04.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:11:04.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:11:04.281" endtime="20200709 13:11:04.281"></status>
</kw>
<status status="PASS" starttime="20200709 13:11:01.864" endtime="20200709 13:11:04.281"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:08.080" endtime="20200709 13:11:04.281"></status>
</kw>
<status status="PASS" starttime="20200709 13:10:08.080" endtime="20200709 13:11:04.282"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:11:04.284" level="INFO">Running command 'ozone sh bucket delete /03112-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:11:06.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:11:06.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:11:04.282" endtime="20200709 13:11:06.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:11:06.633" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:11:06.632" endtime="20200709 13:11:06.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:11:06.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:11:06.633" endtime="20200709 13:11:06.634"></status>
</kw>
<status status="PASS" starttime="20200709 13:11:04.282" endtime="20200709 13:11:06.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:11:06.638" level="INFO">Running command 'ozone sh volume delete /03112-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:11:09.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:11:09.052" level="INFO">${output} = Volume 03112-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200709 13:11:06.635" endtime="20200709 13:11:09.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:11:09.053" level="INFO">Volume 03112-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200709 13:11:09.053" endtime="20200709 13:11:09.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:11:09.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:11:09.053" endtime="20200709 13:11:09.054"></status>
</kw>
<status status="PASS" starttime="20200709 13:11:06.634" endtime="20200709 13:11:09.054"></status>
</kw>
<status status="PASS" starttime="20200709 13:09:44.522" endtime="20200709 13:11:09.054"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200709 13:09:44.521" endtime="20200709 13:11:09.054" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200709 13:05:51.979" endtime="20200709 13:11:09.056"></status>
</suite>
<status status="PASS" starttime="20200709 13:04:48.325" endtime="20200709 13:11:09.060"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
