<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 13:50:53.487" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:50:53.545" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:50:53.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:50:53.546" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:50:53.539" endtime="20200709 13:50:53.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:50:53.548" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:50:53.547" endtime="20200709 13:50:53.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:50:53.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:50:53.548" endtime="20200709 13:50:53.548"></status>
</kw>
<msg timestamp="20200709 13:50:53.549" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:50:53.539" endtime="20200709 13:50:53.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:50:53.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:50:53.549" endtime="20200709 13:50:53.550"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:50:53.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:50:53.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:50:53.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:50:53.551" endtime="20200709 13:50:53.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:50:53.579" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:50:53.578" endtime="20200709 13:50:53.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:50:53.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:50:53.579" endtime="20200709 13:50:53.580"></status>
</kw>
<status status="PASS" starttime="20200709 13:50:53.550" endtime="20200709 13:50:53.580"></status>
</kw>
<status status="PASS" starttime="20200709 13:50:53.550" endtime="20200709 13:50:53.580"></status>
</kw>
<status status="PASS" starttime="20200709 13:50:53.538" endtime="20200709 13:50:53.580"></status>
</kw>
<status status="PASS" starttime="20200709 13:50:53.538" endtime="20200709 13:50:53.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:50:53.584" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:02.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:02.303" level="INFO">${output} = 2020-07-09 13:50:55,043 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:50:55,199 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:50:53.581" endtime="20200709 13:51:02.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:02.304" level="INFO">2020-07-09 13:50:55,043 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:50:55,199 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:50:55,199 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-09 13:50:56,795 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-09 13:50:56,795 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 13:50:56,796 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 13:50:56,796 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-09 13:50:56,796 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-09 13:50:56,796 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 13:50:56,796 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 13:50:56,811 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 13:50:56,824 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-09 13:50:56,855 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-02814, with testuser/scm@EXAMPLE.COM as owner.
2020-07-09 13:50:56,888 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-02814/bucket-0-04839, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:50:57,410 [pool-2-thread-7] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:50:57,853 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,146
Average Time spent in key write: 00:00:00,460
Total bytes written: 10250
Total Execution time: 00:00:06,588
***************************************************</msg>
<status status="PASS" starttime="20200709 13:51:02.303" endtime="20200709 13:51:02.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:02.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:02.304" endtime="20200709 13:51:02.305"></status>
</kw>
<status status="PASS" starttime="20200709 13:50:53.580" endtime="20200709 13:51:02.305"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:50:53.537" endtime="20200709 13:51:02.305" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:02.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:02.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:02.314" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:02.309" endtime="20200709 13:51:02.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:02.315" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:02.314" endtime="20200709 13:51:02.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:02.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:02.315" endtime="20200709 13:51:02.315"></status>
</kw>
<msg timestamp="20200709 13:51:02.316" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:02.308" endtime="20200709 13:51:02.316"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:02.320" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:02.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:02.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:02.317" endtime="20200709 13:51:02.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:02.335" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:02.334" endtime="20200709 13:51:02.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:02.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:02.335" endtime="20200709 13:51:02.335"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:02.316" endtime="20200709 13:51:02.335"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:02.316" endtime="20200709 13:51:02.336"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:02.308" endtime="20200709 13:51:02.336"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:02.307" endtime="20200709 13:51:02.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:02.340" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:02.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:02.560" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:02.336" endtime="20200709 13:51:02.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:02.561" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    357      0 --:--:-- --:--:-- --:--:--   356
100    77  100    77    0     0    357      0 --:--:-- --:--:-- --:--:--   356
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200709 13:51:02.560" endtime="20200709 13:51:02.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:02.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:02.561" endtime="20200709 13:51:02.562"></status>
</kw>
<msg timestamp="20200709 13:51:02.562" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:02.336" endtime="20200709 13:51:02.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:02.562" endtime="20200709 13:51:02.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:02.569" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:02.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:02.624" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:02.563" endtime="20200709 13:51:02.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:02.626" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0  59906      0 --:--:-- --:--:-- --:--:-- 61204
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200709 13:51:02.625" endtime="20200709 13:51:02.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:02.626" endtime="20200709 13:51:02.627"></status>
</kw>
<msg timestamp="20200709 13:51:02.627" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:02.563" endtime="20200709 13:51:02.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 13:51:02.628" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:02 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0  59906      0 --:--:-- --:--:-- --:--:-- 61204
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 13:51:02.627" endtime="20200709 13:51:02.628"></status>
</kw>
<status status="FAIL" starttime="20200709 13:51:02.307" endtime="20200709 13:51:02.628"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:12.633" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:12.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:12.637" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:12.631" endtime="20200709 13:51:12.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:12.638" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:12.637" endtime="20200709 13:51:12.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:12.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:12.638" endtime="20200709 13:51:12.638"></status>
</kw>
<msg timestamp="20200709 13:51:12.639" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:12.630" endtime="20200709 13:51:12.639"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:12.642" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:12.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:12.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:12.639" endtime="20200709 13:51:12.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:12.657" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:12.656" endtime="20200709 13:51:12.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:12.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:12.657" endtime="20200709 13:51:12.658"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:12.639" endtime="20200709 13:51:12.658"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:12.639" endtime="20200709 13:51:12.658"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:12.630" endtime="20200709 13:51:12.658"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:12.629" endtime="20200709 13:51:12.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:12.662" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:12.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:12.686" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:12.659" endtime="20200709 13:51:12.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:12.687" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7157      0 --:--:-- --:--:-- --:--:--  7700
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200709 13:51:12.687" endtime="20200709 13:51:12.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:12.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:12.688" endtime="20200709 13:51:12.688"></status>
</kw>
<msg timestamp="20200709 13:51:12.688" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:12.658" endtime="20200709 13:51:12.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:12.689" endtime="20200709 13:51:12.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:12.692" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:12.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:12.711" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:12.690" endtime="20200709 13:51:12.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:12.712" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   220k      0 --:--:-- --:--:-- --:--:--  225k
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200709 13:51:12.712" endtime="20200709 13:51:12.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:12.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:12.712" endtime="20200709 13:51:12.713"></status>
</kw>
<msg timestamp="20200709 13:51:12.713" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:12.689" endtime="20200709 13:51:12.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 13:51:12.714" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:12 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   220k      0 --:--:-- --:--:-- --:--:--  225k
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 13:51:12.713" endtime="20200709 13:51:12.714"></status>
</kw>
<status status="FAIL" starttime="20200709 13:51:12.629" endtime="20200709 13:51:12.714"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:22.720" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:22.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:22.717" endtime="20200709 13:51:22.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:22.724" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:22.723" endtime="20200709 13:51:22.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:22.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:22.724" endtime="20200709 13:51:22.725"></status>
</kw>
<msg timestamp="20200709 13:51:22.725" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:22.717" endtime="20200709 13:51:22.725"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:22.728" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:22.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:22.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:22.726" endtime="20200709 13:51:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:22.744" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:22.744" endtime="20200709 13:51:22.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:22.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:22.744" endtime="20200709 13:51:22.745"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:22.726" endtime="20200709 13:51:22.745"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:22.725" endtime="20200709 13:51:22.745"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:22.716" endtime="20200709 13:51:22.745"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:22.716" endtime="20200709 13:51:22.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:22.748" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:22.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:22.761" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:22.746" endtime="20200709 13:51:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:22.762" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  12312      0 --:--:-- --:--:-- --:--:-- 12833
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200709 13:51:22.762" endtime="20200709 13:51:22.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:22.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:22.763" endtime="20200709 13:51:22.763"></status>
</kw>
<msg timestamp="20200709 13:51:22.763" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:22.745" endtime="20200709 13:51:22.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:22.763" endtime="20200709 13:51:22.764"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:22.769" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:22.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:22.788" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:22.764" endtime="20200709 13:51:22.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:22.789" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   240k      0 --:--:-- --:--:-- --:--:--  244k
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200709 13:51:22.789" endtime="20200709 13:51:22.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:22.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:22.790" endtime="20200709 13:51:22.790"></status>
</kw>
<msg timestamp="20200709 13:51:22.790" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:22.764" endtime="20200709 13:51:22.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 13:51:22.791" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:22 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   240k      0 --:--:-- --:--:-- --:--:--  244k
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 13:51:22.790" endtime="20200709 13:51:22.791"></status>
</kw>
<status status="FAIL" starttime="20200709 13:51:22.715" endtime="20200709 13:51:22.791"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.797" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.801" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:32.795" endtime="20200709 13:51:32.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.802" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:32.801" endtime="20200709 13:51:32.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.802" endtime="20200709 13:51:32.802"></status>
</kw>
<msg timestamp="20200709 13:51:32.803" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:32.794" endtime="20200709 13:51:32.803"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.806" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:32.803" endtime="20200709 13:51:32.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.821" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:32.821" endtime="20200709 13:51:32.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.822" endtime="20200709 13:51:32.822"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:32.803" endtime="20200709 13:51:32.822"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:32.803" endtime="20200709 13:51:32.822"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:32.794" endtime="20200709 13:51:32.822"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:32.793" endtime="20200709 13:51:32.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.825" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.840" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.823" endtime="20200709 13:51:32.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.841" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  21713      0 --:--:-- --:--:-- --:--:-- 22750
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":1},{"ContainerID":3,"NumberOfKeys":6},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200709 13:51:32.840" endtime="20200709 13:51:32.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.841" endtime="20200709 13:51:32.841"></status>
</kw>
<msg timestamp="20200709 13:51:32.841" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.823" endtime="20200709 13:51:32.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.842" endtime="20200709 13:51:32.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.846" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.860" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.843" endtime="20200709 13:51:32.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.862" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   326k      0 --:--:-- --:--:-- --:--:--  341k
* Connection #0 to host recon left intact
[{"volume":"vol-2-32706","bucket":"bucket-4-26644","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-2-35087","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-0-56759","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-0-78478","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-4-54173","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-1-78596","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-2-96664","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-3-94879","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-1-76234","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-4-72420","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-3-88893","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-1-35075","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-0-83425","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-0-23569","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-4-71222","fileSize":16384,"count":5},{"volume":"vol-2-32706","bucket":"bucket-2-64838","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-3-85073","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-1-45419","fileSize":16384,"count":5},{"volume":"vol-0-58097","bucket":"bucket-4-97743","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-3-03665","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-3-73175","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-0-80762","fileSize":16384,"count":5},{"volume":"vol-4-71116","bucket":"bucket-1-01867","fileSize":16384,"count":5},{"volume":"vol-1-50788","bucket":"bucket-2-40646","fileSize":16384,"count":5},{"volume":"vol-3-98147","bucket":"bucket-2-14791","fileSize":16384,"count":5},{"volume":"32995-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"32995-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"32995-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest358","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-12382","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-90710","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-90710","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-48262","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-77073","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-44020","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-87494","fileSize":1024,"count":2},{"volume":"vol-0-02814","bucket":"bucket-0-04839","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200709 13:51:32.860" endtime="20200709 13:51:32.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.862" endtime="20200709 13:51:32.862"></status>
</kw>
<msg timestamp="20200709 13:51:32.863" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.842" endtime="20200709 13:51:32.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.863" endtime="20200709 13:51:32.863"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:32.792" endtime="20200709 13:51:32.863"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:02.306" endtime="20200709 13:51:32.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:51:02.306" endtime="20200709 13:51:32.864" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.867" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.906" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.865" endtime="20200709 13:51:32.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.907" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  55233      0 --:--:-- --:--:-- --:--:-- 56625
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"b905c064-2937-4c96-9ebe-8f5895235c72","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594302688380,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361506304},"pipelines":[{"pipelineID":"81253078-fb10-4a21-8c75-dfbc80764bb3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"457709af-ce63-4223-b36d-0ddad0ebb85b","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"c8265e30-79b7-4d41-b187-9281db58a2e2","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594302688353,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361526784},"pipelines":[{"pipelineID":"81253078-fb10-4a21-8c75-dfbc80764bb3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"0d9b559b-596a-4818-8ab3-857b6ea503d0","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"c8277e10-b9ff-46d8-a054-41471b755a1b","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594302688334,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25361506304},"pipelines":[{"pipelineID":"81253078-fb10-4a21-8c75-dfbc80764bb3","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"0206b489-e1a1-49d1-8c3d-882f74380ca5","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200709 13:51:32.906" endtime="20200709 13:51:32.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.907" endtime="20200709 13:51:32.908"></status>
</kw>
<msg timestamp="20200709 13:51:32.908" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.865" endtime="20200709 13:51:32.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.908" endtime="20200709 13:51:32.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.909" endtime="20200709 13:51:32.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.909" endtime="20200709 13:51:32.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.910" endtime="20200709 13:51:32.910"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.914" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.942" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.911" endtime="20200709 13:51:32.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.943" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  61710      0 --:--:-- --:--:-- --:--:-- 62181
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"81253078-fb10-4a21-8c75-dfbc80764bb3","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1275132,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"0206b489-e1a1-49d1-8c3d-882f74380ca5","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1275161,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"0d9b559b-596a-4818-8ab3-857b6ea503d0","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1275935,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"457709af-ce63-4223-b36d-0ddad0ebb85b","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1275674,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200709 13:51:32.942" endtime="20200709 13:51:32.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.943" endtime="20200709 13:51:32.943"></status>
</kw>
<msg timestamp="20200709 13:51:32.943" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.910" endtime="20200709 13:51:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.944" endtime="20200709 13:51:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.944" endtime="20200709 13:51:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.944" endtime="20200709 13:51:32.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.945" endtime="20200709 13:51:32.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.945" endtime="20200709 13:51:32.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.947" endtime="20200709 13:51:32.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.956" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:32.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:32.970" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.948" endtime="20200709 13:51:32.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:32.971" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  14312      0 --:--:-- --:--:-- --:--:-- 15500
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76084539392},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200709 13:51:32.970" endtime="20200709 13:51:32.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:32.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:32.971" endtime="20200709 13:51:32.972"></status>
</kw>
<msg timestamp="20200709 13:51:32.972" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.948" endtime="20200709 13:51:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.972" endtime="20200709 13:51:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.973" endtime="20200709 13:51:32.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:32.973" endtime="20200709 13:51:32.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:32.976" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:33.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:33.006" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.974" endtime="20200709 13:51:33.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:33.007" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:32 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  19123      0 --:--:-- --:--:-- --:--:-- 19739
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594301449154,"lastReportTimestamp":1594302619071},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594301449231,"lastReportTimestamp":1594302619180},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594301448787,"lastReportTimestamp":1594302618470}]</msg>
<status status="PASS" starttime="20200709 13:51:33.006" endtime="20200709 13:51:33.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:33.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:33.007" endtime="20200709 13:51:33.008"></status>
</kw>
<msg timestamp="20200709 13:51:33.008" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:32.973" endtime="20200709 13:51:33.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:33.008" endtime="20200709 13:51:33.009"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:51:32.864" endtime="20200709 13:51:33.009" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:33.015" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:33.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:33.018" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:33.012" endtime="20200709 13:51:33.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:33.019" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:33.018" endtime="20200709 13:51:33.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:33.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:33.019" endtime="20200709 13:51:33.019"></status>
</kw>
<msg timestamp="20200709 13:51:33.020" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:33.012" endtime="20200709 13:51:33.020"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:33.022" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:33.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:33.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:33.021" endtime="20200709 13:51:33.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:33.038" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:33.037" endtime="20200709 13:51:33.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:33.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:33.038" endtime="20200709 13:51:33.039"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:33.020" endtime="20200709 13:51:33.039"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:33.020" endtime="20200709 13:51:33.039"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:33.012" endtime="20200709 13:51:33.039"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:33.011" endtime="20200709 13:51:33.039"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:33.041" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:33.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:33.081" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:33.040" endtime="20200709 13:51:33.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:33.082" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  20938      0 --:--:-- --:--:-- --:--:-- 21047
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x16e3f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.2) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQKiA9TeDUAoTMvI8KmTcx0+IYcccgopuujBY615fXlUkXqM7dL88xKfSDb1r37SmD2JT+q7qwcvw99cHBdCWloIVhAsozupOB8wmaAFl7GIuq2SLCIw0ufWkE0Z7P9nbF6rdEnBFxIR1S2I8n+jDY9yPpXRoIK3nEXFj5yV+ps/fmB5gwj2jFAs/BiXfsZo0PNpv9/AIXGkGMLIiVJpEWakwHZymAPR8u7JgMz4ZRjRqIfodokhkJ1eXJVofxSkQWrWXzxh4TpwZ4CUxlXISGuMfsL5AA57v28Aj7auyl1rqxiNcHyRM4dVbCgGH7TTrAe/sgshqkOVngG7uQVWXaQAGKWkgdIwgc+gAwIBEqKBxwSBxB/KCxHDdzxJn1a60oibp8nOdsAUZAgaUntWqRn7Km2PLc5koxr5BRC2Aac3CegWDMMiPtxuaIFpNU+LVbwFnR4Ok3rHnQk9T3GApRwQ0l/v3HXZpeo/i+KQGX6Bmapf0+GbUaunFFx4SP/oMx1THaC2OeQ877BBMQ7zqmfokCSFEdDzq1XSJAoE3VM9OApLPuNPj4JZ7SEibeahBW0zg+vg1gggOvzXhzPNO+ry/hD+CMngKXabynDYap8g1vKUxwL3mTc=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:51:33 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:51:33 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:33 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 13:51:33 GMT
&lt; Date: Thu, 09 Jul 2020 13:51:33 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCavjVam1HYy3ZfBtbuOQ6esp7iRtLUNcZ8wwjHtcGGV/qcNVCdTzagjGvhs9026jAe/wQ2bhAmoUjV8qsl0nQCRvv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338693075&amp;s=w9KLeFYeptFAh9oENtN4FXtqxqhh5OL4CreRnIaPSSs="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 12:39:52 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  69429      0 --:--:-- --:--:-- --:--:-- 69429
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200709 13:51:33.082" endtime="20200709 13:51:33.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:33.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:33.083" endtime="20200709 13:51:33.083"></status>
</kw>
<msg timestamp="20200709 13:51:33.084" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:51:33.039" endtime="20200709 13:51:33.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200709 13:51:33.084" endtime="20200709 13:51:33.084"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:51:33.010" endtime="20200709 13:51:33.085" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200709 13:50:53.514" endtime="20200709 13:51:33.086"></status>
</suite>
<status status="PASS" starttime="20200709 13:50:53.488" endtime="20200709 13:51:33.089"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
