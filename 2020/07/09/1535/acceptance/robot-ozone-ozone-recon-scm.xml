<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 13:20:22.072" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:22.118" endtime="20200709 13:20:22.118"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:22.123" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:30.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:30.379" level="INFO">${output} = 2020-07-09 13:20:23,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:20:23,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:20:22.118" endtime="20200709 13:20:30.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:30.381" level="INFO">2020-07-09 13:20:23,571 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:20:23,768 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:20:23,768 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 13:20:24,855 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-09 13:20:24,856 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 13:20:24,857 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 13:20:24,857 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-09 13:20:24,857 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-09 13:20:24,857 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 13:20:24,857 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 13:20:24,871 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 13:20:24,881 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-09 13:20:24,930 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-65797, with hadoop as owner.
2020-07-09 13:20:24,990 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-65797/bucket-0-56677, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:20:25,592 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:20:25,884 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,123
Average Time spent in key write: 00:00:00,576
Total bytes written: 10250
Total Execution time: 00:00:06,093
***************************************************</msg>
<status status="PASS" starttime="20200709 13:20:30.380" endtime="20200709 13:20:30.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:30.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:30.381" endtime="20200709 13:20:30.381"></status>
</kw>
<status status="PASS" starttime="20200709 13:20:22.118" endtime="20200709 13:20:30.381"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:20:22.117" endtime="20200709 13:20:30.382" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:30.384" endtime="20200709 13:20:30.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:30.388" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:30.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:30.603" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:30.385" endtime="20200709 13:20:30.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:30.604" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    370      0 --:--:-- --:--:-- --:--:--   370
100    77  100    77    0     0    370      0 --:--:-- --:--:-- --:--:--   368
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200709 13:20:30.603" endtime="20200709 13:20:30.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:30.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:30.604" endtime="20200709 13:20:30.605"></status>
</kw>
<msg timestamp="20200709 13:20:30.605" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:30.385" endtime="20200709 13:20:30.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:30.605" endtime="20200709 13:20:30.606"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:30.609" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:30.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:30.634" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:30.606" endtime="20200709 13:20:30.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:30.635" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2867
&lt; 
{ [data not shown]

100  2867  100  2867    0     0   146k      0 --:--:-- --:--:-- --:--:--  147k
* Connection #0 to host recon left intact
[{"volume":"vol-4-48040","bucket":"bucket-2-60229","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-4-44244","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-4-38311","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-0-30207","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-0-24563","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-1-29958","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-3-96248","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-1-12503","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-3-82534","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-1-71864","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-0-37296","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-3-94970","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-3-67440","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-4-78874","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-4-73404","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-3-91500","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-2-11370","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-1-80403","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-1-84557","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-2-77942","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-4-01555","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-0-06568","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-2-16852","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-0-10216","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-2-73057","fileSize":16384,"count":5},{"volume":"03112-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"03112-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-91867","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-84865","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-34648","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-84865","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-32923","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200709 13:20:30.634" endtime="20200709 13:20:30.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:30.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:30.635" endtime="20200709 13:20:30.635"></status>
</kw>
<msg timestamp="20200709 13:20:30.636" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:30.606" endtime="20200709 13:20:30.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200709 13:20:30.637" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:30 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2867
&lt; 
{ [data not shown]

100  2867  100  2867    0     0   146k      0 --:--:-- --:--:-- --:--:--  147k
* Connection #0 to host recon left intact
[{"volume":"vol-4-48040","bucket":"bucket-2-60229","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-4-44244","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-4-38311","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-0-30207","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-0-24563","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-1-29958","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-3-96248","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-1-12503","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-3-82534","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-1-71864","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-0-37296","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-3-94970","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-3-67440","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-4-78874","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-4-73404","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-3-91500","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-2-11370","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-1-80403","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-1-84557","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-2-77942","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-4-01555","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-0-06568","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-2-16852","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-0-10216","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-2-73057","fileSize":16384,"count":5},{"volume":"03112-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"03112-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-91867","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-84865","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-34648","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-84865","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-32923","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200709 13:20:30.636" endtime="20200709 13:20:30.637"></status>
</kw>
<status status="FAIL" starttime="20200709 13:20:30.384" endtime="20200709 13:20:30.637"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.639" endtime="20200709 13:20:40.640"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.644" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.662" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.641" endtime="20200709 13:20:40.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.663" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  17754      0 --:--:-- --:--:-- --:--:-- 18200
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20200709 13:20:40.663" endtime="20200709 13:20:40.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.664" endtime="20200709 13:20:40.664"></status>
</kw>
<msg timestamp="20200709 13:20:40.664" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.640" endtime="20200709 13:20:40.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.664" endtime="20200709 13:20:40.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.668" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.685" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.665" endtime="20200709 13:20:40.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.687" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3079
&lt; 
{ [data not shown]

100  3079  100  3079    0     0   261k      0 --:--:-- --:--:-- --:--:--  273k
* Connection #0 to host recon left intact
[{"volume":"vol-4-48040","bucket":"bucket-2-60229","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-4-44244","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-4-38311","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-0-30207","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-0-24563","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-1-29958","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-3-96248","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-1-12503","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-3-82534","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-1-71864","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-0-37296","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-3-94970","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-3-67440","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-4-78874","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-4-73404","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-3-91500","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-2-11370","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-1-80403","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-1-84557","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-2-77942","fileSize":16384,"count":5},{"volume":"vol-2-75847","bucket":"bucket-4-01555","fileSize":16384,"count":5},{"volume":"vol-4-48040","bucket":"bucket-0-06568","fileSize":16384,"count":5},{"volume":"vol-0-83082","bucket":"bucket-2-16852","fileSize":16384,"count":5},{"volume":"vol-3-31497","bucket":"bucket-0-10216","fileSize":16384,"count":5},{"volume":"vol-1-32684","bucket":"bucket-2-73057","fileSize":16384,"count":5},{"volume":"03112-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"03112-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"03112-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-91867","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-84865","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-34648","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-84865","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-32923","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-05647","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-55046","fileSize":1024,"count":1},{"volume":"vol-0-65797","bucket":"bucket-0-56677","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200709 13:20:40.686" endtime="20200709 13:20:40.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.688" endtime="20200709 13:20:40.688"></status>
</kw>
<msg timestamp="20200709 13:20:40.689" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.665" endtime="20200709 13:20:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.689" endtime="20200709 13:20:40.689"></status>
</kw>
<status status="PASS" starttime="20200709 13:20:40.638" endtime="20200709 13:20:40.689"></status>
</kw>
<status status="PASS" starttime="20200709 13:20:30.383" endtime="20200709 13:20:40.689"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:20:30.382" endtime="20200709 13:20:40.689" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.696" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.731" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.693" endtime="20200709 13:20:40.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.732" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0  55956      0 --:--:-- --:--:-- --:--:-- 56800
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"f6d4929a-d569-4eed-9754-f1b9312dc899","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1594300826538,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26035953664},"pipelines":[{"pipelineID":"ab22dc9b-5240-48ec-886b-59e9f454bd23","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"032df196-b428-42ed-81b8-ee709a045d3c","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"62eec98f-77e6-46f3-867c-344b24469590","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1594300826486,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26035953664},"pipelines":[{"pipelineID":"ab22dc9b-5240-48ec-886b-59e9f454bd23","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"6733932d-84f9-42eb-9364-fb37dfd7c620","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"06333a65-bf30-4f04-bbe4-e441471ba0b3","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1594300826504,"storageReport":{"capacity":89311358976,"used":8192,"remaining":26061131776},"pipelines":[{"pipelineID":"ab22dc9b-5240-48ec-886b-59e9f454bd23","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"1fd0231f-3775-4577-8ea5-a9b9dc1ebd37","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":2}]}</msg>
<status status="PASS" starttime="20200709 13:20:40.732" endtime="20200709 13:20:40.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.733" endtime="20200709 13:20:40.733"></status>
</kw>
<msg timestamp="20200709 13:20:40.733" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.692" endtime="20200709 13:20:40.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.733" endtime="20200709 13:20:40.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.734" endtime="20200709 13:20:40.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.734" endtime="20200709 13:20:40.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.735" endtime="20200709 13:20:40.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.739" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.761" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.736" endtime="20200709 13:20:40.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.762" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1244
&lt; 
{ [data not shown]

100  1244  100  1244    0     0  72927      0 --:--:-- --:--:-- --:--:-- 77750
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"ab22dc9b-5240-48ec-886b-59e9f454bd23","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default","ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":969362,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"1fd0231f-3775-4577-8ea5-a9b9dc1ebd37","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":970461,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6733932d-84f9-42eb-9364-fb37dfd7c620","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":969459,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"032df196-b428-42ed-81b8-ee709a045d3c","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":969394,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200709 13:20:40.762" endtime="20200709 13:20:40.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.763" endtime="20200709 13:20:40.763"></status>
</kw>
<msg timestamp="20200709 13:20:40.763" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.735" endtime="20200709 13:20:40.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.764" endtime="20200709 13:20:40.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.764" endtime="20200709 13:20:40.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.764" endtime="20200709 13:20:40.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.765" endtime="20200709 13:20:40.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.765" endtime="20200709 13:20:40.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.766" endtime="20200709 13:20:40.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.769" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.783" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.767" endtime="20200709 13:20:40.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.784" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  21825      0 --:--:-- --:--:-- --:--:-- 23250
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":78133039104},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200709 13:20:40.784" endtime="20200709 13:20:40.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.785" endtime="20200709 13:20:40.785"></status>
</kw>
<msg timestamp="20200709 13:20:40.786" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.766" endtime="20200709 13:20:40.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.786" endtime="20200709 13:20:40.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.786" endtime="20200709 13:20:40.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.787" endtime="20200709 13:20:40.787"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.791" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.818" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.788" endtime="20200709 13:20:40.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.819" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  18746      0 --:--:-- --:--:-- --:--:-- 19000
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1594299925125,"lastReportTimestamp":1594300794979},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1594299925078,"lastReportTimestamp":1594300764922},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1594299925170,"lastReportTimestamp":1594300765168}]</msg>
<status status="PASS" starttime="20200709 13:20:40.819" endtime="20200709 13:20:40.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.819" endtime="20200709 13:20:40.820"></status>
</kw>
<msg timestamp="20200709 13:20:40.820" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.787" endtime="20200709 13:20:40.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.820" endtime="20200709 13:20:40.821"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:20:40.691" endtime="20200709 13:20:40.821" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.822" endtime="20200709 13:20:40.823"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:20:40.825" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:20:40.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:20:40.839" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.823" endtime="20200709 13:20:40.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:20:40.840" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Date: Thu, 09 Jul 2020 13:20:40 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Thu, 09 Jul 2020 12:39:52 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   263k      0 --:--:-- --:--:-- --:--:--  276k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.839" endtime="20200709 13:20:40.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:20:40.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:20:40.840" endtime="20200709 13:20:40.841"></status>
</kw>
<msg timestamp="20200709 13:20:40.841" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200709 13:20:40.823" endtime="20200709 13:20:40.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200709 13:20:40.841" endtime="20200709 13:20:40.841"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:20:40.822" endtime="20200709 13:20:40.841" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200709 13:20:22.095" endtime="20200709 13:20:40.843"></status>
</suite>
<status status="PASS" starttime="20200709 13:20:22.073" endtime="20200709 13:20:40.845"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
