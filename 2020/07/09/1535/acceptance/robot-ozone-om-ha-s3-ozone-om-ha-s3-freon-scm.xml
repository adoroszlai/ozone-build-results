<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 12:57:26.153" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:57:26.200" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:57:34.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:57:34.144" level="INFO">${output} = 2020-07-09 12:57:27,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:27,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:26.195" endtime="20200709 12:57:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:57:34.145" level="INFO">2020-07-09 12:57:27,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:27,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 12:57:27,609 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 12:57:28,646 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-09 12:57:28,647 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 12:57:28,648 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 12:57:28,648 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-09 12:57:28,648 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-09 12:57:28,648 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 12:57:28,648 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 12:57:28,655 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 12:57:28,669 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:28,721 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-78896, with hadoop as owner.
2020-07-09 12:57:28,788 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-78896/bucket-0-93195, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 12:57:29,364 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 12:57:29,674 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,101
Average Time spent in bucket creation: 00:00:00,029
Average Time spent in key creation: 00:00:00,094
Average Time spent in key write: 00:00:00,635
Total bytes written: 10240
Total Execution time: 00:00:06,010
***************************************************</msg>
<status status="PASS" starttime="20200709 12:57:34.144" endtime="20200709 12:57:34.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:57:34.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:57:34.145" endtime="20200709 12:57:34.145"></status>
</kw>
<msg timestamp="20200709 12:57:34.146" level="INFO">${result} = 2020-07-09 12:57:27,473 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:27,609 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:26.195" endtime="20200709 12:57:34.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 12:57:34.146" endtime="20200709 12:57:34.147"></status>
</kw>
<status status="PASS" starttime="20200709 12:57:34.146" endtime="20200709 12:57:34.147"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 12:57:26.194" endtime="20200709 12:57:34.147" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:57:34.151" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:57:39.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:57:39.419" level="INFO">${output} = 2020-07-09 12:57:35,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:35,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:34.149" endtime="20200709 12:57:39.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:57:39.420" level="INFO">2020-07-09 12:57:35,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:35,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 12:57:35,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 12:57:35,730 [main] INFO freon.BaseFreonGenerator: Executing test with prefix v9owod6efw
2020-07-09 12:57:35,749 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:36,646 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-09 12:57:36,736 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 12:57:36,758 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:37,359 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 12:57:37,759 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:38,759 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 12:57:38,950 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1251.498821, max=1251.498821, mean=1251.498821, stddev=0.0, median=1251.498821, p75=1251.498821, p95=1251.498821, p98=1251.498821, p99=1251.498821, p999=1251.498821, mean_rate=0.46516055045471477, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 12:57:38,950 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-09 12:57:38,954 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 12:57:38,954 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 12:57:39.419" endtime="20200709 12:57:39.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:57:39.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:57:39.420" endtime="20200709 12:57:39.420"></status>
</kw>
<msg timestamp="20200709 12:57:39.421" level="INFO">${result} = 2020-07-09 12:57:35,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:35,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:34.148" endtime="20200709 12:57:39.421"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 12:57:39.421" endtime="20200709 12:57:39.421"></status>
</kw>
<status status="PASS" starttime="20200709 12:57:39.421" endtime="20200709 12:57:39.421"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 12:57:34.147" endtime="20200709 12:57:39.422" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:57:39.426" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:57:43.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:57:43.503" level="INFO">${output} = 2020-07-09 12:57:41,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:41,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:39.423" endtime="20200709 12:57:43.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:57:43.504" level="INFO">2020-07-09 12:57:41,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:41,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 12:57:41,245 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 12:57:41,416 [main] INFO freon.BaseFreonGenerator: Executing test with prefix w2nnxfuv7e
2020-07-09 12:57:41,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:42,441 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:43,444 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 12:57:43,463 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=117.750853, max=117.750853, mean=117.750853, stddev=0.0, median=117.750853, p75=117.750853, p95=117.750853, p98=117.750853, p99=117.750853, p999=117.750853, mean_rate=0.9694322594618745, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 12:57:43,466 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 12:57:43,477 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 12:57:43,477 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 12:57:43.503" endtime="20200709 12:57:43.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:57:43.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:57:43.504" endtime="20200709 12:57:43.505"></status>
</kw>
<msg timestamp="20200709 12:57:43.505" level="INFO">${result} = 2020-07-09 12:57:41,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:41,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:39.423" endtime="20200709 12:57:43.505"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 12:57:43.506" endtime="20200709 12:57:43.506"></status>
</kw>
<status status="PASS" starttime="20200709 12:57:43.505" endtime="20200709 12:57:43.506"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 12:57:39.422" endtime="20200709 12:57:43.506" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 12:57:43.510" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 12:57:47.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 12:57:47.053" level="INFO">${output} = 2020-07-09 12:57:44,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:44,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:43.508" endtime="20200709 12:57:47.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 12:57:47.054" level="INFO">2020-07-09 12:57:44,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:44,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 12:57:44,982 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-09 12:57:45,147 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 87hccpwrjb
2020-07-09 12:57:45,167 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-09 12:57:46,177 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-09 12:57:47,009 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=34.684921, max=34.684921, mean=34.684921, stddev=0.0, median=34.684921, p75=34.684921, p95=34.684921, p98=34.684921, p99=34.684921, p999=34.684921, mean_rate=0.9681739121968732, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-09 12:57:47,010 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-09 12:57:47,012 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-09 12:57:47,012 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200709 12:57:47.053" endtime="20200709 12:57:47.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 12:57:47.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 12:57:47.054" endtime="20200709 12:57:47.054"></status>
</kw>
<msg timestamp="20200709 12:57:47.055" level="INFO">${result} = 2020-07-09 12:57:44,777 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 12:57:44,982 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 12:57:43.508" endtime="20200709 12:57:47.055"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200709 12:57:47.055" endtime="20200709 12:57:47.055"></status>
</kw>
<status status="PASS" starttime="20200709 12:57:47.055" endtime="20200709 12:57:47.056"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 12:57:43.507" endtime="20200709 12:57:47.056" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200709 12:57:26.176" endtime="20200709 12:57:47.057"></status>
</suite>
<status status="PASS" starttime="20200709 12:57:26.153" endtime="20200709 12:57:47.059"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
