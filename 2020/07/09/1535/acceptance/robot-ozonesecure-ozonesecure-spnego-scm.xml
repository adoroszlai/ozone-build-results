<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200709 13:51:54.407" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:54.460" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:54.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:54.462" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:51:54.456" endtime="20200709 13:51:54.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:54.463" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:51:54.463" endtime="20200709 13:51:54.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:54.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:54.464" endtime="20200709 13:51:54.464"></status>
</kw>
<msg timestamp="20200709 13:51:54.464" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:51:54.456" endtime="20200709 13:51:54.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:51:54.465" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:51:54.464" endtime="20200709 13:51:54.465"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:54.468" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:51:54.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:51:54.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:51:54.466" endtime="20200709 13:51:54.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:51:54.483" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:51:54.483" endtime="20200709 13:51:54.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:51:54.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:51:54.483" endtime="20200709 13:51:54.484"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:54.466" endtime="20200709 13:51:54.484"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:54.466" endtime="20200709 13:51:54.484"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:54.456" endtime="20200709 13:51:54.484"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:54.455" endtime="20200709 13:51:54.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:51:54.487" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.152" level="INFO">${output} = 2020-07-09 13:51:55,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:51:56,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200709 13:51:54.485" endtime="20200709 13:52:03.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.153" level="INFO">2020-07-09 13:51:55,811 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-09 13:51:56,003 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-09 13:51:56,003 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-09 13:51:57,619 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-09 13:51:57,620 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-09 13:51:57,620 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-09 13:51:57,620 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-09 13:51:57,620 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-09 13:51:57,621 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-09 13:51:57,621 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-09 13:51:57,638 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-09 13:51:57,650 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-09 13:51:57,683 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-51251, with testuser/scm@EXAMPLE.COM as owner.
2020-07-09 13:51:57,720 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-51251/bucket-0-75589, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-09 13:51:58,226 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-09 13:51:58,651 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,018
Average Time spent in key write: 00:00:00,121
Total bytes written: 2050
Total Execution time: 00:00:06,632
***************************************************</msg>
<status status="PASS" starttime="20200709 13:52:03.152" endtime="20200709 13:52:03.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.153" endtime="20200709 13:52:03.154"></status>
</kw>
<status status="PASS" starttime="20200709 13:51:54.484" endtime="20200709 13:52:03.154"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:51:54.454" endtime="20200709 13:52:03.154" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.159" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.157" endtime="20200709 13:52:03.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.163" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.163" endtime="20200709 13:52:03.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.164" endtime="20200709 13:52:03.164"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.157" endtime="20200709 13:52:03.164"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.156" endtime="20200709 13:52:03.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.167" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.186" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 13:52:03.165" endtime="20200709 13:52:03.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.188" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 13:52:03.187" endtime="20200709 13:52:03.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.188" endtime="20200709 13:52:03.188"></status>
</kw>
<msg timestamp="20200709 13:52:03.189" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 13:52:03.164" endtime="20200709 13:52:03.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.189" endtime="20200709 13:52:03.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.192" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.195" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.190" endtime="20200709 13:52:03.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.196" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:52:03.195" endtime="20200709 13:52:03.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.196" endtime="20200709 13:52:03.196"></status>
</kw>
<msg timestamp="20200709 13:52:03.197" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.190" endtime="20200709 13:52:03.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:52:03.197" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:52:03.197" endtime="20200709 13:52:03.197"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.201" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.198" endtime="20200709 13:52:03.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.216" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.215" endtime="20200709 13:52:03.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.216" endtime="20200709 13:52:03.216"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.198" endtime="20200709 13:52:03.217"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.198" endtime="20200709 13:52:03.217"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.190" endtime="20200709 13:52:03.217"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.189" endtime="20200709 13:52:03.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.221" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.249" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 13:52:03.218" endtime="20200709 13:52:03.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.250" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x24bef20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQandg4WSDRItwouXLQciDRDoKFYD9V7CR111f7uJWvikkqWC+bnzdKXgu1NdIcbuuW/Y1pZdL52br8enOxBqg2dEr2Wl3dlklKZit4lISRP4rJo+FMdIMtmnD+tJKvEuvvNe+V9mzOyPGeaybKM/thJI6ZulFdbhubeWoQyeOnjNPlJr/8GutEVrW3trdtSWaoEUuf0soRVuY3e9JQeLAvVaNTvsseYMIXS42q4AEOxB9ua8YMoVQWFED5lWDle8T4SfSAITd+KBY77o8kS2DYGhKGW3Gzs9+E2bYG5efFph437wBLUdOolWg2divYH2+qdOWPQOfnjq5o+0DxFFNlh864ATzAHpIHWMIHToAMCARKigcsEgcgUpODV1Qw18EY0jSiCRD6J2hrF77FjdiacNgMMUfyCqfvhH4UAaQcTIUwKCzMN7JFdeTrUCuMtURwNGWwEwt42uOf4mltq9hTvwbxkoSfZNoGeDxiF2AC5/68tpWYGNoPdgbVraaf767KgzkdEHegw+6tXuNWAa17eKnSU68M0R1UNK2j5qFKOK3Xt7R3X0PBkWU5h8oV9a6bo9ZYerCXmB2tjYuOvVHM+TTfjlYjB3GmcfzvwLP/h26XiRax0OhJx1fKAu2+m8g==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2EqSu1iOFlXihkW8FK53Fuso3IqOcG4s5/TOYO8gqIU4QvVBR3zjuCcAv6GrUHc1ENEruAj8AkkifpHC9RIdJzwK
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723245&amp;s=fZZQMX9uHSmFeKmgjegjTjqypTOH7BWyZs2HCWTDWqA="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 12:35:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:52:03 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC2EqSu1iOFlXihkW8FK53Fuso3IqOcG4s5/TOYO8gqIU4QvVBR3zjuCcAv6GrUHc1ENEruAj8AkkifpHC9RIdJzwK
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723245&amp;s=fZZQMX9uHSmFeKmgjegjTjqypTOH7BWyZs2HCWTDWqA="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 12:35:44 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200709 13:52:03.250" endtime="20200709 13:52:03.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.251" endtime="20200709 13:52:03.251"></status>
</kw>
<msg timestamp="20200709 13:52:03.251" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200709 13:52:03.217" endtime="20200709 13:52:03.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.251" endtime="20200709 13:52:03.252"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.156" endtime="20200709 13:52:03.252"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:52:03.155" endtime="20200709 13:52:03.252" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.257" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.255" endtime="20200709 13:52:03.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.261" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.261" endtime="20200709 13:52:03.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.262" endtime="20200709 13:52:03.262"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.254" endtime="20200709 13:52:03.262"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.254" endtime="20200709 13:52:03.262"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.266" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.277" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.263" endtime="20200709 13:52:03.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.278" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200709 13:52:03.277" endtime="20200709 13:52:03.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.278" endtime="20200709 13:52:03.279"></status>
</kw>
<msg timestamp="20200709 13:52:03.279" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.262" endtime="20200709 13:52:03.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.279" endtime="20200709 13:52:03.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.284" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.285" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.281" endtime="20200709 13:52:03.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.286" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:52:03.285" endtime="20200709 13:52:03.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.286" endtime="20200709 13:52:03.287"></status>
</kw>
<msg timestamp="20200709 13:52:03.287" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.281" endtime="20200709 13:52:03.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:52:03.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:52:03.287" endtime="20200709 13:52:03.288"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.292" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.289" endtime="20200709 13:52:03.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.305" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.305" endtime="20200709 13:52:03.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.305" endtime="20200709 13:52:03.306"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.288" endtime="20200709 13:52:03.306"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.288" endtime="20200709 13:52:03.306"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.280" endtime="20200709 13:52:03.306"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.280" endtime="20200709 13:52:03.306"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.310" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.372" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.307" endtime="20200709 13:52:03.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.373" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x8c0f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbShixZJ9JOAnK/HKmVoTKM+dwomUnYZGvMF64BXNH3LGzrPj7rmQey+/mdv1OnooFeu0MC5WFNbblIOYQH/aGAyVWTgsC6Y69s9sYaoDr6FxeV6m0YqFJSSoe9QnjFS/gLnxX/9HDPE6w48kq/s6t7ZD1HS7AzdPPUMPUOgwmA45YAca+L+gIP1ChguE9gj01SxCNPwdnUouus1WVt4QT4hZnBXtfO+SheqCeFZXOwR/VNeG/CF6gQSV927XVjxFlfwSPepNsM0tivsRTNUj/M+uiM7i9sv4TsZIjVB8Ia7YIeRqjIIv8GkGmCgB1gXwsjg+IploZuCKJkxY0tG2UG+2PyNUr/pIHWMIHToAMCARKigcsEgcihpY0VMriExsA5c+ciAJWFN5snjoZm6/znc+xWXCfInBROLCo42hoj0Xx0BrMEhMZYCQ/OTIGt8DsgbXqb2TCG49oHGsq1JLc8oPUQpSYnAKeWKu7FKxDYyrPnmjNzfJiParbV9jedNZS7Lv3jDk7UIhzewz+c+o5EAHEJOmxp5ry/jNKM8v9udiJ4r/8kiXHI0K+Uzeg4h8zpkSAXpxE7U3U/G5xj4qUJNdnmAiRJLBmAIs64ZNmBlKZOos5pOZ0wJnGqiCzMog==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCRclKuFxjnXZ4cM32Q3V+5/UemSMi1H5te0Ce0h8qP7Sa9aKOuIv9zmVowcm3hekkJZdkPsjV51Wh+m8RBW5IX43a
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723331&amp;s=Nf0kmxFcJFDHIHGaq0xgFCklApCk94svomACyqYe70E="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594302723331.tgz"
&lt; Content-Length: 75647
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:52:03 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCRclKuFxjnXZ4cM32Q3V+5/UemSMi1H5te0Ce0h8qP7Sa9aKOuIv9zmVowcm3hekkJZdkPsjV51Wh+m8RBW5IX43a
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723331&amp;s=Nf0kmxFcJFDHIHGaq0xgFCklApCk94svomACyqYe70E="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594302723331.tgz"
Content-Length: 75647
</msg>
<status status="PASS" starttime="20200709 13:52:03.372" endtime="20200709 13:52:03.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.373" endtime="20200709 13:52:03.374"></status>
</kw>
<msg timestamp="20200709 13:52:03.374" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.306" endtime="20200709 13:52:03.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.374" endtime="20200709 13:52:03.374"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.253" endtime="20200709 13:52:03.374"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:52:03.253" endtime="20200709 13:52:03.375" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.379" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.377" endtime="20200709 13:52:03.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.383" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.383" endtime="20200709 13:52:03.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.384" endtime="20200709 13:52:03.384"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.377" endtime="20200709 13:52:03.384"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.376" endtime="20200709 13:52:03.384"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.388" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.400" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 13:52:03.385" endtime="20200709 13:52:03.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.401" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200709 13:52:03.400" endtime="20200709 13:52:03.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.401" endtime="20200709 13:52:03.401"></status>
</kw>
<msg timestamp="20200709 13:52:03.401" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 13:52:03.384" endtime="20200709 13:52:03.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.402" endtime="20200709 13:52:03.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.406" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.407" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.403" endtime="20200709 13:52:03.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.408" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:52:03.408" endtime="20200709 13:52:03.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.409" endtime="20200709 13:52:03.409"></status>
</kw>
<msg timestamp="20200709 13:52:03.409" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.403" endtime="20200709 13:52:03.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:52:03.410" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:52:03.410" endtime="20200709 13:52:03.411"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.414" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.412" endtime="20200709 13:52:03.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.428" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.428" endtime="20200709 13:52:03.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.428" endtime="20200709 13:52:03.429"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.411" endtime="20200709 13:52:03.429"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.411" endtime="20200709 13:52:03.429"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.403" endtime="20200709 13:52:03.429"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.402" endtime="20200709 13:52:03.429"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.433" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.468" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 13:52:03.430" endtime="20200709 13:52:03.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.469" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1921f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.3) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbFF0nknhZdyvE8kbB7iN6XIWf3kKAfKV3T3CK8l0WVwgcuAURhJeQS8oLCD0hIJhAsN6qPNBR5LG1WUay/pNstUhfSiwfbK4q+WkWK08uWBLe4jD+Mz38ZsX9VV7Fq108S/Qma+M2zuwl7xJGwCa8lnsSczbKYyOmbujcxHBpu+1x5AsD/uhk7JBBusTNaLYnV0GepMRZMFkPl5/NyD9lWMFRPGU5dXCTAYnaWnhOg9obmzTVyPX2CQi+2Z1WC4D9obJsCnPUn+NcruBSt9FtamkCA09B2gfS6mQdb+tVugE9X7UIruGwTBliwKRcUqly+smugEfhulGmZ9sf1/LKvhioV6xLppIHWMIHToAMCARKigcsEgcg4+uY3sDRaPhda42/6mnglHbME2qc3edjkziW2RMEFt+QIVmIv9ujlj9fIDJPfiYhUFB0wYJ8u/OPmIAjrVOqut6Ym6MWzUa0cNJm65ZzaW8ExMK1LX52QvnYO5hc2WnFzJlvQrLVnZTaBQjUKiQt5JJvqJo/+pc/wkkHVEWWWTtLUvG2aAh9sZAV1oUzrLTyjmZliz0szeS90iOvHTp6DFquE1BhxTd2jMSR+gUa4iC9dnTt042E1dQ6/+sOpjkJrbanYjH582Q==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCgfgVvJ65I1+xfq/lHAtoDgH/0fyvGSkmxKU6ZP0KMtHAen1kGSidKRv2+rmU/IQDpazt0HeKUZTFB2dTbAllSw2y
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723455&amp;s=dNCB2jHKrAEXvmGIKPqdPaRDgwrMmtFbVRbL0R+z7wQ="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:52:03 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCgfgVvJ65I1+xfq/lHAtoDgH/0fyvGSkmxKU6ZP0KMtHAen1kGSidKRv2+rmU/IQDpazt0HeKUZTFB2dTbAllSw2y
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723455&amp;s=dNCB2jHKrAEXvmGIKPqdPaRDgwrMmtFbVRbL0R+z7wQ="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200709 13:52:03.469" endtime="20200709 13:52:03.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.470" endtime="20200709 13:52:03.470"></status>
</kw>
<msg timestamp="20200709 13:52:03.471" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.3...
* Connected to om (172.26.0.3) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200709 13:52:03.429" endtime="20200709 13:52:03.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.471" endtime="20200709 13:52:03.471"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.376" endtime="20200709 13:52:03.471"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:52:03.375" endtime="20200709 13:52:03.472" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.476" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.474" endtime="20200709 13:52:03.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.486" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.485" endtime="20200709 13:52:03.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.486" endtime="20200709 13:52:03.486"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.474" endtime="20200709 13:52:03.487"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.474" endtime="20200709 13:52:03.487"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.491" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.507" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 13:52:03.487" endtime="20200709 13:52:03.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.508" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 13:52:03.508" endtime="20200709 13:52:03.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.509" endtime="20200709 13:52:03.509"></status>
</kw>
<msg timestamp="20200709 13:52:03.509" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 13:52:03.487" endtime="20200709 13:52:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.509" endtime="20200709 13:52:03.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.514" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.511" endtime="20200709 13:52:03.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.518" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:52:03.517" endtime="20200709 13:52:03.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.518" endtime="20200709 13:52:03.518"></status>
</kw>
<msg timestamp="20200709 13:52:03.519" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.511" endtime="20200709 13:52:03.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:52:03.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:52:03.519" endtime="20200709 13:52:03.519"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.523" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.520" endtime="20200709 13:52:03.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.536" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.536" endtime="20200709 13:52:03.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.537" endtime="20200709 13:52:03.537"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.520" endtime="20200709 13:52:03.537"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.519" endtime="20200709 13:52:03.537"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.510" endtime="20200709 13:52:03.537"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.510" endtime="20200709 13:52:03.538"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.541" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.572" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 13:52:03.538" endtime="20200709 13:52:03.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.573" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x1301f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.9) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGMcve4lyJ0mezZNHU7lmhJL43pCT5Iv4ipNZaSx8rliqNnfXKarZ0mQ023NLsUQ62HE/tFx16HxPdFNmJHwnBT+i8+mimsuXe9JRR6lWAe9XU3Souy13a9yLJm9nz6iehLCT2onWq0goPcOhYxz5blDZnNVQHdw+UlDkSZhsQv8g7CodwjPG8E56FfhYzZHzr58k226LA3SuYFepAPX+idEz8vXgU8JkdvTNGtnFRBdqi1V7sn4DiArbAh2WmBnc+AtM/eIDg4qiQoxSGm0mmP19LWGjB949YMDNkaeTimW1vqurh9c4eq2VsY04drSpuivrzUtAUEU8znCgny2A+DKQye4hm+6SB1jCB06ADAgESooHLBIHIdcX2R1EBPvbLUqaVW4dUFNjaRfN39JcQEXnTY4VoCgqrpav8PIiWF9vpol1JZr8o7oey8v30onjHSY5yR3cBhFtwd20MKTgDl3HQFjy/pgRV8YgLZ9cYu+IdOiXj9vt5FVPgcIi/lxBMd9y1yK4LwxYfRezu2X7+vILVAyMQ5wBC28z/XF2ybGYmT3RCO0wrM+2/BEGSRxXO01Xee++EXdx2WgokmNwd+wM0OFRqJGnpww5ARPG7pjdL7d9KV3K+Y2pUFDSQlGk=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCy7ABEX5HafbChFiIXpXt0ze+QnqRMBIq+IOy10WX78PJXsNKDCnzJsdg58jHx5OpmpYKyqnKjZERN8Qmz4/Z9lQY
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723567&amp;s=HKAAjJtNgjJg84foLmCI0t2xOSvNHBMkpsQf/0Utk6g="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 12:35:22 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:52:03 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCy7ABEX5HafbChFiIXpXt0ze+QnqRMBIq+IOy10WX78PJXsNKDCnzJsdg58jHx5OpmpYKyqnKjZERN8Qmz4/Z9lQY
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723567&amp;s=HKAAjJtNgjJg84foLmCI0t2xOSvNHBMkpsQf/0Utk6g="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 12:35:22 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200709 13:52:03.572" endtime="20200709 13:52:03.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.574" endtime="20200709 13:52:03.574"></status>
</kw>
<msg timestamp="20200709 13:52:03.574" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200709 13:52:03.538" endtime="20200709 13:52:03.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.574" endtime="20200709 13:52:03.575"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.473" endtime="20200709 13:52:03.575"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:52:03.472" endtime="20200709 13:52:03.575" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.581" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.577" endtime="20200709 13:52:03.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.584" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.584" endtime="20200709 13:52:03.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.584" endtime="20200709 13:52:03.585"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.577" endtime="20200709 13:52:03.585"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.577" endtime="20200709 13:52:03.585"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.589" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.604" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.586" endtime="20200709 13:52:03.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.605" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200709 13:52:03.605" endtime="20200709 13:52:03.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.605" endtime="20200709 13:52:03.606"></status>
</kw>
<msg timestamp="20200709 13:52:03.606" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.585" endtime="20200709 13:52:03.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.606" endtime="20200709 13:52:03.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.610" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.608" endtime="20200709 13:52:03.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.613" level="INFO">scm</msg>
<status status="PASS" starttime="20200709 13:52:03.613" endtime="20200709 13:52:03.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.613" endtime="20200709 13:52:03.614"></status>
</kw>
<msg timestamp="20200709 13:52:03.614" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200709 13:52:03.608" endtime="20200709 13:52:03.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200709 13:52:03.615" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200709 13:52:03.614" endtime="20200709 13:52:03.615"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.619" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200709 13:52:03.616" endtime="20200709 13:52:03.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.633" level="INFO"></msg>
<status status="PASS" starttime="20200709 13:52:03.632" endtime="20200709 13:52:03.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.633" endtime="20200709 13:52:03.633"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.616" endtime="20200709 13:52:03.634"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.615" endtime="20200709 13:52:03.634"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.607" endtime="20200709 13:52:03.634"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.607" endtime="20200709 13:52:03.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200709 13:52:03.637" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200709 13:52:03.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200709 13:52:03.668" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.634" endtime="20200709 13:52:03.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200709 13:52:03.670" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1a5ef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.2) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaocgzjzJRVL5WU6zjSkxVVHdyZivH2aEUTLt4/BMsBivfSiOvh2MgWQUj6BNwxZJbr3vQV/Hkeek6tx/ODNHcLe4uQYYYhRsZs+1Be2lQ1+bAgaRB+7Ek964dx+/eafJG+sophHjPMhBeb/Y5tw9GujmgsOw69fNVAM5KDVxMww77l+NPP3Ag1MG0VTiLb/L4zdFMGTk3YVjWVlYsTRAknU2y/kVilhXhzozhR5V54oEqcLEwWVUd7UVtaXcO2yj5w3mJtx6c8S6BhfDxLI6spgf1wcmbDwT2fZ+n+WrA0d3vWwe6urnvZtP0+7EvAwyd53YUKYm/PEAqjGibxeL/xbYJqSi5NpIHWMIHToAMCARKigcsEgcjWUMUyXUsylhRqxYVUDbgoRpU5AaeOmsXSrBqMVBX4Jv6eHIn2oR2FCNPCg8YeqWv5s9jCmnaE5Avouxgdn30Cewf817BNkHzutBj2TcW3WBnsRM+Bwl07RCrj7wl64+JtAMNgpDWXqDoD1R00yK2OLFr3gLbexJnytemort0l8ipsm3K0K9JnU6EPZ/aYYB9WquI+FV8GVhg6S5ZSnEvX2Mn7IW4EE97+b1t+oY8M+AlfeYAPLQOlbqLotIANjY+1HLYjC1xXIw==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Date: Thu, 09 Jul 2020 13:52:03 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5pCk8KswxLiPJeIISb1P2tqokndLsPK6rYDbccMLAc52MA5JwRtKBDG0BXB0IAewZa1Y7eTsk1OZoNULZz6F276/
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723661&amp;s=2Nn9rq7wUnVKmJMdOQXDZkLaLIPEj4P+OMLhzJq5mww="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 09 Jul 2020 12:39:52 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 09 Jul 2020 13:52:03 GMT
Cache-Control: no-cache
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 09 Jul 2020 13:52:03 GMT
Date: Thu, 09 Jul 2020 13:52:03 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5pCk8KswxLiPJeIISb1P2tqokndLsPK6rYDbccMLAc52MA5JwRtKBDG0BXB0IAewZa1Y7eTsk1OZoNULZz6F276/
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594338723661&amp;s=2Nn9rq7wUnVKmJMdOQXDZkLaLIPEj4P+OMLhzJq5mww="; Path=/; HttpOnly
Last-Modified: Thu, 09 Jul 2020 12:39:52 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200709 13:52:03.669" endtime="20200709 13:52:03.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200709 13:52:03.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200709 13:52:03.670" endtime="20200709 13:52:03.671"></status>
</kw>
<msg timestamp="20200709 13:52:03.671" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.2...
* Connected to recon (172.26.0.2) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200709 13:52:03.634" endtime="20200709 13:52:03.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200709 13:52:03.671" endtime="20200709 13:52:03.671"></status>
</kw>
<status status="PASS" starttime="20200709 13:52:03.576" endtime="20200709 13:52:03.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200709 13:52:03.576" endtime="20200709 13:52:03.672" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200709 13:51:54.433" endtime="20200709 13:52:03.673"></status>
</suite>
<status status="PASS" starttime="20200709 13:51:54.408" endtime="20200709 13:52:03.675"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
