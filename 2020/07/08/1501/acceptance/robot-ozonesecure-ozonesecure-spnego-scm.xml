<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200708 13:43:36.503" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:36.555" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:36.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:36.557" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:36.551" endtime="20200708 13:43:36.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:36.558" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:36.557" endtime="20200708 13:43:36.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:36.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:36.558" endtime="20200708 13:43:36.559"></status>
</kw>
<msg timestamp="20200708 13:43:36.559" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:36.551" endtime="20200708 13:43:36.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:36.560" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:36.559" endtime="20200708 13:43:36.560"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:36.563" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:36.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:36.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:36.561" endtime="20200708 13:43:36.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:36.580" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:36.580" endtime="20200708 13:43:36.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:36.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:36.581" endtime="20200708 13:43:36.581"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:36.561" endtime="20200708 13:43:36.581"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:36.560" endtime="20200708 13:43:36.581"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:36.550" endtime="20200708 13:43:36.581"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:36.550" endtime="20200708 13:43:36.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:36.585" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.066" level="INFO">${output} = 2020-07-08 13:43:37,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 13:43:38,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 13:43:36.582" endtime="20200708 13:43:45.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.067" level="INFO">2020-07-08 13:43:37,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 13:43:38,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 13:43:38,033 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-08 13:43:39,556 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-08 13:43:39,557 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-08 13:43:39,570 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-08 13:43:39,575 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-08 13:43:39,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-38066, with testuser/scm@EXAMPLE.COM as owner.
2020-07-08 13:43:39,638 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-38066/bucket-0-16003, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-08 13:43:40,165 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-08 13:43:40,584 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,017
Average Time spent in key write: 00:00:00,104
Total bytes written: 2050
Total Execution time: 00:00:06,571
***************************************************</msg>
<status status="PASS" starttime="20200708 13:43:45.066" endtime="20200708 13:43:45.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.067" endtime="20200708 13:43:45.068"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:36.582" endtime="20200708 13:43:45.068"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:36.549" endtime="20200708 13:43:45.068" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.073" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.071" endtime="20200708 13:43:45.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.077" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.076" endtime="20200708 13:43:45.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.077" endtime="20200708 13:43:45.077"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.071" endtime="20200708 13:43:45.078"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.070" endtime="20200708 13:43:45.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.080" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.100" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200708 13:43:45.078" endtime="20200708 13:43:45.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.101" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200708 13:43:45.100" endtime="20200708 13:43:45.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.102" endtime="20200708 13:43:45.102"></status>
</kw>
<msg timestamp="20200708 13:43:45.102" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200708 13:43:45.078" endtime="20200708 13:43:45.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.102" endtime="20200708 13:43:45.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.107" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.108" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.104" endtime="20200708 13:43:45.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.108" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:45.108" endtime="20200708 13:43:45.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.109" endtime="20200708 13:43:45.109"></status>
</kw>
<msg timestamp="20200708 13:43:45.109" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.104" endtime="20200708 13:43:45.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:45.110" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:45.109" endtime="20200708 13:43:45.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.113" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.111" endtime="20200708 13:43:45.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.128" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.128" endtime="20200708 13:43:45.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.128" endtime="20200708 13:43:45.129"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.110" endtime="20200708 13:43:45.129"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.110" endtime="20200708 13:43:45.129"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.103" endtime="20200708 13:43:45.129"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.103" endtime="20200708 13:43:45.129"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.132" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.159" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200708 13:43:45.129" endtime="20200708 13:43:45.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.159" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x20a6f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQamMLUgJUc/LX47MenPK1BCcNNyHPfgLYNVmiZ8r3+YtReXGGE+30pbJB7J/j45s0fkkyRA/4AIdoXjRuVZYNpoiVBLkpNlL7mlR1E6m/07Fo3+JhupxxUKSYgJvplQWIC607a76CoMoCSwHb/LGniEz5qpRtaJgbCkb8jIJfEAUkbySBmr2LpxoHsuDGWIFRBw7jKknx+rjQa5k+6L03HUVrwjbUEIlxf8/wvHefBVIwJNQYMKBm4hdrPQ0jONs3pj74PWAM+IH8S/SRowEunxQPVr6PufQTq8ZmzlWlbCt1XfuxvHtfX6IEMO4i5OPNAvwVbo03ADgkAVFMcpD3USQWKKLVEOpIHWMIHToAMCARKigcsEgcg0AwjDna721Q94mjBabpknd2gtdctf1bdDIWKOOFmdW0Ez6+spnjJrtMCcnnlnWZsK/ekIq+gsZ9PgC7eWPnJD0U1wS6oxucOBsVVADXIVWWCbjuvDdedbj5B644akq4q4WsHtQBM8QGW6YMHxTNSifFoCLE9hswx81tOUsMtMGRpRD5WRD+7bVXaqbpU85wpTDI1j5duFWD2gcXsq6Zs9LzDySSQY053WMt5WAzZ6lQOL5q8lGCQagYmyWO3xsSoxC3uZ9m1ofQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0bnAaLzwzkIEzXnwX/iRxSVAZZr1z2DsVaoxEgSBBxxpLthCLjNRayEiWwiIAGgik2TobAOwGfTHZ95HO8WchFfp
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825155&amp;s=+DPU1DV9V2KkV+Xd404u7s4f8A4RKOrdMqZ8Ix2xghc="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 08 Jul 2020 12:35:48 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:43:45 GMT
Cache-Control: no-cache
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0bnAaLzwzkIEzXnwX/iRxSVAZZr1z2DsVaoxEgSBBxxpLthCLjNRayEiWwiIAGgik2TobAOwGfTHZ95HO8WchFfp
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825155&amp;s=+DPU1DV9V2KkV+Xd404u7s4f8A4RKOrdMqZ8Ix2xghc="; Path=/; HttpOnly
Last-Modified: Wed, 08 Jul 2020 12:35:48 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200708 13:43:45.159" endtime="20200708 13:43:45.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.160" endtime="20200708 13:43:45.160"></status>
</kw>
<msg timestamp="20200708 13:43:45.160" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200708 13:43:45.129" endtime="20200708 13:43:45.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.161" endtime="20200708 13:43:45.161"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.070" endtime="20200708 13:43:45.161"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:45.069" endtime="20200708 13:43:45.161" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.166" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.163" endtime="20200708 13:43:45.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.169" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.169" endtime="20200708 13:43:45.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.169" endtime="20200708 13:43:45.170"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.163" endtime="20200708 13:43:45.170"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.163" endtime="20200708 13:43:45.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.173" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.186" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.171" endtime="20200708 13:43:45.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.187" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200708 13:43:45.186" endtime="20200708 13:43:45.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.187" endtime="20200708 13:43:45.187"></status>
</kw>
<msg timestamp="20200708 13:43:45.188" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.170" endtime="20200708 13:43:45.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.188" endtime="20200708 13:43:45.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.192" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.189" endtime="20200708 13:43:45.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.195" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:45.194" endtime="20200708 13:43:45.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.195" endtime="20200708 13:43:45.196"></status>
</kw>
<msg timestamp="20200708 13:43:45.196" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.189" endtime="20200708 13:43:45.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:45.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:45.196" endtime="20200708 13:43:45.196"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.200" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.197" endtime="20200708 13:43:45.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.215" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.215" endtime="20200708 13:43:45.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.215" endtime="20200708 13:43:45.216"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.197" endtime="20200708 13:43:45.216"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.197" endtime="20200708 13:43:45.216"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.189" endtime="20200708 13:43:45.216"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.188" endtime="20200708 13:43:45.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.220" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.278" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.217" endtime="20200708 13:43:45.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.279" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1559f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZgHlSxapMuVyzEBMnjwJmTpEzs7Xt9iH5KdyLH6g/Zcs9favBkTEKdWDCpGUb0i3hJHnmCO2jLycwrKeONfQXmXjerp4wcqEp7PXYlizKiVjXNu7qfKm6c7LjcoGQogE+Gj+0cw1ce2YfW6m5XLpwQlLq9SmU+lkT3S+Y8vhTPbnzLSk4M2Kybev1Yhm2Mj0XvkV80meJpZxa8RsneQjDYCWf68XWcyjf9h5TajHJhLIcwZ9lSFpTqtxvBLO8tKKnWqTVsn5rMXV6oomJD07B3bqONFxJmyU1oRgBBZDbiJ74OQjUFdxFhW4GAZPBJZ6QLGH/jlZr3A/zpB1pBgIA4fW1qoWUgpIHWMIHToAMCARKigcsEgch7O0f56Xq1x5Lwiz9zA9mRDe/8WEkVIPtPUdeXcAKWnpvwKEvUmQQ95OP71vDSF4Ea8B9nKYHWWJ4JbQdpVGAgzBqs6Ir5uDaYEmNKGe0GuzIcjES5LgVpKPA7BQApTeOPOhlQCkSfwkaurPkUr26GTdwSpceiKPcqa30TDgVwNWFPTZqVO54jtpxW7X1VGMFO4NGMh0eA1BD9XDicgcwFNhJZMkP8ez4bEyvhmFtMsxIDGqCR2q11aIaVO5vyrU5/8LdieT3RTQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEtFOC+Hm6Jn10N/8awfBh8055MrNG/mz/86D0AwVl4ynsdtAA9Wzh4H+ZlTXP9PyQZLDZZV6ryafqwkiRsL67kbE
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825241&amp;s=tEIKoPdGVcLNEFA3PtkrH1bEcSYxALa4Kj40geglI7s="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594215825241.tgz"
&lt; Content-Length: 76039
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:43:45 GMT
Cache-Control: no-cache
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEtFOC+Hm6Jn10N/8awfBh8055MrNG/mz/86D0AwVl4ynsdtAA9Wzh4H+ZlTXP9PyQZLDZZV6ryafqwkiRsL67kbE
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825241&amp;s=tEIKoPdGVcLNEFA3PtkrH1bEcSYxALa4Kj40geglI7s="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594215825241.tgz"
Content-Length: 76039
</msg>
<status status="PASS" starttime="20200708 13:43:45.279" endtime="20200708 13:43:45.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.280" endtime="20200708 13:43:45.280"></status>
</kw>
<msg timestamp="20200708 13:43:45.280" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.216" endtime="20200708 13:43:45.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.281" endtime="20200708 13:43:45.281"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.162" endtime="20200708 13:43:45.281"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:45.162" endtime="20200708 13:43:45.281" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.287" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.284" endtime="20200708 13:43:45.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.290" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.289" endtime="20200708 13:43:45.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.290" endtime="20200708 13:43:45.290"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.283" endtime="20200708 13:43:45.291"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.283" endtime="20200708 13:43:45.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.293" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.305" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200708 13:43:45.291" endtime="20200708 13:43:45.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.306" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200708 13:43:45.306" endtime="20200708 13:43:45.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.307" endtime="20200708 13:43:45.307"></status>
</kw>
<msg timestamp="20200708 13:43:45.307" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200708 13:43:45.291" endtime="20200708 13:43:45.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.307" endtime="20200708 13:43:45.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.310" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.312" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.309" endtime="20200708 13:43:45.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.313" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:45.312" endtime="20200708 13:43:45.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.313" endtime="20200708 13:43:45.314"></status>
</kw>
<msg timestamp="20200708 13:43:45.314" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.308" endtime="20200708 13:43:45.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:45.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:45.314" endtime="20200708 13:43:45.314"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.318" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.315" endtime="20200708 13:43:45.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.332" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.331" endtime="20200708 13:43:45.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.332" endtime="20200708 13:43:45.332"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.315" endtime="20200708 13:43:45.332"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.314" endtime="20200708 13:43:45.332"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.308" endtime="20200708 13:43:45.332"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.308" endtime="20200708 13:43:45.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.335" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.368" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200708 13:43:45.333" endtime="20200708 13:43:45.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.369" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xcf9f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQausDaiCWTJL2uV7m31yStDIc60FhVu3G2tj8GZv9Zb1Y6m0dkSROdzV1ogvT2jhqD0hOysReR2RlPqeOfkRUJuivluzBSJVc4G8YjoTlXHAagnrodTBMO1I9oXLQIS105+qCglW1B7pWHmIN34qP1ykMEc3hsZF3u2t4Xi1skyBvgZJ6BLqGIpUu+nTApYyqJ5zHOP7bFgm6eQ6PnBhaMdWAC6F54rxDagvjWK3xk+2KSUGe5BKxCOI7QxO2p+ViCmiO4ZclRyr/ukLi3n9YUmx0o3UFUT04In9TGGKbhltQqBlwJm9Q0OPhd/4h94ToqGzJ/woayiDrYqJqA/vqwQjPkRkUuYpIHWMIHToAMCARKigcsEgchE5DXgDp1q9pNfguEhDtMn9XkZwmCov3clPVEvWhLJ4GGEcob3U1OoqphUTQ7pStLq9/ix4plyx1q5Jq+5ooEpXUwZwZgWXZO4i+tbnvRJaNjDhWtoiUsoP/Ih1K4k076t6AetBodebqugIFuG0hENNzGjp5Vo4nt92Owyki+RyQ+4ZzyfeFYmZYHtW4HkrMbUIrmUNERSy0X03N/gud0OGIkY0H4y0x/hI4YaSemMRSOJu863yA85Lz67kDCH43pYEY5c2bGoXQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4QhfZM7aforUH1qJa7U0aulOrb0rw/f7gO0PRUDZB0hPCxoM3KPAmaxKQGOuSH3JQ5vaeLqgF3bqckBkxqh7EtSJ
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825356&amp;s=xdaOgwVNdqjwWSpJjodj4Ov125LcH7XyzlYiSh1VQ2I="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:43:45 GMT
Cache-Control: no-cache
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4QhfZM7aforUH1qJa7U0aulOrb0rw/f7gO0PRUDZB0hPCxoM3KPAmaxKQGOuSH3JQ5vaeLqgF3bqckBkxqh7EtSJ
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825356&amp;s=xdaOgwVNdqjwWSpJjodj4Ov125LcH7XyzlYiSh1VQ2I="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200708 13:43:45.368" endtime="20200708 13:43:45.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.369" endtime="20200708 13:43:45.370"></status>
</kw>
<msg timestamp="20200708 13:43:45.370" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200708 13:43:45.333" endtime="20200708 13:43:45.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.370" endtime="20200708 13:43:45.370"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.283" endtime="20200708 13:43:45.371"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:45.282" endtime="20200708 13:43:45.371" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.383" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.379" endtime="20200708 13:43:45.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.386" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.385" endtime="20200708 13:43:45.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.386" endtime="20200708 13:43:45.386"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.379" endtime="20200708 13:43:45.386"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.379" endtime="20200708 13:43:45.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.389" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.405" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200708 13:43:45.387" endtime="20200708 13:43:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.406" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200708 13:43:45.405" endtime="20200708 13:43:45.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.406" endtime="20200708 13:43:45.406"></status>
</kw>
<msg timestamp="20200708 13:43:45.407" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200708 13:43:45.387" endtime="20200708 13:43:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.407" endtime="20200708 13:43:45.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.411" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.413" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.408" endtime="20200708 13:43:45.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.414" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:45.413" endtime="20200708 13:43:45.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.414" endtime="20200708 13:43:45.414"></status>
</kw>
<msg timestamp="20200708 13:43:45.414" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.408" endtime="20200708 13:43:45.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:45.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:45.414" endtime="20200708 13:43:45.415"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.419" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.416" endtime="20200708 13:43:45.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.432" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.431" endtime="20200708 13:43:45.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.432" endtime="20200708 13:43:45.432"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.415" endtime="20200708 13:43:45.432"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.415" endtime="20200708 13:43:45.432"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.408" endtime="20200708 13:43:45.433"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.407" endtime="20200708 13:43:45.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.435" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.463" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200708 13:43:45.433" endtime="20200708 13:43:45.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.463" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x2555f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.3) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEG+Nb09y7UYz4AQtvrxfEWGwKMtDMmmbfbl6uEKrFBn/Tca3xwU9N7hvbghBfPcJ2bD74h2HND3GxeApu+RAbNzAWx3Z1PuStascvJYTpZobssJQSEceSiebXbJCoTLQI7J96OGt6k/eN/Dq0Oa+94YTuq++QDEMbGnpGdes8cMDeZs6d+izHOr41MXM1nd/gMAPeO4Cin9Wg0NQrBoO+8IkA11KJ+RgGjouUDa0L1ODvh8jyEr/ufjKui3eLBw0+KiEM86TNNuAXKI9vVCO1LjMwNDKCv8Jux3aLH1yZ5yRFSj5kamyeygb2aM8GEuT9x2zBIpH0t5t3X7crFKSZdC3bAdEXKDKSB1jCB06ADAgESooHLBIHIemmtNLUX/g3DD/r71JE5UV5yofvlsfykeolIxCrolehpa6Ys2A2ki97Qvl965yNf5nmZ+PCZwACzK5USFbCo+recqdr5uletgNPSU3ydskMaIRla4dd0jlmLNaYqU6vPJv65w//5Rgou3TysjrNsE3YDpQnYHdYZbXWyTs4pXKzqPGL0597SPiIT3aUdc2RGhaBu52qUBBJSZp68Opw+YIyr2O9B8eoFCBkPysIhYHPj2kMDSATUShWOpp/DRb8Mp7iGWYVNhOU=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC24atiuORLzx9CwBiQ84Hy8oEDaBQQDmdsk/hDiVtWge/beEpoHDzzV6xEUdPBEX0N3ZtAhhqFV35m27BE7Kilq2R
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825458&amp;s=kFrnof7oSTohj25yZaEVmzSkmJIRVjcmPMIXzoZn0Kw="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 08 Jul 2020 12:35:26 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:43:45 GMT
Cache-Control: no-cache
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC24atiuORLzx9CwBiQ84Hy8oEDaBQQDmdsk/hDiVtWge/beEpoHDzzV6xEUdPBEX0N3ZtAhhqFV35m27BE7Kilq2R
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825458&amp;s=kFrnof7oSTohj25yZaEVmzSkmJIRVjcmPMIXzoZn0Kw="; Path=/; HttpOnly
Last-Modified: Wed, 08 Jul 2020 12:35:26 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200708 13:43:45.463" endtime="20200708 13:43:45.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.464" endtime="20200708 13:43:45.464"></status>
</kw>
<msg timestamp="20200708 13:43:45.464" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.3...
* Connected to scm (172.26.0.3) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200708 13:43:45.433" endtime="20200708 13:43:45.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.464" endtime="20200708 13:43:45.465"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.378" endtime="20200708 13:43:45.465"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:45.377" endtime="20200708 13:43:45.465" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.469" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.467" endtime="20200708 13:43:45.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.473" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.473" endtime="20200708 13:43:45.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.473" endtime="20200708 13:43:45.474"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.467" endtime="20200708 13:43:45.474"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.467" endtime="20200708 13:43:45.474"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.477" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.492" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.475" endtime="20200708 13:43:45.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.493" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200708 13:43:45.492" endtime="20200708 13:43:45.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.493" endtime="20200708 13:43:45.493"></status>
</kw>
<msg timestamp="20200708 13:43:45.494" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.474" endtime="20200708 13:43:45.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.494" endtime="20200708 13:43:45.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.497" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.499" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.495" endtime="20200708 13:43:45.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.500" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:45.499" endtime="20200708 13:43:45.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.500" endtime="20200708 13:43:45.501"></status>
</kw>
<msg timestamp="20200708 13:43:45.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:45.495" endtime="20200708 13:43:45.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:43:45.501" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:43:45.501" endtime="20200708 13:43:45.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.504" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:45.502" endtime="20200708 13:43:45.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.518" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:45.517" endtime="20200708 13:43:45.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.518" endtime="20200708 13:43:45.518"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.502" endtime="20200708 13:43:45.519"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.501" endtime="20200708 13:43:45.519"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.495" endtime="20200708 13:43:45.519"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.494" endtime="20200708 13:43:45.519"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:45.523" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:45.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:45.554" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.519" endtime="20200708 13:43:45.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:45.555" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xdbef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYNW5TLrlHwj5RtWGqG0kwBq11y4vwxsFRlRQEM4aD5s0sgTGNJn058l44/PeEi0BVOvyyvBoY/vLJmPFzNZni5ssx+j+kPIfMBAjDcDH/AyT/TWERr71FqwYMCdgbs2ad3QAj395ONlIWmXIEo2NJQwJH4Jqr9Gw1VRHpeYyv11YQPJg5YFliOAaTdZfzA/qwQ41nwhSCevkPewg90plwDdWj568lUM+B74CDaog6urrVPCtL8tQu5UjFWUogAkDvq+e251E0/BBDb0zoLGyOhntEvrJ5LleC2oMuRj0Z9BimKl9U6MVKahVXrvZpzREZqqmfI+04r7yUw4q3tWKIUe8rI579LpIHWMIHToAMCARKigcsEgcijze12rXX6JHm9wugm/AP8MgTWBsIhcuPf1fDD29jCcfHzHO/DiGjxImpc+xSxgniEGbsDzQis/f0QnkSjQtEBuiNqmXHg7kWR82DmCk00MwgiSs2B11s/wuTEeiIs45NExxW1BtmIqyiDri3+yO6BBpJ7IfFfvSE48gobQbinybai2Q/+ATXYVqvVHhS78pdDIvIWHuWx5kIiRX6/OpFdoTfGJwNVOt36K1OYleS5HTS/ZJl77Y3kG49fO0F17pMjGGGjxk/yiA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:45 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtovEiDELM3/Ygb/J9k96OxXD6s4PQKvY/yOYPusPNuP622hEGXU2vHjuRak7IENxpSU4rN/wD+WTYosPIWlV9WAb
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825545&amp;s=MPJhtDhgrA60v4Bm3zBfUQfVdOFM0JZePcxreYVca+U="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 08 Jul 2020 12:40:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:43:45 GMT
Cache-Control: no-cache
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 08 Jul 2020 13:43:45 GMT
Date: Wed, 08 Jul 2020 13:43:45 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtovEiDELM3/Ygb/J9k96OxXD6s4PQKvY/yOYPusPNuP622hEGXU2vHjuRak7IENxpSU4rN/wD+WTYosPIWlV9WAb
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251825545&amp;s=MPJhtDhgrA60v4Bm3zBfUQfVdOFM0JZePcxreYVca+U="; Path=/; HttpOnly
Last-Modified: Wed, 08 Jul 2020 12:40:04 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200708 13:43:45.554" endtime="20200708 13:43:45.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:45.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:45.555" endtime="20200708 13:43:45.556"></status>
</kw>
<msg timestamp="20200708 13:43:45.556" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200708 13:43:45.519" endtime="20200708 13:43:45.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:45.556" endtime="20200708 13:43:45.556"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:45.466" endtime="20200708 13:43:45.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:45.466" endtime="20200708 13:43:45.557" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200708 13:43:36.528" endtime="20200708 13:43:45.558"></status>
</suite>
<status status="PASS" starttime="20200708 13:43:36.504" endtime="20200708 13:43:45.560"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
