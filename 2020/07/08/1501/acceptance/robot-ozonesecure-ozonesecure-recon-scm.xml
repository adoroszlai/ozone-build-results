<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200708 13:42:57.994" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:42:58.045" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:42:58.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:42:58.047" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:42:58.042" endtime="20200708 13:42:58.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:42:58.048" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:42:58.048" endtime="20200708 13:42:58.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:42:58.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:42:58.048" endtime="20200708 13:42:58.049"></status>
</kw>
<msg timestamp="20200708 13:42:58.049" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:42:58.041" endtime="20200708 13:42:58.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:42:58.050" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:42:58.049" endtime="20200708 13:42:58.050"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:42:58.053" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:42:58.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:42:58.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:42:58.051" endtime="20200708 13:42:58.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:42:58.070" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:42:58.069" endtime="20200708 13:42:58.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:42:58.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:42:58.070" endtime="20200708 13:42:58.071"></status>
</kw>
<status status="PASS" starttime="20200708 13:42:58.051" endtime="20200708 13:42:58.071"></status>
</kw>
<status status="PASS" starttime="20200708 13:42:58.050" endtime="20200708 13:42:58.071"></status>
</kw>
<status status="PASS" starttime="20200708 13:42:58.041" endtime="20200708 13:42:58.071"></status>
</kw>
<status status="PASS" starttime="20200708 13:42:58.041" endtime="20200708 13:42:58.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:42:58.073" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:06.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:06.286" level="INFO">${output} = 2020-07-08 13:42:59,293 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 13:42:59,506 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 13:42:58.072" endtime="20200708 13:43:06.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:06.287" level="INFO">2020-07-08 13:42:59,293 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 13:42:59,506 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 13:42:59,506 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-08 13:43:00,880 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-08 13:43:00,881 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-08 13:43:00,887 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-08 13:43:00,899 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-08 13:43:00,924 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-49037, with testuser/scm@EXAMPLE.COM as owner.
2020-07-08 13:43:00,950 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-49037/bucket-0-74980, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-08 13:43:01,485 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-08 13:43:01,911 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,004
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,176
Average Time spent in key write: 00:00:00,426
Total bytes written: 10250
Total Execution time: 00:00:06,256
***************************************************</msg>
<status status="PASS" starttime="20200708 13:43:06.287" endtime="20200708 13:43:06.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:06.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:06.288" endtime="20200708 13:43:06.288"></status>
</kw>
<status status="PASS" starttime="20200708 13:42:58.071" endtime="20200708 13:43:06.288"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:42:58.040" endtime="20200708 13:43:06.288" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:06.293" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:06.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:06.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:06.291" endtime="20200708 13:43:06.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:06.296" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:06.296" endtime="20200708 13:43:06.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:06.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:06.297" endtime="20200708 13:43:06.297"></status>
</kw>
<msg timestamp="20200708 13:43:06.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:06.291" endtime="20200708 13:43:06.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:06.301" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:06.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:06.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:06.298" endtime="20200708 13:43:06.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:06.319" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:06.319" endtime="20200708 13:43:06.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:06.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:06.319" endtime="20200708 13:43:06.320"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:06.298" endtime="20200708 13:43:06.320"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:06.297" endtime="20200708 13:43:06.320"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:06.291" endtime="20200708 13:43:06.320"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:06.290" endtime="20200708 13:43:06.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:06.323" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:06.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:06.497" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:06.321" endtime="20200708 13:43:06.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:06.498" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    454      0 --:--:-- --:--:-- --:--:--   455
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200708 13:43:06.497" endtime="20200708 13:43:06.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:06.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:06.498" endtime="20200708 13:43:06.498"></status>
</kw>
<msg timestamp="20200708 13:43:06.498" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:06.320" endtime="20200708 13:43:06.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:06.499" endtime="20200708 13:43:06.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:06.505" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:06.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:06.542" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:06.500" endtime="20200708 13:43:06.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:06.542" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0    97k      0 --:--:-- --:--:-- --:--:--  100k
* Connection #0 to host recon left intact
[{"volume":"vol-2-25266","bucket":"bucket-4-79685","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-3-55901","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-2-64367","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-3-17134","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-0-51743","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-1-68593","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-3-55797","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-0-84720","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-1-36503","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-4-48351","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-1-57940","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-2-34347","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-1-55011","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-4-56128","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-1-97836","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-4-60261","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-2-18619","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-3-50199","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-4-75444","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-2-92594","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-3-92582","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-0-03556","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-0-37337","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-0-93159","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-2-23950","fileSize":16384,"count":5},{"volume":"22485-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"22485-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest313","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-85105","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-49625","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-85105","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-84649","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-52125","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-76403","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200708 13:43:06.542" endtime="20200708 13:43:06.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:06.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:06.543" endtime="20200708 13:43:06.543"></status>
</kw>
<msg timestamp="20200708 13:43:06.543" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:06.499" endtime="20200708 13:43:06.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200708 13:43:06.544" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0    97k      0 --:--:-- --:--:-- --:--:--  100k
* Connection #0 to host recon left intact
[{"volume":"vol-2-25266","bucket":"bucket-4-79685","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-3-55901","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-2-64367","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-3-17134","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-0-51743","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-1-68593","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-3-55797","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-0-84720","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-1-36503","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-4-48351","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-1-57940","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-2-34347","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-1-55011","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-4-56128","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-1-97836","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-4-60261","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-2-18619","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-3-50199","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-4-75444","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-2-92594","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-3-92582","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-0-03556","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-0-37337","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-0-93159","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-2-23950","fileSize":16384,"count":5},{"volume":"22485-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"22485-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest313","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-85105","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-49625","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-85105","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-84649","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-52125","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-76403","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200708 13:43:06.543" endtime="20200708 13:43:06.544"></status>
</kw>
<status status="FAIL" starttime="20200708 13:43:06.290" endtime="20200708 13:43:06.544"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.550" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.553" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:16.547" endtime="20200708 13:43:16.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.554" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:16.553" endtime="20200708 13:43:16.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.554" endtime="20200708 13:43:16.555"></status>
</kw>
<msg timestamp="20200708 13:43:16.555" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:16.546" endtime="20200708 13:43:16.555"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.557" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:16.556" endtime="20200708 13:43:16.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.577" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:16.576" endtime="20200708 13:43:16.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.577" endtime="20200708 13:43:16.578"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.555" endtime="20200708 13:43:16.578"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.555" endtime="20200708 13:43:16.578"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.546" endtime="20200708 13:43:16.578"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.546" endtime="20200708 13:43:16.578"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.580" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.594" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.579" endtime="20200708 13:43:16.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.595" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  27270      0 --:--:-- --:--:-- --:--:-- 30333
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":2},{"ContainerID":4,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20200708 13:43:16.595" endtime="20200708 13:43:16.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.596" endtime="20200708 13:43:16.596"></status>
</kw>
<msg timestamp="20200708 13:43:16.596" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.578" endtime="20200708 13:43:16.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.596" endtime="20200708 13:43:16.597"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.600" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.618" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.597" endtime="20200708 13:43:16.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.619" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3211
&lt; 
{ [data not shown]

100  3211  100  3211    0     0   230k      0 --:--:-- --:--:-- --:--:--  241k
* Connection #0 to host recon left intact
[{"volume":"vol-2-25266","bucket":"bucket-4-79685","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-3-55901","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-2-64367","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-3-17134","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-0-51743","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-1-68593","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-3-55797","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-0-84720","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-1-36503","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-4-48351","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-1-57940","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-2-34347","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-1-55011","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-4-56128","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-1-97836","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-4-60261","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-2-18619","fileSize":16384,"count":5},{"volume":"vol-4-00879","bucket":"bucket-3-50199","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-4-75444","fileSize":16384,"count":5},{"volume":"vol-0-36356","bucket":"bucket-2-92594","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-3-92582","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-0-03556","fileSize":16384,"count":5},{"volume":"vol-1-10625","bucket":"bucket-0-37337","fileSize":16384,"count":5},{"volume":"vol-2-25266","bucket":"bucket-0-93159","fileSize":16384,"count":5},{"volume":"vol-3-27246","bucket":"bucket-2-23950","fileSize":16384,"count":5},{"volume":"22485-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"22485-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"22485-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest313","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-85105","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-49625","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-85105","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-84649","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-52125","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-76403","fileSize":1024,"count":0},{"volume":"vol-0-49037","bucket":"bucket-0-74980","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-55727","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-38215","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200708 13:43:16.618" endtime="20200708 13:43:16.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.619" endtime="20200708 13:43:16.619"></status>
</kw>
<msg timestamp="20200708 13:43:16.619" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.597" endtime="20200708 13:43:16.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.620" endtime="20200708 13:43:16.620"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.545" endtime="20200708 13:43:16.620"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:06.289" endtime="20200708 13:43:16.620"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:06.289" endtime="20200708 13:43:16.620" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.625" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.651" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.623" endtime="20200708 13:43:16.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.651" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  87291      0 --:--:-- --:--:-- --:--:-- 90600
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"1633ef1c-6e1d-459b-afbd-5eaeae39d804","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594215782378,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25598181376},"pipelines":[{"pipelineID":"2d9618ba-6e67-431f-ab4a-ec4632a4ca84","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"8c60205f-9bc8-4ba5-95b9-43b1897ca70f","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"9a3ae0b7-e068-425e-bcd4-3ad8c9275928","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594215782304,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25599123456},"pipelines":[{"pipelineID":"2d9618ba-6e67-431f-ab4a-ec4632a4ca84","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"6235f679-14d7-4f68-add5-fb6c15a0aa90","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"560490e5-fb6d-465e-b10f-ba6ff9f713dd","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594215782497,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25599082496},"pipelines":[{"pipelineID":"0ed34ec5-d151-4a50-ab75-cca75ba8894d","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"2d9618ba-6e67-431f-ab4a-ec4632a4ca84","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200708 13:43:16.651" endtime="20200708 13:43:16.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.652" endtime="20200708 13:43:16.652"></status>
</kw>
<msg timestamp="20200708 13:43:16.652" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.623" endtime="20200708 13:43:16.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.653" endtime="20200708 13:43:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.654" endtime="20200708 13:43:16.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.654" endtime="20200708 13:43:16.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.654" endtime="20200708 13:43:16.655"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.657" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.681" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.655" endtime="20200708 13:43:16.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.682" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  73249      0 --:--:-- --:--:-- --:--:-- 76000
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"0ed34ec5-d151-4a50-ab75-cca75ba8894d","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1149255,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"2d9618ba-6e67-431f-ab4a-ec4632a4ca84","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1148893,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"8c60205f-9bc8-4ba5-95b9-43b1897ca70f","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1148933,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"6235f679-14d7-4f68-add5-fb6c15a0aa90","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1149633,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200708 13:43:16.681" endtime="20200708 13:43:16.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.682" endtime="20200708 13:43:16.683"></status>
</kw>
<msg timestamp="20200708 13:43:16.683" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.655" endtime="20200708 13:43:16.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.683" endtime="20200708 13:43:16.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.683" endtime="20200708 13:43:16.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.683" endtime="20200708 13:43:16.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.684" endtime="20200708 13:43:16.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.684" endtime="20200708 13:43:16.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.684" endtime="20200708 13:43:16.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.687" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.703" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.685" endtime="20200708 13:43:16.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.704" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  20350      0 --:--:-- --:--:-- --:--:-- 20666
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":76796387328},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200708 13:43:16.704" endtime="20200708 13:43:16.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.704" endtime="20200708 13:43:16.705"></status>
</kw>
<msg timestamp="20200708 13:43:16.705" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.685" endtime="20200708 13:43:16.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.705" endtime="20200708 13:43:16.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.706" endtime="20200708 13:43:16.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.706" endtime="20200708 13:43:16.706"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.711" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.736" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.707" endtime="20200708 13:43:16.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.737" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  25276      0 --:--:-- --:--:-- --:--:-- 26705
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594214677735,"lastReportTimestamp":1594215757632},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594214677432,"lastReportTimestamp":1594215782304},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594214677848,"lastReportTimestamp":1594215782378}]</msg>
<status status="PASS" starttime="20200708 13:43:16.736" endtime="20200708 13:43:16.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.737" endtime="20200708 13:43:16.738"></status>
</kw>
<msg timestamp="20200708 13:43:16.738" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.707" endtime="20200708 13:43:16.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.738" endtime="20200708 13:43:16.738"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:16.622" endtime="20200708 13:43:16.739" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.749" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.751" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:43:16.747" endtime="20200708 13:43:16.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.752" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:43:16.751" endtime="20200708 13:43:16.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.752" endtime="20200708 13:43:16.752"></status>
</kw>
<msg timestamp="20200708 13:43:16.753" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:43:16.747" endtime="20200708 13:43:16.753"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.755" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:43:16.754" endtime="20200708 13:43:16.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.771" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:43:16.770" endtime="20200708 13:43:16.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.771" endtime="20200708 13:43:16.771"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.753" endtime="20200708 13:43:16.772"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.753" endtime="20200708 13:43:16.772"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.746" endtime="20200708 13:43:16.772"></status>
</kw>
<status status="PASS" starttime="20200708 13:43:16.746" endtime="20200708 13:43:16.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:43:16.775" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:43:16.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:43:16.812" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.772" endtime="20200708 13:43:16.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:43:16.813" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  21590      0 --:--:-- --:--:-- --:--:-- 22100
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x6c4f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQKAnMntTHCsVV21HRD7RcEygkXeOTYq70wy5w239hqUUz2MreXZdTlNPPtFYUOMYEqwr5qyEqmChRqFPxEPsvyTq3VERx8K8OMYT/HvVLf7PiaLsuTXKiKBJfQQ9Q46tw6Vxe5/YVuv5Apf8cDTYUje0gTvGoKT/AjsXWBfB3mHYDEtHU7rxt3Mp3vqU/ICrNkgSkSYXpzLWkb0YoVm2OsYf5CQR9/So2OnfXcKznEItXtIu9mKzlQDE90ia52BYhKJtrPz1umsZiauXwVTpXConBL2veRsrKBklmXY2xsuzQyhUc0rxv0vanlTRvwTuCOZvCmqe6ETrsaFinHu2yUHnpCkgdIwgc+gAwIBEqKBxwSBxISyyvmswUhWHipMWaFs/ljPo4gISChju54qbEx4JsvYon8qHYNr+GvhY+oP48GzkFF8xiGpzZSNQ3+4YUhrt7skG/lD2MR7TByh2cMj9B/nDEv+m/JM0zeygPRtDUz4McBqZXUqX0ki8kyWU/56aYLBmRYy7cXjSN18l1gQcORaPVpAiTEFG2dq8Cr9x39lcw/N9GryQG6AX347YTnq4rNdFhpmWMG8QGfNKj15BAl5EZNYIO3amIFKBudyqtKQjrp0ECo=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Date: Wed, 08 Jul 2020 13:43:16 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKwhepl4f1eSOVwM2F/whKFfxJTZv7MHLqDBRYjHxZaqeRRZsQ3+LmTUbrcFZaOqD87VRr/9qkGwyqNXKjR+xWKlh
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594251796806&amp;s=CDfjtFo3oaygLUtQ733UD8YcIPzX6BfbWCXo1MLpnMw="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 08 Jul 2020 12:40:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  69951      0 --:--:-- --:--:-- --:--:-- 69951
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.812" endtime="20200708 13:43:16.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:43:16.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:43:16.813" endtime="20200708 13:43:16.814"></status>
</kw>
<msg timestamp="20200708 13:43:16.814" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200708 13:43:16.772" endtime="20200708 13:43:16.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200708 13:43:16.814" endtime="20200708 13:43:16.815"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:43:16.745" endtime="20200708 13:43:16.815" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200708 13:42:58.019" endtime="20200708 13:43:16.816"></status>
</suite>
<status status="PASS" starttime="20200708 13:42:57.995" endtime="20200708 13:43:16.819"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
