<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200708 13:02:55.757" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200708 13:02:55.798" endtime="20200708 13:02:55.798"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:02:55.801" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:02:55.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:02:55.900" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:02:55 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 08 Jul 2020 12:35:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200708 13:02:55.798" endtime="20200708 13:02:55.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:02:55.902" level="INFO">HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:02:55 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 08 Jul 2020 12:35:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200708 13:02:55.901" endtime="20200708 13:02:55.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:02:55.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:02:55.902" endtime="20200708 13:02:55.902"></status>
</kw>
<msg timestamp="20200708 13:02:55.903" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 08 Jul 2020 13:02:55 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 08 Jul 2020 12:35:16 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200708 13:02:55.798" endtime="20200708 13:02:55.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200708 13:02:55.903" endtime="20200708 13:02:55.903"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:02:55.797" endtime="20200708 13:02:55.903" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:02:55.905" endtime="20200708 13:02:55.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:02:55.908" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:07:55.905" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20200708 13:02:55.906" endtime="20200708 13:07:55.905"></status>
</kw>
<status status="FAIL" starttime="20200708 13:02:55.905" endtime="20200708 13:07:55.906"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" starttime="20200708 13:02:55.904" endtime="20200708 13:07:55.906" critical="yes">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20200708 13:02:55.779" endtime="20200708 13:07:55.907"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200708 13:07:55.914" level="INFO">${random} = 43738</msg>
<status status="PASS" starttime="20200708 13:07:55.914" endtime="20200708 13:07:55.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200708 13:07:55.915" level="INFO">${prefix} = 43738</msg>
<status status="PASS" starttime="20200708 13:07:55.915" endtime="20200708 13:07:55.915"></status>
</kw>
<status status="PASS" starttime="20200708 13:07:55.914" endtime="20200708 13:07:55.915"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:07:55.916" endtime="20200708 13:07:55.916"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:07:55.919" level="INFO">Running command 'ozone sh volume info o3://om:9862/43738-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:07:58.074" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:07:58.074" level="INFO">${output} = VOLUME_NOT_FOUND Volume 43738-rpcwoport is not found</msg>
<status status="PASS" starttime="20200708 13:07:55.917" endtime="20200708 13:07:58.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:07:58.076" level="INFO">VOLUME_NOT_FOUND Volume 43738-rpcwoport is not found</msg>
<status status="PASS" starttime="20200708 13:07:58.075" endtime="20200708 13:07:58.076"></status>
</kw>
<msg timestamp="20200708 13:07:58.076" level="INFO">${result} = VOLUME_NOT_FOUND Volume 43738-rpcwoport is not found</msg>
<status status="PASS" starttime="20200708 13:07:55.917" endtime="20200708 13:07:58.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200708 13:07:58.076" endtime="20200708 13:07:58.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:07:58.080" level="INFO">Running command 'ozone sh volume create o3://om:9862/43738-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:00.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:00.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:07:58.078" endtime="20200708 13:08:00.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:00.476" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:00.475" endtime="20200708 13:08:00.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:00.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:00.476" endtime="20200708 13:08:00.476"></status>
</kw>
<msg timestamp="20200708 13:08:00.476" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:07:58.077" endtime="20200708 13:08:00.476"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:00.477" endtime="20200708 13:08:00.477"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:00.479" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="43738-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:02.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:02.984" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200708 13:08:00.477" endtime="20200708 13:08:02.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:02.985" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:08:02.984" endtime="20200708 13:08:02.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:02.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:02.985" endtime="20200708 13:08:02.986"></status>
</kw>
<msg timestamp="20200708 13:08:02.986" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200708 13:08:00.477" endtime="20200708 13:08:02.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:02.986" endtime="20200708 13:08:02.987"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:02.990" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="43738-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:05.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:05.606" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200708 13:08:02.987" endtime="20200708 13:08:05.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:05.607" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:08:05.606" endtime="20200708 13:08:05.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:05.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:05.607" endtime="20200708 13:08:05.608"></status>
</kw>
<msg timestamp="20200708 13:08:05.608" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:08:00.347Z",
  "modificationTime": "2020-07-08T13:08:00.347Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200708 13:08:02.987" endtime="20200708 13:08:05.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:05.608" endtime="20200708 13:08:05.608"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:05.611" level="INFO">Running command 'ozone sh volume update o3://om:9862/43738-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:08.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:08.147" level="INFO">${output} = {
  "metadata" : { },
  "name" : "43738-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:08:00.347Z",
  "modificationTime" : "2020-07-08T13:08:07.770Z",
  "acl...</msg>
<status status="PASS" starttime="20200708 13:08:05.609" endtime="20200708 13:08:08.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:08.148" level="INFO">{
  "metadata" : { },
  "name" : "43738-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:08:00.347Z",
  "modificationTime" : "2020-07-08T13:08:07.770Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200708 13:08:08.148" endtime="20200708 13:08:08.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:08.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:08.149" endtime="20200708 13:08:08.149"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:05.609" endtime="20200708 13:08:08.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:08.152" level="INFO">Running command 'ozone sh volume info o3://om:9862/43738-rpcwoport | jq -r '. | select(.name=="43738-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:10.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:10.713" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:08:08.150" endtime="20200708 13:08:10.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:10.714" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200708 13:08:10.714" endtime="20200708 13:08:10.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:10.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:10.715" endtime="20200708 13:08:10.715"></status>
</kw>
<msg timestamp="20200708 13:08:10.715" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:08:08.149" endtime="20200708 13:08:10.715"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:10.715" endtime="20200708 13:08:10.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:10.718" level="INFO">Running command 'ozone sh bucket create o3://om:9862/43738-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:12.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:12.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:10.716" endtime="20200708 13:08:12.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:13.000" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:12.999" endtime="20200708 13:08:13.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:13.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:13.000" endtime="20200708 13:08:13.001"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:10.716" endtime="20200708 13:08:13.001"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:13.004" level="INFO">Running command 'ozone sh bucket info o3://om:9862/43738-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:16.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:16.242" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200708 13:08:13.002" endtime="20200708 13:08:16.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:16.243" level="INFO">DISK</msg>
<status status="PASS" starttime="20200708 13:08:16.242" endtime="20200708 13:08:16.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:16.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:16.243" endtime="20200708 13:08:16.244"></status>
</kw>
<msg timestamp="20200708 13:08:16.244" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200708 13:08:13.001" endtime="20200708 13:08:16.244"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:16.244" endtime="20200708 13:08:16.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:16.249" level="INFO">Running command 'ozone sh bucket list o3://om:9862/43738-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:18.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:18.631" level="INFO">${output} = 43738-rpcwoport</msg>
<status status="PASS" starttime="20200708 13:08:16.245" endtime="20200708 13:08:18.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:18.632" level="INFO">43738-rpcwoport</msg>
<status status="PASS" starttime="20200708 13:08:18.631" endtime="20200708 13:08:18.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:18.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:18.632" endtime="20200708 13:08:18.633"></status>
</kw>
<msg timestamp="20200708 13:08:18.633" level="INFO">${result} = 43738-rpcwoport</msg>
<status status="PASS" starttime="20200708 13:08:16.245" endtime="20200708 13:08:18.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200708 13:08:18.633" endtime="20200708 13:08:18.633"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:18.637" level="INFO">Running command 'ozone sh key put o3://om:9862/43738-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:37.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:37.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:18.635" endtime="20200708 13:08:37.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:37.969" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:37.969" endtime="20200708 13:08:37.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:37.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:37.970" endtime="20200708 13:08:37.970"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:18.634" endtime="20200708 13:08:37.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:37.973" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:37.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:37.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:37.971" endtime="20200708 13:08:37.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:37.976" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:37.976" endtime="20200708 13:08:37.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:37.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:37.977" endtime="20200708 13:08:37.977"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:37.970" endtime="20200708 13:08:37.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:37.980" level="INFO">Running command 'ozone sh key get o3://om:9862/43738-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:42.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:42.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:37.978" endtime="20200708 13:08:42.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:42.097" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:42.097" endtime="20200708 13:08:42.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:42.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:42.098" endtime="20200708 13:08:42.098"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:37.977" endtime="20200708 13:08:42.098"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:42.101" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:08:42.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:08:42.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:42.099" endtime="20200708 13:08:42.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:08:42.105" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:08:42.105" endtime="20200708 13:08:42.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:08:42.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:08:42.105" endtime="20200708 13:08:42.106"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:42.098" endtime="20200708 13:08:42.106"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:08:42.110" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/43738-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:01.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:01.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:08:42.107" endtime="20200708 13:09:01.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:01.574" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:01.574" endtime="20200708 13:09:01.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:01.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:01.575" endtime="20200708 13:09:01.575"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:42.106" endtime="20200708 13:09:01.575"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:01.578" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:01.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:01.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:01.576" endtime="20200708 13:09:01.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:01.581" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:01.581" endtime="20200708 13:09:01.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:01.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:01.582" endtime="20200708 13:09:01.582"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:01.575" endtime="20200708 13:09:01.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:01.585" level="INFO">Running command 'ozone sh key get o3://om:9862/43738-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:05.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:05.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:01.583" endtime="20200708 13:09:05.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:05.784" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:05.783" endtime="20200708 13:09:05.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:05.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:05.784" endtime="20200708 13:09:05.784"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:01.582" endtime="20200708 13:09:05.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:05.787" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:05.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:05.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:05.785" endtime="20200708 13:09:05.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:05.790" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:05.789" endtime="20200708 13:09:05.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:05.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:05.790" endtime="20200708 13:09:05.790"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:05.785" endtime="20200708 13:09:05.790"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:05.793" level="INFO">Running command 'ozone sh key info o3://om:9862/43738-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:08.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:08.322" level="INFO">${output} = {
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:44.380Z",
  "modificationTime": "2020-07-08T13:08:56.063Z",...</msg>
<status status="PASS" starttime="20200708 13:09:05.791" endtime="20200708 13:09:08.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:08.323" level="INFO">{
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:44.380Z",
  "modificationTime": "2020-07-08T13:08:56.063Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478390640836660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:09:08.322" endtime="20200708 13:09:08.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:08.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:08.323" endtime="20200708 13:09:08.324"></status>
</kw>
<msg timestamp="20200708 13:09:08.324" level="INFO">${result} = {
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:44.380Z",
  "modificationTime": "2020-07-08T13:08:56.063Z",...</msg>
<status status="PASS" starttime="20200708 13:09:05.790" endtime="20200708 13:09:08.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:08.324" endtime="20200708 13:09:08.325"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:08.328" level="INFO">Running command 'ozone sh key delete o3://om:9862/43738-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:10.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:10.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:08.325" endtime="20200708 13:09:10.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:10.615" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:10.614" endtime="20200708 13:09:10.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:10.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:10.615" endtime="20200708 13:09:10.616"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:08.325" endtime="20200708 13:09:10.616"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:10.618" level="INFO">Running command 'ozone sh key cp o3://om:9862/43738-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:29.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:29.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:10.616" endtime="20200708 13:09:29.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:29.997" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:29.997" endtime="20200708 13:09:29.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:29.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:29.998" endtime="20200708 13:09:29.998"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:10.616" endtime="20200708 13:09:29.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:30.001" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:30.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:30.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:29.999" endtime="20200708 13:09:30.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:30.004" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:30.004" endtime="20200708 13:09:30.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:30.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:30.004" endtime="20200708 13:09:30.005"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:29.998" endtime="20200708 13:09:30.005"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:30.007" level="INFO">Running command 'ozone sh key get o3://om:9862/43738-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:34.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:34.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:30.006" endtime="20200708 13:09:34.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:34.183" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:34.182" endtime="20200708 13:09:34.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:34.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:34.183" endtime="20200708 13:09:34.184"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:30.005" endtime="20200708 13:09:34.184"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:34.187" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:34.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:34.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:34.185" endtime="20200708 13:09:34.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:34.190" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:34.189" endtime="20200708 13:09:34.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:34.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:34.190" endtime="20200708 13:09:34.190"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:34.184" endtime="20200708 13:09:34.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:34.193" level="INFO">Running command 'ozone sh key delete o3://om:9862/43738-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:36.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:36.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:34.191" endtime="20200708 13:09:36.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:36.600" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:36.600" endtime="20200708 13:09:36.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:36.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:36.601" endtime="20200708 13:09:36.601"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:34.191" endtime="20200708 13:09:36.602"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:36.604" level="INFO">Running command 'ozone sh key get o3://om:9862/43738-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:38.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:09:38.771" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:09:36.602" endtime="20200708 13:09:38.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:38.772" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:09:38.771" endtime="20200708 13:09:38.772"></status>
</kw>
<msg timestamp="20200708 13:09:38.772" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:09:36.602" endtime="20200708 13:09:38.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:38.772" endtime="20200708 13:09:38.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:38.776" level="INFO">Running command 'ozone sh key get --force o3://om:9862/43738-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:42.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:42.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:38.773" endtime="20200708 13:09:42.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:42.762" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:42.761" endtime="20200708 13:09:42.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:42.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:42.762" endtime="20200708 13:09:42.763"></status>
</kw>
<msg timestamp="20200708 13:09:42.763" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:09:38.773" endtime="20200708 13:09:42.763"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:42.763" endtime="20200708 13:09:42.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:42.766" level="INFO">Running command 'ozone sh key info o3://om:9862/43738-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:45.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:45.363" level="INFO">${output} = {
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:20.927Z",
  "modificationTime": "2020-07-08T13:08:32.485Z",
  "re...</msg>
<status status="PASS" starttime="20200708 13:09:42.764" endtime="20200708 13:09:45.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:45.364" level="INFO">{
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:20.927Z",
  "modificationTime": "2020-07-08T13:08:32.485Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478389103886380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:09:45.363" endtime="20200708 13:09:45.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:45.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:45.364" endtime="20200708 13:09:45.365"></status>
</kw>
<msg timestamp="20200708 13:09:45.365" level="INFO">${result} = {
  "volumeName": "43738-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:08:20.927Z",
  "modificationTime": "2020-07-08T13:08:32.485Z",
  "re...</msg>
<status status="PASS" starttime="20200708 13:09:42.764" endtime="20200708 13:09:45.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:45.365" endtime="20200708 13:09:45.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:45.369" level="INFO">Running command 'ozone sh key list o3://om:9862/43738-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:48.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:48.103" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200708 13:09:45.366" endtime="20200708 13:09:48.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:48.104" level="INFO">key1</msg>
<status status="PASS" starttime="20200708 13:09:48.103" endtime="20200708 13:09:48.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:48.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:48.104" endtime="20200708 13:09:48.105"></status>
</kw>
<msg timestamp="20200708 13:09:48.105" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200708 13:09:45.365" endtime="20200708 13:09:48.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:48.105" endtime="20200708 13:09:48.105"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:48.108" level="INFO">Running command 'ozone sh key rename o3://om:9862/43738-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:50.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:50.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:48.106" endtime="20200708 13:09:50.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:50.585" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:50.584" endtime="20200708 13:09:50.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:50.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:50.585" endtime="20200708 13:09:50.585"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:48.105" endtime="20200708 13:09:50.586"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:50.588" level="INFO">Running command 'ozone sh key list o3://om:9862/43738-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:53.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:53.120" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200708 13:09:50.586" endtime="20200708 13:09:53.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:53.121" level="INFO">key2</msg>
<status status="PASS" starttime="20200708 13:09:53.121" endtime="20200708 13:09:53.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:53.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:53.122" endtime="20200708 13:09:53.122"></status>
</kw>
<msg timestamp="20200708 13:09:53.122" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200708 13:09:50.586" endtime="20200708 13:09:53.122"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:53.122" endtime="20200708 13:09:53.123"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:53.126" level="INFO">Running command 'ozone sh key delete o3://om:9862/43738-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:55.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:55.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:53.124" endtime="20200708 13:09:55.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:55.556" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:55.555" endtime="20200708 13:09:55.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:55.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:55.556" endtime="20200708 13:09:55.556"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:53.123" endtime="20200708 13:09:55.557"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:18.634" endtime="20200708 13:09:55.557"></status>
</kw>
<status status="PASS" starttime="20200708 13:08:18.634" endtime="20200708 13:09:55.557"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:55.559" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/43738-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:55.916" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200708 13:09:55.557" endtime="20200708 13:09:55.916"></status>
</kw>
<status status="FAIL" starttime="20200708 13:09:55.557" endtime="20200708 13:09:55.917"></status>
</kw>
<status status="FAIL" starttime="20200708 13:07:55.916" endtime="20200708 13:09:55.917"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200708 13:07:55.915" endtime="20200708 13:09:55.917" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:09:55.918" endtime="20200708 13:09:55.919"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:55.934" level="INFO">Running command 'ozone sh volume create o3://om:9862/43738-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:09:59.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:09:59.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:09:55.920" endtime="20200708 13:09:59.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:09:59.992" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:09:59.990" endtime="20200708 13:09:59.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:09:59.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:09:59.992" endtime="20200708 13:09:59.993"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:55.919" endtime="20200708 13:09:59.993"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:09:59.996" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/43738-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:02.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:02.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:09:59.994" endtime="20200708 13:10:02.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:02.578" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:02.577" endtime="20200708 13:10:02.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:02.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:02.578" endtime="20200708 13:10:02.579"></status>
</kw>
<msg timestamp="20200708 13:10:02.579" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:09:59.993" endtime="20200708 13:10:02.579"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:02.579" endtime="20200708 13:10:02.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:02.583" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/43738-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:04.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:04.884" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200708 13:10:02.581" endtime="20200708 13:10:04.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:04.885" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200708 13:10:04.885" endtime="20200708 13:10:04.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:04.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:04.886" endtime="20200708 13:10:04.886"></status>
</kw>
<msg timestamp="20200708 13:10:04.886" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200708 13:10:02.580" endtime="20200708 13:10:04.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:04.889" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/43738-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:07.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:07.344" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:04.887" endtime="20200708 13:10:07.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:07.345" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:07.345" endtime="20200708 13:10:07.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:07.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:07.346" endtime="20200708 13:10:07.346"></status>
</kw>
<msg timestamp="20200708 13:10:07.346" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:04.887" endtime="20200708 13:10:07.346"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:07.347" endtime="20200708 13:10:07.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:07.350" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/43738-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:09.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:09.634" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:10:07.348" endtime="20200708 13:10:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:09.635" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:10:09.635" endtime="20200708 13:10:09.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:09.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:09.636" endtime="20200708 13:10:09.636"></status>
</kw>
<msg timestamp="20200708 13:10:09.636" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:10:07.348" endtime="20200708 13:10:09.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:09.639" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/43738-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:12.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:12.060" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:09.637" endtime="20200708 13:10:12.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:12.067" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:12.060" endtime="20200708 13:10:12.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:12.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:12.068" endtime="20200708 13:10:12.068"></status>
</kw>
<msg timestamp="20200708 13:10:12.068" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:09.636" endtime="20200708 13:10:12.068"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:12.068" endtime="20200708 13:10:12.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:12.074" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/43738-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:14.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:14.279" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:12.070" endtime="20200708 13:10:14.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:14.280" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:14.279" endtime="20200708 13:10:14.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:14.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:14.280" endtime="20200708 13:10:14.280"></status>
</kw>
<msg timestamp="20200708 13:10:14.281" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:12.070" endtime="20200708 13:10:14.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:14.284" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/43738-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:16.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:16.918" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200708 13:10:14.281" endtime="20200708 13:10:16.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:16.919" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:16.919" endtime="20200708 13:10:16.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:16.919" endtime="20200708 13:10:16.920"></status>
</kw>
<msg timestamp="20200708 13:10:16.923" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200708 13:10:14.281" endtime="20200708 13:10:16.923"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:16.923" endtime="20200708 13:10:16.924"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:16.924" endtime="20200708 13:10:16.926"></status>
</kw>
<status status="PASS" starttime="20200708 13:09:55.919" endtime="20200708 13:10:16.926"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200708 13:09:55.918" endtime="20200708 13:10:16.926" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:16.927" endtime="20200708 13:10:16.928"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:16.931" level="INFO">Running command 'ozone sh bucket create o3://om:9862/43738-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:19.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:19.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:10:16.928" endtime="20200708 13:10:19.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:19.269" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:10:19.268" endtime="20200708 13:10:19.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:19.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:19.269" endtime="20200708 13:10:19.270"></status>
</kw>
<status status="PASS" starttime="20200708 13:10:16.928" endtime="20200708 13:10:19.270"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:19.274" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/43738-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:21.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:21.725" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:19.270" endtime="20200708 13:10:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:21.727" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:21.726" endtime="20200708 13:10:21.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:21.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:21.727" endtime="20200708 13:10:21.727"></status>
</kw>
<msg timestamp="20200708 13:10:21.728" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:19.270" endtime="20200708 13:10:21.728"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:21.728" endtime="20200708 13:10:21.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:21.731" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/43738-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:24.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:24.075" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200708 13:10:21.729" endtime="20200708 13:10:24.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:24.077" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200708 13:10:24.076" endtime="20200708 13:10:24.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:24.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:24.077" endtime="20200708 13:10:24.078"></status>
</kw>
<msg timestamp="20200708 13:10:24.078" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200708 13:10:21.728" endtime="20200708 13:10:24.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:24.082" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/43738-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:26.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:26.782" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:24.078" endtime="20200708 13:10:26.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:26.783" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:26.783" endtime="20200708 13:10:26.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:26.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:26.784" endtime="20200708 13:10:26.784"></status>
</kw>
<msg timestamp="20200708 13:10:26.784" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:24.078" endtime="20200708 13:10:26.784"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:26.784" endtime="20200708 13:10:26.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:26.790" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/43738-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:29.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:29.129" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:10:26.786" endtime="20200708 13:10:29.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:29.130" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:10:29.129" endtime="20200708 13:10:29.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:29.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:29.130" endtime="20200708 13:10:29.130"></status>
</kw>
<msg timestamp="20200708 13:10:29.131" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:10:26.786" endtime="20200708 13:10:29.131"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:29.133" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/43738-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:31.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:31.735" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:29.131" endtime="20200708 13:10:31.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:31.736" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:31.736" endtime="20200708 13:10:31.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:31.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:31.737" endtime="20200708 13:10:31.737"></status>
</kw>
<msg timestamp="20200708 13:10:31.737" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:29.131" endtime="20200708 13:10:31.737"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:31.737" endtime="20200708 13:10:31.738"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:31.741" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/43738-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:34.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:34.272" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:31.739" endtime="20200708 13:10:34.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:34.273" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:34.272" endtime="20200708 13:10:34.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:34.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:34.273" endtime="20200708 13:10:34.274"></status>
</kw>
<msg timestamp="20200708 13:10:34.274" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:10:31.738" endtime="20200708 13:10:34.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:34.278" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/43738-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:36.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:36.837" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200708 13:10:34.275" endtime="20200708 13:10:36.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:36.838" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:36.837" endtime="20200708 13:10:36.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:36.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:36.838" endtime="20200708 13:10:36.839"></status>
</kw>
<msg timestamp="20200708 13:10:36.839" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200708 13:10:34.274" endtime="20200708 13:10:36.839"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:36.839" endtime="20200708 13:10:36.840"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:36.840" endtime="20200708 13:10:36.840"></status>
</kw>
<status status="PASS" starttime="20200708 13:10:16.928" endtime="20200708 13:10:36.840"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200708 13:10:16.926" endtime="20200708 13:10:36.840" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:36.842" endtime="20200708 13:10:36.842"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:36.846" level="INFO">Running command 'ozone sh key put o3://om:9862/43738-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:56.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:56.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:10:36.843" endtime="20200708 13:10:56.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:56.137" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:10:56.136" endtime="20200708 13:10:56.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:56.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:56.137" endtime="20200708 13:10:56.138"></status>
</kw>
<status status="PASS" starttime="20200708 13:10:36.843" endtime="20200708 13:10:56.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:56.141" level="INFO">Running command 'ozone sh key getacl o3://om:9862/43738-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:10:58.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:10:58.760" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:56.138" endtime="20200708 13:10:58.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:10:58.761" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:10:58.761" endtime="20200708 13:10:58.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:10:58.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:10:58.761" endtime="20200708 13:10:58.762"></status>
</kw>
<msg timestamp="20200708 13:10:58.762" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:10:56.138" endtime="20200708 13:10:58.762"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:10:58.762" endtime="20200708 13:10:58.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:10:58.766" level="INFO">Running command 'ozone sh key addacl o3://om:9862/43738-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:01.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:01.134" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:10:58.763" endtime="20200708 13:11:01.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:01.135" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:11:01.135" endtime="20200708 13:11:01.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:01.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:01.136" endtime="20200708 13:11:01.136"></status>
</kw>
<msg timestamp="20200708 13:11:01.136" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:10:58.763" endtime="20200708 13:11:01.136"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:01.139" level="INFO">Running command 'ozone sh key getacl o3://om:9862/43738-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:03.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:03.769" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:11:01.137" endtime="20200708 13:11:03.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:03.771" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:11:03.770" endtime="20200708 13:11:03.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:03.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:03.771" endtime="20200708 13:11:03.771"></status>
</kw>
<msg timestamp="20200708 13:11:03.771" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:11:01.136" endtime="20200708 13:11:03.772"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:03.772" endtime="20200708 13:11:03.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:03.775" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/43738-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:06.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:06.117" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:11:03.773" endtime="20200708 13:11:06.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:06.118" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:11:06.118" endtime="20200708 13:11:06.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:06.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:06.119" endtime="20200708 13:11:06.119"></status>
</kw>
<msg timestamp="20200708 13:11:06.120" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:11:03.773" endtime="20200708 13:11:06.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:06.122" level="INFO">Running command 'ozone sh key getacl o3://om:9862/43738-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:08.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:08.687" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:11:06.120" endtime="20200708 13:11:08.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:08.688" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:11:08.688" endtime="20200708 13:11:08.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:08.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:08.689" endtime="20200708 13:11:08.689"></status>
</kw>
<msg timestamp="20200708 13:11:08.689" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200708 13:11:06.120" endtime="20200708 13:11:08.689"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:08.690" endtime="20200708 13:11:08.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:08.693" level="INFO">Running command 'ozone sh key setacl o3://om:9862/43738-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:11.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:11.020" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:11:08.691" endtime="20200708 13:11:11.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:11.021" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:11:11.020" endtime="20200708 13:11:11.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:11.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:11.021" endtime="20200708 13:11:11.022"></status>
</kw>
<msg timestamp="20200708 13:11:11.022" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:11:08.690" endtime="20200708 13:11:11.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:11.025" level="INFO">Running command 'ozone sh key getacl o3://om:9862/43738-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:13.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:13.423" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200708 13:11:11.023" endtime="20200708 13:11:13.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:13.425" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:11:13.424" endtime="20200708 13:11:13.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:13.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:13.425" endtime="20200708 13:11:13.426"></status>
</kw>
<msg timestamp="20200708 13:11:13.426" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200708 13:11:11.022" endtime="20200708 13:11:13.426"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:13.426" endtime="20200708 13:11:13.427"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:13.427" endtime="20200708 13:11:13.427"></status>
</kw>
<status status="PASS" starttime="20200708 13:10:36.842" endtime="20200708 13:11:13.428"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200708 13:10:36.841" endtime="20200708 13:11:13.428" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:13.431" endtime="20200708 13:11:13.432"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:13.436" level="INFO">Running command 'ozone sh volume info o3:///43738-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:15.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:11:15.722" level="INFO">${output} = VOLUME_NOT_FOUND Volume 43738-rpcwport is not found</msg>
<status status="PASS" starttime="20200708 13:11:13.433" endtime="20200708 13:11:15.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:15.723" level="INFO">VOLUME_NOT_FOUND Volume 43738-rpcwport is not found</msg>
<status status="PASS" starttime="20200708 13:11:15.722" endtime="20200708 13:11:15.723"></status>
</kw>
<msg timestamp="20200708 13:11:15.723" level="INFO">${result} = VOLUME_NOT_FOUND Volume 43738-rpcwport is not found</msg>
<status status="PASS" starttime="20200708 13:11:13.432" endtime="20200708 13:11:15.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:15.724" endtime="20200708 13:11:15.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:15.727" level="INFO">Running command 'ozone sh volume create o3:///43738-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:17.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:17.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:15.725" endtime="20200708 13:11:17.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:17.904" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:17.903" endtime="20200708 13:11:17.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:17.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:17.904" endtime="20200708 13:11:17.905"></status>
</kw>
<msg timestamp="20200708 13:11:17.905" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:11:15.724" endtime="20200708 13:11:17.905"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:17.905" endtime="20200708 13:11:17.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:17.908" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="43738-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:20.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:20.486" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200708 13:11:17.906" endtime="20200708 13:11:20.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:20.487" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:11:20.486" endtime="20200708 13:11:20.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:20.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:20.487" endtime="20200708 13:11:20.488"></status>
</kw>
<msg timestamp="20200708 13:11:20.488" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200708 13:11:17.905" endtime="20200708 13:11:20.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:20.488" endtime="20200708 13:11:20.488"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:20.492" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="43738-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:23.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:23.027" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200708 13:11:20.489" endtime="20200708 13:11:23.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:23.028" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:11:23.028" endtime="20200708 13:11:23.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:23.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:23.029" endtime="20200708 13:11:23.029"></status>
</kw>
<msg timestamp="20200708 13:11:23.029" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:11:17.826Z",
  "modificationTime": "2020-07-08T13:11:17.826Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200708 13:11:20.488" endtime="20200708 13:11:23.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:23.030" endtime="20200708 13:11:23.030"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:23.034" level="INFO">Running command 'ozone sh volume update o3:///43738-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:25.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:25.656" level="INFO">${output} = {
  "metadata" : { },
  "name" : "43738-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:11:17.826Z",
  "modificationTime" : "2020-07-08T13:11:25.248Z",
  "acls...</msg>
<status status="PASS" starttime="20200708 13:11:23.031" endtime="20200708 13:11:25.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:25.657" level="INFO">{
  "metadata" : { },
  "name" : "43738-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:11:17.826Z",
  "modificationTime" : "2020-07-08T13:11:25.248Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200708 13:11:25.656" endtime="20200708 13:11:25.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:25.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:25.657" endtime="20200708 13:11:25.658"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:23.030" endtime="20200708 13:11:25.658"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:25.661" level="INFO">Running command 'ozone sh volume info o3:///43738-rpcwport | jq -r '. | select(.name=="43738-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:28.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:28.155" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:11:25.659" endtime="20200708 13:11:28.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:28.157" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200708 13:11:28.156" endtime="20200708 13:11:28.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:28.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:28.157" endtime="20200708 13:11:28.157"></status>
</kw>
<msg timestamp="20200708 13:11:28.158" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:11:25.658" endtime="20200708 13:11:28.158"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:28.158" endtime="20200708 13:11:28.158"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:28.160" level="INFO">Running command 'ozone sh bucket create o3:///43738-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:30.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:30.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:28.159" endtime="20200708 13:11:30.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:30.514" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:30.513" endtime="20200708 13:11:30.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:30.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:30.515" endtime="20200708 13:11:30.515"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:28.158" endtime="20200708 13:11:30.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:30.518" level="INFO">Running command 'ozone sh bucket info o3:///43738-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:33.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:33.034" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200708 13:11:30.516" endtime="20200708 13:11:33.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:33.035" level="INFO">DISK</msg>
<status status="PASS" starttime="20200708 13:11:33.035" endtime="20200708 13:11:33.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:33.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:33.035" endtime="20200708 13:11:33.036"></status>
</kw>
<msg timestamp="20200708 13:11:33.036" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200708 13:11:30.515" endtime="20200708 13:11:33.036"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:33.036" endtime="20200708 13:11:33.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:33.041" level="INFO">Running command 'ozone sh bucket list o3:///43738-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:35.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:35.476" level="INFO">${output} = 43738-rpcwport</msg>
<status status="PASS" starttime="20200708 13:11:33.038" endtime="20200708 13:11:35.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:35.477" level="INFO">43738-rpcwport</msg>
<status status="PASS" starttime="20200708 13:11:35.476" endtime="20200708 13:11:35.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:35.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:35.477" endtime="20200708 13:11:35.477"></status>
</kw>
<msg timestamp="20200708 13:11:35.477" level="INFO">${result} = 43738-rpcwport</msg>
<status status="PASS" starttime="20200708 13:11:33.037" endtime="20200708 13:11:35.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200708 13:11:35.478" endtime="20200708 13:11:35.478"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:35.481" level="INFO">Running command 'ozone sh key put o3:///43738-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:54.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:54.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:35.479" endtime="20200708 13:11:54.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:54.864" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:54.863" endtime="20200708 13:11:54.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:54.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:54.864" endtime="20200708 13:11:54.865"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:35.479" endtime="20200708 13:11:54.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:54.867" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:54.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:54.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:54.865" endtime="20200708 13:11:54.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:54.870" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:54.870" endtime="20200708 13:11:54.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:54.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:54.870" endtime="20200708 13:11:54.871"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:54.865" endtime="20200708 13:11:54.871"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:54.873" level="INFO">Running command 'ozone sh key get o3:///43738-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:58.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:58.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:54.871" endtime="20200708 13:11:58.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:58.988" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:58.987" endtime="20200708 13:11:58.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:58.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:58.988" endtime="20200708 13:11:58.988"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:54.871" endtime="20200708 13:11:58.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:58.992" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:11:58.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:11:58.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:58.989" endtime="20200708 13:11:58.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:11:58.994" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:11:58.994" endtime="20200708 13:11:58.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:11:58.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:11:58.994" endtime="20200708 13:11:58.995"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:58.989" endtime="20200708 13:11:58.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:11:59.000" level="INFO">Running command 'ozone sh key put -t RATIS o3:///43738-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:18.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:18.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:11:58.995" endtime="20200708 13:12:18.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:18.078" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:18.077" endtime="20200708 13:12:18.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:18.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:18.078" endtime="20200708 13:12:18.079"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:58.995" endtime="20200708 13:12:18.079"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:18.082" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:18.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:18.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:18.079" endtime="20200708 13:12:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:18.085" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:18.084" endtime="20200708 13:12:18.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:18.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:18.085" endtime="20200708 13:12:18.086"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:18.079" endtime="20200708 13:12:18.086"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:18.090" level="INFO">Running command 'ozone sh key get o3:///43738-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:22.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:22.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:18.087" endtime="20200708 13:12:22.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:22.115" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:22.114" endtime="20200708 13:12:22.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:22.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:22.115" endtime="20200708 13:12:22.116"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:18.086" endtime="20200708 13:12:22.116"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:22.120" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:22.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:22.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:22.117" endtime="20200708 13:12:22.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:22.123" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:22.123" endtime="20200708 13:12:22.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:22.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:22.124" endtime="20200708 13:12:22.124"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:22.116" endtime="20200708 13:12:22.124"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:22.127" level="INFO">Running command 'ozone sh key info o3:///43738-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:24.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:24.864" level="INFO">${output} = {
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:12:01.206Z",
  "modificationTime": "2020-07-08T13:12:12.586Z",
...</msg>
<status status="PASS" starttime="20200708 13:12:22.125" endtime="20200708 13:12:24.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:24.866" level="INFO">{
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:12:01.206Z",
  "modificationTime": "2020-07-08T13:12:12.586Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478403540090940,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:12:24.865" endtime="20200708 13:12:24.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:24.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:24.866" endtime="20200708 13:12:24.866"></status>
</kw>
<msg timestamp="20200708 13:12:24.866" level="INFO">${result} = {
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:12:01.206Z",
  "modificationTime": "2020-07-08T13:12:12.586Z",
...</msg>
<status status="PASS" starttime="20200708 13:12:22.124" endtime="20200708 13:12:24.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200708 13:12:24.867" endtime="20200708 13:12:24.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:24.871" level="INFO">Running command 'ozone sh key delete o3:///43738-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:27.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:27.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:24.868" endtime="20200708 13:12:27.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:27.175" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:27.174" endtime="20200708 13:12:27.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:27.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:27.175" endtime="20200708 13:12:27.176"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:24.867" endtime="20200708 13:12:27.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:27.178" level="INFO">Running command 'ozone sh key cp o3:///43738-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:46.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:46.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:27.176" endtime="20200708 13:12:46.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:46.551" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:46.550" endtime="20200708 13:12:46.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:46.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:46.551" endtime="20200708 13:12:46.552"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:27.176" endtime="20200708 13:12:46.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:46.555" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:46.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:46.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:46.552" endtime="20200708 13:12:46.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:46.557" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:46.557" endtime="20200708 13:12:46.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:46.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:46.558" endtime="20200708 13:12:46.558"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:46.552" endtime="20200708 13:12:46.558"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:46.563" level="INFO">Running command 'ozone sh key get o3:///43738-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:50.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:50.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:46.559" endtime="20200708 13:12:50.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:50.524" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:50.524" endtime="20200708 13:12:50.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:50.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:50.524" endtime="20200708 13:12:50.525"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:46.558" endtime="20200708 13:12:50.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:50.528" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:50.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:50.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:50.525" endtime="20200708 13:12:50.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:50.530" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:50.529" endtime="20200708 13:12:50.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:50.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:50.530" endtime="20200708 13:12:50.531"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:50.525" endtime="20200708 13:12:50.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:50.533" level="INFO">Running command 'ozone sh key delete o3:///43738-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:52.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:52.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:50.531" endtime="20200708 13:12:52.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:52.852" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:52.851" endtime="20200708 13:12:52.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:52.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:52.852" endtime="20200708 13:12:52.852"></status>
</kw>
<status status="PASS" starttime="20200708 13:12:50.531" endtime="20200708 13:12:52.852"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:52.855" level="INFO">Running command 'ozone sh key get o3:///43738-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:55.204" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:12:55.204" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:12:52.853" endtime="20200708 13:12:55.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:55.205" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:12:55.204" endtime="20200708 13:12:55.205"></status>
</kw>
<msg timestamp="20200708 13:12:55.205" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:12:52.853" endtime="20200708 13:12:55.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:12:55.205" endtime="20200708 13:12:55.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:55.208" level="INFO">Running command 'ozone sh key get --force o3:///43738-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:12:59.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:12:59.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:12:55.206" endtime="20200708 13:12:59.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:12:59.125" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:12:59.125" endtime="20200708 13:12:59.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:12:59.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:12:59.126" endtime="20200708 13:12:59.126"></status>
</kw>
<msg timestamp="20200708 13:12:59.126" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:12:55.206" endtime="20200708 13:12:59.126"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:12:59.126" endtime="20200708 13:12:59.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:12:59.129" level="INFO">Running command 'ozone sh key info o3:///43738-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:01.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:01.687" level="INFO">${output} = {
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:11:37.780Z",
  "modificationTime": "2020-07-08T13:11:49.387Z",
  "rep...</msg>
<status status="PASS" starttime="20200708 13:12:59.127" endtime="20200708 13:13:01.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:01.688" level="INFO">{
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:11:37.780Z",
  "modificationTime": "2020-07-08T13:11:49.387Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478402004779070,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:13:01.688" endtime="20200708 13:13:01.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:01.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:01.689" endtime="20200708 13:13:01.689"></status>
</kw>
<msg timestamp="20200708 13:13:01.689" level="INFO">${result} = {
  "volumeName": "43738-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:11:37.780Z",
  "modificationTime": "2020-07-08T13:11:49.387Z",
  "rep...</msg>
<status status="PASS" starttime="20200708 13:12:59.127" endtime="20200708 13:13:01.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:01.689" endtime="20200708 13:13:01.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:01.694" level="INFO">Running command 'ozone sh key list o3:///43738-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:04.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:04.333" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200708 13:13:01.690" endtime="20200708 13:13:04.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:04.334" level="INFO">key1</msg>
<status status="PASS" starttime="20200708 13:13:04.333" endtime="20200708 13:13:04.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:04.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:04.334" endtime="20200708 13:13:04.335"></status>
</kw>
<msg timestamp="20200708 13:13:04.335" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200708 13:13:01.690" endtime="20200708 13:13:04.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:04.335" endtime="20200708 13:13:04.335"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:04.339" level="INFO">Running command 'ozone sh key rename o3:///43738-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:06.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:06.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:04.336" endtime="20200708 13:13:06.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:06.760" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:06.760" endtime="20200708 13:13:06.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:06.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:06.761" endtime="20200708 13:13:06.761"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:04.336" endtime="20200708 13:13:06.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:06.764" level="INFO">Running command 'ozone sh key list o3:///43738-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:09.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:09.346" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200708 13:13:06.762" endtime="20200708 13:13:09.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:09.347" level="INFO">key2</msg>
<status status="PASS" starttime="20200708 13:13:09.346" endtime="20200708 13:13:09.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:09.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:09.347" endtime="20200708 13:13:09.347"></status>
</kw>
<msg timestamp="20200708 13:13:09.348" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200708 13:13:06.762" endtime="20200708 13:13:09.348"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:09.348" endtime="20200708 13:13:09.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:09.351" level="INFO">Running command 'ozone sh key delete o3:///43738-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:11.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:11.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:09.349" endtime="20200708 13:13:11.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:11.772" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:11.772" endtime="20200708 13:13:11.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:11.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:11.773" endtime="20200708 13:13:11.773"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:09.348" endtime="20200708 13:13:11.773"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:35.479" endtime="20200708 13:13:11.773"></status>
</kw>
<status status="PASS" starttime="20200708 13:11:35.478" endtime="20200708 13:13:11.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:11.777" level="INFO">Running command 'ozone sh bucket delete o3:///43738-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:13.431" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200708 13:13:11.774" endtime="20200708 13:13:13.431"></status>
</kw>
<status status="FAIL" starttime="20200708 13:13:11.774" endtime="20200708 13:13:13.431"></status>
</kw>
<status status="FAIL" starttime="20200708 13:11:13.432" endtime="20200708 13:13:13.432"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200708 13:11:13.430" endtime="20200708 13:13:13.432" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:13.434" endtime="20200708 13:13:13.435"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:13.453" level="INFO">Running command 'ozone sh volume info /43738-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:16.329" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:13:16.329" level="INFO">${output} = VOLUME_NOT_FOUND Volume 43738-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200708 13:13:13.437" endtime="20200708 13:13:16.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:16.330" level="INFO">VOLUME_NOT_FOUND Volume 43738-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200708 13:13:16.330" endtime="20200708 13:13:16.330"></status>
</kw>
<msg timestamp="20200708 13:13:16.331" level="INFO">${result} = VOLUME_NOT_FOUND Volume 43738-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200708 13:13:13.437" endtime="20200708 13:13:16.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:16.331" endtime="20200708 13:13:16.332"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:16.334" level="INFO">Running command 'ozone sh volume create /43738-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:18.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:18.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:16.332" endtime="20200708 13:13:18.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:18.627" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:18.626" endtime="20200708 13:13:18.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:18.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:18.627" endtime="20200708 13:13:18.627"></status>
</kw>
<msg timestamp="20200708 13:13:18.627" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:13:16.332" endtime="20200708 13:13:18.627"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:18.628" endtime="20200708 13:13:18.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:18.632" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="43738-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:21.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:21.162" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200708 13:13:18.629" endtime="20200708 13:13:21.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:21.163" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:13:21.162" endtime="20200708 13:13:21.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:21.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:21.163" endtime="20200708 13:13:21.163"></status>
</kw>
<msg timestamp="20200708 13:13:21.164" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200708 13:13:18.628" endtime="20200708 13:13:21.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:21.164" endtime="20200708 13:13:21.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:21.168" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="43738-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:23.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:23.744" level="INFO">${output} = {
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200708 13:13:21.165" endtime="20200708 13:13:23.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:23.745" level="INFO">{
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200708 13:13:23.744" endtime="20200708 13:13:23.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:23.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:23.745" endtime="20200708 13:13:23.746"></status>
</kw>
<msg timestamp="20200708 13:13:23.746" level="INFO">${result} = {
  "metadata": {},
  "name": "43738-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-08T13:13:18.504Z",
  "modificationTime": "2020-07-08T13:13:18.504Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200708 13:13:21.164" endtime="20200708 13:13:23.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:23.746" endtime="20200708 13:13:23.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:23.749" level="INFO">Running command 'ozone sh volume update /43738-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:26.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:26.366" level="INFO">${output} = {
  "metadata" : { },
  "name" : "43738-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:13:18.504Z",
  "modificationTime" : "2020-07-08T13:13:25.958Z",
  "a...</msg>
<status status="PASS" starttime="20200708 13:13:23.747" endtime="20200708 13:13:26.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:26.367" level="INFO">{
  "metadata" : { },
  "name" : "43738-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-08T13:13:18.504Z",
  "modificationTime" : "2020-07-08T13:13:25.958Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200708 13:13:26.367" endtime="20200708 13:13:26.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:26.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:26.367" endtime="20200708 13:13:26.368"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:23.746" endtime="20200708 13:13:26.368"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:26.371" level="INFO">Running command 'ozone sh volume info /43738-rpcwoscheme | jq -r '. | select(.name=="43738-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:28.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:28.912" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:13:26.368" endtime="20200708 13:13:28.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:28.914" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200708 13:13:28.913" endtime="20200708 13:13:28.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:28.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:28.914" endtime="20200708 13:13:28.914"></status>
</kw>
<msg timestamp="20200708 13:13:28.914" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200708 13:13:26.368" endtime="20200708 13:13:28.915"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:28.915" endtime="20200708 13:13:28.915"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:28.918" level="INFO">Running command 'ozone sh bucket create /43738-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:31.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:31.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:28.916" endtime="20200708 13:13:31.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:31.342" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:31.341" endtime="20200708 13:13:31.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:31.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:31.342" endtime="20200708 13:13:31.342"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:28.915" endtime="20200708 13:13:31.343"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:31.346" level="INFO">Running command 'ozone sh bucket info /43738-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:33.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:33.885" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200708 13:13:31.343" endtime="20200708 13:13:33.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:33.886" level="INFO">DISK</msg>
<status status="PASS" starttime="20200708 13:13:33.885" endtime="20200708 13:13:33.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:33.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:33.886" endtime="20200708 13:13:33.886"></status>
</kw>
<msg timestamp="20200708 13:13:33.886" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200708 13:13:31.343" endtime="20200708 13:13:33.886"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:33.887" endtime="20200708 13:13:33.887"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:33.891" level="INFO">Running command 'ozone sh bucket list /43738-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:36.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:36.410" level="INFO">${output} = 43738-rpcwoscheme</msg>
<status status="PASS" starttime="20200708 13:13:33.887" endtime="20200708 13:13:36.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:36.411" level="INFO">43738-rpcwoscheme</msg>
<status status="PASS" starttime="20200708 13:13:36.410" endtime="20200708 13:13:36.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:36.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:36.411" endtime="20200708 13:13:36.411"></status>
</kw>
<msg timestamp="20200708 13:13:36.412" level="INFO">${result} = 43738-rpcwoscheme</msg>
<status status="PASS" starttime="20200708 13:13:33.887" endtime="20200708 13:13:36.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200708 13:13:36.412" endtime="20200708 13:13:36.412"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:36.416" level="INFO">Running command 'ozone sh key put /43738-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:56.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:56.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:36.413" endtime="20200708 13:13:56.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:56.067" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:56.066" endtime="20200708 13:13:56.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:56.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:56.067" endtime="20200708 13:13:56.068"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:36.413" endtime="20200708 13:13:56.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:56.071" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:13:56.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:13:56.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:56.069" endtime="20200708 13:13:56.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:13:56.075" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:13:56.074" endtime="20200708 13:13:56.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:13:56.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:13:56.075" endtime="20200708 13:13:56.075"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:56.068" endtime="20200708 13:13:56.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:13:56.078" level="INFO">Running command 'ozone sh key get /43738-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:00.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:00.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:13:56.076" endtime="20200708 13:14:00.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:00.283" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:00.282" endtime="20200708 13:14:00.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:00.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:00.284" endtime="20200708 13:14:00.284"></status>
</kw>
<status status="PASS" starttime="20200708 13:13:56.076" endtime="20200708 13:14:00.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:00.287" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:00.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:00.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:00.285" endtime="20200708 13:14:00.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:00.290" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:00.289" endtime="20200708 13:14:00.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:00.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:00.290" endtime="20200708 13:14:00.290"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:00.284" endtime="20200708 13:14:00.290"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:00.293" level="INFO">Running command 'ozone sh key put -t RATIS /43738-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:19.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:19.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:00.291" endtime="20200708 13:14:19.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:19.659" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:19.659" endtime="20200708 13:14:19.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:19.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:19.659" endtime="20200708 13:14:19.660"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:00.291" endtime="20200708 13:14:19.660"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:19.663" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:19.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:19.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:19.660" endtime="20200708 13:14:19.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:19.667" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:19.666" endtime="20200708 13:14:19.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:19.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:19.667" endtime="20200708 13:14:19.667"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:19.660" endtime="20200708 13:14:19.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:19.669" level="INFO">Running command 'ozone sh key get /43738-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:23.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:23.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:19.668" endtime="20200708 13:14:23.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:23.684" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:23.683" endtime="20200708 13:14:23.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:23.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:23.684" endtime="20200708 13:14:23.684"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:19.667" endtime="20200708 13:14:23.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:23.687" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:23.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:23.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:23.685" endtime="20200708 13:14:23.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:23.691" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:23.690" endtime="20200708 13:14:23.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:23.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:23.691" endtime="20200708 13:14:23.692"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:23.685" endtime="20200708 13:14:23.692"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:23.694" level="INFO">Running command 'ozone sh key info /43738-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:26.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:26.253" level="INFO">${output} = {
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:14:02.463Z",
  "modificationTime": "2020-07-08T13:14:14.190Z...</msg>
<status status="PASS" starttime="20200708 13:14:23.693" endtime="20200708 13:14:26.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:26.254" level="INFO">{
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:14:02.463Z",
  "modificationTime": "2020-07-08T13:14:14.190Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478411486789710,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:14:26.254" endtime="20200708 13:14:26.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:26.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:26.255" endtime="20200708 13:14:26.255"></status>
</kw>
<msg timestamp="20200708 13:14:26.255" level="INFO">${result} = {
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:14:02.463Z",
  "modificationTime": "2020-07-08T13:14:14.190Z...</msg>
<status status="PASS" starttime="20200708 13:14:23.692" endtime="20200708 13:14:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200708 13:14:26.255" endtime="20200708 13:14:26.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:26.259" level="INFO">Running command 'ozone sh key delete /43738-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:28.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:28.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:26.256" endtime="20200708 13:14:28.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:28.645" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:28.644" endtime="20200708 13:14:28.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:28.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:28.645" endtime="20200708 13:14:28.645"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:26.256" endtime="20200708 13:14:28.645"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:28.649" level="INFO">Running command 'ozone sh key cp /43738-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:47.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:47.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:28.646" endtime="20200708 13:14:47.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:47.969" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:47.969" endtime="20200708 13:14:47.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:47.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:47.969" endtime="20200708 13:14:47.970"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:28.645" endtime="20200708 13:14:47.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:47.972" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:47.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:47.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:47.970" endtime="20200708 13:14:47.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:47.976" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:47.976" endtime="20200708 13:14:47.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:47.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:47.976" endtime="20200708 13:14:47.977"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:47.970" endtime="20200708 13:14:47.977"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:47.979" level="INFO">Running command 'ozone sh key get /43738-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:51.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:51.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:47.977" endtime="20200708 13:14:51.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:51.830" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:51.829" endtime="20200708 13:14:51.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:51.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:51.830" endtime="20200708 13:14:51.830"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:47.977" endtime="20200708 13:14:51.830"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:51.832" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:51.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:51.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:51.831" endtime="20200708 13:14:51.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:51.836" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:51.836" endtime="20200708 13:14:51.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:51.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:51.837" endtime="20200708 13:14:51.837"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:51.830" endtime="20200708 13:14:51.837"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:51.840" level="INFO">Running command 'ozone sh key delete /43738-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:54.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:14:54.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:51.838" endtime="20200708 13:14:54.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:54.186" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:14:54.185" endtime="20200708 13:14:54.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:14:54.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:14:54.186" endtime="20200708 13:14:54.186"></status>
</kw>
<status status="PASS" starttime="20200708 13:14:51.837" endtime="20200708 13:14:54.187"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:54.190" level="INFO">Running command 'ozone sh key get /43738-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:14:56.526" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:14:56.526" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:14:54.188" endtime="20200708 13:14:56.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:14:56.528" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:14:56.527" endtime="20200708 13:14:56.528"></status>
</kw>
<msg timestamp="20200708 13:14:56.528" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200708 13:14:54.187" endtime="20200708 13:14:56.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:14:56.528" endtime="20200708 13:14:56.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:14:56.531" level="INFO">Running command 'ozone sh key get --force /43738-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:00.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:15:00.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:14:56.529" endtime="20200708 13:15:00.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:15:00.574" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:15:00.574" endtime="20200708 13:15:00.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:15:00.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:15:00.574" endtime="20200708 13:15:00.575"></status>
</kw>
<msg timestamp="20200708 13:15:00.575" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200708 13:14:56.528" endtime="20200708 13:15:00.575"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200708 13:15:00.575" endtime="20200708 13:15:00.576"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:15:00.579" level="INFO">Running command 'ozone sh key info /43738-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:03.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:15:03.295" level="INFO">${output} = {
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:13:38.839Z",
  "modificationTime": "2020-07-08T13:13:50.573Z",
  "...</msg>
<status status="PASS" starttime="20200708 13:15:00.576" endtime="20200708 13:15:03.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:15:03.296" level="INFO">{
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:13:38.839Z",
  "modificationTime": "2020-07-08T13:13:50.573Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104478409938567250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200708 13:15:03.295" endtime="20200708 13:15:03.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:15:03.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:15:03.296" endtime="20200708 13:15:03.297"></status>
</kw>
<msg timestamp="20200708 13:15:03.297" level="INFO">${result} = {
  "volumeName": "43738-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-08T13:13:38.839Z",
  "modificationTime": "2020-07-08T13:13:50.573Z",
  "...</msg>
<status status="PASS" starttime="20200708 13:15:00.576" endtime="20200708 13:15:03.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200708 13:15:03.297" endtime="20200708 13:15:03.297"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:15:03.301" level="INFO">Running command 'ozone sh key list /43738-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:05.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:15:05.929" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200708 13:15:03.298" endtime="20200708 13:15:05.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:15:05.930" level="INFO">key1</msg>
<status status="PASS" starttime="20200708 13:15:05.929" endtime="20200708 13:15:05.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:15:05.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:15:05.930" endtime="20200708 13:15:05.931"></status>
</kw>
<msg timestamp="20200708 13:15:05.931" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200708 13:15:03.298" endtime="20200708 13:15:05.931"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200708 13:15:05.931" endtime="20200708 13:15:05.931"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:15:05.935" level="INFO">Running command 'ozone sh key rename /43738-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:08.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:15:08.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:15:05.932" endtime="20200708 13:15:08.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:15:08.398" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:15:08.397" endtime="20200708 13:15:08.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:15:08.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:15:08.398" endtime="20200708 13:15:08.399"></status>
</kw>
<status status="PASS" starttime="20200708 13:15:05.931" endtime="20200708 13:15:08.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:15:08.403" level="INFO">Running command 'ozone sh key list /43738-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:11.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:15:11.024" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200708 13:15:08.400" endtime="20200708 13:15:11.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:15:11.025" level="INFO">key2</msg>
<status status="PASS" starttime="20200708 13:15:11.025" endtime="20200708 13:15:11.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:15:11.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:15:11.025" endtime="20200708 13:15:11.026"></status>
</kw>
<msg timestamp="20200708 13:15:11.026" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200708 13:15:08.399" endtime="20200708 13:15:11.026"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200708 13:15:11.026" endtime="20200708 13:15:11.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:15:11.029" level="INFO">Running command 'ozone sh key delete /43738-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:15:13.434" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20200708 13:15:11.027" endtime="20200708 13:15:13.434"></status>
</kw>
<status status="FAIL" starttime="20200708 13:15:11.027" endtime="20200708 13:15:13.435"></status>
</kw>
<status status="FAIL" starttime="20200708 13:13:36.412" endtime="20200708 13:15:13.435"></status>
</kw>
<status status="FAIL" starttime="20200708 13:13:36.412" endtime="20200708 13:15:13.435"></status>
</kw>
<status status="FAIL" starttime="20200708 13:13:13.435" endtime="20200708 13:15:13.435"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" starttime="20200708 13:13:13.433" endtime="20200708 13:15:13.435" critical="yes">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20200708 13:07:55.908" endtime="20200708 13:15:13.438"></status>
</suite>
<status status="FAIL" starttime="20200708 13:02:55.757" endtime="20200708 13:15:13.446"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="4">Critical Tests</stat>
<stat pass="4" fail="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="4" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="1" fail="1" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="3" fail="3" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
