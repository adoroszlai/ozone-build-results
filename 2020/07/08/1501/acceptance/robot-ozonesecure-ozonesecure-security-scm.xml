<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200708 13:31:16.929" rpa="false">
<suite id="s1" name="ozonesecure-security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s1" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s1-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:16.981" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:16.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:16.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:31:16.977" endtime="20200708 13:31:16.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:16.985" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:31:16.984" endtime="20200708 13:31:16.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:16.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:16.985" endtime="20200708 13:31:16.985"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:16.976" endtime="20200708 13:31:16.986"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:16.988" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:19.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:31:19.126" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:16.986" endtime="20200708 13:31:19.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:19.127" endtime="20200708 13:31:19.128"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:31:16.975" endtime="20200708 13:31:19.128" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:19.132" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:19.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:19.135" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:31:19.130" endtime="20200708 13:31:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:19.136" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:31:19.135" endtime="20200708 13:31:19.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:19.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:19.136" endtime="20200708 13:31:19.136"></status>
</kw>
<msg timestamp="20200708 13:31:19.137" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:31:19.130" endtime="20200708 13:31:19.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:31:19.138" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:31:19.137" endtime="20200708 13:31:19.138"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:19.140" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:19.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:19.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:31:19.139" endtime="20200708 13:31:19.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:19.160" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:31:19.159" endtime="20200708 13:31:19.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:19.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:19.160" endtime="20200708 13:31:19.160"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:19.138" endtime="20200708 13:31:19.161"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:19.138" endtime="20200708 13:31:19.161"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:19.130" endtime="20200708 13:31:19.161"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:19.129" endtime="20200708 13:31:19.161"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ozone sh volume create o3://om/fstest</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:19.164" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:21.950" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:31:21.950" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:19.161" endtime="20200708 13:31:21.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:21.951" endtime="20200708 13:31:21.951"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:31:19.128" endtime="20200708 13:31:21.951" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:21.956" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:21.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:21.958" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:31:21.954" endtime="20200708 13:31:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:21.959" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:31:21.959" endtime="20200708 13:31:21.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:21.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:21.959" endtime="20200708 13:31:21.960"></status>
</kw>
<msg timestamp="20200708 13:31:21.960" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:31:21.954" endtime="20200708 13:31:21.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:31:21.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:31:21.960" endtime="20200708 13:31:21.961"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:21.964" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:21.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:21.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:31:21.962" endtime="20200708 13:31:21.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:21.985" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:31:21.985" endtime="20200708 13:31:21.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:21.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:21.986" endtime="20200708 13:31:21.986"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.961" endtime="20200708 13:31:21.986"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.961" endtime="20200708 13:31:21.986"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.953" endtime="20200708 13:31:21.986"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.953" endtime="20200708 13:31:21.986"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup volume names</arg>
</arguments>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200708 13:31:21.987" level="INFO">${random} = 13</msg>
<status status="PASS" starttime="20200708 13:31:21.987" endtime="20200708 13:31:21.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
</arguments>
<msg timestamp="20200708 13:31:21.988" level="INFO">${volume1} = fstest13</msg>
<status status="PASS" starttime="20200708 13:31:21.988" endtime="20200708 13:31:21.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
</arguments>
<msg timestamp="20200708 13:31:21.990" level="INFO">${volume2} = fstest213</msg>
<status status="PASS" starttime="20200708 13:31:21.989" endtime="20200708 13:31:21.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
</arguments>
<msg timestamp="20200708 13:31:21.991" level="INFO">${volume3} = fstest313</msg>
<status status="PASS" starttime="20200708 13:31:21.990" endtime="20200708 13:31:21.991"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.987" endtime="20200708 13:31:21.991"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.986" endtime="20200708 13:31:21.991"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create o3://om/${volume1}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:21.994" level="INFO">Running command 'ozone sh volume create o3://om/fstest13 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:24.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:24.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:21.991" endtime="20200708 13:31:24.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:24.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:24.880" endtime="20200708 13:31:24.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:24.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:24.881" endtime="20200708 13:31:24.881"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:21.991" endtime="20200708 13:31:24.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create o3://om/${volume2}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:24.884" level="INFO">Running command 'ozone sh volume create o3://om/fstest213 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:27.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:27.627" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:24.882" endtime="20200708 13:31:27.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:27.628" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:27.627" endtime="20200708 13:31:27.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:27.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:27.628" endtime="20200708 13:31:27.629"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:24.882" endtime="20200708 13:31:27.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:27.632" level="INFO">Running command 'ozone sh bucket create o3://om/fstest13/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:30.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:30.309" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:27.629" endtime="20200708 13:31:30.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:30.311" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:30.310" endtime="20200708 13:31:30.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:30.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:30.311" endtime="20200708 13:31:30.311"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:27.629" endtime="20200708 13:31:30.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create o3://om/${volume1}/bucket2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:30.314" level="INFO">Running command 'ozone sh bucket create o3://om/fstest13/bucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:33.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:33.137" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:30.312" endtime="20200708 13:31:33.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:33.138" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:33.137" endtime="20200708 13:31:33.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:33.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:33.138" endtime="20200708 13:31:33.139"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:30.312" endtime="20200708 13:31:33.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create o3://om/${volume2}/bucket3</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:33.142" level="INFO">Running command 'ozone sh bucket create o3://om/fstest213/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:35.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:35.726" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:33.140" endtime="20200708 13:31:35.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:35.728" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:35.727" endtime="20200708 13:31:35.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:35.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:35.728" endtime="20200708 13:31:35.729"></status>
</kw>
<status status="PASS" starttime="20200708 13:31:33.139" endtime="20200708 13:31:35.729"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:31:21.952" endtime="20200708 13:31:35.729" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check volume from ozonefs">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:35.732" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest13/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:38.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:38.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:35.730" endtime="20200708 13:31:38.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:38.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:38.798" endtime="20200708 13:31:38.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:38.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:38.801" endtime="20200708 13:31:38.801"></status>
</kw>
<msg timestamp="20200708 13:31:38.801" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:35.730" endtime="20200708 13:31:38.801"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:31:35.729" endtime="20200708 13:31:38.802" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test Volume Acls">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:38.806" level="INFO">Running command 'ozone sh volume create fstest313 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:41.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:41.642" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:38.803" endtime="20200708 13:31:41.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:41.643" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:31:41.642" endtime="20200708 13:31:41.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:41.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:41.643" endtime="20200708 13:31:41.644"></status>
</kw>
<msg timestamp="20200708 13:31:41.644" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:38.803" endtime="20200708 13:31:41.644"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:41.644" endtime="20200708 13:31:41.644"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:41.647" level="INFO">Running command 'ozone sh volume getacl fstest313 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:44.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:44.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:41.645" endtime="20200708 13:31:44.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:44.859" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:31:44.858" endtime="20200708 13:31:44.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:44.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:44.859" endtime="20200708 13:31:44.859"></status>
</kw>
<msg timestamp="20200708 13:31:44.859" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:41.645" endtime="20200708 13:31:44.859"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:44.860" endtime="20200708 13:31:44.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:44.864" level="INFO">Running command 'ozone sh volume addacl fstest313 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:47.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:47.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:44.861" endtime="20200708 13:31:47.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:47.603" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200708 13:31:47.602" endtime="20200708 13:31:47.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:47.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:47.604" endtime="20200708 13:31:47.604"></status>
</kw>
<msg timestamp="20200708 13:31:47.604" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:44.861" endtime="20200708 13:31:47.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:47.608" level="INFO">Running command 'ozone sh volume getacl fstest313 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:50.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:50.398" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:47.605" endtime="20200708 13:31:50.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:50.399" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:31:50.399" endtime="20200708 13:31:50.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:50.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:50.400" endtime="20200708 13:31:50.400"></status>
</kw>
<msg timestamp="20200708 13:31:50.401" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:47.605" endtime="20200708 13:31:50.401"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:50.401" endtime="20200708 13:31:50.402"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:50.405" level="INFO">Running command 'ozone sh volume removeacl fstest313 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:53.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:53.169" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:50.402" endtime="20200708 13:31:53.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:53.170" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:31:53.169" endtime="20200708 13:31:53.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:53.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:53.170" endtime="20200708 13:31:53.170"></status>
</kw>
<msg timestamp="20200708 13:31:53.171" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:50.402" endtime="20200708 13:31:53.171"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:53.174" level="INFO">Running command 'ozone sh volume getacl fstest313 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:56.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:56.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:53.171" endtime="20200708 13:31:56.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:56.298" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:31:56.297" endtime="20200708 13:31:56.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:56.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:56.298" endtime="20200708 13:31:56.298"></status>
</kw>
<msg timestamp="20200708 13:31:56.299" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:53.171" endtime="20200708 13:31:56.299"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:31:56.299" endtime="20200708 13:31:56.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:56.302" level="INFO">Running command 'ozone sh volume setacl fstest313 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:31:59.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:31:59.203" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:56.300" endtime="20200708 13:31:59.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:31:59.204" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:31:59.204" endtime="20200708 13:31:59.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:31:59.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:31:59.205" endtime="20200708 13:31:59.205"></status>
</kw>
<msg timestamp="20200708 13:31:59.205" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:56.300" endtime="20200708 13:31:59.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${volume3}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:31:59.208" level="INFO">Running command 'ozone sh volume getacl fstest313 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:02.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:02.014" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:59.206" endtime="20200708 13:32:02.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:02.015" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:02.015" endtime="20200708 13:32:02.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:02.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:02.016" endtime="20200708 13:32:02.016"></status>
</kw>
<msg timestamp="20200708 13:32:02.016" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:31:59.205" endtime="20200708 13:32:02.016"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:02.016" endtime="20200708 13:32:02.017"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:02.018" endtime="20200708 13:32:02.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:31:38.802" endtime="20200708 13:32:02.019" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Bucket Acls">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:02.023" level="INFO">Running command 'ozone sh bucket create fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:04.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:04.636" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:02.021" endtime="20200708 13:32:04.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:04.637" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:32:04.636" endtime="20200708 13:32:04.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:04.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:04.637" endtime="20200708 13:32:04.638"></status>
</kw>
<msg timestamp="20200708 13:32:04.638" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:02.020" endtime="20200708 13:32:04.638"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:04.638" endtime="20200708 13:32:04.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:04.641" level="INFO">Running command 'ozone sh bucket getacl fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:07.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:07.580" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:04.639" endtime="20200708 13:32:07.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:07.582" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:07.581" endtime="20200708 13:32:07.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:07.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:07.582" endtime="20200708 13:32:07.582"></status>
</kw>
<msg timestamp="20200708 13:32:07.583" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:04.639" endtime="20200708 13:32:07.583"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:07.583" endtime="20200708 13:32:07.583"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:07.586" level="INFO">Running command 'ozone sh bucket addacl fstest313/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:10.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:10.425" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:07.584" endtime="20200708 13:32:10.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:10.426" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200708 13:32:10.425" endtime="20200708 13:32:10.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:10.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:10.426" endtime="20200708 13:32:10.427"></status>
</kw>
<msg timestamp="20200708 13:32:10.427" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:07.583" endtime="20200708 13:32:10.427"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:10.431" level="INFO">Running command 'ozone sh bucket getacl fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:13.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:13.341" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:10.427" endtime="20200708 13:32:13.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:13.342" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:13.341" endtime="20200708 13:32:13.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:13.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:13.342" endtime="20200708 13:32:13.343"></status>
</kw>
<msg timestamp="20200708 13:32:13.343" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:10.427" endtime="20200708 13:32:13.343"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:13.343" endtime="20200708 13:32:13.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:13.346" level="INFO">Running command 'ozone sh bucket removeacl fstest313/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:16.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:16.036" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:13.344" endtime="20200708 13:32:16.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:16.038" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:32:16.037" endtime="20200708 13:32:16.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:16.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:16.038" endtime="20200708 13:32:16.038"></status>
</kw>
<msg timestamp="20200708 13:32:16.039" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:13.344" endtime="20200708 13:32:16.039"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:16.041" level="INFO">Running command 'ozone sh bucket getacl fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:19.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:19.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:16.039" endtime="20200708 13:32:19.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:19.096" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:19.095" endtime="20200708 13:32:19.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:19.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:19.096" endtime="20200708 13:32:19.096"></status>
</kw>
<msg timestamp="20200708 13:32:19.097" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:16.039" endtime="20200708 13:32:19.097"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:19.097" endtime="20200708 13:32:19.098"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:19.102" level="INFO">Running command 'ozone sh bucket setacl fstest313/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:21.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:21.724" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:19.098" endtime="20200708 13:32:21.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:21.725" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:32:21.724" endtime="20200708 13:32:21.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:21.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:21.725" endtime="20200708 13:32:21.726"></status>
</kw>
<msg timestamp="20200708 13:32:21.727" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:19.098" endtime="20200708 13:32:21.727"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:21.729" level="INFO">Running command 'ozone sh bucket getacl fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:24.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:24.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:21.727" endtime="20200708 13:32:24.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:24.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:24.675" endtime="20200708 13:32:24.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:24.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:24.676" endtime="20200708 13:32:24.676"></status>
</kw>
<msg timestamp="20200708 13:32:24.677" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:21.727" endtime="20200708 13:32:24.677"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:24.677" endtime="20200708 13:32:24.677"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:24.678" endtime="20200708 13:32:24.678"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:32:02.019" endtime="20200708 13:32:24.679" critical="yes"></status>
</test>
<test id="s1-s1-t7" name="Test key Acls">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:24.682" level="INFO">Running command 'ozone sh key put fstest313/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:29.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:29.432" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:24.680" endtime="20200708 13:32:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:29.434" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:32:29.433" endtime="20200708 13:32:29.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:29.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:29.434" endtime="20200708 13:32:29.434"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:24.680" endtime="20200708 13:32:29.434"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:29.437" level="INFO">Running command 'ozone sh key getacl fstest313/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:32.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:32.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:29.435" endtime="20200708 13:32:32.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:32.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:32.413" endtime="20200708 13:32:32.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:32.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:32.414" endtime="20200708 13:32:32.415"></status>
</kw>
<msg timestamp="20200708 13:32:32.415" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:29.435" endtime="20200708 13:32:32.415"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:32.415" endtime="20200708 13:32:32.415"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:32.419" level="INFO">Running command 'ozone sh key addacl fstest313/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:35.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:35.002" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:32.416" endtime="20200708 13:32:35.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:35.004" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:32:35.003" endtime="20200708 13:32:35.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:35.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:35.004" endtime="20200708 13:32:35.005"></status>
</kw>
<msg timestamp="20200708 13:32:35.006" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:32.416" endtime="20200708 13:32:35.006"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:35.008" level="INFO">Running command 'ozone sh key getacl fstest313/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:37.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:37.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:35.006" endtime="20200708 13:32:37.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:37.879" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:37.878" endtime="20200708 13:32:37.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:37.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:37.879" endtime="20200708 13:32:37.879"></status>
</kw>
<msg timestamp="20200708 13:32:37.880" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:35.006" endtime="20200708 13:32:37.880"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:37.880" endtime="20200708 13:32:37.880"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:37.884" level="INFO">Running command 'ozone sh key removeacl fstest313/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:40.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:40.534" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:37.881" endtime="20200708 13:32:40.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:40.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200708 13:32:40.535" endtime="20200708 13:32:40.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:40.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:40.536" endtime="20200708 13:32:40.536"></status>
</kw>
<msg timestamp="20200708 13:32:40.536" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:37.880" endtime="20200708 13:32:40.536"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:40.539" level="INFO">Running command 'ozone sh key getacl fstest313/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:43.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:43.450" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:40.537" endtime="20200708 13:32:43.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:43.451" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:43.451" endtime="20200708 13:32:43.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:43.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:43.452" endtime="20200708 13:32:43.452"></status>
</kw>
<msg timestamp="20200708 13:32:43.452" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:40.536" endtime="20200708 13:32:43.452"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:43.453" endtime="20200708 13:32:43.453"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:43.455" level="INFO">Running command 'ozone sh key setacl fstest313/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:46.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:46.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:43.453" endtime="20200708 13:32:46.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:46.209" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" starttime="20200708 13:32:46.208" endtime="20200708 13:32:46.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:46.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:46.209" endtime="20200708 13:32:46.209"></status>
</kw>
<msg timestamp="20200708 13:32:46.210" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:43.453" endtime="20200708 13:32:46.210"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:46.214" level="INFO">Running command 'ozone sh key getacl fstest313/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:49.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:49.179" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:46.210" endtime="20200708 13:32:49.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:49.180" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:32:49.180" endtime="20200708 13:32:49.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:49.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:49.180" endtime="20200708 13:32:49.181"></status>
</kw>
<msg timestamp="20200708 13:32:49.181" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:46.210" endtime="20200708 13:32:49.181"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:49.181" endtime="20200708 13:32:49.182"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:49.182" endtime="20200708 13:32:49.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:32:24.679" endtime="20200708 13:32:49.183" critical="yes"></status>
</test>
<test id="s1-s1-t8" name="Test native authorizer">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:49.188" level="INFO">Running command 'ozone sh volume removeacl fstest313 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:51.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:51.902" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:49.185" endtime="20200708 13:32:51.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:51.903" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:root:a[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:32:51.903" endtime="20200708 13:32:51.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:51.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:51.904" endtime="20200708 13:32:51.904"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:49.184" endtime="20200708 13:32:51.904"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:51.908" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:51.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:51.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:32:51.905" endtime="20200708 13:32:51.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:51.912" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:32:51.912" endtime="20200708 13:32:51.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:51.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:51.913" endtime="20200708 13:32:51.913"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:51.904" endtime="20200708 13:32:51.913"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:51.917" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:51.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:51.919" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:32:51.915" endtime="20200708 13:32:51.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:51.920" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:32:51.919" endtime="20200708 13:32:51.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:51.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:51.920" endtime="20200708 13:32:51.920"></status>
</kw>
<msg timestamp="20200708 13:32:51.920" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:32:51.914" endtime="20200708 13:32:51.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:32:51.921" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:32:51.920" endtime="20200708 13:32:51.921"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:51.924" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:51.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:32:51.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:32:51.922" endtime="20200708 13:32:51.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:51.939" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:32:51.939" endtime="20200708 13:32:51.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:32:51.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:32:51.940" endtime="20200708 13:32:51.940"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:51.921" endtime="20200708 13:32:51.940"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:51.921" endtime="20200708 13:32:51.940"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:51.914" endtime="20200708 13:32:51.940"></status>
</kw>
<status status="PASS" starttime="20200708 13:32:51.913" endtime="20200708 13:32:51.940"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:51.944" level="INFO">Running command 'ozone sh bucket list /fstest313/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:54.738" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:32:54.739" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:51.941" endtime="20200708 13:32:54.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:54.740" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200708 13:32:54.739" endtime="20200708 13:32:54.740"></status>
</kw>
<msg timestamp="20200708 13:32:54.740" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:51.940" endtime="20200708 13:32:54.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:54.740" endtime="20200708 13:32:54.741"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:54.743" level="INFO">Running command 'ozone sh key list /fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:32:57.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:32:57.347" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:54.741" endtime="20200708 13:32:57.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:32:57.348" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume</msg>
<status status="PASS" starttime="20200708 13:32:57.347" endtime="20200708 13:32:57.348"></status>
</kw>
<msg timestamp="20200708 13:32:57.348" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:54.741" endtime="20200708 13:32:57.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200708 13:32:57.348" endtime="20200708 13:32:57.349"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:32:57.351" level="INFO">Running command 'ozone sh volume addacl fstest313 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:00.061" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:33:00.062" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:57.349" endtime="20200708 13:33:00.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:00.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</msg>
<status status="PASS" starttime="20200708 13:33:00.062" endtime="20200708 13:33:00.063"></status>
</kw>
<msg timestamp="20200708 13:33:00.063" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:32:57.349" endtime="20200708 13:33:00.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:00.063" endtime="20200708 13:33:00.064"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:00.066" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:00.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:00.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:00.064" endtime="20200708 13:33:00.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:00.071" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:00.070" endtime="20200708 13:33:00.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:00.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:00.071" endtime="20200708 13:33:00.071"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.064" endtime="20200708 13:33:00.072"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:00.076" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:00.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:00.077" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:00.073" endtime="20200708 13:33:00.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:00.078" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:00.078" endtime="20200708 13:33:00.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:00.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:00.078" endtime="20200708 13:33:00.079"></status>
</kw>
<msg timestamp="20200708 13:33:00.079" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:00.072" endtime="20200708 13:33:00.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:00.079" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:00.079" endtime="20200708 13:33:00.079"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:00.083" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:00.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:00.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:00.080" endtime="20200708 13:33:00.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:00.099" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:00.099" endtime="20200708 13:33:00.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:00.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:00.099" endtime="20200708 13:33:00.100"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.080" endtime="20200708 13:33:00.100"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.080" endtime="20200708 13:33:00.100"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.072" endtime="20200708 13:33:00.100"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.072" endtime="20200708 13:33:00.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:00.103" level="INFO">Running command 'ozone sh volume addacl fstest313 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:02.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:02.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:00.101" endtime="20200708 13:33:02.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:02.678" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:33:02.678" endtime="20200708 13:33:02.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:02.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:02.679" endtime="20200708 13:33:02.679"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:00.100" endtime="20200708 13:33:02.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:02.682" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:02.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:02.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:02.680" endtime="20200708 13:33:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:02.686" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:02.686" endtime="20200708 13:33:02.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:02.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:02.687" endtime="20200708 13:33:02.687"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:02.679" endtime="20200708 13:33:02.687"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:02.690" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:02.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:02.692" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:02.688" endtime="20200708 13:33:02.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:02.693" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:02.693" endtime="20200708 13:33:02.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:02.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:02.694" endtime="20200708 13:33:02.694"></status>
</kw>
<msg timestamp="20200708 13:33:02.694" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:02.688" endtime="20200708 13:33:02.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:02.695" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:02.694" endtime="20200708 13:33:02.695"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:02.698" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:02.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:02.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:02.696" endtime="20200708 13:33:02.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:02.714" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:02.714" endtime="20200708 13:33:02.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:02.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:02.715" endtime="20200708 13:33:02.715"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:02.695" endtime="20200708 13:33:02.716"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:02.695" endtime="20200708 13:33:02.716"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:02.688" endtime="20200708 13:33:02.716"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:02.687" endtime="20200708 13:33:02.716"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:02.719" level="INFO">Running command 'ozone sh bucket list /fstest313/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:05.588" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:33:05.588" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:02.716" endtime="20200708 13:33:05.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:05.589" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</msg>
<status status="PASS" starttime="20200708 13:33:05.588" endtime="20200708 13:33:05.589"></status>
</kw>
<msg timestamp="20200708 13:33:05.589" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:02.716" endtime="20200708 13:33:05.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:05.589" endtime="20200708 13:33:05.590"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:05.593" level="INFO">Running command 'ozone sh volume addacl fstest313 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:08.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:08.478" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:05.590" endtime="20200708 13:33:08.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:08.479" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:33:08.479" endtime="20200708 13:33:08.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:08.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:08.480" endtime="20200708 13:33:08.480"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:05.590" endtime="20200708 13:33:08.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list /${volume3}/</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:08.482" level="INFO">Running command 'ozone sh bucket list /fstest313/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:11.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:11.335" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:08.480" endtime="20200708 13:33:11.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:11.336" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "fstest313",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-07-08T13:32:04.561Z",
  "modificationTime" : "2020-07-08T13:32:04.561Z",
  "encryptionKeyName" : null
}</msg>
<status status="PASS" starttime="20200708 13:33:11.335" endtime="20200708 13:33:11.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:11.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:11.336" endtime="20200708 13:33:11.336"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:08.480" endtime="20200708 13:33:11.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl /${volume3}/</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:11.340" level="INFO">Running command 'ozone sh volume getacl /fstest313/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:14.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:14.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:11.337" endtime="20200708 13:33:14.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:14.056" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:33:14.055" endtime="20200708 13:33:14.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:14.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:14.056" endtime="20200708 13:33:14.057"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:11.337" endtime="20200708 13:33:14.057"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:14.061" level="INFO">Running command 'ozone sh key list /fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:16.757" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:33:16.758" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:14.057" endtime="20200708 13:33:16.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:16.759" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" starttime="20200708 13:33:16.758" endtime="20200708 13:33:16.759"></status>
</kw>
<msg timestamp="20200708 13:33:16.759" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:14.057" endtime="20200708 13:33:16.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:16.759" endtime="20200708 13:33:16.759"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:16.763" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:16.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:16.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:16.760" endtime="20200708 13:33:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:16.767" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:16.766" endtime="20200708 13:33:16.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:16.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:16.767" endtime="20200708 13:33:16.767"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.760" endtime="20200708 13:33:16.768"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:16.772" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:16.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:16.773" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:16.769" endtime="20200708 13:33:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:16.774" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:16.774" endtime="20200708 13:33:16.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:16.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:16.775" endtime="20200708 13:33:16.775"></status>
</kw>
<msg timestamp="20200708 13:33:16.775" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:16.769" endtime="20200708 13:33:16.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:16.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:16.775" endtime="20200708 13:33:16.776"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:16.779" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:16.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:16.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:16.777" endtime="20200708 13:33:16.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:16.794" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:16.793" endtime="20200708 13:33:16.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:16.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:16.794" endtime="20200708 13:33:16.794"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.776" endtime="20200708 13:33:16.795"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.776" endtime="20200708 13:33:16.795"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.768" endtime="20200708 13:33:16.795"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.768" endtime="20200708 13:33:16.795"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:16.798" level="INFO">Running command 'ozone sh bucket addacl fstest313/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:19.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:19.394" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:16.795" endtime="20200708 13:33:19.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:19.396" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200708 13:33:19.395" endtime="20200708 13:33:19.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:19.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:19.396" endtime="20200708 13:33:19.396"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:16.795" endtime="20200708 13:33:19.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:19.400" level="INFO">Running command 'ozone sh bucket getacl /fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:22.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:22.230" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:19.397" endtime="20200708 13:33:22.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:22.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:33:22.231" endtime="20200708 13:33:22.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:22.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:22.232" endtime="20200708 13:33:22.232"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:19.397" endtime="20200708 13:33:22.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:22.236" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:22.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:22.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:22.233" endtime="20200708 13:33:22.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:22.239" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:22.239" endtime="20200708 13:33:22.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:22.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:22.240" endtime="20200708 13:33:22.240"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.233" endtime="20200708 13:33:22.240"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:22.244" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:22.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:22.247" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:22.241" endtime="20200708 13:33:22.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:22.249" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:22.248" endtime="20200708 13:33:22.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:22.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:22.249" endtime="20200708 13:33:22.250"></status>
</kw>
<msg timestamp="20200708 13:33:22.250" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:22.241" endtime="20200708 13:33:22.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:22.251" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:22.251" endtime="20200708 13:33:22.251"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:22.256" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:22.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:22.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:22.253" endtime="20200708 13:33:22.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:22.278" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:22.277" endtime="20200708 13:33:22.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:22.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:22.278" endtime="20200708 13:33:22.278"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.252" endtime="20200708 13:33:22.278"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.251" endtime="20200708 13:33:22.278"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.241" endtime="20200708 13:33:22.279"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.240" endtime="20200708 13:33:22.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:22.281" level="INFO">Running command 'ozone sh bucket getacl /fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:25.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:25.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:22.279" endtime="20200708 13:33:25.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:25.128" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200708 13:33:25.127" endtime="20200708 13:33:25.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:25.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:25.128" endtime="20200708 13:33:25.129"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:22.279" endtime="20200708 13:33:25.129"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list /${volume3}/bk1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:25.133" level="INFO">Running command 'ozone sh key list /fstest313/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:28.080" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:25.130" endtime="20200708 13:33:28.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:28.081" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "fstest313",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17540,
  "creationTime" : "2020-07-08T13:32:27.489Z",
  "modificationTime" : "2020-07-08T13:32:28.937Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20200708 13:33:28.080" endtime="20200708 13:33:28.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:28.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:28.081" endtime="20200708 13:33:28.082"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:25.129" endtime="20200708 13:33:28.082"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.085" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:28.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:28.082" endtime="20200708 13:33:28.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:28.088" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:28.088" endtime="20200708 13:33:28.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:28.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:28.088" endtime="20200708 13:33:28.089"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.082" endtime="20200708 13:33:28.089"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.092" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:28.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:28.090" endtime="20200708 13:33:28.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:28.096" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:28.095" endtime="20200708 13:33:28.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:28.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:28.096" endtime="20200708 13:33:28.096"></status>
</kw>
<msg timestamp="20200708 13:33:28.096" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:28.090" endtime="20200708 13:33:28.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:28.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:28.097" endtime="20200708 13:33:28.097"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.101" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:28.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:28.098" endtime="20200708 13:33:28.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:28.125" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:28.124" endtime="20200708 13:33:28.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:28.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:28.125" endtime="20200708 13:33:28.126"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.098" endtime="20200708 13:33:28.126"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.097" endtime="20200708 13:33:28.126"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.089" endtime="20200708 13:33:28.126"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.089" endtime="20200708 13:33:28.126"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:32:49.184" endtime="20200708 13:33:28.126" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200708 13:31:16.954" endtime="20200708 13:33:28.128"></status>
</suite>
<suite id="s1-s2" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup s3 tests</arg>
</arguments>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Install aws cli</arg>
</arguments>
<kw name="Install aws cli" library="commonlib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>which apt-get</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.146" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.149" level="INFO">${rc} = 1</msg>
<msg timestamp="20200708 13:33:28.149" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20200708 13:33:28.145" endtime="20200708 13:33:28.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:28.150" endtime="20200708 13:33:28.150"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>yum --help</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.153" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:28.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:28.314" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Sigmd5'
Usage: yum [options] COMMAND

List of Commands:

check          Check for p...</msg>
<status status="PASS" starttime="20200708 13:33:28.150" endtime="20200708 13:33:28.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
</arguments>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>sudo -E yum install -y awscli</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:28.318" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:44.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:44.604" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: mirror.umd.edu
 * extras: repos-va.psychz.net
 * updates: mirror.es.its.nyu.edu
Resolving D...</msg>
<status status="PASS" starttime="20200708 13:33:28.316" endtime="20200708 13:33:44.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:44.605" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: mirror.umd.edu
 * extras: repos-va.psychz.net
 * updates: mirror.es.its.nyu.edu
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package awscli.noarch 0:1.14.28-5.el7_5.1 will be installed
--&gt; Processing Dependency: python-s3transfer &gt;= 0.1.9 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-docutils &gt;= 0.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: python-cryptography &gt;= 1.7.2 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Processing Dependency: PyYAML &gt;= 3.10 for package: awscli-1.14.28-5.el7_5.1.noarch
--&gt; Running transaction check
---&gt; Package PyYAML.x86_64 0:3.10-11.el7 will be installed
--&gt; Processing Dependency: libyaml-0.so.2()(64bit) for package: PyYAML-3.10-11.el7.x86_64
---&gt; Package python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7 will be installed
--&gt; Processing Dependency: python-imaging for package: python-docutils-0.11-0.3.20130715svn7687.el7.noarch
---&gt; Package python-s3transfer.noarch 0:0.1.13-1.el7.0.1 will be installed
--&gt; Processing Dependency: python-dateutil &gt;= 1.4 for package: python-s3transfer-0.1.13-1.el7.0.1.noarch
---&gt; Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed
--&gt; Processing Dependency: python-six &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-pyasn1 &gt;= 0.1.8 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-idna &gt;= 2.0 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-cffi &gt;= 1.4.1 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-setuptools for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-ipaddress for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: python-enum34 for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Processing Dependency: openssl for package: python2-cryptography-1.7.2-2.el7.x86_64
--&gt; Running transaction check
---&gt; Package libyaml.x86_64 0:0.1.4-11.el7_0 will be installed
---&gt; Package openssl.x86_64 1:1.0.2k-19.el7 will be installed
--&gt; Processing Dependency: openssl-libs(x86-64) = 1:1.0.2k-19.el7 for package: 1:openssl-1.0.2k-19.el7.x86_64
--&gt; Processing Dependency: make for package: 1:openssl-1.0.2k-19.el7.x86_64
---&gt; Package python-cffi.x86_64 0:1.6.0-5.el7 will be installed
--&gt; Processing Dependency: python-pycparser for package: python-cffi-1.6.0-5.el7.x86_64
---&gt; Package python-dateutil.noarch 0:1.5-7.el7 will be installed
---&gt; Package python-enum34.noarch 0:1.0.4-1.el7 will be installed
---&gt; Package python-idna.noarch 0:2.4-1.el7 will be installed
---&gt; Package python-ipaddress.noarch 0:1.0.16-2.el7 will be installed
---&gt; Package python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7 will be installed
--&gt; Processing Dependency: libtiff.so.5(LIBTIFF_4.0)(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libwebp.so.4()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
--&gt; Processing Dependency: libtiff.so.5()(64bit) for package: python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64
---&gt; Package python-setuptools.noarch 0:0.9.8-7.el7 will be installed
--&gt; Processing Dependency: python-backports-ssl_match_hostname for package: python-setuptools-0.9.8-7.el7.noarch
---&gt; Package python-six.noarch 0:1.9.0-2.el7 will be installed
---&gt; Package python2-pyasn1.noarch 0:0.1.9-7.el7 will be installed
--&gt; Running transaction check
---&gt; Package libtiff.x86_64 0:4.0.3-32.el7 will be installed
--&gt; Processing Dependency: libjbig.so.2.0()(64bit) for package: libtiff-4.0.3-32.el7.x86_64
---&gt; Package libwebp.x86_64 0:0.3.0-7.el7 will be installed
---&gt; Package make.x86_64 1:3.82-24.el7 will be installed
---&gt; Package openssl-libs.x86_64 1:1.0.2k-16.el7 will be updated
---&gt; Package openssl-libs.x86_64 1:1.0.2k-19.el7 will be an update
---&gt; Package python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7 will be installed
--&gt; Processing Dependency: python-backports for package: python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch
---&gt; Package python-pycparser.noarch 0:2.14-1.el7 will be installed
--&gt; Processing Dependency: python-ply for package: python-pycparser-2.14-1.el7.noarch
--&gt; Running transaction check
---&gt; Package jbigkit-libs.x86_64 0:2.0-11.el7 will be installed
---&gt; Package python-backports.x86_64 0:1.0-8.el7 will be installed
---&gt; Package python-ply.noarch 0:3.4-11.el7 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                         Arch   Version                      Repository
                                                                           Size
================================================================================
Installing:
 awscli                          noarch 1.14.28-5.el7_5.1            base 1.0 M
Installing for dependencies:
 PyYAML                          x86_64 3.10-11.el7                  base 153 k
 jbigkit-libs                    x86_64 2.0-11.el7                   base  46 k
 libtiff                         x86_64 4.0.3-32.el7                 base 171 k
 libwebp                         x86_64 0.3.0-7.el7                  base 170 k
 libyaml                         x86_64 0.1.4-11.el7_0               base  55 k
 make                            x86_64 1:3.82-24.el7                base 421 k
 openssl                         x86_64 1:1.0.2k-19.el7              base 493 k
 python-backports                x86_64 1.0-8.el7                    base 5.8 k
 python-backports-ssl_match_hostname
                                 noarch 3.5.0.1-1.el7                base  13 k
 python-cffi                     x86_64 1.6.0-5.el7                  base 218 k
 python-dateutil                 noarch 1.5-7.el7                    base  85 k
 python-docutils                 noarch 0.11-0.3.20130715svn7687.el7 base 1.5 M
 python-enum34                   noarch 1.0.4-1.el7                  base  52 k
 python-idna                     noarch 2.4-1.el7                    base  94 k
 python-ipaddress                noarch 1.0.16-2.el7                 base  34 k
 python-pillow                   x86_64 2.0.0-20.gitd1c6db8.el7_7    base 439 k
 python-ply                      noarch 3.4-11.el7                   base 123 k
 python-pycparser                noarch 2.14-1.el7                   base 104 k
 python-s3transfer               noarch 0.1.13-1.el7.0.1             base 2.9 M
 python-setuptools               noarch 0.9.8-7.el7                  base 397 k
 python-six                      noarch 1.9.0-2.el7                  base  29 k
 python2-cryptography            x86_64 1.7.2-2.el7                  base 502 k
 python2-pyasn1                  noarch 0.1.9-7.el7                  base 100 k
Updating for dependencies:
 openssl-libs                    x86_64 1:1.0.2k-19.el7              base 1.2 M

Transaction Summary
================================================================================
Install  1 Package  (+23 Dependent packages)
Upgrade             (  1 Dependent package)

Total download size: 10 M
Downloading packages:
Delta RPMs disabled because /usr/bin/applydeltarpm not installed.
--------------------------------------------------------------------------------
Total                                               25 MB/s |  10 MB  00:00     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-ipaddress-1.0.16-2.el7.noarch                        1/26 
  Updating   : 1:openssl-libs-1.0.2k-19.el7.x86_64                         2/26 
  Installing : python2-pyasn1-0.1.9-7.el7.noarch                           3/26 
  Installing : libyaml-0.1.4-11.el7_0.x86_64                               4/26 
  Installing : PyYAML-3.10-11.el7.x86_64                                   5/26 
  Installing : python-backports-1.0-8.el7.x86_64                           6/26 
  Installing : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    7/26 
  Installing : python-setuptools-0.9.8-7.el7.noarch                        8/26 
  Installing : python-ply-3.4-11.el7.noarch                                9/26 
  Installing : python-pycparser-2.14-1.el7.noarch                         10/26 
  Installing : python-cffi-1.6.0-5.el7.x86_64                             11/26 
  Installing : python-idna-2.4-1.el7.noarch                               12/26 
  Installing : python-six-1.9.0-2.el7.noarch                              13/26 
  Installing : 1:make-3.82-24.el7.x86_64                                  14/26 
  Installing : 1:openssl-1.0.2k-19.el7.x86_64                             15/26 
  Installing : python-dateutil-1.5-7.el7.noarch                           16/26 
  Installing : jbigkit-libs-2.0-11.el7.x86_64                             17/26 
  Installing : libtiff-4.0.3-32.el7.x86_64                                18/26 
  Installing : python-enum34-1.0.4-1.el7.noarch                           19/26 
  Installing : python2-cryptography-1.7.2-2.el7.x86_64                    20/26 
  Installing : libwebp-0.3.0-7.el7.x86_64                                 21/26 
  Installing : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             22/26 
  Installing : python-docutils-0.11-0.3.20130715svn7687.el7.noarch        23/26 
  Installing : python-s3transfer-0.1.13-1.el7.0.1.noarch                  24/26 
  Installing : awscli-1.14.28-5.el7_5.1.noarch                            25/26 
  Cleanup    : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 
  Verifying  : python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch    1/26 
  Verifying  : libwebp-0.3.0-7.el7.x86_64                                  2/26 
  Verifying  : python-enum34-1.0.4-1.el7.noarch                            3/26 
  Verifying  : python-setuptools-0.9.8-7.el7.noarch                        4/26 
  Verifying  : python-docutils-0.11-0.3.20130715svn7687.el7.noarch         5/26 
  Verifying  : jbigkit-libs-2.0-11.el7.x86_64                              6/26 
  Verifying  : python-dateutil-1.5-7.el7.noarch                            7/26 
  Verifying  : 1:make-3.82-24.el7.x86_64                                   8/26 
  Verifying  : python-six-1.9.0-2.el7.noarch                               9/26 
  Verifying  : python-s3transfer-0.1.13-1.el7.0.1.noarch                  10/26 
  Verifying  : python-idna-2.4-1.el7.noarch                               11/26 
  Verifying  : python-pillow-2.0.0-20.gitd1c6db8.el7_7.x86_64             12/26 
  Verifying  : python-ply-3.4-11.el7.noarch                               13/26 
  Verifying  : 1:openssl-1.0.2k-19.el7.x86_64                             14/26 
  Verifying  : python-backports-1.0-8.el7.x86_64                          15/26 
  Verifying  : python-cffi-1.6.0-5.el7.x86_64                             16/26 
  Verifying  : awscli-1.14.28-5.el7_5.1.noarch                            17/26 
  Verifying  : 1:openssl-libs-1.0.2k-19.el7.x86_64                        18/26 
  Verifying  : python-pycparser-2.14-1.el7.noarch                         19/26 
  Verifying  : libyaml-0.1.4-11.el7_0.x86_64                              20/26 
  Verifying  : libtiff-4.0.3-32.el7.x86_64                                21/26 
  Verifying  : python-ipaddress-1.0.16-2.el7.noarch                       22/26 
  Verifying  : python2-pyasn1-0.1.9-7.el7.noarch                          23/26 
  Verifying  : PyYAML-3.10-11.el7.x86_64                                  24/26 
  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                    25/26 
  Verifying  : 1:openssl-libs-1.0.2k-16.el7.x86_64                        26/26 

Installed:
  awscli.noarch 0:1.14.28-5.el7_5.1                                             

Dependency Installed:
  PyYAML.x86_64 0:3.10-11.el7                                                   
  jbigkit-libs.x86_64 0:2.0-11.el7                                              
  libtiff.x86_64 0:4.0.3-32.el7                                                 
  libwebp.x86_64 0:0.3.0-7.el7                                                  
  libyaml.x86_64 0:0.1.4-11.el7_0                                               
  make.x86_64 1:3.82-24.el7                                                     
  openssl.x86_64 1:1.0.2k-19.el7                                                
  python-backports.x86_64 0:1.0-8.el7                                           
  python-backports-ssl_match_hostname.noarch 0:3.5.0.1-1.el7                    
  python-cffi.x86_64 0:1.6.0-5.el7                                              
  python-dateutil.noarch 0:1.5-7.el7                                            
  python-docutils.noarch 0:0.11-0.3.20130715svn7687.el7                         
  python-enum34.noarch 0:1.0.4-1.el7                                            
  python-idna.noarch 0:2.4-1.el7                                                
  python-ipaddress.noarch 0:1.0.16-2.el7                                        
  python-pillow.x86_64 0:2.0.0-20.gitd1c6db8.el7_7                              
  python-ply.noarch 0:3.4-11.el7                                                
  python-pycparser.noarch 0:2.14-1.el7                                          
  python-s3transfer.noarch 0:0.1.13-1.el7.0.1                                   
  python-setuptools.noarch 0:0.9.8-7.el7                                        
  python-six.noarch 0:1.9.0-2.el7                                               
  python2-cryptography.x86_64 0:1.7.2-2.el7                                     
  python2-pyasn1.noarch 0:0.1.9-7.el7                                           

Dependency Updated:
  openssl-libs.x86_64 1:1.0.2k-19.el7                                           

Complete!</msg>
<status status="PASS" starttime="20200708 13:33:44.604" endtime="20200708 13:33:44.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:44.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:44.605" endtime="20200708 13:33:44.606"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.316" endtime="20200708 13:33:44.606"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.316" endtime="20200708 13:33:44.606"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.315" endtime="20200708 13:33:44.606"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.144" endtime="20200708 13:33:44.606"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.144" endtime="20200708 13:33:44.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
</arguments>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:44.611" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:44.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:44.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200708 13:33:44.608" endtime="20200708 13:33:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:44.614" level="INFO">scm</msg>
<status status="PASS" starttime="20200708 13:33:44.613" endtime="20200708 13:33:44.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:44.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:44.614" endtime="20200708 13:33:44.614"></status>
</kw>
<msg timestamp="20200708 13:33:44.614" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200708 13:33:44.608" endtime="20200708 13:33:44.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200708 13:33:44.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:44.615" endtime="20200708 13:33:44.616"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:44.620" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:44.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:44.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:44.617" endtime="20200708 13:33:44.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:44.635" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:44.635" endtime="20200708 13:33:44.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:44.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:44.636" endtime="20200708 13:33:44.636"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.616" endtime="20200708 13:33:44.636"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.616" endtime="20200708 13:33:44.636"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.607" endtime="20200708 13:33:44.637"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.607" endtime="20200708 13:33:44.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
</arguments>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone s3 getsecret</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:44.641" level="INFO">Running command 'ozone s3 getsecret 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:47.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:47.361" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:44.638" endtime="20200708 13:33:47.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:47.362" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=151d8b382d9a7beb631510eff398ad1318d8103caff6587f757a0546010fd021</msg>
<status status="PASS" starttime="20200708 13:33:47.361" endtime="20200708 13:33:47.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:47.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:47.362" endtime="20200708 13:33:47.363"></status>
</kw>
<msg timestamp="20200708 13:33:47.363" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:44.638" endtime="20200708 13:33:47.363"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200708 13:33:47.364" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200708 13:33:47.363" endtime="20200708 13:33:47.364"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200708 13:33:47.364" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20200708 13:33:47.364" endtime="20200708 13:33:47.364"></status>
</kw>
<kw name="Get Regexp Matches" library="String">
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<arguments>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200708 13:33:47.365" level="INFO">${secret} = ['151d8b382d9a7beb631510eff398ad1318d8103caff6587f757a0546010fd021']</msg>
<status status="PASS" starttime="20200708 13:33:47.364" endtime="20200708 13:33:47.365"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${accessKey[0]}</arg>
</arguments>
<assign>
<var>${accessKey}</var>
</assign>
<msg timestamp="20200708 13:33:47.365" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200708 13:33:47.365" endtime="20200708 13:33:47.365"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${secret[0]}</arg>
</arguments>
<assign>
<var>${secret}</var>
</assign>
<msg timestamp="20200708 13:33:47.366" level="INFO">${secret} = 151d8b382d9a7beb631510eff398ad1318d8103caff6587f757a0546010fd021</msg>
<status status="PASS" starttime="20200708 13:33:47.365" endtime="20200708 13:33:47.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:47.368" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:47.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:47.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:47.366" endtime="20200708 13:33:47.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:47.672" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:47.671" endtime="20200708 13:33:47.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:47.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:47.672" endtime="20200708 13:33:47.672"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:47.366" endtime="20200708 13:33:47.672"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:47.676" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:47.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:47.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:47.673" endtime="20200708 13:33:47.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:47.973" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:47.972" endtime="20200708 13:33:47.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:47.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:47.973" endtime="20200708 13:33:47.973"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:47.673" endtime="20200708 13:33:47.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set aws_secret_access_key ${secret}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:47.976" level="INFO">Running command 'aws configure set aws_secret_access_key 151d8b382d9a7beb631510eff398ad1318d8103caff6587f757a0546010fd021 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:48.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:48.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:47.974" endtime="20200708 13:33:48.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:48.286" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:48.285" endtime="20200708 13:33:48.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:48.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:48.287" endtime="20200708 13:33:48.287"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:47.974" endtime="20200708 13:33:48.287"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:48.290" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:48.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:48.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:48.288" endtime="20200708 13:33:48.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:48.582" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:48.581" endtime="20200708 13:33:48.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:48.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:48.582" endtime="20200708 13:33:48.582"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:48.287" endtime="20200708 13:33:48.583"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.637" endtime="20200708 13:33:48.583"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.637" endtime="20200708 13:33:48.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:48.583" endtime="20200708 13:33:48.583"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.607" endtime="20200708 13:33:48.583"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:44.606" endtime="20200708 13:33:48.584"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/s3v</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:48.586" level="INFO">Running command 'ozone sh volume create o3://om/s3v 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:51.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:51.302" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:48.584" endtime="20200708 13:33:51.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:51.303" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" starttime="20200708 13:33:51.302" endtime="20200708 13:33:51.303"></status>
</kw>
<msg timestamp="20200708 13:33:51.303" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:33:48.584" endtime="20200708 13:33:51.303"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:51.303" endtime="20200708 13:33:51.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:51.304" endtime="20200708 13:33:51.304"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.144" endtime="20200708 13:33:51.304"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:28.144" endtime="20200708 13:33:51.304"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:51.307" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:52.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:52.994" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200708 13:33:51.305" endtime="20200708 13:33:52.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:52.995" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200708 13:33:52.994" endtime="20200708 13:33:52.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:52.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:52.995" endtime="20200708 13:33:52.995"></status>
</kw>
<msg timestamp="20200708 13:33:52.996" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20200708 13:33:51.304" endtime="20200708 13:33:52.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:52.999" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:53.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:53.482" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-08T13:33:52.933Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20200708 13:33:52.996" endtime="20200708 13:33:53.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:53.483" level="INFO">{
    "Buckets": [
        {
            "CreationDate": "2020-07-08T13:33:52.933Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20200708 13:33:53.483" endtime="20200708 13:33:53.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:53.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:53.484" endtime="20200708 13:33:53.484"></status>
</kw>
<msg timestamp="20200708 13:33:53.485" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2020-07-08T13:33:52.933Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20200708 13:33:52.996" endtime="20200708 13:33:53.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>bucket-test123</arg>
</arguments>
<status status="PASS" starttime="20200708 13:33:53.485" endtime="20200708 13:33:53.485"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:33:28.143" endtime="20200708 13:33:53.485" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Setup dummy credentials for S3</arg>
</arguments>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set default.s3.signature_version s3v4</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:53.491" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:53.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:53.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:53.488" endtime="20200708 13:33:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:53.791" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:53.790" endtime="20200708 13:33:53.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:53.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:53.791" endtime="20200708 13:33:53.792"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:53.488" endtime="20200708 13:33:53.792"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:53.794" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:54.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:54.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:53.792" endtime="20200708 13:33:54.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:54.094" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:54.093" endtime="20200708 13:33:54.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:54.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:54.094" endtime="20200708 13:33:54.094"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:53.792" endtime="20200708 13:33:54.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:54.099" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:54.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:54.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:54.095" endtime="20200708 13:33:54.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:54.393" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:54.392" endtime="20200708 13:33:54.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:54.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:54.393" endtime="20200708 13:33:54.394"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:54.095" endtime="20200708 13:33:54.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>aws configure set region us-west-1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:33:54.396" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:33:54.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:33:54.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:33:54.394" endtime="20200708 13:33:54.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:33:54.708" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:33:54.708" endtime="20200708 13:33:54.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:33:54.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:33:54.709" endtime="20200708 13:33:54.709"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:54.394" endtime="20200708 13:33:54.709"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:53.488" endtime="20200708 13:33:54.710"></status>
</kw>
<status status="PASS" starttime="20200708 13:33:53.488" endtime="20200708 13:33:54.710"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${result}</var>
</assign>
<msg timestamp="20200708 13:33:54.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:34:04.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20200708 13:34:04.277" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20200708 13:33:54.710" endtime="20200708 13:34:04.278"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rc} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20200708 13:34:04.278" endtime="20200708 13:34:04.279"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:33:53.487" endtime="20200708 13:34:04.279" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200708 13:33:28.132" endtime="20200708 13:34:04.280"></status>
</suite>
<suite id="s1-s3" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s3-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
</arguments>
<status status="PASS" starttime="20200708 13:34:04.288" endtime="20200708 13:34:04.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
</arguments>
<kw name="Token Test in Secure Cluster">
<kw name="Get Token in Secure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token get &gt; /tmp/token.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:34:04.292" level="INFO">Running command 'ozone sh token get &gt; /tmp/token.txt'.</msg>
<msg timestamp="20200708 13:34:07.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:34:07.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200708 13:34:04.290" endtime="20200708 13:34:07.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:07.270" level="INFO"></msg>
<status status="PASS" starttime="20200708 13:34:07.269" endtime="20200708 13:34:07.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:34:07.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:34:07.270" endtime="20200708 13:34:07.270"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:04.290" endtime="20200708 13:34:07.271"></status>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<doc>Fails if the specified directory is empty.</doc>
<arguments>
<arg>/tmp/token.txt</arg>
</arguments>
<msg timestamp="20200708 13:34:07.271" level="INFO" html="yes">File '&lt;a href="file:///tmp/token.txt"&gt;/tmp/token.txt&lt;/a&gt;' contains 505 bytes.</msg>
<status status="PASS" starttime="20200708 13:34:07.271" endtime="20200708 13:34:07.271"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:04.289" endtime="20200708 13:34:07.271"></status>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token print</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:34:07.274" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:34:08.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:34:08.811" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMKXYiPWyLjil4LqVtS5AAUgBWg0zMTI1OTQwMzIyNzgzehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "tvhgbgZSN+NtIhqEIq5s3WRQCqEaYMks2OR1ew283...</msg>
<status status="PASS" starttime="20200708 13:34:07.272" endtime="20200708 13:34:08.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:08.812" level="INFO">{
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMKXYiPWyLjil4LqVtS5AAUgBWg0zMTI1OTQwMzIyNzgzehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "tvhgbgZSN+NtIhqEIq5s3WRQCqEaYMks2OR1ew283qACYiWE71Siy2B3MKsXXuW3RayR9rOCXBpcaGGnfOwgXEc2GfKd+OFLt4rDdb8lcsN/9XnRdFnl6hAjzzKkNO77ScJvlIf3sBvrt8FVaPhb3ua00WiMU68Bjvf0NKkwQTW2QUcotU1PaGnuhlPnybHLj/tPVxRkZLShwL6PtTmF/5dU2MqIQaGHdYA9ihJRKe5PW9UtOEeZ2cUwDY1Dy0ShwFECVyar3J8ZTCSO5tONQmoOaLA+CcOfgAZerqs415iNY2/nXaAVl9LXfu5UMDKfqeLENPNzEolUPBvYs6sbGw==",
  "kind" : {
    "bytes" : "T3pvbmVUb2tlbg==",
    "length" : 10
  },
  "service" : {
    "bytes" : "MTcyLjI2LjAuNTo5ODYy",
    "length" : 15
  },
  "private" : false,
  "managed" : true
}</msg>
<status status="PASS" starttime="20200708 13:34:08.811" endtime="20200708 13:34:08.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:34:08.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:34:08.812" endtime="20200708 13:34:08.813"></status>
</kw>
<msg timestamp="20200708 13:34:08.813" level="INFO">${output} = {
  "identifier" : "CAEaGHRlc3R1c2VyL3NjbUBFWEFNUExFLkNPTSIEcm9vdCoAMKXYiPWyLjil4LqVtS5AAUgBWg0zMTI1OTQwMzIyNzgzehJvbVNlcnZpY2VJZERlZmF1bHQ=",
  "password" : "tvhgbgZSN+NtIhqEIq5s3WRQCqEaYMks2OR1ew283...</msg>
<status status="PASS" starttime="20200708 13:34:07.272" endtime="20200708 13:34:08.813"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:08.813" level="INFO">Length is 694</msg>
<status status="PASS" starttime="20200708 13:34:08.813" endtime="20200708 13:34:08.814"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:07.271" endtime="20200708 13:34:08.814"></status>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token renew</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:34:08.816" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:34:11.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:34:11.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:34:08.814" endtime="20200708 13:34:11.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:11.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token renewed successfully, expiry time: 1594301651449.</msg>
<status status="PASS" starttime="20200708 13:34:11.723" endtime="20200708 13:34:11.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:34:11.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:34:11.724" endtime="20200708 13:34:11.725"></status>
</kw>
<msg timestamp="20200708 13:34:11.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:34:08.814" endtime="20200708 13:34:11.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
</arguments>
<status status="PASS" starttime="20200708 13:34:11.725" endtime="20200708 13:34:11.725"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:08.814" endtime="20200708 13:34:11.726"></status>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token cancel</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:34:11.728" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:34:14.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:34:14.505" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:34:11.726" endtime="20200708 13:34:14.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:14.506" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Token canceled successfully.</msg>
<status status="PASS" starttime="20200708 13:34:14.505" endtime="20200708 13:34:14.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:34:14.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:34:14.506" endtime="20200708 13:34:14.506"></status>
</kw>
<msg timestamp="20200708 13:34:14.507" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" starttime="20200708 13:34:11.726" endtime="20200708 13:34:14.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
</arguments>
<status status="PASS" starttime="20200708 13:34:14.507" endtime="20200708 13:34:14.507"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:11.726" endtime="20200708 13:34:14.507"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:04.289" endtime="20200708 13:34:14.507"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:04.289" endtime="20200708 13:34:14.507"></status>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token print -t /asdf</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 13:34:14.510" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 13:34:15.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 13:34:15.567" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:34:14.508" endtime="20200708 13:34:15.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 13:34:15.568" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:34:15.567" endtime="20200708 13:34:15.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 13:34:15.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 13:34:15.568" endtime="20200708 13:34:15.569"></status>
</kw>
<msg timestamp="20200708 13:34:15.569" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200708 13:34:14.508" endtime="20200708 13:34:15.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
</arguments>
<status status="PASS" starttime="20200708 13:34:15.569" endtime="20200708 13:34:15.569"></status>
</kw>
<status status="PASS" starttime="20200708 13:34:14.507" endtime="20200708 13:34:15.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 13:34:04.287" endtime="20200708 13:34:15.570" critical="yes"></status>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20200708 13:34:04.283" endtime="20200708 13:34:15.571"></status>
</suite>
<status status="PASS" starttime="20200708 13:31:16.929" endtime="20200708 13:34:15.573"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="0">Critical Tests</stat>
<stat pass="11" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" id="s1" name="ozonesecure-security">ozonesecure-security</stat>
<stat pass="8" fail="0" id="s1-s1" name="Ozone-Secure-Fs">ozonesecure-security.Ozone-Secure-Fs</stat>
<stat pass="2" fail="0" id="s1-s2" name="Ozone-Secure-S3">ozonesecure-security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" id="s1-s3" name="Ozone-Secure-Token">ozonesecure-security.Ozone-Secure-Token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
