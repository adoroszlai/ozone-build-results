<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200708 12:57:58.514" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 12:57:58.561" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 12:58:06.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 12:58:06.742" level="INFO">${output} = 2020-07-08 12:57:59,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:00,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:57:58.557" endtime="20200708 12:58:06.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 12:58:06.743" level="INFO">2020-07-08 12:57:59,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:00,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 12:58:00,140 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-08 12:58:01,250 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-08 12:58:01,251 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-08 12:58:01,253 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-08 12:58:01,259 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:01,314 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-67334, with hadoop as owner.
2020-07-08 12:58:01,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-67334/bucket-0-36654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-08 12:58:01,962 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-08 12:58:02,262 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,098
Average Time spent in bucket creation: 00:00:00,026
Average Time spent in key creation: 00:00:00,091
Average Time spent in key write: 00:00:00,678
Total bytes written: 10240
Total Execution time: 00:00:06,052
***************************************************</msg>
<status status="PASS" starttime="20200708 12:58:06.742" endtime="20200708 12:58:06.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 12:58:06.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 12:58:06.743" endtime="20200708 12:58:06.744"></status>
</kw>
<msg timestamp="20200708 12:58:06.744" level="INFO">${result} = 2020-07-08 12:57:59,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:00,140 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:57:58.557" endtime="20200708 12:58:06.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200708 12:58:06.745" endtime="20200708 12:58:06.745"></status>
</kw>
<status status="PASS" starttime="20200708 12:58:06.744" endtime="20200708 12:58:06.745"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 12:57:58.556" endtime="20200708 12:58:06.745" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 12:58:06.750" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 12:58:12.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 12:58:12.155" level="INFO">${output} = 2020-07-08 12:58:08,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:08,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:06.747" endtime="20200708 12:58:12.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 12:58:12.156" level="INFO">2020-07-08 12:58:08,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:08,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 12:58:08,249 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-08 12:58:08,455 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6ucegv5pet
2020-07-08 12:58:08,473 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:09,475 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:09,568 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-08 12:58:09,634 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-08 12:58:10,143 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-08 12:58:10,475 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:11,476 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-08 12:58:11,804 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1258.088489, max=1258.088489, mean=1258.088489, stddev=0.0, median=1258.088489, p75=1258.088489, p95=1258.088489, p98=1258.088489, p99=1258.088489, p999=1258.088489, mean_rate=0.4679624212923007, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-08 12:58:11,805 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-08 12:58:11,808 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-08 12:58:11,808 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200708 12:58:12.156" endtime="20200708 12:58:12.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 12:58:12.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 12:58:12.157" endtime="20200708 12:58:12.157"></status>
</kw>
<msg timestamp="20200708 12:58:12.157" level="INFO">${result} = 2020-07-08 12:58:08,060 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:08,248 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:06.747" endtime="20200708 12:58:12.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200708 12:58:12.158" endtime="20200708 12:58:12.158"></status>
</kw>
<status status="PASS" starttime="20200708 12:58:12.158" endtime="20200708 12:58:12.159"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 12:58:06.746" endtime="20200708 12:58:12.159" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 12:58:12.163" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 12:58:16.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 12:58:16.026" level="INFO">${output} = 2020-07-08 12:58:13,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:13,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:12.160" endtime="20200708 12:58:16.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 12:58:16.028" level="INFO">2020-07-08 12:58:13,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:13,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 12:58:13,653 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-08 12:58:13,799 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bucbd2nirh
2020-07-08 12:58:13,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:14,846 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:15,848 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-08 12:58:15,957 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=91.275325, max=91.275325, mean=91.275325, stddev=0.0, median=91.275325, p75=91.275325, p95=91.275325, p98=91.275325, p99=91.275325, p999=91.275325, mean_rate=0.8255231830152395, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-08 12:58:15,958 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-08 12:58:15,960 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-08 12:58:15,960 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200708 12:58:16.027" endtime="20200708 12:58:16.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 12:58:16.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 12:58:16.028" endtime="20200708 12:58:16.028"></status>
</kw>
<msg timestamp="20200708 12:58:16.029" level="INFO">${result} = 2020-07-08 12:58:13,453 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:13,653 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:12.160" endtime="20200708 12:58:16.029"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200708 12:58:16.029" endtime="20200708 12:58:16.030"></status>
</kw>
<status status="PASS" starttime="20200708 12:58:16.029" endtime="20200708 12:58:16.030"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 12:58:12.159" endtime="20200708 12:58:16.030" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200708 12:58:16.033" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 12:58:19.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200708 12:58:19.769" level="INFO">${output} = 2020-07-08 12:58:17,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:17,432 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:16.031" endtime="20200708 12:58:19.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200708 12:58:19.770" level="INFO">2020-07-08 12:58:17,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:17,432 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-08 12:58:17,432 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-08 12:58:17,592 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jr6zdpuniu
2020-07-08 12:58:17,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:18,605 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-08 12:58:19,607 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-08 12:58:19,722 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=37.620434, max=37.620434, mean=37.620434, stddev=0.0, median=37.620434, p75=37.620434, p95=37.620434, p98=37.620434, p99=37.620434, p999=37.620434, mean_rate=0.8805308524679467, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-08 12:58:19,740 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-08 12:58:19,745 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-08 12:58:19,745 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200708 12:58:19.770" endtime="20200708 12:58:19.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200708 12:58:19.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 12:58:19.771" endtime="20200708 12:58:19.771"></status>
</kw>
<msg timestamp="20200708 12:58:19.771" level="INFO">${result} = 2020-07-08 12:58:17,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-08 12:58:17,432 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200708 12:58:16.031" endtime="20200708 12:58:19.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200708 12:58:19.772" endtime="20200708 12:58:19.772"></status>
</kw>
<status status="PASS" starttime="20200708 12:58:19.772" endtime="20200708 12:58:19.772"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200708 12:58:16.030" endtime="20200708 12:58:19.772" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200708 12:57:58.537" endtime="20200708 12:58:19.773"></status>
</suite>
<status status="PASS" starttime="20200708 12:57:58.515" endtime="20200708 12:58:19.776"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
