<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 01:36:11.823" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 01:36:11.883" endtime="20200716 01:36:11.884"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:36:11.888" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:36:11.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:36:11.979" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 01:36:11 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 01:05:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200716 01:36:11.884" endtime="20200716 01:36:11.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:36:11.981" level="INFO">HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 01:36:11 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 01:05:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200716 01:36:11.980" endtime="20200716 01:36:11.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:36:11.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:36:11.981" endtime="20200716 01:36:11.982"></status>
</kw>
<msg timestamp="20200716 01:36:11.982" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 01:36:11 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 01:05:32 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200716 01:36:11.884" endtime="20200716 01:36:11.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200716 01:36:11.982" endtime="20200716 01:36:11.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:36:11.883" endtime="20200716 01:36:11.983" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:36:11.984" endtime="20200716 01:36:11.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:36:11.988" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:13.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:13.069" level="INFO">${output} = 2020-07-16 01:36:13,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:36:13,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:36:11.985" endtime="20200716 01:37:13.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:13.070" level="INFO">2020-07-16 01:36:13,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:36:13,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 01:36:13,746 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 01:36:16,204 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-16 01:36:16,205 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-16 01:36:16,206 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-16 01:36:16,206 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-16 01:36:16,206 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-16 01:36:16,206 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 01:36:16,206 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-16 01:36:16,222 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-16 01:36:16,226 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 01:36:16,229 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-16 01:36:16,336 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-77212, with hadoop as owner.
2020-07-16 01:36:16,696 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-54363, with hadoop as owner.
2020-07-16 01:36:16,706 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-67444, with hadoop as owner.
2020-07-16 01:36:16,722 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-64983, with hadoop as owner.
2020-07-16 01:36:16,730 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-72462, with hadoop as owner.
2020-07-16 01:36:16,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77212/bucket-0-32044, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,835 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-54363/bucket-0-52057, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,847 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67444/bucket-0-78440, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,856 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64983/bucket-0-40194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,865 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-72462/bucket-0-54659, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,872 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77212/bucket-1-32625, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,878 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-54363/bucket-1-98926, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,882 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67444/bucket-1-19706, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,887 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64983/bucket-1-70720, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,892 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-72462/bucket-1-73810, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,897 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77212/bucket-2-62818, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,901 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-54363/bucket-2-26659, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,906 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67444/bucket-2-91058, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64983/bucket-2-71877, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,917 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-72462/bucket-2-33150, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,923 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77212/bucket-3-25506, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,928 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-54363/bucket-3-01446, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,932 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67444/bucket-3-94996, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,936 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64983/bucket-3-59781, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,945 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-72462/bucket-3-02378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,952 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77212/bucket-4-38745, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,956 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-54363/bucket-4-49795, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,963 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-67444/bucket-4-71956, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,976 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-64983/bucket-4-36411, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:16,987 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-72462/bucket-4-50086, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:36:17,252 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-16 01:36:17,950 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 01:36:18,253 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-16 01:36:19,253 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-16 01:36:20,254 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-16 01:36:21,255 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2020-07-16 01:36:22,264 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-07-16 01:36:23,265 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-07-16 01:36:24,265 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-16 01:36:25,266 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-16 01:36:26,266 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-16 01:36:27,267 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-07-16 01:36:28,267 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-07-16 01:36:29,276 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-16 01:36:30,276 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-16 01:36:31,276 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-16 01:36:32,277 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-16 01:36:33,277 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-16 01:36:34,278 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-16 01:36:35,285 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-07-16 01:36:36,285 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-16 01:36:37,286 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-16 01:36:38,286 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-07-16 01:36:39,287 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-16 01:36:40,287 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-16 01:36:41,288 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-07-16 01:36:42,288 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-16 01:36:43,289 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-07-16 01:36:44,289 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-16 01:36:45,290 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-16 01:36:46,290 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-16 01:36:47,292 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-07-16 01:36:48,292 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-07-16 01:36:49,293 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-07-16 01:36:50,293 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-16 01:36:51,294 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-16 01:36:52,294 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-16 01:36:53,295 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-07-16 01:36:54,296 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-16 01:36:55,296 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-16 01:36:56,297 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-16 01:36:57,297 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-16 01:36:58,298 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-16 01:36:59,298 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-07-16 01:37:00,299 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-07-16 01:37:01,299 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-16 01:37:02,300 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-16 01:37:03,300 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-16 01:37:04,312 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-16 01:37:05,313 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-07-16 01:37:06,313 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-07-16 01:37:07,314 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-07-16 01:37:08,314 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,463
Average Time spent in bucket creation: 00:00:00,177
Average Time spent in key creation: 00:00:02,042
Average Time spent in key write: 00:00:00,798
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:58,724
***************************************************</msg>
<status status="PASS" starttime="20200716 01:37:13.070" endtime="20200716 01:37:13.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:13.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:13.071" endtime="20200716 01:37:13.071"></status>
</kw>
<msg timestamp="20200716 01:37:13.072" level="INFO">${result} = 2020-07-16 01:36:13,543 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:36:13,745 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:36:11.985" endtime="20200716 01:37:13.072"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:13.073" endtime="20200716 01:37:13.073"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:13.072" endtime="20200716 01:37:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:13.073" endtime="20200716 01:37:13.074"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:36:11.983" endtime="20200716 01:37:13.074" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200716 01:36:11.854" endtime="20200716 01:37:13.075"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200716 01:37:13.084" level="INFO">${random} = 49104</msg>
<status status="PASS" starttime="20200716 01:37:13.084" endtime="20200716 01:37:13.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200716 01:37:13.085" level="INFO">${prefix} = 49104</msg>
<status status="PASS" starttime="20200716 01:37:13.085" endtime="20200716 01:37:13.085"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:13.084" endtime="20200716 01:37:13.085"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:13.086" endtime="20200716 01:37:13.087"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:13.090" level="INFO">Running command 'ozone sh volume info o3://om:9862/49104-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:15.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:37:15.676" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49104-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 01:37:13.088" endtime="20200716 01:37:15.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:15.677" level="INFO">VOLUME_NOT_FOUND Volume 49104-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 01:37:15.676" endtime="20200716 01:37:15.677"></status>
</kw>
<msg timestamp="20200716 01:37:15.678" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49104-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 01:37:13.087" endtime="20200716 01:37:15.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:15.678" endtime="20200716 01:37:15.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:15.682" level="INFO">Running command 'ozone sh volume create o3://om:9862/49104-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:18.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:18.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:15.679" endtime="20200716 01:37:18.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:18.478" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:18.478" endtime="20200716 01:37:18.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:18.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:18.479" endtime="20200716 01:37:18.479"></status>
</kw>
<msg timestamp="20200716 01:37:18.479" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:37:15.679" endtime="20200716 01:37:18.479"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:18.480" endtime="20200716 01:37:18.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:18.484" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="49104-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:21.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:21.481" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 01:37:18.481" endtime="20200716 01:37:21.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:21.482" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:37:21.482" endtime="20200716 01:37:21.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:21.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:21.483" endtime="20200716 01:37:21.483"></status>
</kw>
<msg timestamp="20200716 01:37:21.484" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 01:37:18.480" endtime="20200716 01:37:21.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:21.484" endtime="20200716 01:37:21.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:21.488" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49104-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:24.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:24.511" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 01:37:21.485" endtime="20200716 01:37:24.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:24.512" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:37:24.511" endtime="20200716 01:37:24.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:24.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:24.512" endtime="20200716 01:37:24.513"></status>
</kw>
<msg timestamp="20200716 01:37:24.513" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:37:18.327Z",
  "modificationTime": "2020-07-16T01:37:18.327Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 01:37:21.484" endtime="20200716 01:37:24.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:24.513" endtime="20200716 01:37:24.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:24.517" level="INFO">Running command 'ozone sh volume update o3://om:9862/49104-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:27.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:27.496" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49104-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:37:18.327Z",
  "modificationTime" : "2020-07-16T01:37:27.084Z",
  "acl...</msg>
<status status="PASS" starttime="20200716 01:37:24.514" endtime="20200716 01:37:27.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:27.497" level="INFO">{
  "metadata" : { },
  "name" : "49104-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:37:18.327Z",
  "modificationTime" : "2020-07-16T01:37:27.084Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 01:37:27.496" endtime="20200716 01:37:27.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:27.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:27.497" endtime="20200716 01:37:27.498"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:24.514" endtime="20200716 01:37:27.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:27.501" level="INFO">Running command 'ozone sh volume info o3://om:9862/49104-rpcwoport | jq -r '. | select(.name=="49104-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:30.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:30.477" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:37:27.499" endtime="20200716 01:37:30.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:30.478" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 01:37:30.478" endtime="20200716 01:37:30.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:30.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:30.479" endtime="20200716 01:37:30.479"></status>
</kw>
<msg timestamp="20200716 01:37:30.479" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:37:27.498" endtime="20200716 01:37:30.480"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:30.480" endtime="20200716 01:37:30.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:30.483" level="INFO">Running command 'ozone sh bucket create o3://om:9862/49104-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:33.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:33.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:30.481" endtime="20200716 01:37:33.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:33.292" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:33.291" endtime="20200716 01:37:33.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:33.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:33.292" endtime="20200716 01:37:33.292"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:30.480" endtime="20200716 01:37:33.292"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:33.296" level="INFO">Running command 'ozone sh bucket info o3://om:9862/49104-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:36.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:36.150" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 01:37:33.293" endtime="20200716 01:37:36.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:36.151" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 01:37:36.150" endtime="20200716 01:37:36.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:36.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:36.151" endtime="20200716 01:37:36.151"></status>
</kw>
<msg timestamp="20200716 01:37:36.152" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 01:37:33.293" endtime="20200716 01:37:36.152"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:36.152" endtime="20200716 01:37:36.152"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:36.156" level="INFO">Running command 'ozone sh bucket list o3://om:9862/49104-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:39.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:39.164" level="INFO">${output} = 49104-rpcwoport</msg>
<status status="PASS" starttime="20200716 01:37:36.153" endtime="20200716 01:37:39.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:39.166" level="INFO">49104-rpcwoport</msg>
<status status="PASS" starttime="20200716 01:37:39.165" endtime="20200716 01:37:39.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:39.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:39.166" endtime="20200716 01:37:39.167"></status>
</kw>
<msg timestamp="20200716 01:37:39.167" level="INFO">${result} = 49104-rpcwoport</msg>
<status status="PASS" starttime="20200716 01:37:36.152" endtime="20200716 01:37:39.167"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 01:37:39.168" endtime="20200716 01:37:39.168"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:39.173" level="INFO">Running command 'ozone sh key put o3://om:9862/49104-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:44.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:44.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:39.170" endtime="20200716 01:37:44.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:44.027" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:44.027" endtime="20200716 01:37:44.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:44.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:44.028" endtime="20200716 01:37:44.029"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:39.170" endtime="20200716 01:37:44.029"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:44.032" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:44.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:44.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:44.029" endtime="20200716 01:37:44.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:44.035" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:44.035" endtime="20200716 01:37:44.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:44.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:44.036" endtime="20200716 01:37:44.036"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:44.029" endtime="20200716 01:37:44.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:44.040" level="INFO">Running command 'ozone sh key get o3://om:9862/49104-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:48.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:48.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:44.037" endtime="20200716 01:37:48.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:48.263" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:48.262" endtime="20200716 01:37:48.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:48.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:48.263" endtime="20200716 01:37:48.264"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:44.037" endtime="20200716 01:37:48.265"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:48.267" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:48.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:48.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:48.265" endtime="20200716 01:37:48.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:48.272" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:48.271" endtime="20200716 01:37:48.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:48.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:48.272" endtime="20200716 01:37:48.273"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:48.265" endtime="20200716 01:37:48.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:48.275" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/49104-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:53.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:53.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:48.273" endtime="20200716 01:37:53.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:53.485" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:53.485" endtime="20200716 01:37:53.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:53.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:53.486" endtime="20200716 01:37:53.486"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:48.273" endtime="20200716 01:37:53.486"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:53.489" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:53.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:53.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:53.487" endtime="20200716 01:37:53.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:53.493" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:53.492" endtime="20200716 01:37:53.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:53.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:53.493" endtime="20200716 01:37:53.494"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:53.487" endtime="20200716 01:37:53.494"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:53.497" level="INFO">Running command 'ozone sh key get o3://om:9862/49104-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:57.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:57.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:53.495" endtime="20200716 01:37:57.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:57.912" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:57.911" endtime="20200716 01:37:57.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:57.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:57.913" endtime="20200716 01:37:57.913"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:53.494" endtime="20200716 01:37:57.914"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:57.918" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:37:57.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:37:57.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:37:57.915" endtime="20200716 01:37:57.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:37:57.921" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:37:57.920" endtime="20200716 01:37:57.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:37:57.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:37:57.921" endtime="20200716 01:37:57.922"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:57.914" endtime="20200716 01:37:57.922"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:37:57.928" level="INFO">Running command 'ozone sh key info o3://om:9862/49104-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:01.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:01.079" level="INFO">${output} = {
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:51.188Z",
  "modificationTime": "2020-07-16T01:37:53.090Z",...</msg>
<status status="PASS" starttime="20200716 01:37:57.926" endtime="20200716 01:38:01.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:01.080" level="INFO">{
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:51.188Z",
  "modificationTime": "2020-07-16T01:37:53.090Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520972447514750,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:38:01.080" endtime="20200716 01:38:01.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:01.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:01.081" endtime="20200716 01:38:01.081"></status>
</kw>
<msg timestamp="20200716 01:38:01.082" level="INFO">${result} = {
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:51.188Z",
  "modificationTime": "2020-07-16T01:37:53.090Z",...</msg>
<status status="PASS" starttime="20200716 01:37:57.923" endtime="20200716 01:38:01.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:01.082" endtime="20200716 01:38:01.082"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:01.088" level="INFO">Running command 'ozone sh key delete o3://om:9862/49104-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:03.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:03.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:01.085" endtime="20200716 01:38:03.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:03.840" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:03.839" endtime="20200716 01:38:03.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:03.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:03.840" endtime="20200716 01:38:03.841"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:01.082" endtime="20200716 01:38:03.841"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:03.845" level="INFO">Running command 'ozone sh key cp o3://om:9862/49104-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:09.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:09.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:03.842" endtime="20200716 01:38:09.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:09.009" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:09.008" endtime="20200716 01:38:09.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:09.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:09.009" endtime="20200716 01:38:09.010"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:03.841" endtime="20200716 01:38:09.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:09.013" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:09.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:09.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:09.011" endtime="20200716 01:38:09.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:09.016" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:09.015" endtime="20200716 01:38:09.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:09.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:09.016" endtime="20200716 01:38:09.017"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:09.010" endtime="20200716 01:38:09.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:09.021" level="INFO">Running command 'ozone sh key get o3://om:9862/49104-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:13.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:13.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:09.018" endtime="20200716 01:38:13.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:13.708" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:13.708" endtime="20200716 01:38:13.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:13.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:13.709" endtime="20200716 01:38:13.709"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:09.017" endtime="20200716 01:38:13.710"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:13.713" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:13.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:13.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:13.710" endtime="20200716 01:38:13.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:13.716" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:13.716" endtime="20200716 01:38:13.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:13.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:13.717" endtime="20200716 01:38:13.717"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:13.710" endtime="20200716 01:38:13.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:13.720" level="INFO">Running command 'ozone sh key delete o3://om:9862/49104-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:16.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:16.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:13.718" endtime="20200716 01:38:16.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:16.486" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:16.485" endtime="20200716 01:38:16.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:16.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:16.486" endtime="20200716 01:38:16.487"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:13.717" endtime="20200716 01:38:16.487"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:16.492" level="INFO">Running command 'ozone sh key get o3://om:9862/49104-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:19.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:38:19.269" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:38:16.488" endtime="20200716 01:38:19.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:19.271" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:38:19.270" endtime="20200716 01:38:19.271"></status>
</kw>
<msg timestamp="20200716 01:38:19.271" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:38:16.487" endtime="20200716 01:38:19.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:19.271" endtime="20200716 01:38:19.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:19.275" level="INFO">Running command 'ozone sh key get --force o3://om:9862/49104-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:23.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:23.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:19.272" endtime="20200716 01:38:23.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:23.641" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:23.640" endtime="20200716 01:38:23.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:23.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:23.641" endtime="20200716 01:38:23.642"></status>
</kw>
<msg timestamp="20200716 01:38:23.642" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:38:19.272" endtime="20200716 01:38:23.642"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:23.642" endtime="20200716 01:38:23.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:23.645" level="INFO">Running command 'ozone sh key info o3://om:9862/49104-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:26.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:26.732" level="INFO">${output} = {
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:41.809Z",
  "modificationTime": "2020-07-16T01:37:43.493Z",
  "re...</msg>
<status status="PASS" starttime="20200716 01:38:23.643" endtime="20200716 01:38:26.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:26.733" level="INFO">{
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:41.809Z",
  "modificationTime": "2020-07-16T01:37:43.493Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520971832983680,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:38:26.732" endtime="20200716 01:38:26.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:26.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:26.733" endtime="20200716 01:38:26.734"></status>
</kw>
<msg timestamp="20200716 01:38:26.734" level="INFO">${result} = {
  "volumeName": "49104-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:37:41.809Z",
  "modificationTime": "2020-07-16T01:37:43.493Z",
  "re...</msg>
<status status="PASS" starttime="20200716 01:38:23.642" endtime="20200716 01:38:26.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:26.734" endtime="20200716 01:38:26.735"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:26.738" level="INFO">Running command 'ozone sh key list o3://om:9862/49104-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:29.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:29.769" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 01:38:26.735" endtime="20200716 01:38:29.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:29.770" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 01:38:29.769" endtime="20200716 01:38:29.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:29.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:29.770" endtime="20200716 01:38:29.771"></status>
</kw>
<msg timestamp="20200716 01:38:29.771" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 01:38:26.735" endtime="20200716 01:38:29.771"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:29.771" endtime="20200716 01:38:29.772"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:29.774" level="INFO">Running command 'ozone sh key rename o3://om:9862/49104-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:32.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:32.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:29.773" endtime="20200716 01:38:32.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:32.640" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:32.639" endtime="20200716 01:38:32.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:32.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:32.640" endtime="20200716 01:38:32.641"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:29.772" endtime="20200716 01:38:32.641"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:32.644" level="INFO">Running command 'ozone sh key list o3://om:9862/49104-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:35.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:35.598" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 01:38:32.642" endtime="20200716 01:38:35.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:35.600" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 01:38:35.599" endtime="20200716 01:38:35.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:35.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:35.600" endtime="20200716 01:38:35.600"></status>
</kw>
<msg timestamp="20200716 01:38:35.601" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 01:38:32.641" endtime="20200716 01:38:35.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:35.601" endtime="20200716 01:38:35.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:35.604" level="INFO">Running command 'ozone sh key delete o3://om:9862/49104-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:38.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:38.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:35.602" endtime="20200716 01:38:38.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:38.203" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:38.202" endtime="20200716 01:38:38.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:38.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:38.203" endtime="20200716 01:38:38.204"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:35.601" endtime="20200716 01:38:38.204"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:39.169" endtime="20200716 01:38:38.204"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:39.168" endtime="20200716 01:38:38.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:38.207" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/49104-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:41.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:41.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:38.205" endtime="20200716 01:38:41.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:41.020" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:41.019" endtime="20200716 01:38:41.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:41.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:41.020" endtime="20200716 01:38:41.020"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:38.205" endtime="20200716 01:38:41.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:41.024" level="INFO">Running command 'ozone sh volume delete o3://om:9862/49104-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:43.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:43.999" level="INFO">${output} = Volume 49104-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200716 01:38:41.022" endtime="20200716 01:38:43.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:44.000" level="INFO">Volume 49104-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200716 01:38:43.999" endtime="20200716 01:38:44.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:44.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:44.000" endtime="20200716 01:38:44.001"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:41.021" endtime="20200716 01:38:44.001"></status>
</kw>
<status status="PASS" starttime="20200716 01:37:13.087" endtime="20200716 01:38:44.001"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:37:13.085" endtime="20200716 01:38:44.002" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:44.003" endtime="20200716 01:38:44.004"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:44.007" level="INFO">Running command 'ozone sh volume create o3://om:9862/49104-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:46.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:46.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:38:44.005" endtime="20200716 01:38:46.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:46.700" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:38:46.699" endtime="20200716 01:38:46.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:46.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:46.701" endtime="20200716 01:38:46.701"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:44.004" endtime="20200716 01:38:46.701"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:46.704" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49104-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:49.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:49.816" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:38:46.702" endtime="20200716 01:38:49.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:49.818" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:38:49.817" endtime="20200716 01:38:49.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:49.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:49.818" endtime="20200716 01:38:49.819"></status>
</kw>
<msg timestamp="20200716 01:38:49.819" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:38:46.701" endtime="20200716 01:38:49.819"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:49.819" endtime="20200716 01:38:49.820"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:49.823" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/49104-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:52.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:52.611" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 01:38:49.821" endtime="20200716 01:38:52.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:52.612" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 01:38:52.612" endtime="20200716 01:38:52.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:52.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:52.613" endtime="20200716 01:38:52.614"></status>
</kw>
<msg timestamp="20200716 01:38:52.614" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 01:38:49.820" endtime="20200716 01:38:52.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:52.618" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49104-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:55.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:55.591" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:38:52.615" endtime="20200716 01:38:55.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:55.592" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:38:55.591" endtime="20200716 01:38:55.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:55.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:55.592" endtime="20200716 01:38:55.593"></status>
</kw>
<msg timestamp="20200716 01:38:55.593" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:38:52.614" endtime="20200716 01:38:55.593"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:38:55.593" endtime="20200716 01:38:55.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:55.597" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/49104-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:38:58.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:38:58.232" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 01:38:55.595" endtime="20200716 01:38:58.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:38:58.234" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 01:38:58.233" endtime="20200716 01:38:58.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:38:58.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:38:58.234" endtime="20200716 01:38:58.235"></status>
</kw>
<msg timestamp="20200716 01:38:58.235" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 01:38:55.594" endtime="20200716 01:38:58.235"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:38:58.238" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49104-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:01.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:01.228" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:38:58.236" endtime="20200716 01:39:01.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:01.229" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:01.228" endtime="20200716 01:39:01.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:01.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:01.229" endtime="20200716 01:39:01.229"></status>
</kw>
<msg timestamp="20200716 01:39:01.230" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:38:58.235" endtime="20200716 01:39:01.230"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:01.230" endtime="20200716 01:39:01.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:01.235" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/49104-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:04.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:04.512" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:01.232" endtime="20200716 01:39:04.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:04.513" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:04.513" endtime="20200716 01:39:04.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:04.514" endtime="20200716 01:39:04.514"></status>
</kw>
<msg timestamp="20200716 01:39:04.514" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:01.231" endtime="20200716 01:39:04.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:04.518" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/49104-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:07.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:07.497" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200716 01:39:04.515" endtime="20200716 01:39:07.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:07.498" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:07.498" endtime="20200716 01:39:07.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:07.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:07.499" endtime="20200716 01:39:07.499"></status>
</kw>
<msg timestamp="20200716 01:39:07.499" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200716 01:39:04.514" endtime="20200716 01:39:07.499"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:07.500" endtime="20200716 01:39:07.500"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:07.500" endtime="20200716 01:39:07.501"></status>
</kw>
<status status="PASS" starttime="20200716 01:38:44.004" endtime="20200716 01:39:07.501"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:38:44.002" endtime="20200716 01:39:07.501" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:07.503" endtime="20200716 01:39:07.503"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:07.508" level="INFO">Running command 'ozone sh bucket create o3://om:9862/49104-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:10.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:10.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:39:07.505" endtime="20200716 01:39:10.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:10.229" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:39:10.228" endtime="20200716 01:39:10.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:10.229" endtime="20200716 01:39:10.229"></status>
</kw>
<status status="PASS" starttime="20200716 01:39:07.504" endtime="20200716 01:39:10.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:10.233" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49104-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:13.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:13.172" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:10.231" endtime="20200716 01:39:13.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:13.173" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:13.172" endtime="20200716 01:39:13.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:13.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:13.173" endtime="20200716 01:39:13.174"></status>
</kw>
<msg timestamp="20200716 01:39:13.174" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:10.230" endtime="20200716 01:39:13.174"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:13.174" endtime="20200716 01:39:13.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:13.178" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/49104-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:15.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:15.910" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 01:39:13.176" endtime="20200716 01:39:15.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:15.911" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 01:39:15.911" endtime="20200716 01:39:15.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:15.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:15.912" endtime="20200716 01:39:15.912"></status>
</kw>
<msg timestamp="20200716 01:39:15.912" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 01:39:13.175" endtime="20200716 01:39:15.913"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:15.916" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49104-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:18.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:18.936" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:15.913" endtime="20200716 01:39:18.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:18.937" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:18.937" endtime="20200716 01:39:18.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:18.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:18.938" endtime="20200716 01:39:18.938"></status>
</kw>
<msg timestamp="20200716 01:39:18.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:15.913" endtime="20200716 01:39:18.938"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:18.939" endtime="20200716 01:39:18.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:18.942" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/49104-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:21.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:21.613" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:18.940" endtime="20200716 01:39:21.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:21.614" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:21.613" endtime="20200716 01:39:21.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:21.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:21.614" endtime="20200716 01:39:21.615"></status>
</kw>
<msg timestamp="20200716 01:39:21.615" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:18.940" endtime="20200716 01:39:21.615"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:21.618" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49104-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:24.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:24.442" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:21.616" endtime="20200716 01:39:24.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:24.443" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:24.442" endtime="20200716 01:39:24.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:24.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:24.444" endtime="20200716 01:39:24.444"></status>
</kw>
<msg timestamp="20200716 01:39:24.444" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:21.615" endtime="20200716 01:39:24.444"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:24.445" endtime="20200716 01:39:24.445"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:24.450" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/49104-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:27.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:27.052" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:24.446" endtime="20200716 01:39:27.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:27.053" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:27.052" endtime="20200716 01:39:27.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:27.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:27.054" endtime="20200716 01:39:27.054"></status>
</kw>
<msg timestamp="20200716 01:39:27.054" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:24.446" endtime="20200716 01:39:27.055"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:27.057" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/49104-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:29.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:29.994" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 01:39:27.055" endtime="20200716 01:39:29.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:29.995" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:29.995" endtime="20200716 01:39:29.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:29.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:29.995" endtime="20200716 01:39:29.996"></status>
</kw>
<msg timestamp="20200716 01:39:29.996" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 01:39:27.055" endtime="20200716 01:39:29.996"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:29.996" endtime="20200716 01:39:29.997"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:29.997" endtime="20200716 01:39:29.998"></status>
</kw>
<status status="PASS" starttime="20200716 01:39:07.503" endtime="20200716 01:39:29.998"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:39:07.502" endtime="20200716 01:39:29.998" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:29.999" endtime="20200716 01:39:30.000"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:30.003" level="INFO">Running command 'ozone sh key put o3://om:9862/49104-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:34.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:34.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:39:30.001" endtime="20200716 01:39:34.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:34.858" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:39:34.857" endtime="20200716 01:39:34.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:34.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:34.858" endtime="20200716 01:39:34.859"></status>
</kw>
<status status="PASS" starttime="20200716 01:39:30.000" endtime="20200716 01:39:34.859"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:34.862" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49104-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:37.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:37.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:34.860" endtime="20200716 01:39:37.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:37.710" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:37.709" endtime="20200716 01:39:37.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:37.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:37.710" endtime="20200716 01:39:37.711"></status>
</kw>
<msg timestamp="20200716 01:39:37.711" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:34.859" endtime="20200716 01:39:37.711"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:37.711" endtime="20200716 01:39:37.712"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:37.716" level="INFO">Running command 'ozone sh key addacl o3://om:9862/49104-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:40.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:40.307" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 01:39:37.713" endtime="20200716 01:39:40.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:40.308" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 01:39:40.307" endtime="20200716 01:39:40.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:40.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:40.308" endtime="20200716 01:39:40.308"></status>
</kw>
<msg timestamp="20200716 01:39:40.309" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 01:39:37.712" endtime="20200716 01:39:40.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:40.312" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49104-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:43.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:43.314" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:40.309" endtime="20200716 01:39:43.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:43.315" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:43.314" endtime="20200716 01:39:43.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:43.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:43.315" endtime="20200716 01:39:43.316"></status>
</kw>
<msg timestamp="20200716 01:39:43.316" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:40.309" endtime="20200716 01:39:43.316"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:43.316" endtime="20200716 01:39:43.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:43.320" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/49104-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:45.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:45.881" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:43.318" endtime="20200716 01:39:45.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:45.882" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:45.882" endtime="20200716 01:39:45.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:45.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:45.883" endtime="20200716 01:39:45.883"></status>
</kw>
<msg timestamp="20200716 01:39:45.883" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 01:39:43.317" endtime="20200716 01:39:45.883"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:45.886" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49104-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:48.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:48.777" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:45.884" endtime="20200716 01:39:48.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:48.778" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:48.777" endtime="20200716 01:39:48.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:48.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:48.778" endtime="20200716 01:39:48.779"></status>
</kw>
<msg timestamp="20200716 01:39:48.779" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 01:39:45.884" endtime="20200716 01:39:48.779"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:48.779" endtime="20200716 01:39:48.780"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:48.782" level="INFO">Running command 'ozone sh key setacl o3://om:9862/49104-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:51.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:51.369" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:48.780" endtime="20200716 01:39:51.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:51.370" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:51.369" endtime="20200716 01:39:51.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:51.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:51.370" endtime="20200716 01:39:51.371"></status>
</kw>
<msg timestamp="20200716 01:39:51.371" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 01:39:48.780" endtime="20200716 01:39:51.371"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:51.374" level="INFO">Running command 'ozone sh key getacl o3://om:9862/49104-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:54.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:54.341" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 01:39:51.372" endtime="20200716 01:39:54.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:54.342" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 01:39:54.341" endtime="20200716 01:39:54.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:54.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:54.342" endtime="20200716 01:39:54.343"></status>
</kw>
<msg timestamp="20200716 01:39:54.343" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 01:39:51.372" endtime="20200716 01:39:54.343"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:54.343" endtime="20200716 01:39:54.344"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:54.344" endtime="20200716 01:39:54.345"></status>
</kw>
<status status="PASS" starttime="20200716 01:39:30.000" endtime="20200716 01:39:54.345"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:39:29.999" endtime="20200716 01:39:54.345" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:54.346" endtime="20200716 01:39:54.347"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:54.351" level="INFO">Running command 'ozone sh volume info o3:///49104-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:56.706" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:39:56.706" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49104-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 01:39:54.349" endtime="20200716 01:39:56.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:56.707" level="INFO">VOLUME_NOT_FOUND Volume 49104-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 01:39:56.707" endtime="20200716 01:39:56.708"></status>
</kw>
<msg timestamp="20200716 01:39:56.708" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49104-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 01:39:54.348" endtime="20200716 01:39:56.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:56.708" endtime="20200716 01:39:56.709"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:56.713" level="INFO">Running command 'ozone sh volume create o3:///49104-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:39:59.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:39:59.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:39:56.710" endtime="20200716 01:39:59.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:39:59.743" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:39:59.742" endtime="20200716 01:39:59.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:39:59.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:39:59.743" endtime="20200716 01:39:59.744"></status>
</kw>
<msg timestamp="20200716 01:39:59.744" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:39:56.709" endtime="20200716 01:39:59.744"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 01:39:59.744" endtime="20200716 01:39:59.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:39:59.748" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="49104-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:02.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:02.758" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 01:39:59.746" endtime="20200716 01:40:02.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:02.760" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:40:02.759" endtime="20200716 01:40:02.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:02.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:02.760" endtime="20200716 01:40:02.760"></status>
</kw>
<msg timestamp="20200716 01:40:02.760" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 01:39:59.745" endtime="20200716 01:40:02.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:02.761" endtime="20200716 01:40:02.761"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:02.767" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49104-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:05.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:05.854" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 01:40:02.762" endtime="20200716 01:40:05.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:05.855" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:40:05.854" endtime="20200716 01:40:05.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:05.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:05.855" endtime="20200716 01:40:05.856"></status>
</kw>
<msg timestamp="20200716 01:40:05.856" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:39:59.489Z",
  "modificationTime": "2020-07-16T01:39:59.489Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 01:40:02.761" endtime="20200716 01:40:05.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:05.856" endtime="20200716 01:40:05.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:05.860" level="INFO">Running command 'ozone sh volume update o3:///49104-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:08.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:08.715" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49104-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:39:59.489Z",
  "modificationTime" : "2020-07-16T01:40:08.279Z",
  "acls...</msg>
<status status="PASS" starttime="20200716 01:40:05.857" endtime="20200716 01:40:08.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:08.716" level="INFO">{
  "metadata" : { },
  "name" : "49104-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:39:59.489Z",
  "modificationTime" : "2020-07-16T01:40:08.279Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 01:40:08.715" endtime="20200716 01:40:08.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:08.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:08.716" endtime="20200716 01:40:08.717"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:05.857" endtime="20200716 01:40:08.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:08.721" level="INFO">Running command 'ozone sh volume info o3:///49104-rpcwport | jq -r '. | select(.name=="49104-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:11.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:11.529" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:40:08.718" endtime="20200716 01:40:11.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:11.530" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 01:40:11.529" endtime="20200716 01:40:11.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:11.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:11.530" endtime="20200716 01:40:11.530"></status>
</kw>
<msg timestamp="20200716 01:40:11.531" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:40:08.717" endtime="20200716 01:40:11.531"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:11.531" endtime="20200716 01:40:11.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:11.534" level="INFO">Running command 'ozone sh bucket create o3:///49104-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:14.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:14.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:11.532" endtime="20200716 01:40:14.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:14.347" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:14.346" endtime="20200716 01:40:14.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:14.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:14.347" endtime="20200716 01:40:14.348"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:11.531" endtime="20200716 01:40:14.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:14.352" level="INFO">Running command 'ozone sh bucket info o3:///49104-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:17.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:17.332" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 01:40:14.349" endtime="20200716 01:40:17.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:17.334" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 01:40:17.333" endtime="20200716 01:40:17.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:17.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:17.334" endtime="20200716 01:40:17.335"></status>
</kw>
<msg timestamp="20200716 01:40:17.335" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 01:40:14.348" endtime="20200716 01:40:17.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:17.335" endtime="20200716 01:40:17.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:17.340" level="INFO">Running command 'ozone sh bucket list o3:///49104-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:20.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:20.507" level="INFO">${output} = 49104-rpcwport</msg>
<status status="PASS" starttime="20200716 01:40:17.336" endtime="20200716 01:40:20.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:20.508" level="INFO">49104-rpcwport</msg>
<status status="PASS" starttime="20200716 01:40:20.507" endtime="20200716 01:40:20.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:20.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:20.508" endtime="20200716 01:40:20.509"></status>
</kw>
<msg timestamp="20200716 01:40:20.509" level="INFO">${result} = 49104-rpcwport</msg>
<status status="PASS" starttime="20200716 01:40:17.336" endtime="20200716 01:40:20.509"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:20.509" endtime="20200716 01:40:20.510"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:20.515" level="INFO">Running command 'ozone sh key put o3:///49104-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:25.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:25.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:20.511" endtime="20200716 01:40:25.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:25.378" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:25.377" endtime="20200716 01:40:25.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:25.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:25.378" endtime="20200716 01:40:25.378"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:20.511" endtime="20200716 01:40:25.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:25.382" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:25.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:25.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:25.379" endtime="20200716 01:40:25.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:25.385" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:25.384" endtime="20200716 01:40:25.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:25.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:25.385" endtime="20200716 01:40:25.385"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:25.379" endtime="20200716 01:40:25.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:25.389" level="INFO">Running command 'ozone sh key get o3:///49104-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:30.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:30.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:25.386" endtime="20200716 01:40:30.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:30.079" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:30.078" endtime="20200716 01:40:30.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:30.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:30.079" endtime="20200716 01:40:30.080"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:25.386" endtime="20200716 01:40:30.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:30.083" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:30.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:30.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:30.081" endtime="20200716 01:40:30.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:30.088" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:30.087" endtime="20200716 01:40:30.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:30.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:30.088" endtime="20200716 01:40:30.088"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:30.080" endtime="20200716 01:40:30.089"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:30.092" level="INFO">Running command 'ozone sh key put -t RATIS o3:///49104-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:34.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:34.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:30.090" endtime="20200716 01:40:34.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:34.906" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:34.906" endtime="20200716 01:40:34.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:34.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:34.907" endtime="20200716 01:40:34.907"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:30.089" endtime="20200716 01:40:34.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:34.910" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:34.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:34.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:34.908" endtime="20200716 01:40:34.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:34.913" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:34.913" endtime="20200716 01:40:34.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:34.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:34.914" endtime="20200716 01:40:34.914"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:34.907" endtime="20200716 01:40:34.915"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:34.919" level="INFO">Running command 'ozone sh key get o3:///49104-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:39.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:39.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:34.915" endtime="20200716 01:40:39.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:39.701" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:39.700" endtime="20200716 01:40:39.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:39.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:39.701" endtime="20200716 01:40:39.701"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:34.915" endtime="20200716 01:40:39.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:39.705" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:39.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:39.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:39.702" endtime="20200716 01:40:39.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:39.707" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:39.707" endtime="20200716 01:40:39.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:39.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:39.708" endtime="20200716 01:40:39.708"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:39.702" endtime="20200716 01:40:39.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:39.712" level="INFO">Running command 'ozone sh key info o3:///49104-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:42.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:42.667" level="INFO">${output} = {
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:32.629Z",
  "modificationTime": "2020-07-16T01:40:34.422Z",
...</msg>
<status status="PASS" starttime="20200716 01:40:39.709" endtime="20200716 01:40:42.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:42.668" level="INFO">{
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:32.629Z",
  "modificationTime": "2020-07-16T01:40:34.422Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520983027908740,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:40:42.668" endtime="20200716 01:40:42.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:42.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:42.669" endtime="20200716 01:40:42.669"></status>
</kw>
<msg timestamp="20200716 01:40:42.669" level="INFO">${result} = {
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:32.629Z",
  "modificationTime": "2020-07-16T01:40:34.422Z",
...</msg>
<status status="PASS" starttime="20200716 01:40:39.708" endtime="20200716 01:40:42.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 01:40:42.670" endtime="20200716 01:40:42.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:42.673" level="INFO">Running command 'ozone sh key delete o3:///49104-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:45.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:45.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:42.671" endtime="20200716 01:40:45.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:45.420" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:45.419" endtime="20200716 01:40:45.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:45.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:45.420" endtime="20200716 01:40:45.420"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:42.670" endtime="20200716 01:40:45.421"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:45.424" level="INFO">Running command 'ozone sh key cp o3:///49104-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:50.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:50.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:45.421" endtime="20200716 01:40:50.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:50.606" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:50.605" endtime="20200716 01:40:50.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:50.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:50.606" endtime="20200716 01:40:50.606"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:45.421" endtime="20200716 01:40:50.607"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:50.609" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:50.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:50.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:50.607" endtime="20200716 01:40:50.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:50.613" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:50.612" endtime="20200716 01:40:50.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:50.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:50.613" endtime="20200716 01:40:50.613"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:50.607" endtime="20200716 01:40:50.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:50.616" level="INFO">Running command 'ozone sh key get o3:///49104-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:55.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:55.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:50.614" endtime="20200716 01:40:55.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:55.171" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:55.170" endtime="20200716 01:40:55.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:55.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:55.172" endtime="20200716 01:40:55.172"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:50.614" endtime="20200716 01:40:55.172"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:55.175" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:55.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:55.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:55.173" endtime="20200716 01:40:55.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:55.178" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:55.178" endtime="20200716 01:40:55.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:55.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:55.178" endtime="20200716 01:40:55.179"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:55.173" endtime="20200716 01:40:55.179"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:55.182" level="INFO">Running command 'ozone sh key delete o3:///49104-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:40:57.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:40:57.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:40:55.180" endtime="20200716 01:40:57.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:40:57.862" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:40:57.861" endtime="20200716 01:40:57.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:40:57.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:40:57.862" endtime="20200716 01:40:57.863"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:55.179" endtime="20200716 01:40:57.863"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:40:57.867" level="INFO">Running command 'ozone sh key get o3:///49104-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:00.663" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:41:00.663" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:40:57.864" endtime="20200716 01:41:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:00.665" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:41:00.664" endtime="20200716 01:41:00.665"></status>
</kw>
<msg timestamp="20200716 01:41:00.665" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:40:57.863" endtime="20200716 01:41:00.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:00.665" endtime="20200716 01:41:00.666"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:00.669" level="INFO">Running command 'ozone sh key get --force o3:///49104-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:05.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:05.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:00.667" endtime="20200716 01:41:05.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:05.186" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:05.185" endtime="20200716 01:41:05.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:05.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:05.186" endtime="20200716 01:41:05.187"></status>
</kw>
<msg timestamp="20200716 01:41:05.187" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:41:00.666" endtime="20200716 01:41:05.187"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:05.187" endtime="20200716 01:41:05.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:05.191" level="INFO">Running command 'ozone sh key info o3:///49104-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:08.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:08.251" level="INFO">${output} = {
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:23.042Z",
  "modificationTime": "2020-07-16T01:40:24.848Z",
  "rep...</msg>
<status status="PASS" starttime="20200716 01:41:05.189" endtime="20200716 01:41:08.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:08.253" level="INFO">{
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:23.042Z",
  "modificationTime": "2020-07-16T01:40:24.848Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520982399680640,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:41:08.252" endtime="20200716 01:41:08.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:08.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:08.253" endtime="20200716 01:41:08.253"></status>
</kw>
<msg timestamp="20200716 01:41:08.254" level="INFO">${result} = {
  "volumeName": "49104-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:40:23.042Z",
  "modificationTime": "2020-07-16T01:40:24.848Z",
  "rep...</msg>
<status status="PASS" starttime="20200716 01:41:05.188" endtime="20200716 01:41:08.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:08.254" endtime="20200716 01:41:08.254"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:08.258" level="INFO">Running command 'ozone sh key list o3:///49104-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:11.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:11.206" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 01:41:08.255" endtime="20200716 01:41:11.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:11.207" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 01:41:11.206" endtime="20200716 01:41:11.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:11.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:11.207" endtime="20200716 01:41:11.208"></status>
</kw>
<msg timestamp="20200716 01:41:11.208" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 01:41:08.255" endtime="20200716 01:41:11.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:11.208" endtime="20200716 01:41:11.209"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:11.211" level="INFO">Running command 'ozone sh key rename o3:///49104-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:13.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:13.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:11.209" endtime="20200716 01:41:13.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:13.967" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:13.966" endtime="20200716 01:41:13.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:13.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:13.967" endtime="20200716 01:41:13.968"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:11.209" endtime="20200716 01:41:13.968"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:13.972" level="INFO">Running command 'ozone sh key list o3:///49104-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:16.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:16.878" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 01:41:13.969" endtime="20200716 01:41:16.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:16.880" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 01:41:16.879" endtime="20200716 01:41:16.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:16.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:16.880" endtime="20200716 01:41:16.881"></status>
</kw>
<msg timestamp="20200716 01:41:16.881" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 01:41:13.968" endtime="20200716 01:41:16.881"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:16.881" endtime="20200716 01:41:16.882"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:16.885" level="INFO">Running command 'ozone sh key delete o3:///49104-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:19.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:19.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:16.883" endtime="20200716 01:41:19.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:19.442" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:19.441" endtime="20200716 01:41:19.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:19.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:19.442" endtime="20200716 01:41:19.443"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:16.882" endtime="20200716 01:41:19.444"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:20.510" endtime="20200716 01:41:19.444"></status>
</kw>
<status status="PASS" starttime="20200716 01:40:20.510" endtime="20200716 01:41:19.444"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:19.448" level="INFO">Running command 'ozone sh bucket delete o3:///49104-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:22.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:22.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:19.445" endtime="20200716 01:41:22.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:22.157" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:22.157" endtime="20200716 01:41:22.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:22.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:22.158" endtime="20200716 01:41:22.158"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:19.444" endtime="20200716 01:41:22.158"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:22.161" level="INFO">Running command 'ozone sh volume delete o3:///49104-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:24.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:24.787" level="INFO">${output} = Volume 49104-rpcwport is deleted</msg>
<status status="PASS" starttime="20200716 01:41:22.159" endtime="20200716 01:41:24.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:24.788" level="INFO">Volume 49104-rpcwport is deleted</msg>
<status status="PASS" starttime="20200716 01:41:24.787" endtime="20200716 01:41:24.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:24.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:24.788" endtime="20200716 01:41:24.789"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:22.158" endtime="20200716 01:41:24.789"></status>
</kw>
<status status="PASS" starttime="20200716 01:39:54.347" endtime="20200716 01:41:24.789"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:39:54.346" endtime="20200716 01:41:24.789" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:24.791" endtime="20200716 01:41:24.791"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:24.796" level="INFO">Running command 'ozone sh volume info /49104-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:27.602" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:41:27.602" level="INFO">${output} = VOLUME_NOT_FOUND Volume 49104-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 01:41:24.793" endtime="20200716 01:41:27.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:27.604" level="INFO">VOLUME_NOT_FOUND Volume 49104-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 01:41:27.603" endtime="20200716 01:41:27.604"></status>
</kw>
<msg timestamp="20200716 01:41:27.604" level="INFO">${result} = VOLUME_NOT_FOUND Volume 49104-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 01:41:24.792" endtime="20200716 01:41:27.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:27.605" endtime="20200716 01:41:27.605"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:27.608" level="INFO">Running command 'ozone sh volume create /49104-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:30.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:30.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:27.606" endtime="20200716 01:41:30.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:30.266" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:30.265" endtime="20200716 01:41:30.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:30.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:30.266" endtime="20200716 01:41:30.266"></status>
</kw>
<msg timestamp="20200716 01:41:30.267" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:41:27.605" endtime="20200716 01:41:30.267"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:30.267" endtime="20200716 01:41:30.267"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:30.272" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="49104-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:33.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:33.129" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 01:41:30.268" endtime="20200716 01:41:33.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:33.130" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:41:33.129" endtime="20200716 01:41:33.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:33.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:33.131" endtime="20200716 01:41:33.131"></status>
</kw>
<msg timestamp="20200716 01:41:33.132" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 01:41:30.268" endtime="20200716 01:41:33.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:33.132" endtime="20200716 01:41:33.132"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:33.136" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="49104-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:36.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:36.201" level="INFO">${output} = {
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 01:41:33.133" endtime="20200716 01:41:36.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:36.202" level="INFO">{
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 01:41:36.201" endtime="20200716 01:41:36.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:36.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:36.202" endtime="20200716 01:41:36.203"></status>
</kw>
<msg timestamp="20200716 01:41:36.203" level="INFO">${result} = {
  "metadata": {},
  "name": "49104-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T01:41:30.197Z",
  "modificationTime": "2020-07-16T01:41:30.197Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 01:41:33.132" endtime="20200716 01:41:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:36.203" endtime="20200716 01:41:36.204"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:36.207" level="INFO">Running command 'ozone sh volume update /49104-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:39.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:39.283" level="INFO">${output} = {
  "metadata" : { },
  "name" : "49104-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:41:30.197Z",
  "modificationTime" : "2020-07-16T01:41:38.908Z",
  "a...</msg>
<status status="PASS" starttime="20200716 01:41:36.205" endtime="20200716 01:41:39.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:39.285" level="INFO">{
  "metadata" : { },
  "name" : "49104-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T01:41:30.197Z",
  "modificationTime" : "2020-07-16T01:41:38.908Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 01:41:39.284" endtime="20200716 01:41:39.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:39.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:39.285" endtime="20200716 01:41:39.286"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:36.204" endtime="20200716 01:41:39.286"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:39.290" level="INFO">Running command 'ozone sh volume info /49104-rpcwoscheme | jq -r '. | select(.name=="49104-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:42.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:42.118" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:41:39.287" endtime="20200716 01:41:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:42.119" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 01:41:42.119" endtime="20200716 01:41:42.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:42.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:42.120" endtime="20200716 01:41:42.120"></status>
</kw>
<msg timestamp="20200716 01:41:42.120" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 01:41:39.286" endtime="20200716 01:41:42.120"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:42.121" endtime="20200716 01:41:42.121"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:42.125" level="INFO">Running command 'ozone sh bucket create /49104-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:44.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:44.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:42.122" endtime="20200716 01:41:44.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:44.783" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:44.783" endtime="20200716 01:41:44.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:44.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:44.784" endtime="20200716 01:41:44.784"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:42.121" endtime="20200716 01:41:44.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:44.788" level="INFO">Running command 'ozone sh bucket info /49104-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:47.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:47.650" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 01:41:44.785" endtime="20200716 01:41:47.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:47.651" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 01:41:47.650" endtime="20200716 01:41:47.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:47.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:47.651" endtime="20200716 01:41:47.652"></status>
</kw>
<msg timestamp="20200716 01:41:47.652" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 01:41:44.785" endtime="20200716 01:41:47.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:47.652" endtime="20200716 01:41:47.653"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:47.655" level="INFO">Running command 'ozone sh bucket list /49104-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:50.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:50.806" level="INFO">${output} = 49104-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 01:41:47.653" endtime="20200716 01:41:50.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:50.807" level="INFO">49104-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 01:41:50.807" endtime="20200716 01:41:50.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:50.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:50.808" endtime="20200716 01:41:50.808"></status>
</kw>
<msg timestamp="20200716 01:41:50.808" level="INFO">${result} = 49104-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 01:41:47.653" endtime="20200716 01:41:50.808"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 01:41:50.808" endtime="20200716 01:41:50.809"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:50.813" level="INFO">Running command 'ozone sh key put /49104-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:56.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:56.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:50.810" endtime="20200716 01:41:56.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:56.059" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:56.058" endtime="20200716 01:41:56.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:56.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:56.059" endtime="20200716 01:41:56.060"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:50.810" endtime="20200716 01:41:56.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:56.064" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:41:56.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:41:56.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:56.061" endtime="20200716 01:41:56.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:41:56.066" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:41:56.066" endtime="20200716 01:41:56.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:41:56.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:41:56.067" endtime="20200716 01:41:56.067"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:56.060" endtime="20200716 01:41:56.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:41:56.072" level="INFO">Running command 'ozone sh key get /49104-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:00.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:00.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:41:56.068" endtime="20200716 01:42:00.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:00.507" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:00.506" endtime="20200716 01:42:00.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:00.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:00.507" endtime="20200716 01:42:00.508"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:56.067" endtime="20200716 01:42:00.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:00.511" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:00.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:00.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:00.509" endtime="20200716 01:42:00.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:00.514" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:00.514" endtime="20200716 01:42:00.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:00.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:00.515" endtime="20200716 01:42:00.515"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:00.508" endtime="20200716 01:42:00.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:00.518" level="INFO">Running command 'ozone sh key put -t RATIS /49104-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:05.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:05.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:00.516" endtime="20200716 01:42:05.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:05.035" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:05.034" endtime="20200716 01:42:05.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:05.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:05.035" endtime="20200716 01:42:05.036"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:00.515" endtime="20200716 01:42:05.036"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:05.040" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:05.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:05.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:05.037" endtime="20200716 01:42:05.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:05.043" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:05.042" endtime="20200716 01:42:05.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:05.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:05.043" endtime="20200716 01:42:05.044"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:05.037" endtime="20200716 01:42:05.044"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:05.047" level="INFO">Running command 'ozone sh key get /49104-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:09.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:09.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:05.045" endtime="20200716 01:42:09.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:09.749" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:09.748" endtime="20200716 01:42:09.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:09.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:09.749" endtime="20200716 01:42:09.750"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:05.044" endtime="20200716 01:42:09.750"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:09.754" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:09.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:09.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:09.750" endtime="20200716 01:42:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:09.757" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:09.756" endtime="20200716 01:42:09.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:09.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:09.757" endtime="20200716 01:42:09.758"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:09.750" endtime="20200716 01:42:09.758"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:09.760" level="INFO">Running command 'ozone sh key info /49104-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:12.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:12.545" level="INFO">${output} = {
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:42:02.992Z",
  "modificationTime": "2020-07-16T01:42:04.647Z...</msg>
<status status="PASS" starttime="20200716 01:42:09.759" endtime="20200716 01:42:12.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:12.547" level="INFO">{
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:42:02.992Z",
  "modificationTime": "2020-07-16T01:42:04.647Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520988949741700,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:42:12.546" endtime="20200716 01:42:12.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:12.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:12.547" endtime="20200716 01:42:12.547"></status>
</kw>
<msg timestamp="20200716 01:42:12.547" level="INFO">${result} = {
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:42:02.992Z",
  "modificationTime": "2020-07-16T01:42:04.647Z...</msg>
<status status="PASS" starttime="20200716 01:42:09.758" endtime="20200716 01:42:12.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:12.548" endtime="20200716 01:42:12.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:12.551" level="INFO">Running command 'ozone sh key delete /49104-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:15.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:15.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:12.549" endtime="20200716 01:42:15.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:15.189" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:15.188" endtime="20200716 01:42:15.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:15.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:15.189" endtime="20200716 01:42:15.190"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:12.548" endtime="20200716 01:42:15.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:15.193" level="INFO">Running command 'ozone sh key cp /49104-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:20.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:20.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:15.191" endtime="20200716 01:42:20.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:20.086" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:20.085" endtime="20200716 01:42:20.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:20.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:20.086" endtime="20200716 01:42:20.087"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:15.190" endtime="20200716 01:42:20.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:20.090" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:20.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:20.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:20.088" endtime="20200716 01:42:20.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:20.093" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:20.092" endtime="20200716 01:42:20.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:20.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:20.093" endtime="20200716 01:42:20.094"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:20.087" endtime="20200716 01:42:20.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:20.098" level="INFO">Running command 'ozone sh key get /49104-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:24.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:24.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:20.095" endtime="20200716 01:42:24.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:24.722" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:24.721" endtime="20200716 01:42:24.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:24.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:24.722" endtime="20200716 01:42:24.723"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:20.095" endtime="20200716 01:42:24.723"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:24.727" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:24.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:24.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:24.724" endtime="20200716 01:42:24.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:24.730" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:24.729" endtime="20200716 01:42:24.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:24.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:24.730" endtime="20200716 01:42:24.730"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:24.723" endtime="20200716 01:42:24.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:24.733" level="INFO">Running command 'ozone sh key delete /49104-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:27.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:27.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:24.731" endtime="20200716 01:42:27.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:27.558" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:27.558" endtime="20200716 01:42:27.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:27.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:27.559" endtime="20200716 01:42:27.559"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:24.731" endtime="20200716 01:42:27.560"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:27.564" level="INFO">Running command 'ozone sh key get /49104-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:30.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 01:42:30.144" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:42:27.561" endtime="20200716 01:42:30.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:30.145" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:42:30.144" endtime="20200716 01:42:30.145"></status>
</kw>
<msg timestamp="20200716 01:42:30.145" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 01:42:27.560" endtime="20200716 01:42:30.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:30.145" endtime="20200716 01:42:30.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:30.150" level="INFO">Running command 'ozone sh key get --force /49104-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:34.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:34.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:30.147" endtime="20200716 01:42:34.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:34.691" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:34.690" endtime="20200716 01:42:34.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:34.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:34.691" endtime="20200716 01:42:34.692"></status>
</kw>
<msg timestamp="20200716 01:42:34.692" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 01:42:30.146" endtime="20200716 01:42:34.692"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:34.692" endtime="20200716 01:42:34.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:34.696" level="INFO">Running command 'ozone sh key info /49104-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:37.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:37.471" level="INFO">${output} = {
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:41:53.970Z",
  "modificationTime": "2020-07-16T01:41:55.573Z",
  "...</msg>
<status status="PASS" starttime="20200716 01:42:34.694" endtime="20200716 01:42:37.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:37.472" level="INFO">{
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:41:53.970Z",
  "modificationTime": "2020-07-16T01:41:55.573Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104520988358672510,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 01:42:37.471" endtime="20200716 01:42:37.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:37.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:37.472" endtime="20200716 01:42:37.473"></status>
</kw>
<msg timestamp="20200716 01:42:37.473" level="INFO">${result} = {
  "volumeName": "49104-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T01:41:53.970Z",
  "modificationTime": "2020-07-16T01:41:55.573Z",
  "...</msg>
<status status="PASS" starttime="20200716 01:42:34.693" endtime="20200716 01:42:37.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:37.473" endtime="20200716 01:42:37.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:37.478" level="INFO">Running command 'ozone sh key list /49104-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:40.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:40.390" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 01:42:37.475" endtime="20200716 01:42:40.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:40.392" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 01:42:40.391" endtime="20200716 01:42:40.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:40.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:40.392" endtime="20200716 01:42:40.392"></status>
</kw>
<msg timestamp="20200716 01:42:40.393" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 01:42:37.474" endtime="20200716 01:42:40.393"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:40.393" endtime="20200716 01:42:40.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:40.397" level="INFO">Running command 'ozone sh key rename /49104-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:42.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:42.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:40.394" endtime="20200716 01:42:42.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:42.989" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:42.988" endtime="20200716 01:42:42.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:42.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:42.989" endtime="20200716 01:42:42.989"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:40.393" endtime="20200716 01:42:42.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:42.994" level="INFO">Running command 'ozone sh key list /49104-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:45.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:45.916" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 01:42:42.991" endtime="20200716 01:42:45.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:45.917" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 01:42:45.916" endtime="20200716 01:42:45.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:45.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:45.917" endtime="20200716 01:42:45.918"></status>
</kw>
<msg timestamp="20200716 01:42:45.918" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 01:42:42.990" endtime="20200716 01:42:45.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 01:42:45.918" endtime="20200716 01:42:45.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:45.923" level="INFO">Running command 'ozone sh key delete /49104-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:48.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:48.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:45.919" endtime="20200716 01:42:48.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:48.668" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:48.668" endtime="20200716 01:42:48.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:48.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:48.668" endtime="20200716 01:42:48.669"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:45.919" endtime="20200716 01:42:48.669"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:50.809" endtime="20200716 01:42:48.669"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:50.809" endtime="20200716 01:42:48.669"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:48.672" level="INFO">Running command 'ozone sh bucket delete /49104-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:51.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:51.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 01:42:48.670" endtime="20200716 01:42:51.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:51.392" level="INFO"></msg>
<status status="PASS" starttime="20200716 01:42:51.391" endtime="20200716 01:42:51.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:51.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:51.392" endtime="20200716 01:42:51.393"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:48.669" endtime="20200716 01:42:51.393"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:42:51.395" level="INFO">Running command 'ozone sh volume delete /49104-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:42:54.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:42:54.045" level="INFO">${output} = Volume 49104-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200716 01:42:51.393" endtime="20200716 01:42:54.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:42:54.046" level="INFO">Volume 49104-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200716 01:42:54.046" endtime="20200716 01:42:54.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:42:54.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:42:54.047" endtime="20200716 01:42:54.047"></status>
</kw>
<status status="PASS" starttime="20200716 01:42:51.393" endtime="20200716 01:42:54.047"></status>
</kw>
<status status="PASS" starttime="20200716 01:41:24.792" endtime="20200716 01:42:54.047"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 01:41:24.790" endtime="20200716 01:42:54.048" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200716 01:37:13.078" endtime="20200716 01:42:54.050"></status>
</suite>
<status status="PASS" starttime="20200716 01:36:11.823" endtime="20200716 01:42:54.056"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
