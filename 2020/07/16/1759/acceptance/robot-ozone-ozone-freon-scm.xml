<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 01:54:09.155" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:54:09.219" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:54:17.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:54:17.683" level="INFO">${output} = 2020-07-16 01:54:10,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:10,966 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:09.214" endtime="20200716 01:54:17.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:54:17.684" level="INFO">2020-07-16 01:54:10,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:10,966 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 01:54:10,966 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 01:54:12,154 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 01:54:12,155 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-16 01:54:12,169 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 01:54:12,178 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:12,222 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-81804, with hadoop as owner.
2020-07-16 01:54:12,275 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-81804/bucket-0-44535, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:54:12,798 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 01:54:13,179 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,079
Average Time spent in bucket creation: 00:00:00,025
Average Time spent in key creation: 00:00:00,079
Average Time spent in key write: 00:00:00,657
Total bytes written: 10240
Total Execution time: 00:00:06,135
***************************************************</msg>
<status status="PASS" starttime="20200716 01:54:17.684" endtime="20200716 01:54:17.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:54:17.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:54:17.685" endtime="20200716 01:54:17.685"></status>
</kw>
<msg timestamp="20200716 01:54:17.685" level="INFO">${result} = 2020-07-16 01:54:10,747 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:10,966 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:09.213" endtime="20200716 01:54:17.686"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:54:17.686" endtime="20200716 01:54:17.687"></status>
</kw>
<status status="PASS" starttime="20200716 01:54:17.686" endtime="20200716 01:54:17.687"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:54:09.212" endtime="20200716 01:54:17.687" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:54:17.691" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:54:23.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:54:23.238" level="INFO">${output} = 2020-07-16 01:54:19,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:19,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:17.689" endtime="20200716 01:54:23.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:54:23.240" level="INFO">2020-07-16 01:54:19,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:19,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 01:54:19,400 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 01:54:19,563 [main] INFO freon.BaseFreonGenerator: Executing test with prefix koeaxpre7w
2020-07-16 01:54:19,581 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:20,595 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:20,608 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-16 01:54:20,661 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 01:54:21,333 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 01:54:21,596 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:22,596 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 01:54:22,865 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1537.374713, max=1537.374713, mean=1537.374713, stddev=0.0, median=1537.374713, p75=1537.374713, p95=1537.374713, p98=1537.374713, p99=1537.374713, p999=1537.374713, mean_rate=0.4615154686248075, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 01:54:22,869 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-16 01:54:22,871 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 01:54:22,871 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 01:54:23.239" endtime="20200716 01:54:23.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:54:23.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:54:23.240" endtime="20200716 01:54:23.240"></status>
</kw>
<msg timestamp="20200716 01:54:23.241" level="INFO">${result} = 2020-07-16 01:54:19,214 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:19,400 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:17.688" endtime="20200716 01:54:23.241"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:54:23.241" endtime="20200716 01:54:23.242"></status>
</kw>
<status status="PASS" starttime="20200716 01:54:23.241" endtime="20200716 01:54:23.242"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:54:17.687" endtime="20200716 01:54:23.242" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:54:23.247" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:54:27.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:54:27.399" level="INFO">${output} = 2020-07-16 01:54:24,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:24,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:23.245" endtime="20200716 01:54:27.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:54:27.401" level="INFO">2020-07-16 01:54:24,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:24,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 01:54:24,984 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 01:54:25,130 [main] INFO freon.BaseFreonGenerator: Executing test with prefix roonkrrmdj
2020-07-16 01:54:25,147 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:26,152 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:27,154 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 01:54:27,340 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=61.537925, max=61.537925, mean=61.537925, stddev=0.0, median=61.537925, p75=61.537925, p95=61.537925, p98=61.537925, p99=61.537925, p999=61.537925, mean_rate=0.8930885580505437, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 01:54:27,348 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-16 01:54:27,349 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 01:54:27,349 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 01:54:27.400" endtime="20200716 01:54:27.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:54:27.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:54:27.401" endtime="20200716 01:54:27.402"></status>
</kw>
<msg timestamp="20200716 01:54:27.402" level="INFO">${result} = 2020-07-16 01:54:24,767 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:24,984 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:23.244" endtime="20200716 01:54:27.402"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:54:27.403" endtime="20200716 01:54:27.403"></status>
</kw>
<status status="PASS" starttime="20200716 01:54:27.402" endtime="20200716 01:54:27.403"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:54:23.243" endtime="20200716 01:54:27.403" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 01:54:27.407" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 01:54:31.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 01:54:31.768" level="INFO">${output} = 2020-07-16 01:54:28,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:29,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:27.405" endtime="20200716 01:54:31.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 01:54:31.769" level="INFO">2020-07-16 01:54:28,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:29,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 01:54:29,267 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 01:54:29,441 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ycbfuf79w2
2020-07-16 01:54:29,455 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:30,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 01:54:31,461 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 01:54:31,735 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.445264, max=17.445264, mean=17.445264, stddev=0.0, median=17.445264, p75=17.445264, p95=17.445264, p98=17.445264, p99=17.445264, p999=17.445264, mean_rate=0.881079825918574, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 01:54:31,736 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-16 01:54:31,743 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 01:54:31,743 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 01:54:31.768" endtime="20200716 01:54:31.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 01:54:31.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 01:54:31.770" endtime="20200716 01:54:31.770"></status>
</kw>
<msg timestamp="20200716 01:54:31.771" level="INFO">${result} = 2020-07-16 01:54:28,996 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 01:54:29,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 01:54:27.404" endtime="20200716 01:54:31.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 01:54:31.771" endtime="20200716 01:54:31.772"></status>
</kw>
<status status="PASS" starttime="20200716 01:54:31.771" endtime="20200716 01:54:31.772"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 01:54:27.404" endtime="20200716 01:54:31.772" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200716 01:54:09.187" endtime="20200716 01:54:31.773"></status>
</suite>
<status status="PASS" starttime="20200716 01:54:09.156" endtime="20200716 01:54:31.778"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
