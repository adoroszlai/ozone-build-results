<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 13:08:02.509" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 13:08:02.572" endtime="20200716 13:08:02.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:08:02.579" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:08:02.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:08:02.667" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:08:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 12:35:28 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200716 13:08:02.573" endtime="20200716 13:08:02.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:08:02.669" level="INFO">HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:08:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 12:35:28 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200716 13:08:02.668" endtime="20200716 13:08:02.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:08:02.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:08:02.669" endtime="20200716 13:08:02.669"></status>
</kw>
<msg timestamp="20200716 13:08:02.670" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:08:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 16 Jul 2020 12:35:28 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200716 13:08:02.573" endtime="20200716 13:08:02.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200716 13:08:02.670" endtime="20200716 13:08:02.670"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:08:02.571" endtime="20200716 13:08:02.671" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:08:02.674" endtime="20200716 13:08:02.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:08:02.677" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:11.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:11.096" level="INFO">${output} = 2020-07-16 13:08:04,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:08:04,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:08:02.675" endtime="20200716 13:09:11.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:11.097" level="INFO">2020-07-16 13:08:04,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:08:04,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:08:04,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:08:06,496 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 13:08:06,497 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-16 13:08:06,500 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-16 13:08:06,501 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 13:08:06,511 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-16 13:08:06,562 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-93577, with hadoop as owner.
2020-07-16 13:08:06,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-94226, with hadoop as owner.
2020-07-16 13:08:06,929 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-95282, with hadoop as owner.
2020-07-16 13:08:06,939 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-22464, with hadoop as owner.
2020-07-16 13:08:06,948 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-41473, with hadoop as owner.
2020-07-16 13:08:06,966 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-93577/bucket-0-39804, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,043 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94226/bucket-0-22020, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,058 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95282/bucket-0-70377, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,074 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-22464/bucket-0-01413, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,089 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-41473/bucket-0-16218, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,097 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-93577/bucket-1-46802, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,103 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94226/bucket-1-99320, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95282/bucket-1-86294, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,123 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-22464/bucket-1-79630, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,139 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-41473/bucket-1-42712, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,150 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-93577/bucket-2-14572, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,200 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94226/bucket-2-59487, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,221 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95282/bucket-2-32402, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,237 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-22464/bucket-2-42050, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,252 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-41473/bucket-2-65717, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,259 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-93577/bucket-3-91111, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,270 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94226/bucket-3-99809, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,278 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95282/bucket-3-07061, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,288 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-22464/bucket-3-93687, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,293 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-41473/bucket-3-64336, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,300 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-93577/bucket-4-87810, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,303 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-94226/bucket-4-30026, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,308 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-95282/bucket-4-97613, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,313 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-22464/bucket-4-59356, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,316 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-41473/bucket-4-26636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:08:07,517 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-16 13:08:08,497 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 13:08:08,518 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-16 13:08:09,519 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-16 13:08:10,519 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-16 13:08:11,520 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-16 13:08:12,524 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-16 13:08:13,524 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-16 13:08:14,525 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-07-16 13:08:15,525 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-07-16 13:08:16,526 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-07-16 13:08:17,529 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-16 13:08:18,530 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-16 13:08:19,531 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-16 13:08:20,532 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-07-16 13:08:21,532 [Thread-7] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2020-07-16 13:08:22,534 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-07-16 13:08:23,534 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-16 13:08:24,534 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-07-16 13:08:25,536 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-16 13:08:26,536 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-07-16 13:08:27,538 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-07-16 13:08:28,539 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-16 13:08:29,539 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-07-16 13:08:30,540 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-16 13:08:31,540 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-16 13:08:32,541 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-16 13:08:33,541 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-16 13:08:34,542 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-16 13:08:35,542 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-07-16 13:08:36,543 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-07-16 13:08:37,543 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-07-16 13:08:38,544 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-07-16 13:08:39,544 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-07-16 13:08:40,545 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-16 13:08:41,546 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-16 13:08:42,546 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-07-16 13:08:43,547 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-07-16 13:08:44,547 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-07-16 13:08:45,548 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-07-16 13:08:46,548 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-07-16 13:08:47,550 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-07-16 13:08:48,550 [Thread-7] INFO freon.ProgressBar: Progress: 77.60 % (97 out of 125)
2020-07-16 13:08:49,550 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-07-16 13:08:50,551 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-07-16 13:08:51,552 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-07-16 13:08:52,552 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-07-16 13:08:53,553 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-07-16 13:08:54,560 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-16 13:08:55,560 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-16 13:08:56,561 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-07-16 13:08:57,561 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-16 13:08:58,562 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-16 13:08:59,562 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-16 13:09:00,565 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-16 13:09:01,565 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-16 13:09:02,565 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-16 13:09:03,566 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-07-16 13:09:04,566 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-07-16 13:09:05,567 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,418
Average Time spent in bucket creation: 00:00:00,224
Average Time spent in key creation: 00:00:02,167
Average Time spent in key write: 00:00:01,024
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:05,961
***************************************************</msg>
<status status="PASS" starttime="20200716 13:09:11.096" endtime="20200716 13:09:11.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:11.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:11.097" endtime="20200716 13:09:11.098"></status>
</kw>
<msg timestamp="20200716 13:09:11.098" level="INFO">${result} = 2020-07-16 13:08:04,319 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:08:04,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:08:02.674" endtime="20200716 13:09:11.098"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:11.099" endtime="20200716 13:09:11.099"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:11.098" endtime="20200716 13:09:11.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:11.100" endtime="20200716 13:09:11.100"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:08:02.673" endtime="20200716 13:09:11.100" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200716 13:08:02.544" endtime="20200716 13:09:11.101"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200716 13:09:11.110" level="INFO">${random} = 39962</msg>
<status status="PASS" starttime="20200716 13:09:11.109" endtime="20200716 13:09:11.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200716 13:09:11.110" level="INFO">${prefix} = 39962</msg>
<status status="PASS" starttime="20200716 13:09:11.110" endtime="20200716 13:09:11.110"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:11.109" endtime="20200716 13:09:11.111"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:11.111" endtime="20200716 13:09:11.112"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:11.115" level="INFO">Running command 'ozone sh volume info o3://om:9862/39962-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:13.737" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:09:13.737" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39962-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 13:09:11.113" endtime="20200716 13:09:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:13.738" level="INFO">VOLUME_NOT_FOUND Volume 39962-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 13:09:13.738" endtime="20200716 13:09:13.739"></status>
</kw>
<msg timestamp="20200716 13:09:13.739" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39962-rpcwoport is not found</msg>
<status status="PASS" starttime="20200716 13:09:11.113" endtime="20200716 13:09:13.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:13.739" endtime="20200716 13:09:13.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:13.742" level="INFO">Running command 'ozone sh volume create o3://om:9862/39962-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:16.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:16.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:13.740" endtime="20200716 13:09:16.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:16.403" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:16.402" endtime="20200716 13:09:16.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:16.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:16.403" endtime="20200716 13:09:16.404"></status>
</kw>
<msg timestamp="20200716 13:09:16.404" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:09:13.740" endtime="20200716 13:09:16.404"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:16.404" endtime="20200716 13:09:16.405"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:16.408" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="39962-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:19.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:19.327" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 13:09:16.406" endtime="20200716 13:09:19.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:19.328" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:09:19.327" endtime="20200716 13:09:19.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:19.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:19.328" endtime="20200716 13:09:19.329"></status>
</kw>
<msg timestamp="20200716 13:09:19.330" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 13:09:16.405" endtime="20200716 13:09:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:19.330" endtime="20200716 13:09:19.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:19.334" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39962-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:22.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:22.285" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 13:09:19.331" endtime="20200716 13:09:22.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:22.286" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:09:22.285" endtime="20200716 13:09:22.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:22.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:22.286" endtime="20200716 13:09:22.287"></status>
</kw>
<msg timestamp="20200716 13:09:22.287" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:09:16.272Z",
  "modificationTime": "2020-07-16T13:09:16.272Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200716 13:09:19.331" endtime="20200716 13:09:22.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:22.287" endtime="20200716 13:09:22.288"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:22.290" level="INFO">Running command 'ozone sh volume update o3://om:9862/39962-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:25.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:25.141" level="INFO">${output} = {
  "metadata" : { },
  "name" : "39962-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:09:16.272Z",
  "modificationTime" : "2020-07-16T13:09:24.633Z",
  "acl...</msg>
<status status="PASS" starttime="20200716 13:09:22.288" endtime="20200716 13:09:25.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:25.143" level="INFO">{
  "metadata" : { },
  "name" : "39962-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:09:16.272Z",
  "modificationTime" : "2020-07-16T13:09:24.633Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 13:09:25.142" endtime="20200716 13:09:25.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:25.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:25.143" endtime="20200716 13:09:25.143"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:22.288" endtime="20200716 13:09:25.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:25.148" level="INFO">Running command 'ozone sh volume info o3://om:9862/39962-rpcwoport | jq -r '. | select(.name=="39962-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:28.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:28.019" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:09:25.145" endtime="20200716 13:09:28.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:28.020" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 13:09:28.019" endtime="20200716 13:09:28.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:28.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:28.020" endtime="20200716 13:09:28.021"></status>
</kw>
<msg timestamp="20200716 13:09:28.021" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:09:25.144" endtime="20200716 13:09:28.021"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:28.021" endtime="20200716 13:09:28.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:28.025" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39962-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:30.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:30.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:28.022" endtime="20200716 13:09:30.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:30.715" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:30.714" endtime="20200716 13:09:30.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:30.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:30.715" endtime="20200716 13:09:30.716"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:28.022" endtime="20200716 13:09:30.716"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:30.719" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39962-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:33.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:33.500" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 13:09:30.717" endtime="20200716 13:09:33.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:33.501" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 13:09:33.501" endtime="20200716 13:09:33.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:33.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:33.502" endtime="20200716 13:09:33.502"></status>
</kw>
<msg timestamp="20200716 13:09:33.502" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 13:09:30.716" endtime="20200716 13:09:33.502"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:33.503" endtime="20200716 13:09:33.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:33.507" level="INFO">Running command 'ozone sh bucket list o3://om:9862/39962-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:36.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:36.376" level="INFO">${output} = 39962-rpcwoport</msg>
<status status="PASS" starttime="20200716 13:09:33.504" endtime="20200716 13:09:36.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:36.378" level="INFO">39962-rpcwoport</msg>
<status status="PASS" starttime="20200716 13:09:36.376" endtime="20200716 13:09:36.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:36.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:36.378" endtime="20200716 13:09:36.378"></status>
</kw>
<msg timestamp="20200716 13:09:36.379" level="INFO">${result} = 39962-rpcwoport</msg>
<status status="PASS" starttime="20200716 13:09:33.503" endtime="20200716 13:09:36.379"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:36.379" endtime="20200716 13:09:36.379"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:36.383" level="INFO">Running command 'ozone sh key put o3://om:9862/39962-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:41.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:41.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:36.381" endtime="20200716 13:09:41.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:41.704" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:41.703" endtime="20200716 13:09:41.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:41.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:41.704" endtime="20200716 13:09:41.705"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:36.380" endtime="20200716 13:09:41.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:41.709" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:41.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:41.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:41.706" endtime="20200716 13:09:41.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:41.711" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:41.711" endtime="20200716 13:09:41.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:41.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:41.712" endtime="20200716 13:09:41.712"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:41.705" endtime="20200716 13:09:41.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:41.715" level="INFO">Running command 'ozone sh key get o3://om:9862/39962-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:46.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:46.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:41.713" endtime="20200716 13:09:46.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:46.326" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:46.325" endtime="20200716 13:09:46.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:46.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:46.326" endtime="20200716 13:09:46.327"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:41.713" endtime="20200716 13:09:46.327"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:46.330" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:46.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:46.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:46.328" endtime="20200716 13:09:46.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:46.335" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:46.334" endtime="20200716 13:09:46.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:46.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:46.335" endtime="20200716 13:09:46.336"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:46.327" endtime="20200716 13:09:46.336"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:46.339" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/39962-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:50.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:50.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:46.337" endtime="20200716 13:09:50.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:50.978" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:50.977" endtime="20200716 13:09:50.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:50.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:50.978" endtime="20200716 13:09:50.979"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:46.336" endtime="20200716 13:09:50.979"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:50.982" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:50.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:50.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:50.980" endtime="20200716 13:09:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:50.986" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:50.985" endtime="20200716 13:09:50.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:50.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:50.986" endtime="20200716 13:09:50.987"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:50.979" endtime="20200716 13:09:50.987"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:50.991" level="INFO">Running command 'ozone sh key get o3://om:9862/39962-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:55.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:55.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:50.988" endtime="20200716 13:09:55.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:55.441" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:55.440" endtime="20200716 13:09:55.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:55.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:55.441" endtime="20200716 13:09:55.442"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:50.987" endtime="20200716 13:09:55.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:55.446" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:55.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:55.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:55.443" endtime="20200716 13:09:55.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:55.448" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:09:55.447" endtime="20200716 13:09:55.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:55.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:55.448" endtime="20200716 13:09:55.449"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:55.442" endtime="20200716 13:09:55.449"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:55.453" level="INFO">Running command 'ozone sh key info o3://om:9862/39962-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:09:58.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:09:58.502" level="INFO">${output} = {
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:48.874Z",
  "modificationTime": "2020-07-16T13:09:50.597Z",...</msg>
<status status="PASS" starttime="20200716 13:09:55.450" endtime="20200716 13:09:58.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:09:58.503" level="INFO">{
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:48.874Z",
  "modificationTime": "2020-07-16T13:09:50.597Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523693350715520,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:09:58.502" endtime="20200716 13:09:58.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:09:58.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:09:58.503" endtime="20200716 13:09:58.504"></status>
</kw>
<msg timestamp="20200716 13:09:58.504" level="INFO">${result} = {
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:48.874Z",
  "modificationTime": "2020-07-16T13:09:50.597Z",...</msg>
<status status="PASS" starttime="20200716 13:09:55.449" endtime="20200716 13:09:58.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 13:09:58.504" endtime="20200716 13:09:58.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:09:58.509" level="INFO">Running command 'ozone sh key delete o3://om:9862/39962-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:01.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:01.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:09:58.505" endtime="20200716 13:10:01.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:01.284" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:01.282" endtime="20200716 13:10:01.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:01.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:01.284" endtime="20200716 13:10:01.284"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:58.505" endtime="20200716 13:10:01.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:01.288" level="INFO">Running command 'ozone sh key cp o3://om:9862/39962-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:06.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:06.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:01.285" endtime="20200716 13:10:06.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:06.206" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:06.206" endtime="20200716 13:10:06.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:06.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:06.207" endtime="20200716 13:10:06.207"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:01.285" endtime="20200716 13:10:06.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:06.212" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:06.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:06.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:06.208" endtime="20200716 13:10:06.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:06.214" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:06.213" endtime="20200716 13:10:06.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:06.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:06.214" endtime="20200716 13:10:06.215"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:06.208" endtime="20200716 13:10:06.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:06.218" level="INFO">Running command 'ozone sh key get o3://om:9862/39962-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:10.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:10.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:06.216" endtime="20200716 13:10:10.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:10.832" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:10.832" endtime="20200716 13:10:10.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:10.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:10.833" endtime="20200716 13:10:10.833"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:06.215" endtime="20200716 13:10:10.833"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:10.837" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:10.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:10.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:10.834" endtime="20200716 13:10:10.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:10.841" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:10.841" endtime="20200716 13:10:10.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:10.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:10.842" endtime="20200716 13:10:10.842"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:10.834" endtime="20200716 13:10:10.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:10.845" level="INFO">Running command 'ozone sh key delete o3://om:9862/39962-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:13.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:13.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:10.843" endtime="20200716 13:10:13.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:13.589" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:13.588" endtime="20200716 13:10:13.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:13.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:13.589" endtime="20200716 13:10:13.589"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:10.843" endtime="20200716 13:10:13.590"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:13.592" level="INFO">Running command 'ozone sh key get o3://om:9862/39962-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:16.150" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:10:16.150" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:10:13.590" endtime="20200716 13:10:16.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:16.152" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:10:16.151" endtime="20200716 13:10:16.152"></status>
</kw>
<msg timestamp="20200716 13:10:16.152" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:10:13.590" endtime="20200716 13:10:16.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:16.152" endtime="20200716 13:10:16.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:16.156" level="INFO">Running command 'ozone sh key get --force o3://om:9862/39962-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:20.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:20.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:16.154" endtime="20200716 13:10:20.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:20.666" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:20.665" endtime="20200716 13:10:20.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:20.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:20.666" endtime="20200716 13:10:20.666"></status>
</kw>
<msg timestamp="20200716 13:10:20.667" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:10:16.153" endtime="20200716 13:10:20.667"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:20.667" endtime="20200716 13:10:20.667"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:20.670" level="INFO">Running command 'ozone sh key info o3://om:9862/39962-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:23.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:23.705" level="INFO">${output} = {
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:39.347Z",
  "modificationTime": "2020-07-16T13:09:41.251Z",
  "re...</msg>
<status status="PASS" starttime="20200716 13:10:20.668" endtime="20200716 13:10:23.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:23.706" level="INFO">{
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:39.347Z",
  "modificationTime": "2020-07-16T13:09:41.251Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523692726419580,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:10:23.705" endtime="20200716 13:10:23.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:23.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:23.706" endtime="20200716 13:10:23.707"></status>
</kw>
<msg timestamp="20200716 13:10:23.707" level="INFO">${result} = {
  "volumeName": "39962-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:09:39.347Z",
  "modificationTime": "2020-07-16T13:09:41.251Z",
  "re...</msg>
<status status="PASS" starttime="20200716 13:10:20.667" endtime="20200716 13:10:23.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:23.707" endtime="20200716 13:10:23.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:23.711" level="INFO">Running command 'ozone sh key list o3://om:9862/39962-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:26.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:26.449" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 13:10:23.709" endtime="20200716 13:10:26.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:26.450" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 13:10:26.449" endtime="20200716 13:10:26.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:26.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:26.450" endtime="20200716 13:10:26.451"></status>
</kw>
<msg timestamp="20200716 13:10:26.451" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 13:10:23.708" endtime="20200716 13:10:26.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:26.451" endtime="20200716 13:10:26.452"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:26.454" level="INFO">Running command 'ozone sh key rename o3://om:9862/39962-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:29.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:29.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:26.453" endtime="20200716 13:10:29.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:29.136" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:29.135" endtime="20200716 13:10:29.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:29.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:29.137" endtime="20200716 13:10:29.137"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:26.452" endtime="20200716 13:10:29.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:29.142" level="INFO">Running command 'ozone sh key list o3://om:9862/39962-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:32.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:32.028" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 13:10:29.138" endtime="20200716 13:10:32.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:32.029" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 13:10:32.029" endtime="20200716 13:10:32.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:32.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:32.030" endtime="20200716 13:10:32.030"></status>
</kw>
<msg timestamp="20200716 13:10:32.030" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 13:10:29.138" endtime="20200716 13:10:32.030"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:32.031" endtime="20200716 13:10:32.031"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:32.034" level="INFO">Running command 'ozone sh key delete o3://om:9862/39962-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:34.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:34.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:32.032" endtime="20200716 13:10:34.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:34.737" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:34.736" endtime="20200716 13:10:34.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:34.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:34.737" endtime="20200716 13:10:34.738"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:32.031" endtime="20200716 13:10:34.738"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:36.380" endtime="20200716 13:10:34.738"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:36.379" endtime="20200716 13:10:34.738"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:34.741" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/39962-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:37.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:37.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:34.739" endtime="20200716 13:10:37.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:37.528" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:37.527" endtime="20200716 13:10:37.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:37.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:37.528" endtime="20200716 13:10:37.529"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:34.739" endtime="20200716 13:10:37.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:37.532" level="INFO">Running command 'ozone sh volume delete o3://om:9862/39962-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:40.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:40.317" level="INFO">${output} = Volume 39962-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200716 13:10:37.530" endtime="20200716 13:10:40.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:40.319" level="INFO">Volume 39962-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200716 13:10:40.319" endtime="20200716 13:10:40.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:40.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:40.320" endtime="20200716 13:10:40.320"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:37.529" endtime="20200716 13:10:40.320"></status>
</kw>
<status status="PASS" starttime="20200716 13:09:11.112" endtime="20200716 13:10:40.321"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:09:11.111" endtime="20200716 13:10:40.321" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:40.322" endtime="20200716 13:10:40.322"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:40.325" level="INFO">Running command 'ozone sh volume create o3://om:9862/39962-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:43.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:10:40.323" endtime="20200716 13:10:43.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:43.014" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:10:43.013" endtime="20200716 13:10:43.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:43.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:43.014" endtime="20200716 13:10:43.015"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:40.323" endtime="20200716 13:10:43.015"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:43.018" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39962-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:46.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:46.106" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:10:43.016" endtime="20200716 13:10:46.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:46.108" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:10:46.107" endtime="20200716 13:10:46.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:46.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:46.108" endtime="20200716 13:10:46.108"></status>
</kw>
<msg timestamp="20200716 13:10:46.109" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:10:43.015" endtime="20200716 13:10:46.109"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:46.109" endtime="20200716 13:10:46.110"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:46.114" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/39962-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:48.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:48.902" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 13:10:46.111" endtime="20200716 13:10:48.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:48.904" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 13:10:48.903" endtime="20200716 13:10:48.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:48.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:48.904" endtime="20200716 13:10:48.905"></status>
</kw>
<msg timestamp="20200716 13:10:48.906" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200716 13:10:46.110" endtime="20200716 13:10:48.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:48.909" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39962-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:51.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:51.850" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:10:48.906" endtime="20200716 13:10:51.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:51.852" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:10:51.851" endtime="20200716 13:10:51.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:51.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:51.852" endtime="20200716 13:10:51.853"></status>
</kw>
<msg timestamp="20200716 13:10:51.853" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:10:48.906" endtime="20200716 13:10:51.853"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:51.853" endtime="20200716 13:10:51.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:51.864" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/39962-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:54.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:54.564" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 13:10:51.855" endtime="20200716 13:10:54.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:54.566" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 13:10:54.565" endtime="20200716 13:10:54.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:54.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:54.566" endtime="20200716 13:10:54.567"></status>
</kw>
<msg timestamp="20200716 13:10:54.567" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200716 13:10:51.854" endtime="20200716 13:10:54.567"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:54.570" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39962-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:57.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:57.357" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:10:54.568" endtime="20200716 13:10:57.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:57.358" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:10:57.357" endtime="20200716 13:10:57.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:57.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:57.358" endtime="20200716 13:10:57.359"></status>
</kw>
<msg timestamp="20200716 13:10:57.359" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:10:54.567" endtime="20200716 13:10:57.359"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:10:57.359" endtime="20200716 13:10:57.360"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:57.364" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/39962-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:10:59.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:10:59.992" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:10:57.361" endtime="20200716 13:10:59.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:10:59.993" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:10:59.993" endtime="20200716 13:10:59.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:10:59.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:10:59.994" endtime="20200716 13:10:59.994"></status>
</kw>
<msg timestamp="20200716 13:10:59.995" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:10:57.360" endtime="20200716 13:10:59.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:10:59.998" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39962-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:02.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:02.762" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200716 13:10:59.996" endtime="20200716 13:11:02.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:02.763" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:02.762" endtime="20200716 13:11:02.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:02.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:02.763" endtime="20200716 13:11:02.764"></status>
</kw>
<msg timestamp="20200716 13:11:02.764" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200716 13:10:59.995" endtime="20200716 13:11:02.764"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:02.764" endtime="20200716 13:11:02.765"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:02.765" endtime="20200716 13:11:02.766"></status>
</kw>
<status status="PASS" starttime="20200716 13:10:40.323" endtime="20200716 13:11:02.766"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:10:40.321" endtime="20200716 13:11:02.766" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:02.768" endtime="20200716 13:11:02.768"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:02.772" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39962-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:05.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:05.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:11:02.770" endtime="20200716 13:11:05.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:05.459" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:11:05.458" endtime="20200716 13:11:05.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:05.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:05.459" endtime="20200716 13:11:05.460"></status>
</kw>
<status status="PASS" starttime="20200716 13:11:02.770" endtime="20200716 13:11:05.460"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:05.463" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39962-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:08.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:08.269" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:05.461" endtime="20200716 13:11:08.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:08.270" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:08.270" endtime="20200716 13:11:08.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:08.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:08.271" endtime="20200716 13:11:08.271"></status>
</kw>
<msg timestamp="20200716 13:11:08.272" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:05.461" endtime="20200716 13:11:08.272"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:08.272" endtime="20200716 13:11:08.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:08.276" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/39962-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:10.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:10.906" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 13:11:08.273" endtime="20200716 13:11:10.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:10.907" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 13:11:10.907" endtime="20200716 13:11:10.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:10.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:10.908" endtime="20200716 13:11:10.908"></status>
</kw>
<msg timestamp="20200716 13:11:10.909" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200716 13:11:08.273" endtime="20200716 13:11:10.909"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:10.913" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39962-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:13.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:13.618" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:10.910" endtime="20200716 13:11:13.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:13.619" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:13.618" endtime="20200716 13:11:13.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:13.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:13.619" endtime="20200716 13:11:13.620"></status>
</kw>
<msg timestamp="20200716 13:11:13.620" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:10.909" endtime="20200716 13:11:13.620"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:13.620" endtime="20200716 13:11:13.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:13.625" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/39962-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:16.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:16.209" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:13.622" endtime="20200716 13:11:16.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:16.210" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:16.209" endtime="20200716 13:11:16.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:16.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:16.210" endtime="20200716 13:11:16.210"></status>
</kw>
<msg timestamp="20200716 13:11:16.211" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:13.621" endtime="20200716 13:11:16.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:16.215" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39962-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:19.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:19.140" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:16.212" endtime="20200716 13:11:19.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:19.141" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:19.140" endtime="20200716 13:11:19.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:19.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:19.141" endtime="20200716 13:11:19.142"></status>
</kw>
<msg timestamp="20200716 13:11:19.142" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:16.211" endtime="20200716 13:11:19.142"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:19.142" endtime="20200716 13:11:19.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:19.146" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/39962-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:21.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:21.782" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:19.144" endtime="20200716 13:11:21.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:21.784" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:21.783" endtime="20200716 13:11:21.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:21.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:21.784" endtime="20200716 13:11:21.785"></status>
</kw>
<msg timestamp="20200716 13:11:21.785" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:19.143" endtime="20200716 13:11:21.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:21.788" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39962-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:24.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:24.672" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 13:11:21.786" endtime="20200716 13:11:24.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:24.674" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:24.673" endtime="20200716 13:11:24.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:24.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:24.674" endtime="20200716 13:11:24.675"></status>
</kw>
<msg timestamp="20200716 13:11:24.676" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 13:11:21.786" endtime="20200716 13:11:24.676"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:24.676" endtime="20200716 13:11:24.676"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:24.677" endtime="20200716 13:11:24.677"></status>
</kw>
<status status="PASS" starttime="20200716 13:11:02.768" endtime="20200716 13:11:24.677"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:11:02.767" endtime="20200716 13:11:24.678" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:24.679" endtime="20200716 13:11:24.679"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:24.684" level="INFO">Running command 'ozone sh key put o3://om:9862/39962-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:29.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:29.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:11:24.681" endtime="20200716 13:11:29.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:29.400" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:11:29.399" endtime="20200716 13:11:29.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:29.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:29.400" endtime="20200716 13:11:29.401"></status>
</kw>
<status status="PASS" starttime="20200716 13:11:24.680" endtime="20200716 13:11:29.401"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:29.404" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39962-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:32.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:32.335" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:29.402" endtime="20200716 13:11:32.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:32.336" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:32.336" endtime="20200716 13:11:32.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:32.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:32.337" endtime="20200716 13:11:32.337"></status>
</kw>
<msg timestamp="20200716 13:11:32.337" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:29.402" endtime="20200716 13:11:32.337"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:32.338" endtime="20200716 13:11:32.338"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:32.341" level="INFO">Running command 'ozone sh key addacl o3://om:9862/39962-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:34.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:34.885" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 13:11:32.339" endtime="20200716 13:11:34.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:34.886" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 13:11:34.885" endtime="20200716 13:11:34.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:34.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:34.886" endtime="20200716 13:11:34.887"></status>
</kw>
<msg timestamp="20200716 13:11:34.887" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200716 13:11:32.338" endtime="20200716 13:11:34.887"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:34.891" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39962-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:37.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:37.736" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:34.888" endtime="20200716 13:11:37.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:37.742" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:37.737" endtime="20200716 13:11:37.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:37.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:37.743" endtime="20200716 13:11:37.743"></status>
</kw>
<msg timestamp="20200716 13:11:37.743" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:34.887" endtime="20200716 13:11:37.743"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:37.743" endtime="20200716 13:11:37.745"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:37.747" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/39962-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:40.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:40.412" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:37.745" endtime="20200716 13:11:40.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:40.413" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:40.412" endtime="20200716 13:11:40.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:40.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:40.413" endtime="20200716 13:11:40.414"></status>
</kw>
<msg timestamp="20200716 13:11:40.414" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200716 13:11:37.745" endtime="20200716 13:11:40.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:40.417" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39962-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:43.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:43.226" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:40.415" endtime="20200716 13:11:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:43.227" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:43.226" endtime="20200716 13:11:43.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:43.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:43.227" endtime="20200716 13:11:43.228"></status>
</kw>
<msg timestamp="20200716 13:11:43.228" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200716 13:11:40.414" endtime="20200716 13:11:43.228"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:43.228" endtime="20200716 13:11:43.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:43.232" level="INFO">Running command 'ozone sh key setacl o3://om:9862/39962-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:45.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:45.678" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:43.230" endtime="20200716 13:11:45.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:45.679" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:45.678" endtime="20200716 13:11:45.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:45.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:45.679" endtime="20200716 13:11:45.680"></status>
</kw>
<msg timestamp="20200716 13:11:45.680" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200716 13:11:43.229" endtime="20200716 13:11:45.680"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:45.684" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39962-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:48.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:48.963" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 13:11:45.681" endtime="20200716 13:11:48.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:48.964" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200716 13:11:48.963" endtime="20200716 13:11:48.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:48.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:48.964" endtime="20200716 13:11:48.965"></status>
</kw>
<msg timestamp="20200716 13:11:48.965" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200716 13:11:45.680" endtime="20200716 13:11:48.965"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:48.965" endtime="20200716 13:11:48.966"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:48.966" endtime="20200716 13:11:48.967"></status>
</kw>
<status status="PASS" starttime="20200716 13:11:24.680" endtime="20200716 13:11:48.967"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:11:24.678" endtime="20200716 13:11:48.967" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:48.969" endtime="20200716 13:11:48.969"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:48.973" level="INFO">Running command 'ozone sh volume info o3:///39962-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:51.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:11:51.843" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39962-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 13:11:48.971" endtime="20200716 13:11:51.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:51.844" level="INFO">VOLUME_NOT_FOUND Volume 39962-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 13:11:51.843" endtime="20200716 13:11:51.844"></status>
</kw>
<msg timestamp="20200716 13:11:51.844" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39962-rpcwport is not found</msg>
<status status="PASS" starttime="20200716 13:11:48.970" endtime="20200716 13:11:51.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:51.845" endtime="20200716 13:11:51.845"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:51.848" level="INFO">Running command 'ozone sh volume create o3:///39962-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:54.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:54.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:11:51.846" endtime="20200716 13:11:54.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:54.415" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:11:54.414" endtime="20200716 13:11:54.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:54.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:54.415" endtime="20200716 13:11:54.416"></status>
</kw>
<msg timestamp="20200716 13:11:54.416" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:11:51.845" endtime="20200716 13:11:54.416"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:54.416" endtime="20200716 13:11:54.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:54.421" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="39962-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:11:57.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:11:57.296" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 13:11:54.418" endtime="20200716 13:11:57.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:11:57.297" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:11:57.297" endtime="20200716 13:11:57.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:11:57.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:11:57.298" endtime="20200716 13:11:57.298"></status>
</kw>
<msg timestamp="20200716 13:11:57.299" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 13:11:54.417" endtime="20200716 13:11:57.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:11:57.299" endtime="20200716 13:11:57.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:11:57.302" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39962-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:00.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:00.276" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 13:11:57.300" endtime="20200716 13:12:00.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:00.277" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:12:00.277" endtime="20200716 13:12:00.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:00.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:00.278" endtime="20200716 13:12:00.278"></status>
</kw>
<msg timestamp="20200716 13:12:00.278" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:11:54.305Z",
  "modificationTime": "2020-07-16T13:11:54.305Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200716 13:11:57.299" endtime="20200716 13:12:00.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:00.279" endtime="20200716 13:12:00.279"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:00.283" level="INFO">Running command 'ozone sh volume update o3:///39962-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:03.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:03.437" level="INFO">${output} = {
  "metadata" : { },
  "name" : "39962-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:11:54.305Z",
  "modificationTime" : "2020-07-16T13:12:03.002Z",
  "acls...</msg>
<status status="PASS" starttime="20200716 13:12:00.280" endtime="20200716 13:12:03.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:03.439" level="INFO">{
  "metadata" : { },
  "name" : "39962-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:11:54.305Z",
  "modificationTime" : "2020-07-16T13:12:03.002Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 13:12:03.438" endtime="20200716 13:12:03.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:03.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:03.439" endtime="20200716 13:12:03.439"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:00.279" endtime="20200716 13:12:03.440"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:03.443" level="INFO">Running command 'ozone sh volume info o3:///39962-rpcwport | jq -r '. | select(.name=="39962-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:06.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:06.219" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:12:03.441" endtime="20200716 13:12:06.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:06.221" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 13:12:06.220" endtime="20200716 13:12:06.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:06.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:06.221" endtime="20200716 13:12:06.221"></status>
</kw>
<msg timestamp="20200716 13:12:06.222" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:12:03.440" endtime="20200716 13:12:06.222"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:06.222" endtime="20200716 13:12:06.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:06.227" level="INFO">Running command 'ozone sh bucket create o3:///39962-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:08.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:08.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:06.224" endtime="20200716 13:12:08.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:08.878" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:08.877" endtime="20200716 13:12:08.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:08.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:08.878" endtime="20200716 13:12:08.878"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:06.223" endtime="20200716 13:12:08.879"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:08.883" level="INFO">Running command 'ozone sh bucket info o3:///39962-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:11.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:11.855" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 13:12:08.880" endtime="20200716 13:12:11.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:11.856" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 13:12:11.856" endtime="20200716 13:12:11.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:11.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:11.857" endtime="20200716 13:12:11.857"></status>
</kw>
<msg timestamp="20200716 13:12:11.858" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 13:12:08.879" endtime="20200716 13:12:11.858"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:11.858" endtime="20200716 13:12:11.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:11.862" level="INFO">Running command 'ozone sh bucket list o3:///39962-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:14.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:14.812" level="INFO">${output} = 39962-rpcwport</msg>
<status status="PASS" starttime="20200716 13:12:11.859" endtime="20200716 13:12:14.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:14.813" level="INFO">39962-rpcwport</msg>
<status status="PASS" starttime="20200716 13:12:14.813" endtime="20200716 13:12:14.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:14.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:14.813" endtime="20200716 13:12:14.814"></status>
</kw>
<msg timestamp="20200716 13:12:14.814" level="INFO">${result} = 39962-rpcwport</msg>
<status status="PASS" starttime="20200716 13:12:11.858" endtime="20200716 13:12:14.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:14.814" endtime="20200716 13:12:14.815"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:14.819" level="INFO">Running command 'ozone sh key put o3:///39962-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:19.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:19.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:14.817" endtime="20200716 13:12:19.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:19.696" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:19.695" endtime="20200716 13:12:19.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:19.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:19.696" endtime="20200716 13:12:19.697"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:14.816" endtime="20200716 13:12:19.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:19.700" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:19.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:19.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:19.698" endtime="20200716 13:12:19.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:19.704" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:19.703" endtime="20200716 13:12:19.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:19.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:19.704" endtime="20200716 13:12:19.704"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:19.697" endtime="20200716 13:12:19.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:19.707" level="INFO">Running command 'ozone sh key get o3:///39962-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:24.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:24.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:19.705" endtime="20200716 13:12:24.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:24.224" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:24.223" endtime="20200716 13:12:24.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:24.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:24.224" endtime="20200716 13:12:24.225"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:19.705" endtime="20200716 13:12:24.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:24.228" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:24.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:24.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:24.226" endtime="20200716 13:12:24.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:24.231" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:24.230" endtime="20200716 13:12:24.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:24.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:24.231" endtime="20200716 13:12:24.232"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:24.225" endtime="20200716 13:12:24.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:24.234" level="INFO">Running command 'ozone sh key put -t RATIS o3:///39962-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:29.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:29.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:24.233" endtime="20200716 13:12:29.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:29.018" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:29.017" endtime="20200716 13:12:29.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:29.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:29.018" endtime="20200716 13:12:29.019"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:24.232" endtime="20200716 13:12:29.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:29.023" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:29.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:29.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:29.020" endtime="20200716 13:12:29.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:29.026" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:29.025" endtime="20200716 13:12:29.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:29.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:29.026" endtime="20200716 13:12:29.026"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:29.019" endtime="20200716 13:12:29.027"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:29.031" level="INFO">Running command 'ozone sh key get o3:///39962-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:33.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:33.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:29.028" endtime="20200716 13:12:33.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:33.639" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:33.638" endtime="20200716 13:12:33.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:33.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:33.639" endtime="20200716 13:12:33.640"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:29.027" endtime="20200716 13:12:33.640"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:33.644" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:33.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:33.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:33.641" endtime="20200716 13:12:33.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:33.646" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:33.646" endtime="20200716 13:12:33.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:33.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:33.646" endtime="20200716 13:12:33.647"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:33.640" endtime="20200716 13:12:33.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:33.652" level="INFO">Running command 'ozone sh key info o3:///39962-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:36.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:36.693" level="INFO">${output} = {
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:26.869Z",
  "modificationTime": "2020-07-16T13:12:28.624Z",
...</msg>
<status status="PASS" starttime="20200716 13:12:33.649" endtime="20200716 13:12:36.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:36.694" level="INFO">{
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:26.869Z",
  "modificationTime": "2020-07-16T13:12:28.624Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523703705141380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:12:36.693" endtime="20200716 13:12:36.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:36.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:36.694" endtime="20200716 13:12:36.695"></status>
</kw>
<msg timestamp="20200716 13:12:36.695" level="INFO">${result} = {
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:26.869Z",
  "modificationTime": "2020-07-16T13:12:28.624Z",
...</msg>
<status status="PASS" starttime="20200716 13:12:33.648" endtime="20200716 13:12:36.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:36.695" endtime="20200716 13:12:36.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:36.698" level="INFO">Running command 'ozone sh key delete o3:///39962-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:39.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:39.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:36.696" endtime="20200716 13:12:39.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:39.431" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:39.430" endtime="20200716 13:12:39.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:39.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:39.431" endtime="20200716 13:12:39.432"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:36.696" endtime="20200716 13:12:39.432"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:39.436" level="INFO">Running command 'ozone sh key cp o3:///39962-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:44.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:44.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:39.433" endtime="20200716 13:12:44.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:44.611" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:44.610" endtime="20200716 13:12:44.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:44.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:44.611" endtime="20200716 13:12:44.612"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:39.432" endtime="20200716 13:12:44.612"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:44.615" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:44.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:44.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:44.613" endtime="20200716 13:12:44.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:44.618" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:44.617" endtime="20200716 13:12:44.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:44.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:44.618" endtime="20200716 13:12:44.619"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:44.612" endtime="20200716 13:12:44.619"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:44.621" level="INFO">Running command 'ozone sh key get o3:///39962-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:49.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:49.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:44.620" endtime="20200716 13:12:49.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:49.306" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:49.305" endtime="20200716 13:12:49.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:49.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:49.306" endtime="20200716 13:12:49.307"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:44.619" endtime="20200716 13:12:49.307"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:49.310" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:49.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:49.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:49.308" endtime="20200716 13:12:49.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:49.314" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:49.313" endtime="20200716 13:12:49.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:49.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:49.314" endtime="20200716 13:12:49.314"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:49.307" endtime="20200716 13:12:49.315"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:49.318" level="INFO">Running command 'ozone sh key delete o3:///39962-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:52.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:52.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:49.315" endtime="20200716 13:12:52.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:52.128" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:52.127" endtime="20200716 13:12:52.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:52.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:52.128" endtime="20200716 13:12:52.129"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:49.315" endtime="20200716 13:12:52.129"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:52.132" level="INFO">Running command 'ozone sh key get o3:///39962-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:54.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:12:54.734" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:12:52.131" endtime="20200716 13:12:54.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:54.736" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:12:54.735" endtime="20200716 13:12:54.736"></status>
</kw>
<msg timestamp="20200716 13:12:54.736" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:12:52.129" endtime="20200716 13:12:54.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:54.736" endtime="20200716 13:12:54.737"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:54.740" level="INFO">Running command 'ozone sh key get --force o3:///39962-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:12:59.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:12:59.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:12:54.737" endtime="20200716 13:12:59.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:12:59.228" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:12:59.227" endtime="20200716 13:12:59.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:12:59.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:12:59.229" endtime="20200716 13:12:59.229"></status>
</kw>
<msg timestamp="20200716 13:12:59.229" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:12:54.737" endtime="20200716 13:12:59.229"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:12:59.230" endtime="20200716 13:12:59.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:12:59.233" level="INFO">Running command 'ozone sh key info o3:///39962-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:02.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:02.027" level="INFO">${output} = {
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:17.530Z",
  "modificationTime": "2020-07-16T13:12:19.199Z",
  "rep...</msg>
<status status="PASS" starttime="20200716 13:12:59.231" endtime="20200716 13:13:02.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:02.028" level="INFO">{
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:17.530Z",
  "modificationTime": "2020-07-16T13:12:19.199Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523703092969600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:13:02.027" endtime="20200716 13:13:02.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:02.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:02.028" endtime="20200716 13:13:02.029"></status>
</kw>
<msg timestamp="20200716 13:13:02.029" level="INFO">${result} = {
  "volumeName": "39962-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:12:17.530Z",
  "modificationTime": "2020-07-16T13:12:19.199Z",
  "rep...</msg>
<status status="PASS" starttime="20200716 13:12:59.230" endtime="20200716 13:13:02.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:02.029" endtime="20200716 13:13:02.030"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:02.034" level="INFO">Running command 'ozone sh key list o3:///39962-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:04.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:04.870" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 13:13:02.031" endtime="20200716 13:13:04.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:04.871" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 13:13:04.870" endtime="20200716 13:13:04.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:04.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:04.871" endtime="20200716 13:13:04.872"></status>
</kw>
<msg timestamp="20200716 13:13:04.872" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 13:13:02.030" endtime="20200716 13:13:04.872"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:04.872" endtime="20200716 13:13:04.873"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:04.875" level="INFO">Running command 'ozone sh key rename o3:///39962-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:07.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:07.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:04.873" endtime="20200716 13:13:07.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:07.413" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:07.412" endtime="20200716 13:13:07.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:07.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:07.413" endtime="20200716 13:13:07.414"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:04.873" endtime="20200716 13:13:07.414"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:07.418" level="INFO">Running command 'ozone sh key list o3:///39962-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:10.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:10.460" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 13:13:07.415" endtime="20200716 13:13:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:10.461" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 13:13:10.460" endtime="20200716 13:13:10.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:10.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:10.461" endtime="20200716 13:13:10.462"></status>
</kw>
<msg timestamp="20200716 13:13:10.462" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 13:13:07.414" endtime="20200716 13:13:10.462"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:10.463" endtime="20200716 13:13:10.463"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:10.470" level="INFO">Running command 'ozone sh key delete o3:///39962-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:13.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:13.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:10.464" endtime="20200716 13:13:13.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:13.268" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:13.267" endtime="20200716 13:13:13.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:13.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:13.268" endtime="20200716 13:13:13.269"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:10.464" endtime="20200716 13:13:13.269"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:14.815" endtime="20200716 13:13:13.269"></status>
</kw>
<status status="PASS" starttime="20200716 13:12:14.815" endtime="20200716 13:13:13.269"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:13.273" level="INFO">Running command 'ozone sh bucket delete o3:///39962-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:15.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:15.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:13.270" endtime="20200716 13:13:15.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:15.966" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:15.965" endtime="20200716 13:13:15.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:15.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:15.966" endtime="20200716 13:13:15.966"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:13.269" endtime="20200716 13:13:15.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:15.971" level="INFO">Running command 'ozone sh volume delete o3:///39962-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:18.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:18.670" level="INFO">${output} = Volume 39962-rpcwport is deleted</msg>
<status status="PASS" starttime="20200716 13:13:15.968" endtime="20200716 13:13:18.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:18.671" level="INFO">Volume 39962-rpcwport is deleted</msg>
<status status="PASS" starttime="20200716 13:13:18.670" endtime="20200716 13:13:18.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:18.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:18.671" endtime="20200716 13:13:18.672"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:15.967" endtime="20200716 13:13:18.672"></status>
</kw>
<status status="PASS" starttime="20200716 13:11:48.969" endtime="20200716 13:13:18.672"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:11:48.968" endtime="20200716 13:13:18.673" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:18.674" endtime="20200716 13:13:18.674"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:18.680" level="INFO">Running command 'ozone sh volume info /39962-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:21.299" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:13:21.299" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39962-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 13:13:18.676" endtime="20200716 13:13:21.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:21.300" level="INFO">VOLUME_NOT_FOUND Volume 39962-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 13:13:21.300" endtime="20200716 13:13:21.301"></status>
</kw>
<msg timestamp="20200716 13:13:21.301" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39962-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200716 13:13:18.675" endtime="20200716 13:13:21.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:21.301" endtime="20200716 13:13:21.302"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:21.305" level="INFO">Running command 'ozone sh volume create /39962-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:23.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:23.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:21.302" endtime="20200716 13:13:23.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:23.943" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:23.942" endtime="20200716 13:13:23.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:23.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:23.943" endtime="20200716 13:13:23.944"></status>
</kw>
<msg timestamp="20200716 13:13:23.944" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:13:21.302" endtime="20200716 13:13:23.944"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:23.944" endtime="20200716 13:13:23.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:23.948" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="39962-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:27.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:27.727" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 13:13:23.946" endtime="20200716 13:13:27.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:27.728" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:13:27.727" endtime="20200716 13:13:27.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:27.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:27.729" endtime="20200716 13:13:27.729"></status>
</kw>
<msg timestamp="20200716 13:13:27.730" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 13:13:23.945" endtime="20200716 13:13:27.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:27.730" endtime="20200716 13:13:27.730"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:27.733" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39962-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:30.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:30.933" level="INFO">${output} = {
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 13:13:27.731" endtime="20200716 13:13:30.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:30.934" level="INFO">{
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200716 13:13:30.933" endtime="20200716 13:13:30.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:30.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:30.935" endtime="20200716 13:13:30.935"></status>
</kw>
<msg timestamp="20200716 13:13:30.935" level="INFO">${result} = {
  "metadata": {},
  "name": "39962-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-16T13:13:23.760Z",
  "modificationTime": "2020-07-16T13:13:23.760Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200716 13:13:27.730" endtime="20200716 13:13:30.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:30.936" endtime="20200716 13:13:30.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:30.940" level="INFO">Running command 'ozone sh volume update /39962-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:33.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:33.920" level="INFO">${output} = {
  "metadata" : { },
  "name" : "39962-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:13:23.760Z",
  "modificationTime" : "2020-07-16T13:13:33.569Z",
  "a...</msg>
<status status="PASS" starttime="20200716 13:13:30.937" endtime="20200716 13:13:33.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:33.922" level="INFO">{
  "metadata" : { },
  "name" : "39962-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-16T13:13:23.760Z",
  "modificationTime" : "2020-07-16T13:13:33.569Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200716 13:13:33.921" endtime="20200716 13:13:33.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:33.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:33.922" endtime="20200716 13:13:33.923"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:30.936" endtime="20200716 13:13:33.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:33.926" level="INFO">Running command 'ozone sh volume info /39962-rpcwoscheme | jq -r '. | select(.name=="39962-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:36.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:36.770" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:13:33.924" endtime="20200716 13:13:36.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:36.771" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200716 13:13:36.770" endtime="20200716 13:13:36.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:36.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:36.771" endtime="20200716 13:13:36.772"></status>
</kw>
<msg timestamp="20200716 13:13:36.772" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200716 13:13:33.923" endtime="20200716 13:13:36.772"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:36.772" endtime="20200716 13:13:36.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:36.777" level="INFO">Running command 'ozone sh bucket create /39962-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:39.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:39.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:36.774" endtime="20200716 13:13:39.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:39.530" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:39.529" endtime="20200716 13:13:39.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:39.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:39.530" endtime="20200716 13:13:39.531"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:36.773" endtime="20200716 13:13:39.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:39.534" level="INFO">Running command 'ozone sh bucket info /39962-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:42.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:42.558" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200716 13:13:39.532" endtime="20200716 13:13:42.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:42.560" level="INFO">DISK</msg>
<status status="PASS" starttime="20200716 13:13:42.559" endtime="20200716 13:13:42.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:42.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:42.560" endtime="20200716 13:13:42.560"></status>
</kw>
<msg timestamp="20200716 13:13:42.561" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200716 13:13:39.531" endtime="20200716 13:13:42.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:42.561" endtime="20200716 13:13:42.561"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:42.565" level="INFO">Running command 'ozone sh bucket list /39962-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:45.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:45.574" level="INFO">${output} = 39962-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 13:13:42.562" endtime="20200716 13:13:45.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:45.575" level="INFO">39962-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 13:13:45.574" endtime="20200716 13:13:45.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:45.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:45.575" endtime="20200716 13:13:45.576"></status>
</kw>
<msg timestamp="20200716 13:13:45.576" level="INFO">${result} = 39962-rpcwoscheme</msg>
<status status="PASS" starttime="20200716 13:13:42.562" endtime="20200716 13:13:45.576"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200716 13:13:45.576" endtime="20200716 13:13:45.577"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:45.582" level="INFO">Running command 'ozone sh key put /39962-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:50.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:50.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:45.579" endtime="20200716 13:13:50.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:50.311" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:50.310" endtime="20200716 13:13:50.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:50.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:50.311" endtime="20200716 13:13:50.312"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:45.578" endtime="20200716 13:13:50.312"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:50.315" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:50.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:50.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:50.313" endtime="20200716 13:13:50.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:50.318" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:50.317" endtime="20200716 13:13:50.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:50.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:50.318" endtime="20200716 13:13:50.319"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:50.312" endtime="20200716 13:13:50.319"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:50.321" level="INFO">Running command 'ozone sh key get /39962-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:54.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:54.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:50.320" endtime="20200716 13:13:54.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:54.693" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:54.693" endtime="20200716 13:13:54.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:54.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:54.694" endtime="20200716 13:13:54.694"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:50.319" endtime="20200716 13:13:54.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:54.697" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:54.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:54.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:54.695" endtime="20200716 13:13:54.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:54.701" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:54.700" endtime="20200716 13:13:54.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:54.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:54.701" endtime="20200716 13:13:54.702"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:54.695" endtime="20200716 13:13:54.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:54.706" level="INFO">Running command 'ozone sh key put -t RATIS /39962-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:59.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:59.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:54.703" endtime="20200716 13:13:59.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:59.762" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:59.762" endtime="20200716 13:13:59.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:59.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:59.763" endtime="20200716 13:13:59.763"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:54.702" endtime="20200716 13:13:59.764"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:59.767" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:13:59.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:13:59.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:59.764" endtime="20200716 13:13:59.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:13:59.770" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:13:59.769" endtime="20200716 13:13:59.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:13:59.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:13:59.770" endtime="20200716 13:13:59.771"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:59.764" endtime="20200716 13:13:59.771"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:13:59.774" level="INFO">Running command 'ozone sh key get /39962-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:04.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:04.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:13:59.772" endtime="20200716 13:14:04.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:04.467" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:04.466" endtime="20200716 13:14:04.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:04.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:04.467" endtime="20200716 13:14:04.468"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:59.771" endtime="20200716 13:14:04.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:04.471" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:04.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:04.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:04.469" endtime="20200716 13:14:04.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:04.475" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:04.474" endtime="20200716 13:14:04.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:04.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:04.476" endtime="20200716 13:14:04.476"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:04.468" endtime="20200716 13:14:04.476"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:04.480" level="INFO">Running command 'ozone sh key info /39962-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:07.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:07.511" level="INFO">${output} = {
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:57.367Z",
  "modificationTime": "2020-07-16T13:13:59.256Z...</msg>
<status status="PASS" starttime="20200716 13:14:04.477" endtime="20200716 13:14:07.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:07.512" level="INFO">{
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:57.367Z",
  "modificationTime": "2020-07-16T13:13:59.256Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523709636018300,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:14:07.512" endtime="20200716 13:14:07.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:07.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:07.513" endtime="20200716 13:14:07.513"></status>
</kw>
<msg timestamp="20200716 13:14:07.513" level="INFO">${result} = {
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:57.367Z",
  "modificationTime": "2020-07-16T13:13:59.256Z...</msg>
<status status="PASS" starttime="20200716 13:14:04.477" endtime="20200716 13:14:07.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:07.514" endtime="20200716 13:14:07.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:07.518" level="INFO">Running command 'ozone sh key delete /39962-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:10.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:10.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:07.515" endtime="20200716 13:14:10.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:10.149" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:10.148" endtime="20200716 13:14:10.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:10.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:10.149" endtime="20200716 13:14:10.150"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:07.514" endtime="20200716 13:14:10.150"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:10.153" level="INFO">Running command 'ozone sh key cp /39962-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:14.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:14.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:10.151" endtime="20200716 13:14:14.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:14.969" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:14.968" endtime="20200716 13:14:14.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:14.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:14.969" endtime="20200716 13:14:14.969"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:10.150" endtime="20200716 13:14:14.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:14.973" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:14.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:14.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:14.971" endtime="20200716 13:14:14.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:14.977" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:14.976" endtime="20200716 13:14:14.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:14.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:14.977" endtime="20200716 13:14:14.978"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:14.970" endtime="20200716 13:14:14.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:14.981" level="INFO">Running command 'ozone sh key get /39962-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:19.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:19.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:14.979" endtime="20200716 13:14:19.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:19.511" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:19.510" endtime="20200716 13:14:19.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:19.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:19.511" endtime="20200716 13:14:19.512"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:14.979" endtime="20200716 13:14:19.512"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:19.516" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:19.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:19.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:19.513" endtime="20200716 13:14:19.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:19.519" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:19.518" endtime="20200716 13:14:19.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:19.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:19.519" endtime="20200716 13:14:19.520"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:19.513" endtime="20200716 13:14:19.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:19.523" level="INFO">Running command 'ozone sh key delete /39962-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:22.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:22.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:19.521" endtime="20200716 13:14:22.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:22.189" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:22.188" endtime="20200716 13:14:22.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:22.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:22.189" endtime="20200716 13:14:22.190"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:19.520" endtime="20200716 13:14:22.190"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:22.195" level="INFO">Running command 'ozone sh key get /39962-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:24.905" level="INFO">${rc} = 255</msg>
<msg timestamp="20200716 13:14:24.905" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:14:22.191" endtime="20200716 13:14:24.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:24.907" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:14:24.906" endtime="20200716 13:14:24.907"></status>
</kw>
<msg timestamp="20200716 13:14:24.907" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200716 13:14:22.190" endtime="20200716 13:14:24.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:24.907" endtime="20200716 13:14:24.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:24.910" level="INFO">Running command 'ozone sh key get --force /39962-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:29.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:29.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:24.908" endtime="20200716 13:14:29.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:29.489" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:29.489" endtime="20200716 13:14:29.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:29.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:29.490" endtime="20200716 13:14:29.490"></status>
</kw>
<msg timestamp="20200716 13:14:29.491" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200716 13:14:24.908" endtime="20200716 13:14:29.491"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:29.491" endtime="20200716 13:14:29.491"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:29.494" level="INFO">Running command 'ozone sh key info /39962-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:32.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:32.523" level="INFO">${output} = {
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:48.174Z",
  "modificationTime": "2020-07-16T13:13:49.913Z",
  "...</msg>
<status status="PASS" starttime="20200716 13:14:29.492" endtime="20200716 13:14:32.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:32.524" level="INFO">{
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:48.174Z",
  "modificationTime": "2020-07-16T13:13:49.913Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104523709033545860,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200716 13:14:32.523" endtime="20200716 13:14:32.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:32.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:32.524" endtime="20200716 13:14:32.525"></status>
</kw>
<msg timestamp="20200716 13:14:32.525" level="INFO">${result} = {
  "volumeName": "39962-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-16T13:13:48.174Z",
  "modificationTime": "2020-07-16T13:13:49.913Z",
  "...</msg>
<status status="PASS" starttime="20200716 13:14:29.492" endtime="20200716 13:14:32.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:32.525" endtime="20200716 13:14:32.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:32.530" level="INFO">Running command 'ozone sh key list /39962-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:35.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:35.295" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200716 13:14:32.527" endtime="20200716 13:14:35.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:35.296" level="INFO">key1</msg>
<status status="PASS" starttime="20200716 13:14:35.296" endtime="20200716 13:14:35.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:35.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:35.297" endtime="20200716 13:14:35.297"></status>
</kw>
<msg timestamp="20200716 13:14:35.297" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200716 13:14:32.526" endtime="20200716 13:14:35.297"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:35.298" endtime="20200716 13:14:35.298"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:35.301" level="INFO">Running command 'ozone sh key rename /39962-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:38.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:38.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:35.299" endtime="20200716 13:14:38.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:38.116" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:38.115" endtime="20200716 13:14:38.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:38.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:38.117" endtime="20200716 13:14:38.117"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:35.298" endtime="20200716 13:14:38.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:38.120" level="INFO">Running command 'ozone sh key list /39962-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:41.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:41.196" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200716 13:14:38.118" endtime="20200716 13:14:41.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:41.197" level="INFO">key2</msg>
<status status="PASS" starttime="20200716 13:14:41.197" endtime="20200716 13:14:41.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:41.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:41.198" endtime="20200716 13:14:41.198"></status>
</kw>
<msg timestamp="20200716 13:14:41.198" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200716 13:14:38.118" endtime="20200716 13:14:41.198"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200716 13:14:41.199" endtime="20200716 13:14:41.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:41.202" level="INFO">Running command 'ozone sh key delete /39962-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:43.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:43.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:41.200" endtime="20200716 13:14:43.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:43.863" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:43.862" endtime="20200716 13:14:43.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:43.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:43.863" endtime="20200716 13:14:43.863"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:41.199" endtime="20200716 13:14:43.864"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:45.577" endtime="20200716 13:14:43.864"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:45.577" endtime="20200716 13:14:43.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:43.867" level="INFO">Running command 'ozone sh bucket delete /39962-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:46.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:46.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:14:43.865" endtime="20200716 13:14:46.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:46.498" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:14:46.497" endtime="20200716 13:14:46.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:46.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:46.498" endtime="20200716 13:14:46.498"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:43.864" endtime="20200716 13:14:46.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:14:46.503" level="INFO">Running command 'ozone sh volume delete /39962-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:14:49.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:14:49.039" level="INFO">${output} = Volume 39962-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200716 13:14:46.499" endtime="20200716 13:14:49.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:14:49.040" level="INFO">Volume 39962-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200716 13:14:49.040" endtime="20200716 13:14:49.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:14:49.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:14:49.041" endtime="20200716 13:14:49.041"></status>
</kw>
<status status="PASS" starttime="20200716 13:14:46.499" endtime="20200716 13:14:49.041"></status>
</kw>
<status status="PASS" starttime="20200716 13:13:18.675" endtime="20200716 13:14:49.042"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200716 13:13:18.673" endtime="20200716 13:14:49.042" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200716 13:09:11.103" endtime="20200716 13:14:49.044"></status>
</suite>
<status status="PASS" starttime="20200716 13:08:02.510" endtime="20200716 13:14:49.049"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
