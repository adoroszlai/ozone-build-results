<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 13:59:08.139" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:08.202" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:08.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:08.204" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:08.197" endtime="20200716 13:59:08.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:08.205" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:08.204" endtime="20200716 13:59:08.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:08.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:08.205" endtime="20200716 13:59:08.206"></status>
</kw>
<msg timestamp="20200716 13:59:08.206" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:08.197" endtime="20200716 13:59:08.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:08.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:08.206" endtime="20200716 13:59:08.207"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:08.211" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:08.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:08.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:08.208" endtime="20200716 13:59:08.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:08.228" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:08.227" endtime="20200716 13:59:08.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:08.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:08.228" endtime="20200716 13:59:08.228"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:08.208" endtime="20200716 13:59:08.229"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:08.207" endtime="20200716 13:59:08.229"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:08.196" endtime="20200716 13:59:08.229"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:08.196" endtime="20200716 13:59:08.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:08.232" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.056" level="INFO">${output} = 2020-07-16 13:59:09,688 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:59:09,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:59:08.230" endtime="20200716 13:59:17.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.057" level="INFO">2020-07-16 13:59:09,688 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:59:09,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:59:09,911 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-16 13:59:11,520 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 13:59:11,521 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-16 13:59:11,536 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 13:59:11,550 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-16 13:59:11,589 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86185, with testuser/scm@EXAMPLE.COM as owner.
2020-07-16 13:59:11,631 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-86185/bucket-0-91697, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:59:12,197 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 13:59:12,554 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,027
Average Time spent in key write: 00:00:00,101
Total bytes written: 2050
Total Execution time: 00:00:06,576
***************************************************</msg>
<status status="PASS" starttime="20200716 13:59:17.057" endtime="20200716 13:59:17.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.058" endtime="20200716 13:59:17.058"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:08.229" endtime="20200716 13:59:17.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:08.194" endtime="20200716 13:59:17.059" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.065" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.062" endtime="20200716 13:59:17.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.069" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.068" endtime="20200716 13:59:17.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.069" endtime="20200716 13:59:17.070"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.062" endtime="20200716 13:59:17.070"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.061" endtime="20200716 13:59:17.070"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.074" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.093" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200716 13:59:17.070" endtime="20200716 13:59:17.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.095" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200716 13:59:17.094" endtime="20200716 13:59:17.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.095" endtime="20200716 13:59:17.096"></status>
</kw>
<msg timestamp="20200716 13:59:17.096" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200716 13:59:17.070" endtime="20200716 13:59:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.096" endtime="20200716 13:59:17.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.101" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.102" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.098" endtime="20200716 13:59:17.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.103" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:17.103" endtime="20200716 13:59:17.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.104" endtime="20200716 13:59:17.104"></status>
</kw>
<msg timestamp="20200716 13:59:17.105" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.098" endtime="20200716 13:59:17.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:17.105" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:17.105" endtime="20200716 13:59:17.105"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.108" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.107" endtime="20200716 13:59:17.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.126" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.126" endtime="20200716 13:59:17.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.127" endtime="20200716 13:59:17.127"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.106" endtime="20200716 13:59:17.127"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.106" endtime="20200716 13:59:17.128"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.097" endtime="20200716 13:59:17.128"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.097" endtime="20200716 13:59:17.128"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.132" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.159" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200716 13:59:17.128" endtime="20200716 13:59:17.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.160" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x14b5f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaVCKX0INX6/hUpn3d07S4Qmx7JgtjrxKZk5aNUNR9Z0O7lawuWNlq+EhaHrbao4Z60aVnbUWN4e5wQQwr5+NAjrVnYoSw/IFg/eHqyOaXrJIgh6M3teftM/HQLtrhgwehEqSOXDKgZWQVOEkBYR1qAmZPD8t3In9U1/a45E+dBcyBHiLzMtAl3eL01pacoDNrglL5wkl6MGgQII8zCE2Wx/dAlBNUS9u/3Pt7uwF5ZiZI9Nr2xd8GPxn1OgGcu5vUSlcgCNj1AofyPgE6knVyDKKSL4PwDebt3NiqDiCzH02FPQoJs37QTJGrW96vUGDEmZoQE1CNxadkCuAwYejYdNWg6fjOKpIHWMIHToAMCARKigcsEgcjtO3EO3sCRIxJPWBJAVD1T/EmWVVXdOvg6P7J73DhysO7weYh8u+Kcc7qIognrGuGgEgVhxFxPt15fLmbM3rY9rs2Cj1Vnl3G4tvfo0fPTRguziXNR/GM1uhr18GzF6a6NfUCIGGFjfZUFYEvymeLKqP/QI7CVuYh4KelkwOxGV52sS/cJeK6arqq+GHTkKGDUB1txdbQUpIZ8XSML8irbwFAlrAhpaWp5/6tSQPduoLAl1+XaPUZYNHTdtjfUs7boaaBd+luxZg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEpwUQVj1DXBl83b/Uzgk8TDS6TvngrDGKqKx4MGY9ELwf9FVcSRsRblg3PXLM+4lu3cN/ueIpK8pj3lz7bSXwkpa
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957152&amp;s=lkLHHrfb0X/t692CGAzlpfI1sesONDhVe6P3KlGD1IA="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 16 Jul 2020 12:36:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:59:17 GMT
Cache-Control: no-cache
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEpwUQVj1DXBl83b/Uzgk8TDS6TvngrDGKqKx4MGY9ELwf9FVcSRsRblg3PXLM+4lu3cN/ueIpK8pj3lz7bSXwkpa
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957152&amp;s=lkLHHrfb0X/t692CGAzlpfI1sesONDhVe6P3KlGD1IA="; Path=/; HttpOnly
Last-Modified: Thu, 16 Jul 2020 12:36:04 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200716 13:59:17.159" endtime="20200716 13:59:17.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.160" endtime="20200716 13:59:17.161"></status>
</kw>
<msg timestamp="20200716 13:59:17.161" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200716 13:59:17.128" endtime="20200716 13:59:17.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.161" endtime="20200716 13:59:17.162"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.060" endtime="20200716 13:59:17.162"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:17.060" endtime="20200716 13:59:17.162" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.168" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.165" endtime="20200716 13:59:17.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.173" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.172" endtime="20200716 13:59:17.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.173" endtime="20200716 13:59:17.174"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.164" endtime="20200716 13:59:17.175"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.164" endtime="20200716 13:59:17.175"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.180" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.193" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.176" endtime="20200716 13:59:17.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.194" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200716 13:59:17.193" endtime="20200716 13:59:17.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.194" endtime="20200716 13:59:17.195"></status>
</kw>
<msg timestamp="20200716 13:59:17.195" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.175" endtime="20200716 13:59:17.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.195" endtime="20200716 13:59:17.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.200" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.202" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.197" endtime="20200716 13:59:17.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.203" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:17.202" endtime="20200716 13:59:17.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.203" endtime="20200716 13:59:17.204"></status>
</kw>
<msg timestamp="20200716 13:59:17.204" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.197" endtime="20200716 13:59:17.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:17.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:17.204" endtime="20200716 13:59:17.205"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.214" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.206" endtime="20200716 13:59:17.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.240" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.239" endtime="20200716 13:59:17.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.240" endtime="20200716 13:59:17.241"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.206" endtime="20200716 13:59:17.241"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.205" endtime="20200716 13:59:17.241"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.196" endtime="20200716 13:59:17.241"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.196" endtime="20200716 13:59:17.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.245" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.302" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.242" endtime="20200716 13:59:17.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.303" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1a75f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYlert5Yz5eMT290qELTuSY0ZBNVK95OCknMbotgN6OPsvZiOwdgGTBSzaP5t2cR8h3cMS86EgCdDyDkTZAcbXqaEJuf6tBgIRe1c3h/lbtWlah1As2QBjp4cs6OXdKRPX9x1iqzbC8dVo8/mVvS1UNpQCtZp9KMIFux1KoiPI/3NJViTJhODCL42oybEvvPCostB+ioI/2mrS9rfckp6ly3A0n2eQQUAGFtAWDwlR4ihe2t0YCTlz8nyFYYdQH2gI63xfh3D1rt3qNDXG7n/x7vnBi8GLdp7lYepLPuyG30p7Gx+nc2Vya+uOT33wDRksVG3yjeX9tvR/qknNf0kkNUpenhxTmpIHWMIHToAMCARKigcsEgciVwje0M1nkXM9g4W9VSh5udTkyQs1mQStNYMBgBRnLUXv4C8CTpcIWxPrTlg5BEcZp0VAjvN8QfnGH32a2la6jkf2OsHSaBMcQsN9M9bJtirROtql3rBtduFyD+5EtvFW8AToysDu+4WfhiTYj/x4FuEkbUGsRqP2z4rQPSDqiZv48XHNt5cS1xrBqdEE2AdNqXf4vsejB6tbk9eNCSQA1j5uA0YeYrG4k+PZ1IXi9MHFrOmbeShT7HV/z+c91UujGVrkgKzT33w==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCy6Z/KhXccnaFNMQnURP2Kh/xuP9Hn+o9hJNVM7ekWpkZ5Tzh3r11SqCmXCwoFO3va3lunF97Zvcv4QV4BRoPy43A
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957265&amp;s=/y62GmL4uVKllxI/wj4Xs3JMbJVRaDcWdyCLN5a0tdc="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594907957265.tgz"
&lt; Content-Length: 76276
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:59:17 GMT
Cache-Control: no-cache
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCy6Z/KhXccnaFNMQnURP2Kh/xuP9Hn+o9hJNVM7ekWpkZ5Tzh3r11SqCmXCwoFO3va3lunF97Zvcv4QV4BRoPy43A
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957265&amp;s=/y62GmL4uVKllxI/wj4Xs3JMbJVRaDcWdyCLN5a0tdc="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594907957265.tgz"
Content-Length: 76276
</msg>
<status status="PASS" starttime="20200716 13:59:17.303" endtime="20200716 13:59:17.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.304" endtime="20200716 13:59:17.304"></status>
</kw>
<msg timestamp="20200716 13:59:17.305" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.241" endtime="20200716 13:59:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.305" endtime="20200716 13:59:17.305"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.163" endtime="20200716 13:59:17.305"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:17.163" endtime="20200716 13:59:17.306" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.311" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.308" endtime="20200716 13:59:17.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.315" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.314" endtime="20200716 13:59:17.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.315" endtime="20200716 13:59:17.316"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.308" endtime="20200716 13:59:17.316"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.307" endtime="20200716 13:59:17.316"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.319" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.333" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200716 13:59:17.317" endtime="20200716 13:59:17.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.335" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200716 13:59:17.334" endtime="20200716 13:59:17.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.335" endtime="20200716 13:59:17.335"></status>
</kw>
<msg timestamp="20200716 13:59:17.336" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200716 13:59:17.316" endtime="20200716 13:59:17.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.336" endtime="20200716 13:59:17.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.341" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.338" endtime="20200716 13:59:17.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.344" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:17.343" endtime="20200716 13:59:17.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.344" endtime="20200716 13:59:17.345"></status>
</kw>
<msg timestamp="20200716 13:59:17.345" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.338" endtime="20200716 13:59:17.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:17.346" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:17.345" endtime="20200716 13:59:17.346"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.351" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.347" endtime="20200716 13:59:17.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.367" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.366" endtime="20200716 13:59:17.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.367" endtime="20200716 13:59:17.368"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.346" endtime="20200716 13:59:17.368"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.346" endtime="20200716 13:59:17.368"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.337" endtime="20200716 13:59:17.368"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.337" endtime="20200716 13:59:17.369"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.371" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.413" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200716 13:59:17.369" endtime="20200716 13:59:17.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.415" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x17dbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYumUR7R+w1pqh96QrTo94Pn9BR8Kovr6wnGIjsk2MJ3v1n7R1ZN2yaeBKg6NZC7DXozVVYIEpd254ihgJknLxen9CRdbixAGXF5FPz+TP08oyp0tH5tAtULv7zqg8/C1/9BbkDg5RKXVgEIzCI5y0oZa5dHGVf2bCsqkV4r2rPeJR90RGM4J365F/3zY5Tt1RLooXjAbOXLAKNxQnECHBHbVZZsinxzXILLikk0q5C0e5UC135aB6M2EicspjQWr0Jn5ZGG0BbLRnyC4VnGrxeClOcVA/sbMIxJldC329vR/QRQWkYfK94Vl/KaPRquTzDKTRP/2GbrTZ2/yW8H+VWxsiCKtIKpIHWMIHToAMCARKigcsEgchUM3ZbRufbdTGGotCaCPIGD4yIjcShgbb5KSv7tw9ysZwjsF4vHggx3PyqKxEla4vCkqdi3tRYstPbImhEGqrWuC13fVxVevdKXjoKbEo5Kb/NyQQ0a5erMlmw8H2YJOFF5FEt3rOxnYNqO0yFQlWwvvBvsOd+uiNzcX+9hV2ZqlkzlvB6575o6hicezqbb8izXBk7MIsyE5Xd0d6yPds850g3TDUZpqPHhIoin5QeHLtMVYjQ5oLCByI4BHUgQdq0T4YCGfZNCQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCi024w4NuK4O26tIqVPEFinHLRzm/0LxAnJ8WVvMmBG9gFqlv/nPpkigkvWBz/PVeq59qKgQRog6CuIpNHoQbMZvu
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957392&amp;s=T96DVHtvQU8DHkhhOYWI07gM3EKpJ+11ugL9xbXbOcs="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:59:17 GMT
Cache-Control: no-cache
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCi024w4NuK4O26tIqVPEFinHLRzm/0LxAnJ8WVvMmBG9gFqlv/nPpkigkvWBz/PVeq59qKgQRog6CuIpNHoQbMZvu
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957392&amp;s=T96DVHtvQU8DHkhhOYWI07gM3EKpJ+11ugL9xbXbOcs="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200716 13:59:17.414" endtime="20200716 13:59:17.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.415" endtime="20200716 13:59:17.416"></status>
</kw>
<msg timestamp="20200716 13:59:17.416" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200716 13:59:17.369" endtime="20200716 13:59:17.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.416" endtime="20200716 13:59:17.417"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.307" endtime="20200716 13:59:17.417"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:17.306" endtime="20200716 13:59:17.417" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.427" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.424" endtime="20200716 13:59:17.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.435" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.435" endtime="20200716 13:59:17.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.436" endtime="20200716 13:59:17.436"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.423" endtime="20200716 13:59:17.436"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.423" endtime="20200716 13:59:17.437"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.440" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.457" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200716 13:59:17.437" endtime="20200716 13:59:17.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.458" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200716 13:59:17.457" endtime="20200716 13:59:17.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.458" endtime="20200716 13:59:17.459"></status>
</kw>
<msg timestamp="20200716 13:59:17.459" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200716 13:59:17.437" endtime="20200716 13:59:17.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.459" endtime="20200716 13:59:17.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.464" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.469" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.461" endtime="20200716 13:59:17.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.470" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:17.470" endtime="20200716 13:59:17.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.471" endtime="20200716 13:59:17.471"></status>
</kw>
<msg timestamp="20200716 13:59:17.472" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.461" endtime="20200716 13:59:17.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:17.472" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:17.472" endtime="20200716 13:59:17.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.476" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.473" endtime="20200716 13:59:17.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.500" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.499" endtime="20200716 13:59:17.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.500" endtime="20200716 13:59:17.501"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.473" endtime="20200716 13:59:17.502"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.472" endtime="20200716 13:59:17.502"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.461" endtime="20200716 13:59:17.502"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.460" endtime="20200716 13:59:17.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.507" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.549" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200716 13:59:17.504" endtime="20200716 13:59:17.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.550" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x887f20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.4) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGzQgp2/zoXThtj7qsOXtSORWDnbHvJm/qamQL5JLVzrVJASAV15vK50zqlE958l4m//xQSnXXbUto2LkISjTLeXwVL34VDlun17M6p3KiBwlcDK6UnN8GDqFAfTyLfvHK8G16bBcA/wCZX9lr4+5GMxQb8K4JoEwnu1995UeUnmHuCELoBSCNamDxVpjqLvw2q87SRvSfufM617osG9TKZ/ef0BijPseqsxwwsuulHwIyr8Y+OJn/hqbIaYO8qfNEjR3jd5TObp6QNqn7+OjUncMC70U9RYsyUrhQqh+MrcQUESYvUdGFarhQZcS7zZtcAb6qEcWHtrITSrjxLMj2bflG09vEh6SB1jCB06ADAgESooHLBIHIIJpqanuN6H8bgKcODyTD5EbM5HlOrkHVNS/ztOyZnyIZHZoV22LAb4uqFrnCn3dsQpnoaPTUg6fdoNh2dvBqw05AZ5LdLaeYX5wdQ4p5ANkVJ+5Hk0m9yZwObGOHxuT/vFWAOlJu7mtDN/HBOnq7L/4Ym/QTHNiOZ9vMtiCdfZTMjdqZp8hGJfiZNZcOjrGem6VKwzINrLb4XtIB6j0l99oJmMV0sLVzWbJGNBxVBsDpBrFeiYHOU5teHYKyF1MNFG23AVXLyiE=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCMxOlO3zzVQ/LVR1zFiZXs+Pbh+f9dmIKJkmgUfrR/g2vbdjR17hlUY1JXYD28nRsvtT3IHKVl/3jEhguza7syREb
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957544&amp;s=fILcn5dFs57tPY+LA/L8jz5f4504XbGrWX41iyU8dxA="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 16 Jul 2020 12:35:40 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:59:17 GMT
Cache-Control: no-cache
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCMxOlO3zzVQ/LVR1zFiZXs+Pbh+f9dmIKJkmgUfrR/g2vbdjR17hlUY1JXYD28nRsvtT3IHKVl/3jEhguza7syREb
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957544&amp;s=fILcn5dFs57tPY+LA/L8jz5f4504XbGrWX41iyU8dxA="; Path=/; HttpOnly
Last-Modified: Thu, 16 Jul 2020 12:35:40 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200716 13:59:17.550" endtime="20200716 13:59:17.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.551" endtime="20200716 13:59:17.551"></status>
</kw>
<msg timestamp="20200716 13:59:17.552" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.4...
* Connected to scm (172.26.0.4) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200716 13:59:17.503" endtime="20200716 13:59:17.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.552" endtime="20200716 13:59:17.552"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.422" endtime="20200716 13:59:17.552"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:17.421" endtime="20200716 13:59:17.552" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.559" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.555" endtime="20200716 13:59:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.562" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.561" endtime="20200716 13:59:17.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.562" endtime="20200716 13:59:17.563"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.555" endtime="20200716 13:59:17.563"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.555" endtime="20200716 13:59:17.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.567" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.583" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.564" endtime="20200716 13:59:17.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.584" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200716 13:59:17.583" endtime="20200716 13:59:17.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.584" endtime="20200716 13:59:17.585"></status>
</kw>
<msg timestamp="20200716 13:59:17.585" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.563" endtime="20200716 13:59:17.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.586" endtime="20200716 13:59:17.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.591" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.588" endtime="20200716 13:59:17.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.594" level="INFO">scm</msg>
<status status="PASS" starttime="20200716 13:59:17.593" endtime="20200716 13:59:17.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.594" endtime="20200716 13:59:17.594"></status>
</kw>
<msg timestamp="20200716 13:59:17.595" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200716 13:59:17.587" endtime="20200716 13:59:17.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200716 13:59:17.595" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200716 13:59:17.595" endtime="20200716 13:59:17.595"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.600" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200716 13:59:17.597" endtime="20200716 13:59:17.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.614" level="INFO"></msg>
<status status="PASS" starttime="20200716 13:59:17.614" endtime="20200716 13:59:17.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.615" endtime="20200716 13:59:17.615"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.596" endtime="20200716 13:59:17.615"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.596" endtime="20200716 13:59:17.616"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.587" endtime="20200716 13:59:17.616"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.586" endtime="20200716 13:59:17.616"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:59:17.619" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:59:17.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:59:17.648" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.617" endtime="20200716 13:59:17.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:59:17.649" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xd5ef20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.6) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYpwi7/iUit8YdemuRV1Oi1H5w7NV0dFVY09NwBfQyVy3yIS3jgY+usvLKbMWjS5uOvWKndhJVuhkrYkGofkQFD3aJeDvSQmDGTIKLSqW4uVM9SceuqccbmYr7FV1om1/S++v/TN1gWEM5roS72vSA7cd+ilbm7Xs3OKNzD11V3mtkDxnqERH10WMhs4QM0Aw20pER3C2mP9uexEILcKOsWiiRZVsGYujYY1VP/fhjxWRm8z6glqknALYpIJzq/dd7JSDQzSOE3Xa1oiWa+HjY8ZLRd/Hi9TOOrOWuIeKEDEGeFii+N8eZTuPhLqRbSA6eESNTM8uKeDJPe6AT/+Uyr45J44bPQpIHWMIHToAMCARKigcsEgcgyC9rwrlP45wLXXJFPYLykYOACu9GhtUBF0BgeUoSnO8JtD+osYpgkDYUv8bcbZhlhtvvuneDHuMd2DdpQ2qTQ6JKdnTgynBps9hcwBDUCy4ndNd/wsblpvim4qkT3+/Z6InHhn5xvIs2twD13wDm5mio0R+L+r9JHnuZrbMXdVLWRgbEYalZT2cJ7dd7+mpnYCExj+bblfa4XcF+1MrpkBPElOnqCs52trfvS45oC6DpSNJlcMij4tBf+Y2HqzHzZh1o/rXltIg==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Date: Thu, 16 Jul 2020 13:59:17 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCcVlSCknnasZiFMmoXfFq43UK7x423vGXu8YhGeNPOWuE8kcBcE4rGnDxSrGGYklynToMhKB23ZRmJYPTMdsKw/ED
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957643&amp;s=gzwX8jBIfwCWce4tcOhllU/RMcZW5OISZrg1GbrRWS4="; Path=/; HttpOnly
&lt; Last-Modified: Thu, 16 Jul 2020 12:40:58 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Thu, 16 Jul 2020 13:59:17 GMT
Cache-Control: no-cache
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Thu, 16 Jul 2020 13:59:17 GMT
Date: Thu, 16 Jul 2020 13:59:17 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCcVlSCknnasZiFMmoXfFq43UK7x423vGXu8YhGeNPOWuE8kcBcE4rGnDxSrGGYklynToMhKB23ZRmJYPTMdsKw/ED
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594943957643&amp;s=gzwX8jBIfwCWce4tcOhllU/RMcZW5OISZrg1GbrRWS4="; Path=/; HttpOnly
Last-Modified: Thu, 16 Jul 2020 12:40:58 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200716 13:59:17.648" endtime="20200716 13:59:17.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:59:17.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:59:17.649" endtime="20200716 13:59:17.650"></status>
</kw>
<msg timestamp="20200716 13:59:17.650" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.6...
* Connected to recon (172.26.0.6) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200716 13:59:17.616" endtime="20200716 13:59:17.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200716 13:59:17.650" endtime="20200716 13:59:17.651"></status>
</kw>
<status status="PASS" starttime="20200716 13:59:17.554" endtime="20200716 13:59:17.651"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:59:17.553" endtime="20200716 13:59:17.651" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200716 13:59:08.169" endtime="20200716 13:59:17.660"></status>
</suite>
<status status="PASS" starttime="20200716 13:59:08.140" endtime="20200716 13:59:17.666"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
