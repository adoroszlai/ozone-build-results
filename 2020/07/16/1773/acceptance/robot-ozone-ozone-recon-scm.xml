<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 13:25:13.117" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:13.181" endtime="20200716 13:25:13.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:13.185" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:21.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:21.525" level="INFO">${output} = 2020-07-16 13:25:14,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:25:14,821 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:25:13.181" endtime="20200716 13:25:21.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:21.526" level="INFO">2020-07-16 13:25:14,669 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:25:14,821 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:25:14,821 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:25:15,962 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 13:25:15,963 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-16 13:25:15,977 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 13:25:15,988 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-16 13:25:16,030 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-29748, with hadoop as owner.
2020-07-16 13:25:16,094 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-29748/bucket-0-15071, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:25:16,682 [pool-2-thread-5] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 13:25:16,996 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,009
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,123
Average Time spent in key write: 00:00:00,573
Total bytes written: 10250
Total Execution time: 00:00:06,113
***************************************************</msg>
<status status="PASS" starttime="20200716 13:25:21.525" endtime="20200716 13:25:21.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:21.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:21.526" endtime="20200716 13:25:21.527"></status>
</kw>
<status status="PASS" starttime="20200716 13:25:13.181" endtime="20200716 13:25:21.527"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:25:13.180" endtime="20200716 13:25:21.527" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:21.529" endtime="20200716 13:25:21.530"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:21.533" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:21.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:21.720" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:21.531" endtime="20200716 13:25:21.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:21.722" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:21.721" endtime="20200716 13:25:21.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:21.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:21.722" endtime="20200716 13:25:21.722"></status>
</kw>
<msg timestamp="20200716 13:25:21.723" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:21.530" endtime="20200716 13:25:21.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:21.723" endtime="20200716 13:25:21.723"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:21.730" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:21.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:21.769" level="INFO">${output} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:21.724" endtime="20200716 13:25:21.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:21.771" level="INFO">[{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-70377","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-0-01413","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-1-99320","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-3-93687","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-4-97613","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-0-16218","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-1-42712","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-1-46802","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-0-39804","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-4-30026","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-3-99809","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-3-64336","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-2-65717","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-4-87810","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-0-22020","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-2-14572","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-3-91111","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-1-79630","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-1-86294","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-2-42050","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-4-26636","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-2-59487","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-3-07061","fileSize":16384,"count":5},{"volume":"39962-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"39962-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"39962-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-65149","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-89240","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-89240","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-79562","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-95151","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-21363","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200716 13:25:21.770" endtime="20200716 13:25:21.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:21.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:21.771" endtime="20200716 13:25:21.772"></status>
</kw>
<msg timestamp="20200716 13:25:21.772" level="INFO">${result} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:21.724" endtime="20200716 13:25:21.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200716 13:25:21.773" level="FAIL">'[{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-70377","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-0-01413","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-1-99320","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-3-93687","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-4-97613","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-0-16218","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-1-42712","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-1-46802","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-0-39804","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-4-30026","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-3-99809","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-3-64336","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-2-65717","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-4-87810","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-0-22020","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-2-14572","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-3-91111","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-1-79630","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-1-86294","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-2-42050","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-4-26636","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-2-59487","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-3-07061","fileSize":16384,"count":5},{"volume":"39962-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"39962-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"39962-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-65149","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-89240","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-89240","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-79562","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-95151","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-21363","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200716 13:25:21.772" endtime="20200716 13:25:21.773"></status>
</kw>
<status status="FAIL" starttime="20200716 13:25:21.529" endtime="20200716 13:25:21.774"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:31.775" endtime="20200716 13:25:31.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:31.780" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:31.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:31.803" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:31.777" endtime="20200716 13:25:31.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:31.806" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:31.804" endtime="20200716 13:25:31.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:31.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:31.806" endtime="20200716 13:25:31.807"></status>
</kw>
<msg timestamp="20200716 13:25:31.807" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200716 13:25:31.776" endtime="20200716 13:25:31.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:31.808" endtime="20200716 13:25:31.808"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:31.815" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:31.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:31.837" level="INFO">${output} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:31.809" endtime="20200716 13:25:31.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:31.838" level="INFO">[{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-70377","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-0-01413","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-1-99320","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-3-93687","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-4-97613","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-0-16218","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-1-42712","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-1-46802","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-0-39804","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-4-30026","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-3-99809","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-3-64336","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-2-65717","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-4-87810","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-0-22020","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-2-14572","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-3-91111","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-1-79630","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-1-86294","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-2-42050","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-4-26636","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-2-59487","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-3-07061","fileSize":16384,"count":5},{"volume":"39962-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"39962-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"39962-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-65149","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-89240","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-89240","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-79562","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-95151","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-21363","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200716 13:25:31.837" endtime="20200716 13:25:31.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:31.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:31.838" endtime="20200716 13:25:31.839"></status>
</kw>
<msg timestamp="20200716 13:25:31.839" level="INFO">${result} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:31.808" endtime="20200716 13:25:31.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200716 13:25:31.840" level="FAIL">'[{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-70377","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-0-01413","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-1-99320","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-3-93687","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-4-97613","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-0-16218","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-1-42712","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-1-46802","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-0-39804","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-4-30026","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-3-99809","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-3-64336","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-2-65717","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-4-87810","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-0-22020","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-2-14572","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-3-91111","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-1-79630","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-1-86294","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-2-42050","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-4-26636","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-2-59487","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-3-07061","fileSize":16384,"count":5},{"volume":"39962-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"39962-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"39962-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-65149","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-89240","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-89240","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-79562","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-95151","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-21363","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200716 13:25:31.839" endtime="20200716 13:25:31.840"></status>
</kw>
<status status="FAIL" starttime="20200716 13:25:31.774" endtime="20200716 13:25:31.841"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.842" endtime="20200716 13:25:41.842"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:41.845" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:41.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:41.865" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200716 13:25:41.843" endtime="20200716 13:25:41.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:41.866" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200716 13:25:41.865" endtime="20200716 13:25:41.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:41.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:41.866" endtime="20200716 13:25:41.866"></status>
</kw>
<msg timestamp="20200716 13:25:41.867" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200716 13:25:41.842" endtime="20200716 13:25:41.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.867" endtime="20200716 13:25:41.867"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:41.871" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:41.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:41.887" level="INFO">${output} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:41.868" endtime="20200716 13:25:41.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:41.888" level="INFO">[{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-70377","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-0-01413","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-1-99320","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-3-93687","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-4-97613","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-0-16218","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-1-42712","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-1-46802","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-0-39804","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-4-30026","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-3-99809","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-3-64336","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-2-65717","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-4-87810","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-0-22020","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-2-14572","fileSize":16384,"count":5},{"volume":"vol-0-93577","bucket":"bucket-3-91111","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-1-79630","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-1-86294","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-2-42050","fileSize":16384,"count":5},{"volume":"vol-4-41473","bucket":"bucket-4-26636","fileSize":16384,"count":5},{"volume":"vol-1-94226","bucket":"bucket-2-59487","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-3-07061","fileSize":16384,"count":5},{"volume":"39962-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"39962-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"39962-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-65149","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-89240","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-89240","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-79562","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-95151","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-21363","fileSize":1024,"count":1},{"volume":"vol-0-29748","bucket":"bucket-0-15071","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-32952","fileSize":1024,"count":2}]</msg>
<status status="PASS" starttime="20200716 13:25:41.887" endtime="20200716 13:25:41.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:41.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:41.888" endtime="20200716 13:25:41.889"></status>
</kw>
<msg timestamp="20200716 13:25:41.889" level="INFO">${result} = [{"volume":"vol-2-95282","bucket":"bucket-2-32402","fileSize":16384,"count":5},{"volume":"vol-3-22464","bucket":"bucket-4-59356","fileSize":16384,"count":5},{"volume":"vol-2-95282","bucket":"bucket-0-...</msg>
<status status="PASS" starttime="20200716 13:25:41.867" endtime="20200716 13:25:41.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.889" endtime="20200716 13:25:41.889"></status>
</kw>
<status status="PASS" starttime="20200716 13:25:41.841" endtime="20200716 13:25:41.890"></status>
</kw>
<status status="PASS" starttime="20200716 13:25:21.529" endtime="20200716 13:25:41.890"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:25:21.528" endtime="20200716 13:25:41.890" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:41.895" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:41.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:41.940" level="INFO">${output} = {"totalCount":3,"datanodes":[{"uuid":"5f55fbcc-b4e1-479f-99f8-71a44d4f4b4f","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1594905917548,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200716 13:25:41.892" endtime="20200716 13:25:41.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:41.941" level="INFO">{"totalCount":3,"datanodes":[{"uuid":"5f55fbcc-b4e1-479f-99f8-71a44d4f4b4f","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1594905917548,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25684824064},"pipelines":[{"pipelineID":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"b44f7eec-126c-46bc-8f17-f9451152e3db","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":1,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1594904837240},{"uuid":"150d125a-f56f-4411-a20b-070d8f9cf1af","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1594905917617,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25684865024},"pipelines":[{"pipelineID":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"bd27b718-ea9c-448e-89c0-4f73a10cedef","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594904828852},{"uuid":"41938c7d-4ff3-4124-8e0e-b2b2f32d70a7","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1594905917632,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25684824064},"pipelines":[{"pipelineID":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"8ef4a965-d54e-4410-a1d0-88566e69db1a","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594904834396}]}</msg>
<status status="PASS" starttime="20200716 13:25:41.940" endtime="20200716 13:25:41.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:41.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:41.941" endtime="20200716 13:25:41.942"></status>
</kw>
<msg timestamp="20200716 13:25:41.942" level="INFO">${result} = {"totalCount":3,"datanodes":[{"uuid":"5f55fbcc-b4e1-479f-99f8-71a44d4f4b4f","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1594905917548,"storageReport":{"capacity":8931...</msg>
<status status="PASS" starttime="20200716 13:25:41.892" endtime="20200716 13:25:41.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.943" endtime="20200716 13:25:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.943" endtime="20200716 13:25:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.944" endtime="20200716 13:25:41.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.944" endtime="20200716 13:25:41.945"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:41.948" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:41.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:41.976" level="INFO">${output} = {"totalCount":4,"pipelines":[{"pipelineId":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_dat...</msg>
<status status="PASS" starttime="20200716 13:25:41.945" endtime="20200716 13:25:41.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:41.977" level="INFO">{"totalCount":4,"pipelines":[{"pipelineId":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default","ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1081000,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"b44f7eec-126c-46bc-8f17-f9451152e3db","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1081601,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8ef4a965-d54e-4410-a1d0-88566e69db1a","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1081173,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"bd27b718-ea9c-448e-89c0-4f73a10cedef","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1081285,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200716 13:25:41.977" endtime="20200716 13:25:41.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:41.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:41.978" endtime="20200716 13:25:41.978"></status>
</kw>
<msg timestamp="20200716 13:25:41.978" level="INFO">${result} = {"totalCount":4,"pipelines":[{"pipelineId":"11a6e23a-2a68-4ca5-8e7e-ed7f873ba2aa","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_dat...</msg>
<status status="PASS" starttime="20200716 13:25:41.945" endtime="20200716 13:25:41.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.979" endtime="20200716 13:25:41.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.979" endtime="20200716 13:25:41.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.980" endtime="20200716 13:25:41.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.981" endtime="20200716 13:25:41.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.982" endtime="20200716 13:25:41.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:41.983" endtime="20200716 13:25:41.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:41.986" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:42.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:42.006" level="INFO">${output} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77054513152},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200716 13:25:41.984" endtime="20200716 13:25:42.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:42.007" level="INFO">{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77054513152},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200716 13:25:42.006" endtime="20200716 13:25:42.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:42.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:42.007" endtime="20200716 13:25:42.008"></status>
</kw>
<msg timestamp="20200716 13:25:42.008" level="INFO">${result} = {"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77054513152},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200716 13:25:41.983" endtime="20200716 13:25:42.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.008" endtime="20200716 13:25:42.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.009" endtime="20200716 13:25:42.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.010" endtime="20200716 13:25:42.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:42.014" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:42.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:42.041" level="INFO">${output} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1594904920633,"lastReportTimestamp":1594905880614},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200716 13:25:42.011" endtime="20200716 13:25:42.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:42.042" level="INFO">[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1594904920633,"lastReportTimestamp":1594905880614},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1594904920325,"lastReportTimestamp":1594905917554},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1594904920481,"lastReportTimestamp":1594905910488}]</msg>
<status status="PASS" starttime="20200716 13:25:42.041" endtime="20200716 13:25:42.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:42.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:42.042" endtime="20200716 13:25:42.043"></status>
</kw>
<msg timestamp="20200716 13:25:42.043" level="INFO">${result} = [{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1594904920633,"lastReportTimestamp":1594905880614},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_defa...</msg>
<status status="PASS" starttime="20200716 13:25:42.011" endtime="20200716 13:25:42.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.043" endtime="20200716 13:25:42.044"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:25:41.891" endtime="20200716 13:25:42.044" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.046" endtime="20200716 13:25:42.046"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:42.050" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:25:42.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:25:42.068" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200716 13:25:42.047" endtime="20200716 13:25:42.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:25:42.069" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.eeb92191.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2f7524a2.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c0debea0.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200716 13:25:42.069" endtime="20200716 13:25:42.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:25:42.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:25:42.069" endtime="20200716 13:25:42.070"></status>
</kw>
<msg timestamp="20200716 13:25:42.070" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20200716 13:25:42.047" endtime="20200716 13:25:42.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200716 13:25:42.071" endtime="20200716 13:25:42.071"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:25:42.045" endtime="20200716 13:25:42.071" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200716 13:25:13.152" endtime="20200716 13:25:42.073"></status>
</suite>
<status status="PASS" starttime="20200716 13:25:13.118" endtime="20200716 13:25:42.077"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
