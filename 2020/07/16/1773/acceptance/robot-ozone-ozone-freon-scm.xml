<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200716 13:25:58.692" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:25:58.752" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:26:07.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:26:07.176" level="INFO">${output} = 2020-07-16 13:26:00,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:00,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:25:58.747" endtime="20200716 13:26:07.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:26:07.178" level="INFO">2020-07-16 13:26:00,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:00,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:26:00,482 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:26:01,667 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-16 13:26:01,668 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-16 13:26:01,669 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-16 13:26:01,669 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-16 13:26:01,669 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-16 13:26:01,669 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-16 13:26:01,669 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-16 13:26:01,677 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-16 13:26:01,687 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:01,722 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-41338, with hadoop as owner.
2020-07-16 13:26:01,782 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-41338/bucket-0-19937, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:26:02,340 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 13:26:02,689 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,076
Average Time spent in bucket creation: 00:00:00,017
Average Time spent in key creation: 00:00:00,115
Average Time spent in key write: 00:00:00,606
Total bytes written: 10240
Total Execution time: 00:00:06,141
***************************************************</msg>
<status status="PASS" starttime="20200716 13:26:07.176" endtime="20200716 13:26:07.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:26:07.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:26:07.178" endtime="20200716 13:26:07.178"></status>
</kw>
<msg timestamp="20200716 13:26:07.179" level="INFO">${result} = 2020-07-16 13:26:00,278 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:00,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:25:58.746" endtime="20200716 13:26:07.179"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:26:07.180" endtime="20200716 13:26:07.180"></status>
</kw>
<status status="PASS" starttime="20200716 13:26:07.179" endtime="20200716 13:26:07.180"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:25:58.746" endtime="20200716 13:26:07.180" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:26:07.186" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:26:12.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:26:12.570" level="INFO">${output} = 2020-07-16 13:26:08,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:08,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:07.183" endtime="20200716 13:26:12.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:26:12.571" level="INFO">2020-07-16 13:26:08,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:08,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:26:08,864 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:26:09,025 [main] INFO freon.BaseFreonGenerator: Executing test with prefix vaz7jhatqn
2020-07-16 13:26:09,045 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:09,975 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-16 13:26:10,030 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-16 13:26:10,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:10,613 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-16 13:26:11,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:12,056 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 13:26:12,204 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1356.170191, max=1356.170191, mean=1356.170191, stddev=0.0, median=1356.170191, p75=1356.170191, p95=1356.170191, p98=1356.170191, p99=1356.170191, p999=1356.170191, mean_rate=0.46822699498255355, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 13:26:12,205 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-16 13:26:12,208 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 13:26:12,209 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 13:26:12.570" endtime="20200716 13:26:12.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:26:12.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:26:12.571" endtime="20200716 13:26:12.572"></status>
</kw>
<msg timestamp="20200716 13:26:12.572" level="INFO">${result} = 2020-07-16 13:26:08,717 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:08,864 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:07.182" endtime="20200716 13:26:12.572"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:26:12.573" endtime="20200716 13:26:12.573"></status>
</kw>
<status status="PASS" starttime="20200716 13:26:12.572" endtime="20200716 13:26:12.574"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:26:07.181" endtime="20200716 13:26:12.574" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:26:12.577" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:26:16.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:26:16.639" level="INFO">${output} = 2020-07-16 13:26:14,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:14,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:12.576" endtime="20200716 13:26:16.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:26:16.640" level="INFO">2020-07-16 13:26:14,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:14,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:26:14,243 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:26:14,438 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bgstkh91la
2020-07-16 13:26:14,457 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:15,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:16,461 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 13:26:16,611 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=74.339116, max=74.339116, mean=74.339116, stddev=0.0, median=74.339116, p75=74.339116, p95=74.339116, p98=74.339116, p99=74.339116, p999=74.339116, mean_rate=0.8083236376462285, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 13:26:16,614 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-16 13:26:16,615 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 13:26:16,615 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 13:26:16.640" endtime="20200716 13:26:16.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:26:16.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:26:16.641" endtime="20200716 13:26:16.642"></status>
</kw>
<msg timestamp="20200716 13:26:16.642" level="INFO">${result} = 2020-07-16 13:26:14,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:14,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:12.575" endtime="20200716 13:26:16.642"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:26:16.643" endtime="20200716 13:26:16.643"></status>
</kw>
<status status="PASS" starttime="20200716 13:26:16.642" endtime="20200716 13:26:16.643"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:26:12.574" endtime="20200716 13:26:16.643" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200716 13:26:16.648" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200716 13:26:20.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200716 13:26:20.564" level="INFO">${output} = 2020-07-16 13:26:18,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:18,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:16.645" endtime="20200716 13:26:20.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200716 13:26:20.566" level="INFO">2020-07-16 13:26:18,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:18,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-16 13:26:18,263 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-16 13:26:18,457 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gmzdr74hiz
2020-07-16 13:26:18,473 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:19,479 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-16 13:26:20,481 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-16 13:26:20,544 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=14.894944, max=14.894944, mean=14.894944, stddev=0.0, median=14.894944, p75=14.894944, p95=14.894944, p98=14.894944, p99=14.894944, p999=14.894944, mean_rate=0.9305413411876159, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-16 13:26:20,545 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-16 13:26:20,549 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-16 13:26:20,550 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200716 13:26:20.565" endtime="20200716 13:26:20.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200716 13:26:20.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200716 13:26:20.566" endtime="20200716 13:26:20.567"></status>
</kw>
<msg timestamp="20200716 13:26:20.567" level="INFO">${result} = 2020-07-16 13:26:18,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-16 13:26:18,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200716 13:26:16.645" endtime="20200716 13:26:20.567"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200716 13:26:20.568" endtime="20200716 13:26:20.568"></status>
</kw>
<status status="PASS" starttime="20200716 13:26:20.567" endtime="20200716 13:26:20.568"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200716 13:26:16.644" endtime="20200716 13:26:20.568" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200716 13:25:58.722" endtime="20200716 13:26:20.570"></status>
</suite>
<status status="PASS" starttime="20200716 13:25:58.693" endtime="20200716 13:26:20.574"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
