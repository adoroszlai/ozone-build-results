<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 07:28:17.072" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:28:17.126" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:28:25.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:28:25.233" level="INFO">${output} = 2020-07-15 07:28:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:18,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:17.121" endtime="20200715 07:28:25.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:28:25.234" level="INFO">2020-07-15 07:28:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:18,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:28:18,583 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-15 07:28:19,634 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 07:28:19,635 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 07:28:19,640 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 07:28:19,649 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:19,721 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-20683, with hadoop as owner.
2020-07-15 07:28:19,765 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-20683/bucket-0-61112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:28:20,314 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 07:28:20,653 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,095
Average Time spent in bucket creation: 00:00:00,019
Average Time spent in key creation: 00:00:00,071
Average Time spent in key write: 00:00:00,644
Total bytes written: 10240
Total Execution time: 00:00:06,002
***************************************************</msg>
<status status="PASS" starttime="20200715 07:28:25.233" endtime="20200715 07:28:25.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:28:25.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:28:25.234" endtime="20200715 07:28:25.235"></status>
</kw>
<msg timestamp="20200715 07:28:25.235" level="INFO">${result} = 2020-07-15 07:28:18,362 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:18,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:17.121" endtime="20200715 07:28:25.235"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:28:25.236" endtime="20200715 07:28:25.236"></status>
</kw>
<status status="PASS" starttime="20200715 07:28:25.235" endtime="20200715 07:28:25.236"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:28:17.120" endtime="20200715 07:28:25.236" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:28:25.240" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:28:30.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:28:30.346" level="INFO">${output} = 2020-07-15 07:28:26,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:26,701 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:25.238" endtime="20200715 07:28:30.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:28:30.347" level="INFO">2020-07-15 07:28:26,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:26,701 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:28:26,701 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 07:28:26,886 [main] INFO freon.BaseFreonGenerator: Executing test with prefix h0uatptlnz
2020-07-15 07:28:26,902 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:27,842 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-15 07:28:27,877 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:28:27,915 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:28,409 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 07:28:28,916 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:29,916 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 07:28:29,948 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1269.378458, max=1269.378458, mean=1269.378458, stddev=0.0, median=1269.378458, p75=1269.378458, p95=1269.378458, p98=1269.378458, p99=1269.378458, p999=1269.378458, mean_rate=0.4924038791177765, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 07:28:29,948 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-15 07:28:29,955 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 07:28:29,955 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 07:28:30.347" endtime="20200715 07:28:30.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:28:30.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:28:30.348" endtime="20200715 07:28:30.348"></status>
</kw>
<msg timestamp="20200715 07:28:30.348" level="INFO">${result} = 2020-07-15 07:28:26,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:26,701 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:25.238" endtime="20200715 07:28:30.349"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:28:30.349" endtime="20200715 07:28:30.349"></status>
</kw>
<status status="PASS" starttime="20200715 07:28:30.349" endtime="20200715 07:28:30.349"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:28:25.237" endtime="20200715 07:28:30.350" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:28:30.353" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:28:34.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:28:34.037" level="INFO">${output} = 2020-07-15 07:28:31,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:31,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:30.351" endtime="20200715 07:28:34.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:28:34.038" level="INFO">2020-07-15 07:28:31,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:31,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:28:31,798 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 07:28:31,974 [main] INFO freon.BaseFreonGenerator: Executing test with prefix urqlhhraxl
2020-07-15 07:28:31,994 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:33,006 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 07:28:34,019 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=58.58772, max=58.58772, mean=58.58772, stddev=0.0, median=58.58772, p75=58.58772, p95=58.58772, p98=58.58772, p99=58.58772, p999=58.58772, mean_rate=0.8790104027751892, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 07:28:34,022 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 07:28:34,023 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 07:28:34,023 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 07:28:34.037" endtime="20200715 07:28:34.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:28:34.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:28:34.038" endtime="20200715 07:28:34.039"></status>
</kw>
<msg timestamp="20200715 07:28:34.039" level="INFO">${result} = 2020-07-15 07:28:31,632 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:31,797 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:30.351" endtime="20200715 07:28:34.039"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:28:34.040" endtime="20200715 07:28:34.040"></status>
</kw>
<status status="PASS" starttime="20200715 07:28:34.039" endtime="20200715 07:28:34.040"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:28:30.350" endtime="20200715 07:28:34.040" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:28:34.045" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:28:37.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:28:37.810" level="INFO">${output} = 2020-07-15 07:28:35,377 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:35,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:34.042" endtime="20200715 07:28:37.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:28:37.811" level="INFO">2020-07-15 07:28:35,377 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:35,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:28:35,561 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 07:28:35,717 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xjc8jpfae6
2020-07-15 07:28:35,735 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 07:28:36,751 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 07:28:37,743 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=13.592051, max=13.592051, mean=13.592051, stddev=0.0, median=13.592051, p75=13.592051, p95=13.592051, p98=13.592051, p99=13.592051, p999=13.592051, mean_rate=0.8836427677553851, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 07:28:37,744 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 07:28:37,744 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 07:28:37,744 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 07:28:37.810" endtime="20200715 07:28:37.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:28:37.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:28:37.811" endtime="20200715 07:28:37.812"></status>
</kw>
<msg timestamp="20200715 07:28:37.812" level="INFO">${result} = 2020-07-15 07:28:35,377 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:28:35,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:28:34.041" endtime="20200715 07:28:37.812"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:28:37.813" endtime="20200715 07:28:37.813"></status>
</kw>
<status status="PASS" starttime="20200715 07:28:37.812" endtime="20200715 07:28:37.813"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:28:34.041" endtime="20200715 07:28:37.813" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200715 07:28:17.098" endtime="20200715 07:28:37.815"></status>
</suite>
<status status="PASS" starttime="20200715 07:28:17.073" endtime="20200715 07:28:37.818"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
