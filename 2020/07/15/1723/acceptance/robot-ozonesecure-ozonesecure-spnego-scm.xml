<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 07:58:59.428" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:59.478" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:59.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:59.481" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:59.475" endtime="20200715 07:58:59.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:59.482" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:59.481" endtime="20200715 07:58:59.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:59.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:59.482" endtime="20200715 07:58:59.482"></status>
</kw>
<msg timestamp="20200715 07:58:59.482" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:59.474" endtime="20200715 07:58:59.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:58:59.484" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:58:59.483" endtime="20200715 07:58:59.484"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:59.487" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:59.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:59.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:59.485" endtime="20200715 07:58:59.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:59.497" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:59.497" endtime="20200715 07:58:59.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:59.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:59.497" endtime="20200715 07:58:59.498"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:59.484" endtime="20200715 07:58:59.498"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:59.484" endtime="20200715 07:58:59.498"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:59.474" endtime="20200715 07:58:59.498"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:59.474" endtime="20200715 07:58:59.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:59.501" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:07.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:07.964" level="INFO">${output} = 2020-07-15 07:59:00,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:59:00,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:58:59.499" endtime="20200715 07:59:07.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:07.965" level="INFO">2020-07-15 07:59:00,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:59:00,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:59:00,987 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-15 07:59:02,475 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 07:59:02,476 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 07:59:02,484 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 07:59:02,493 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-15 07:59:02,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-28841, with testuser/scm@EXAMPLE.COM as owner.
2020-07-15 07:59:02,570 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-28841/bucket-0-94576, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:59:03,086 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 07:59:03,494 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,027
Average Time spent in key write: 00:00:00,093
Total bytes written: 2050
Total Execution time: 00:00:06,438
***************************************************</msg>
<status status="PASS" starttime="20200715 07:59:07.964" endtime="20200715 07:59:07.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:07.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:07.965" endtime="20200715 07:59:07.966"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:59.498" endtime="20200715 07:59:07.966"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:58:59.473" endtime="20200715 07:59:07.966" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:07.970" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:07.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:07.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:07.968" endtime="20200715 07:59:07.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:07.975" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:07.974" endtime="20200715 07:59:07.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:07.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:07.975" endtime="20200715 07:59:07.975"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:07.968" endtime="20200715 07:59:07.975"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:07.968" endtime="20200715 07:59:07.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:07.978" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:07.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:07.997" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 07:59:07.976" endtime="20200715 07:59:07.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:07.998" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200715 07:59:07.998" endtime="20200715 07:59:07.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:07.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:07.999" endtime="20200715 07:59:07.999"></status>
</kw>
<msg timestamp="20200715 07:59:07.999" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 07:59:07.976" endtime="20200715 07:59:07.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:07.999" endtime="20200715 07:59:08.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.003" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.005" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.001" endtime="20200715 07:59:08.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.006" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:59:08.005" endtime="20200715 07:59:08.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.006" endtime="20200715 07:59:08.006"></status>
</kw>
<msg timestamp="20200715 07:59:08.007" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.001" endtime="20200715 07:59:08.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:59:08.007" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:59:08.007" endtime="20200715 07:59:08.007"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.010" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.008" endtime="20200715 07:59:08.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.021" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.020" endtime="20200715 07:59:08.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.021" endtime="20200715 07:59:08.021"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.008" endtime="20200715 07:59:08.022"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.007" endtime="20200715 07:59:08.022"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.000" endtime="20200715 07:59:08.022"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.000" endtime="20200715 07:59:08.022"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.025" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.051" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 07:59:08.022" endtime="20200715 07:59:08.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.052" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x22d1f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZz4rOl7GX0l4++de07VW6koajLyv87Z5rq+qX9p8x1XK2EkIHSirweUEXKKFVu93w/u2Lo/257g7hv5ZsV+eZGkM23XERZ+MAO+IQGwegdTLVspGjyxomUOBBJcBD2hTGKCdZgG8+EZOvpB3VZwetOrp4RbUd80lbHH6Btx6lwXXR0alzKNSVeeW+9qNhoSxaWoiGxfD2Al6MFF0pSZiGV4ymVGsqEgXDsrM4gvBm7GkdEuNIaVysQB2jEz/Af8x0orEfGWEzFc3z1gTDdYdvDG9dfHXBN6PdQM4jk4bVlpV6zXiUmkdnw3Dr3R7245+r9VpPv18H+9548yI/iYrk9pWqX+6mTpIHWMIHToAMCARKigcsEgciHopM/sbo0GVJPZtb7uGgOO/nSF1J+Zk0waQuM7JOymVtdETuj3QMbKcJ60GMi02ThCD/1ALOspXmi5dHD6Da2hSs6QVmtE2Bb9yEQW3+9gRCJIvE6+bpFe5CHaRyt9xqqmZ3XVY/HJ4BN9/zoBEIbwhuB6DCy6e2/+XvCE1TuZk0LxYGTclsw6wPd0OWPOrhnqdJMJKxGmdZ4hWq88AWEPd+wL9U5EFw2pi9zLdYFZSp4V43miOM6JsBoW5SGIXPIr9pJkdmXyg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCu+fPfd58j1siHbsr4tPidnzF7TjGfPabIWvxJZQtMJk5dPZQVIh5Ft5bUxVn74hZv9b7kGIIGBuA+VmhSfqnibOW
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948044&amp;s=pdQDYG6BUpRhH2BoGHj3xOmAfHAFTrPdNI1gBydtZYU="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 06:42:24 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:59:08 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCu+fPfd58j1siHbsr4tPidnzF7TjGfPabIWvxJZQtMJk5dPZQVIh5Ft5bUxVn74hZv9b7kGIIGBuA+VmhSfqnibOW
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948044&amp;s=pdQDYG6BUpRhH2BoGHj3xOmAfHAFTrPdNI1gBydtZYU="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 06:42:24 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200715 07:59:08.052" endtime="20200715 07:59:08.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.053" endtime="20200715 07:59:08.053"></status>
</kw>
<msg timestamp="20200715 07:59:08.053" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 07:59:08.022" endtime="20200715 07:59:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.054" endtime="20200715 07:59:08.054"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:07.967" endtime="20200715 07:59:08.054"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:59:07.967" endtime="20200715 07:59:08.054" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.059" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.057" endtime="20200715 07:59:08.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.070" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.069" endtime="20200715 07:59:08.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.070" endtime="20200715 07:59:08.071"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.057" endtime="20200715 07:59:08.071"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.057" endtime="20200715 07:59:08.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.076" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.088" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.072" endtime="20200715 07:59:08.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.089" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200715 07:59:08.088" endtime="20200715 07:59:08.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.089" endtime="20200715 07:59:08.089"></status>
</kw>
<msg timestamp="20200715 07:59:08.090" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.071" endtime="20200715 07:59:08.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.090" endtime="20200715 07:59:08.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.093" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.091" endtime="20200715 07:59:08.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.096" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:59:08.096" endtime="20200715 07:59:08.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.096" endtime="20200715 07:59:08.097"></status>
</kw>
<msg timestamp="20200715 07:59:08.097" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.091" endtime="20200715 07:59:08.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:59:08.098" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:59:08.097" endtime="20200715 07:59:08.099"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.102" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.100" endtime="20200715 07:59:08.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.111" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.110" endtime="20200715 07:59:08.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.111" endtime="20200715 07:59:08.111"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.099" endtime="20200715 07:59:08.112"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.099" endtime="20200715 07:59:08.112"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.091" endtime="20200715 07:59:08.112"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.090" endtime="20200715 07:59:08.112"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.114" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.173" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.112" endtime="20200715 07:59:08.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.174" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x2007f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbP+y6W7OhDVvSImdDxEhesCev2nfkSos4f3bMM04+pDnZLWyQeGGVm0BxrL+Yjlv9FAmqiQZylmh5Ea3YHZYKYfgXjpiwjbdOkdAMh655x7TkWaOS/OwiVLh73tVi5+EjZ75dvZUl7MbjPFQahKAyrgnxyfHayRr0TZYRacysnmHQGybkmhYV7i2cTd8AJ9IAG9xqL1I3AGSNqj0zue2YTqs67EICK8ui1Q+Rr/AZguOTq4muxbaS0RB2mStAAuqrbfJB/yG8iN3t6ZaTWJikWZHrgycVMaTbhfetOHlbtlSJ7H2HMC1H78LG5tnrYCc2d8oN5ORq1yEe/Ag8eLhqHbcyxIJjSpIHWMIHToAMCARKigcsEgciV8M6dvmc60L3+lWXjt6AkZZT6seg/w6UwLBJ1ieHxZ9nu//UpFsFIRdRbA7KtXUfOC4pSxeVV42GAY8L29ann3NXp63DSl02cydjuN5cRQBQz2ez/19pQoGVTFFdD3Q4OJMCORnhQEFv/hbA22HoR2DxvedbUO89s9LmEggMhBUpdTp/xQl1GgosezSYZBrThR4j5cUueGcZfjkE9A1DILwB2qqonS/aanxT2LTM7IHnqSqchfP7uWav0bgsiij3Q0LKgMIKLEw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCGNZA/JQ54eJmvNqFjOmqvsvIWc08OdBuwJ0x/AleXSgaJ9qGuw9z23HbHbLjQ+TSm/9RWtvatIO2UgORZYhPqAcW
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948134&amp;s=10PPOfHxeUARwC+S2H1jvaY2DafEa5ALZud5SfCJJq4="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594799948134.tgz"
&lt; Content-Length: 75819
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:59:08 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCGNZA/JQ54eJmvNqFjOmqvsvIWc08OdBuwJ0x/AleXSgaJ9qGuw9z23HbHbLjQ+TSm/9RWtvatIO2UgORZYhPqAcW
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948134&amp;s=10PPOfHxeUARwC+S2H1jvaY2DafEa5ALZud5SfCJJq4="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594799948134.tgz"
Content-Length: 75819
</msg>
<status status="PASS" starttime="20200715 07:59:08.174" endtime="20200715 07:59:08.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.175" endtime="20200715 07:59:08.175"></status>
</kw>
<msg timestamp="20200715 07:59:08.175" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.112" endtime="20200715 07:59:08.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.176" endtime="20200715 07:59:08.176"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.056" endtime="20200715 07:59:08.176"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:59:08.055" endtime="20200715 07:59:08.176" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.182" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.179" endtime="20200715 07:59:08.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.185" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.185" endtime="20200715 07:59:08.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.185" endtime="20200715 07:59:08.186"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.179" endtime="20200715 07:59:08.186"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.178" endtime="20200715 07:59:08.186"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.190" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.201" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 07:59:08.187" endtime="20200715 07:59:08.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.202" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200715 07:59:08.202" endtime="20200715 07:59:08.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.202" endtime="20200715 07:59:08.203"></status>
</kw>
<msg timestamp="20200715 07:59:08.203" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 07:59:08.186" endtime="20200715 07:59:08.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.203" endtime="20200715 07:59:08.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.208" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.209" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.205" endtime="20200715 07:59:08.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.209" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:59:08.209" endtime="20200715 07:59:08.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.210" endtime="20200715 07:59:08.210"></status>
</kw>
<msg timestamp="20200715 07:59:08.210" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.204" endtime="20200715 07:59:08.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:59:08.211" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:59:08.211" endtime="20200715 07:59:08.211"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.215" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.212" endtime="20200715 07:59:08.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.225" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.224" endtime="20200715 07:59:08.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.225" endtime="20200715 07:59:08.225"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.212" endtime="20200715 07:59:08.226"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.211" endtime="20200715 07:59:08.226"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.204" endtime="20200715 07:59:08.226"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.204" endtime="20200715 07:59:08.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.230" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.258" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 07:59:08.227" endtime="20200715 07:59:08.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.259" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x240cf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.5) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQbXax29yZNU1u9Wx6C/xKm+K5ZHXAxwFhivdwfYB7nGm6Bs6L47CXiYTIzMKEGvHFb0wYHhrHqCof304y6LWmzV4yyVHwmNzRCuJYAMopDHdOvIMvfU7eC2K1SAPvvORmv3OUEratoz25pPz95s+ztURapbES2LTcMY27MY3Bi7kqb8K7ktgtufX3/ew2qXSNQ7oZg4jogSL6cOAZs4JFP0CFlvcq6JnvgmMUAeWl4dk1m+axPknT9mbwy7C/5OVHwm4CsUN/I+8xmiUpuLhrIC4dBKCt5KFDVPjJ7Ox1Rli/RzJ0xWHG7SNTiT43EfL6xxXi+L9FbtmE/UzHJlBec+dARl6iJwpIHWMIHToAMCARKigcsEgcj0hFmS5jLcqfqsshvl+C2VKI1/GGnBBqSyt2bLK1L3grJJ3k1S5IqbDyaENcaYujt+31332suSZXzJvd4/ZNfxn/odd8SPpgMW8sCE/0R8hL1DdCSRwQEpCNTm/n30YaG7X/F7SCYzbMtr8zuaWQUQP2uhKaoPNy1H89FmPHQ0cnH0F6aCDUJgC1mbtxXAK/NBZI9F+zUjN3CXRL1Nk7kGsk7Sk/u2J75p0sJYsbHVUNmH2Rm9amdPl5J23Rfdz9D9j/5IFgZ5Gw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLRr0c6j+VIdAaHhkX1QcpwDYd2Cmyhq79hZwpobbCf3G2yO3GtnM/tyJRcy0GmJ9pLrYrIEb3UAg0Gd1VvJTbuzN
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948246&amp;s=Ir3SSYq8va+EQU8DwkyymLSR9eO6YAjSCvcZK1DbUEs="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:59:08 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCLRr0c6j+VIdAaHhkX1QcpwDYd2Cmyhq79hZwpobbCf3G2yO3GtnM/tyJRcy0GmJ9pLrYrIEb3UAg0Gd1VvJTbuzN
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948246&amp;s=Ir3SSYq8va+EQU8DwkyymLSR9eO6YAjSCvcZK1DbUEs="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200715 07:59:08.258" endtime="20200715 07:59:08.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.259" endtime="20200715 07:59:08.259"></status>
</kw>
<msg timestamp="20200715 07:59:08.260" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.5...
* Connected to om (172.26.0.5) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 07:59:08.226" endtime="20200715 07:59:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.260" endtime="20200715 07:59:08.260"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.178" endtime="20200715 07:59:08.260"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:59:08.177" endtime="20200715 07:59:08.260" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.265" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.263" endtime="20200715 07:59:08.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.269" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.268" endtime="20200715 07:59:08.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.269" endtime="20200715 07:59:08.269"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.263" endtime="20200715 07:59:08.270"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.262" endtime="20200715 07:59:08.270"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.272" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.288" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 07:59:08.270" endtime="20200715 07:59:08.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.289" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200715 07:59:08.288" endtime="20200715 07:59:08.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.289" endtime="20200715 07:59:08.289"></status>
</kw>
<msg timestamp="20200715 07:59:08.290" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 07:59:08.270" endtime="20200715 07:59:08.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.290" endtime="20200715 07:59:08.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.294" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.291" endtime="20200715 07:59:08.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.296" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:59:08.296" endtime="20200715 07:59:08.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.296" endtime="20200715 07:59:08.297"></status>
</kw>
<msg timestamp="20200715 07:59:08.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.291" endtime="20200715 07:59:08.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:59:08.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:59:08.297" endtime="20200715 07:59:08.298"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.299" endtime="20200715 07:59:08.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.312" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.311" endtime="20200715 07:59:08.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.312" endtime="20200715 07:59:08.312"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.299" endtime="20200715 07:59:08.312"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.298" endtime="20200715 07:59:08.312"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.291" endtime="20200715 07:59:08.312"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.290" endtime="20200715 07:59:08.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.316" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.344" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 07:59:08.313" endtime="20200715 07:59:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.345" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x9dcf20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.8) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGfS/D+za4+sa6Xs7jzk168ckkkDAww6Bhwa5+MdTAI5EsFSGOhR7veenRhmy1A7VOGppzxRbDtV0l2ZKZc/GvCv47mLnRBiqmqFRJ5e55LVtgSPSo2yzocgqlq+g2m4Xc/VEvvFH7LdYn9i50MKMLeQ3M36dHSclfpFuLZIPMsxu43PjfKyY5KgPIkpxJUJ33weBX2yQUXz397Ro7LGAPDpdtwIWfELtusm3+b4NohU6wuXtmZ8EMZc9VWK3tCXlce87by5MVPr4zbK93zbyeY8wqvu8iJYX1uXHxQM4AruBbTwykmTXN062Vq4aJCFO+KTxirEV88qhhXLDgfMnJLl54PrwQA6SB1jCB06ADAgESooHLBIHIFhZM7C1ZEkgx5wF4ZLRNkMQlSuuybYFdQP2DsBW5V86r9lGtpkXxmZRoYs9Xsw6/X4+dfk/efNQnQ3dIg0uYNPMzNYWsoBcORo8A7ftBsKCwRqU6wC7Tk4+UFM6J4AthpphyTsC2kW01jcsFLtvuegGLiiixMryEeSIxIFN3FLerAlOm8tnWk99zAg8ueO9o8VjMDq7KK7R2cWCNGKzUdP6ACBUaghEQ5K3lDgiGAkzH84EG+osYvEIZL+GtfVJFetIt32auR/4=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC7NZtUaHt4TqLJVFptvtaHyaSiCcImX+yHI+F01C9r1bR1Gd5tgVvxRqazz2vc4taS/3FrG6roabMZgExf+JBkNHv
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948340&amp;s=VnKbFT9SW5wp33O/KCQjTTNusiA+7RQqUkrj18lpUl0="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 06:42:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:59:08 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC7NZtUaHt4TqLJVFptvtaHyaSiCcImX+yHI+F01C9r1bR1Gd5tgVvxRqazz2vc4taS/3FrG6roabMZgExf+JBkNHv
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948340&amp;s=VnKbFT9SW5wp33O/KCQjTTNusiA+7RQqUkrj18lpUl0="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 06:42:04 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200715 07:59:08.345" endtime="20200715 07:59:08.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.346" endtime="20200715 07:59:08.346"></status>
</kw>
<msg timestamp="20200715 07:59:08.346" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.8...
* Connected to scm (172.26.0.8) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 07:59:08.313" endtime="20200715 07:59:08.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.347" endtime="20200715 07:59:08.347"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.262" endtime="20200715 07:59:08.347"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:59:08.261" endtime="20200715 07:59:08.347" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.353" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.350" endtime="20200715 07:59:08.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.355" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.355" endtime="20200715 07:59:08.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.355" endtime="20200715 07:59:08.356"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.349" endtime="20200715 07:59:08.356"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.349" endtime="20200715 07:59:08.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.359" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.372" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.356" endtime="20200715 07:59:08.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.373" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441
</msg>
<status status="PASS" starttime="20200715 07:59:08.372" endtime="20200715 07:59:08.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.373" endtime="20200715 07:59:08.374"></status>
</kw>
<msg timestamp="20200715 07:59:08.374" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.356" endtime="20200715 07:59:08.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.374" endtime="20200715 07:59:08.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.378" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.379" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.375" endtime="20200715 07:59:08.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.380" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:59:08.380" endtime="20200715 07:59:08.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.381" endtime="20200715 07:59:08.381"></status>
</kw>
<msg timestamp="20200715 07:59:08.381" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:59:08.375" endtime="20200715 07:59:08.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:59:08.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:59:08.381" endtime="20200715 07:59:08.382"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.385" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:59:08.383" endtime="20200715 07:59:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.394" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:59:08.394" endtime="20200715 07:59:08.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.395" endtime="20200715 07:59:08.395"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.382" endtime="20200715 07:59:08.395"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.382" endtime="20200715 07:59:08.395"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.375" endtime="20200715 07:59:08.395"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.374" endtime="20200715 07:59:08.395"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:59:08.398" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:59:08.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:59:08.426" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.396" endtime="20200715 07:59:08.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:59:08.427" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x1118f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.4) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQam3aQFtE6kWGV9gmMTW8q3ZnQQ3DMh/emtflxh3HdOJ9CYG5f6dYqDbhloTxL3p2gjoI6un7GyG44gA9qyA+1s1/Dg+MWJGM2IixEUTcJK1ReKYkK2KeMnh5X/VouCJc0LGOT6RnQHeh0n7WNvzgiv7KPEdJ0IeFpFxD0L6G5fix4NMNEn0IFemuwJ3i0XfkTelUiP6tBk/jyQ90MJZ8tvnqXtiGxP/90cX33SjfSvm7uueMsJQxgP7Q+dmZIx9hrqEV/48LPlHshJKlQr0aOlfX5Lz8JveiV1NmJMTAB6INTYPccHQFM5jV+mJMfoH0UB431/odLJy+bbpmFCGsY5vx8+s3FJpIHWMIHToAMCARKigcsEgcjOeKnQF5Y+Ev+s5nkIlHBQLGzmR9X6epKGXaAhPZ4B00KVZ5aOadBaJHNk/kBxFggpOp+HNfJs/e+ETlISXwF1f1n+TssS3uv2JUXI8ibBuZKG8PPXShYHzRusj6aeBtoE9QPhH1LmCietlMU6vN5jt01ziEZeZHvGDGOZ2Yq/z2DdiTVgjPIOO14bz8w1qDb184Ujk3aUqvdMwDItxBo8MMasy57cAgvbZ7cUkBIXQurs58NUzvNpoprYOEG6gOXlok15jVwr+A==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:59:08 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCu5EaSwFCHXn/uasz7+pmdTgH6RFBPty16orI9l3SwgF1FyKUrHvXksL/BLT0ZKHlMv5oT5D38nykPch1rhIlBjkV
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948417&amp;s=tYwxDcKTJLaVbCkhB8pP4eimj2CMagIm8SKhatn6pek="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 06:46:50 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 441

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:59:08 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 07:59:08 GMT
Date: Wed, 15 Jul 2020 07:59:08 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCu5EaSwFCHXn/uasz7+pmdTgH6RFBPty16orI9l3SwgF1FyKUrHvXksL/BLT0ZKHlMv5oT5D38nykPch1rhIlBjkV
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835948417&amp;s=tYwxDcKTJLaVbCkhB8pP4eimj2CMagIm8SKhatn6pek="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 06:46:50 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200715 07:59:08.427" endtime="20200715 07:59:08.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:59:08.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:59:08.428" endtime="20200715 07:59:08.428"></status>
</kw>
<msg timestamp="20200715 07:59:08.428" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 07:59:08.396" endtime="20200715 07:59:08.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:59:08.428" endtime="20200715 07:59:08.429"></status>
</kw>
<status status="PASS" starttime="20200715 07:59:08.349" endtime="20200715 07:59:08.429"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:59:08.348" endtime="20200715 07:59:08.429" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200715 07:58:59.452" endtime="20200715 07:59:08.430"></status>
</suite>
<status status="PASS" starttime="20200715 07:58:59.428" endtime="20200715 07:59:08.432"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
