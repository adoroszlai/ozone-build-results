<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 07:58:00.208" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:00.265" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:00.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:00.266" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:00.260" endtime="20200715 07:58:00.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:00.267" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:00.266" endtime="20200715 07:58:00.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:00.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:00.267" endtime="20200715 07:58:00.268"></status>
</kw>
<msg timestamp="20200715 07:58:00.268" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:00.260" endtime="20200715 07:58:00.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 07:58:00.270" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 07:58:00.269" endtime="20200715 07:58:00.270"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:00.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:00.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:00.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:00.271" endtime="20200715 07:58:00.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:00.284" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:00.283" endtime="20200715 07:58:00.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:00.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:00.284" endtime="20200715 07:58:00.285"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:00.270" endtime="20200715 07:58:00.285"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:00.270" endtime="20200715 07:58:00.285"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:00.259" endtime="20200715 07:58:00.285"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:00.259" endtime="20200715 07:58:00.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:00.289" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:08.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:08.838" level="INFO">${output} = 2020-07-15 07:58:01,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:58:01,733 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:58:00.286" endtime="20200715 07:58:08.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:08.839" level="INFO">2020-07-15 07:58:01,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:58:01,733 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:58:01,733 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-15 07:58:03,322 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 07:58:03,323 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 07:58:03,342 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 07:58:03,343 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-15 07:58:03,381 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-70736, with testuser/scm@EXAMPLE.COM as owner.
2020-07-15 07:58:03,419 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-70736/bucket-0-08491, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:58:03,984 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 07:58:04,361 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,141
Average Time spent in key write: 00:00:00,523
Total bytes written: 10250
Total Execution time: 00:00:06,553
***************************************************</msg>
<status status="PASS" starttime="20200715 07:58:08.838" endtime="20200715 07:58:08.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:08.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:08.839" endtime="20200715 07:58:08.840"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:00.285" endtime="20200715 07:58:08.840"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:58:00.258" endtime="20200715 07:58:08.840" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:08.846" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:08.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:08.848" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:08.844" endtime="20200715 07:58:08.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:08.849" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:08.849" endtime="20200715 07:58:08.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:08.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:08.849" endtime="20200715 07:58:08.850"></status>
</kw>
<msg timestamp="20200715 07:58:08.850" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:08.844" endtime="20200715 07:58:08.850"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:08.853" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:08.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:08.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:08.851" endtime="20200715 07:58:08.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:08.880" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:08.879" endtime="20200715 07:58:08.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:08.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:08.880" endtime="20200715 07:58:08.880"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:08.851" endtime="20200715 07:58:08.881"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:08.850" endtime="20200715 07:58:08.881"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:08.843" endtime="20200715 07:58:08.881"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:08.843" endtime="20200715 07:58:08.881"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:08.884" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:09.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:09.089" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:08.881" endtime="20200715 07:58:09.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:09.090" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:08 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:08 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:08 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    385      0 --:--:-- --:--:-- --:--:--   386
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 07:58:09.090" endtime="20200715 07:58:09.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:09.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:09.091" endtime="20200715 07:58:09.091"></status>
</kw>
<msg timestamp="20200715 07:58:09.091" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:08.881" endtime="20200715 07:58:09.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:09.092" endtime="20200715 07:58:09.092"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:09.098" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:09.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:09.130" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:09.093" endtime="20200715 07:58:09.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:09.132" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   113k      0 --:--:-- --:--:-- --:--:--  117k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 07:58:09.131" endtime="20200715 07:58:09.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:09.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:09.132" endtime="20200715 07:58:09.132"></status>
</kw>
<msg timestamp="20200715 07:58:09.132" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:09.092" endtime="20200715 07:58:09.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 07:58:09.133" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:09 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   113k      0 --:--:-- --:--:-- --:--:--  117k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 07:58:09.133" endtime="20200715 07:58:09.134"></status>
</kw>
<status status="FAIL" starttime="20200715 07:58:08.842" endtime="20200715 07:58:09.134"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:19.140" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:19.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:19.141" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:19.136" endtime="20200715 07:58:19.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:19.142" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:19.141" endtime="20200715 07:58:19.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:19.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:19.142" endtime="20200715 07:58:19.143"></status>
</kw>
<msg timestamp="20200715 07:58:19.143" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:19.136" endtime="20200715 07:58:19.143"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:19.147" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:19.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:19.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:19.144" endtime="20200715 07:58:19.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:19.164" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:19.163" endtime="20200715 07:58:19.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:19.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:19.164" endtime="20200715 07:58:19.164"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:19.143" endtime="20200715 07:58:19.164"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:19.143" endtime="20200715 07:58:19.164"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:19.135" endtime="20200715 07:58:19.165"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:19.135" endtime="20200715 07:58:19.165"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:19.168" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:19.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:19.188" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:19.165" endtime="20200715 07:58:19.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:19.189" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   5025      0 --:--:-- --:--:-- --:--:--  5133
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 07:58:19.189" endtime="20200715 07:58:19.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:19.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:19.189" endtime="20200715 07:58:19.190"></status>
</kw>
<msg timestamp="20200715 07:58:19.190" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:19.165" endtime="20200715 07:58:19.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:19.190" endtime="20200715 07:58:19.191"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:19.194" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:19.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:19.209" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:19.191" endtime="20200715 07:58:19.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:19.209" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   331k      0 --:--:-- --:--:-- --:--:--  366k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 07:58:19.209" endtime="20200715 07:58:19.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:19.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:19.211" endtime="20200715 07:58:19.212"></status>
</kw>
<msg timestamp="20200715 07:58:19.212" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:19.191" endtime="20200715 07:58:19.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 07:58:19.213" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:19 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   331k      0 --:--:-- --:--:-- --:--:--  366k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 07:58:19.212" endtime="20200715 07:58:19.213"></status>
</kw>
<status status="FAIL" starttime="20200715 07:58:19.134" endtime="20200715 07:58:19.213"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:29.218" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:29.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:29.221" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:29.216" endtime="20200715 07:58:29.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:29.222" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:29.221" endtime="20200715 07:58:29.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:29.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:29.222" endtime="20200715 07:58:29.223"></status>
</kw>
<msg timestamp="20200715 07:58:29.223" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:29.215" endtime="20200715 07:58:29.223"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:29.228" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:29.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:29.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:29.224" endtime="20200715 07:58:29.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:29.246" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:29.245" endtime="20200715 07:58:29.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:29.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:29.246" endtime="20200715 07:58:29.247"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:29.223" endtime="20200715 07:58:29.247"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:29.223" endtime="20200715 07:58:29.247"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:29.215" endtime="20200715 07:58:29.247"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:29.214" endtime="20200715 07:58:29.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:29.251" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:29.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:29.272" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:29.248" endtime="20200715 07:58:29.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:29.274" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0   7694      0 --:--:-- --:--:-- --:--:--  8555
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 07:58:29.273" endtime="20200715 07:58:29.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:29.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:29.274" endtime="20200715 07:58:29.275"></status>
</kw>
<msg timestamp="20200715 07:58:29.275" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:29.247" endtime="20200715 07:58:29.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:29.275" endtime="20200715 07:58:29.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:29.279" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:29.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:29.296" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:29.276" endtime="20200715 07:58:29.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:29.297" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   257k      0 --:--:-- --:--:-- --:--:--  266k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 07:58:29.297" endtime="20200715 07:58:29.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:29.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:29.297" endtime="20200715 07:58:29.298"></status>
</kw>
<msg timestamp="20200715 07:58:29.298" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:29.276" endtime="20200715 07:58:29.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 07:58:29.299" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:29 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2999
&lt; 
{ [data not shown]

100  2999  100  2999    0     0   257k      0 --:--:-- --:--:-- --:--:--  266k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 07:58:29.299" endtime="20200715 07:58:29.299"></status>
</kw>
<status status="FAIL" starttime="20200715 07:58:29.214" endtime="20200715 07:58:29.300"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.305" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:39.302" endtime="20200715 07:58:39.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.308" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:39.307" endtime="20200715 07:58:39.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.308" endtime="20200715 07:58:39.308"></status>
</kw>
<msg timestamp="20200715 07:58:39.309" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:39.302" endtime="20200715 07:58:39.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.312" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:39.309" endtime="20200715 07:58:39.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.323" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:39.323" endtime="20200715 07:58:39.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.324" endtime="20200715 07:58:39.324"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.309" endtime="20200715 07:58:39.324"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.309" endtime="20200715 07:58:39.324"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.301" endtime="20200715 07:58:39.324"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.301" endtime="20200715 07:58:39.325"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.328" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.344" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.325" endtime="20200715 07:58:39.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.345" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  19660      0 --:--:-- --:--:-- --:--:-- 20222
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200715 07:58:39.345" endtime="20200715 07:58:39.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.346" endtime="20200715 07:58:39.346"></status>
</kw>
<msg timestamp="20200715 07:58:39.346" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.325" endtime="20200715 07:58:39.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.347" endtime="20200715 07:58:39.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.350" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.370" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.348" endtime="20200715 07:58:39.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.371" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   306k      0 --:--:-- --:--:-- --:--:--  341k
* Connection #0 to host recon left intact
[{"volume":"vol-2-24280","bucket":"bucket-2-48071","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-1-16243","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-0-31023","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-0-35767","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-3-72196","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-1-49633","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-4-18989","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-3-46237","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-4-31903","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-4-90312","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-1-93414","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-3-74169","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-1-67787","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-3-78277","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-2-75108","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-0-12031","fileSize":16384,"count":5},{"volume":"vol-2-24280","bucket":"bucket-1-19453","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-2-87393","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-0-44396","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-3-74794","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-2-60836","fileSize":16384,"count":5},{"volume":"vol-3-01897","bucket":"bucket-4-79749","fileSize":16384,"count":5},{"volume":"vol-4-19049","bucket":"bucket-0-42421","fileSize":16384,"count":5},{"volume":"vol-0-88688","bucket":"bucket-4-13387","fileSize":16384,"count":5},{"volume":"vol-1-02869","bucket":"bucket-2-13884","fileSize":16384,"count":5},{"volume":"21162-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"21162-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"21162-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest366","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"s3v","bucket":"bucket-18814","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-71949","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-45401","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-71949","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-00048","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-76461","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-98553","fileSize":1024,"count":2},{"volume":"vol-0-70736","bucket":"bucket-0-08491","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200715 07:58:39.370" endtime="20200715 07:58:39.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.371" endtime="20200715 07:58:39.371"></status>
</kw>
<msg timestamp="20200715 07:58:39.372" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.347" endtime="20200715 07:58:39.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.372" endtime="20200715 07:58:39.372"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.300" endtime="20200715 07:58:39.372"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:08.842" endtime="20200715 07:58:39.372"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:58:08.841" endtime="20200715 07:58:39.372" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.377" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.455" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.375" endtime="20200715 07:58:39.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.456" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1971
&lt; 
{ [data not shown]

100  1971  100  1971    0     0  27907      0 --:--:-- --:--:-- --:--:-- 28157
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"d52c68f6-81e9-41c6-ad3d-1e103ccb5879","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594799914902,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25061879808},"pipelines":[{"pipelineID":"5361489f-c9a0-456f-8613-9da35bc21727","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"},{"pipelineID":"a2d7a3f9-ca9c-4f81-8e2e-358a8ecd9135","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1594798673758},{"uuid":"074d8ba4-f98a-42a7-b7c3-0642da11c819","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594799914898,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25061879808},"pipelines":[{"pipelineID":"750a7d8e-682b-4b68-b616-b37ca73cb480","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"a2d7a3f9-ca9c-4f81-8e2e-358a8ecd9135","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594798671329},{"uuid":"765fd521-c1f2-44c3-9259-267b3bb69fc6","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594799914953,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25061879808},"pipelines":[{"pipelineID":"9c452860-f910-4b34-b9f5-b6068dcc9492","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"a2d7a3f9-ca9c-4f81-8e2e-358a8ecd9135","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594798673937}]}</msg>
<status status="PASS" starttime="20200715 07:58:39.456" endtime="20200715 07:58:39.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.457" endtime="20200715 07:58:39.457"></status>
</kw>
<msg timestamp="20200715 07:58:39.458" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.375" endtime="20200715 07:58:39.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.458" endtime="20200715 07:58:39.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.458" endtime="20200715 07:58:39.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.459" endtime="20200715 07:58:39.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.460" endtime="20200715 07:58:39.460"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.464" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.497" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.461" endtime="20200715 07:58:39.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.497" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  50012      0 --:--:-- --:--:-- --:--:-- 50666
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"750a7d8e-682b-4b68-b616-b37ca73cb480","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1212512,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"5361489f-c9a0-456f-8613-9da35bc21727","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1212973,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"9c452860-f910-4b34-b9f5-b6068dcc9492","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1211048,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"a2d7a3f9-ca9c-4f81-8e2e-358a8ecd9135","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1210993,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200715 07:58:39.497" endtime="20200715 07:58:39.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.498" endtime="20200715 07:58:39.498"></status>
</kw>
<msg timestamp="20200715 07:58:39.499" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.460" endtime="20200715 07:58:39.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.499" endtime="20200715 07:58:39.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.499" endtime="20200715 07:58:39.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.500" endtime="20200715 07:58:39.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.500" endtime="20200715 07:58:39.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.501" endtime="20200715 07:58:39.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.501" endtime="20200715 07:58:39.503"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.506" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.525" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.503" endtime="20200715 07:58:39.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.526" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  13506      0 --:--:-- --:--:-- --:--:-- 14307
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":75185639424},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200715 07:58:39.525" endtime="20200715 07:58:39.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.526" endtime="20200715 07:58:39.527"></status>
</kw>
<msg timestamp="20200715 07:58:39.527" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.503" endtime="20200715 07:58:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.527" endtime="20200715 07:58:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.528" endtime="20200715 07:58:39.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.528" endtime="20200715 07:58:39.528"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.531" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.555" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.529" endtime="20200715 07:58:39.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.556" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  25384      0 --:--:-- --:--:-- --:--:-- 26705
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594798737643,"lastReportTimestamp":1594799824608},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594798737514,"lastReportTimestamp":1594799914907},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594798737352,"lastReportTimestamp":1594799914914}]</msg>
<status status="PASS" starttime="20200715 07:58:39.556" endtime="20200715 07:58:39.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.557" endtime="20200715 07:58:39.557"></status>
</kw>
<msg timestamp="20200715 07:58:39.557" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.528" endtime="20200715 07:58:39.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.558" endtime="20200715 07:58:39.558"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:58:39.374" endtime="20200715 07:58:39.558" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.564" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.567" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 07:58:39.561" endtime="20200715 07:58:39.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.567" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 07:58:39.567" endtime="20200715 07:58:39.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.568" endtime="20200715 07:58:39.568"></status>
</kw>
<msg timestamp="20200715 07:58:39.568" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 07:58:39.561" endtime="20200715 07:58:39.568"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.571" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:58:39.569" endtime="20200715 07:58:39.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.583" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:58:39.582" endtime="20200715 07:58:39.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.583" endtime="20200715 07:58:39.584"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.569" endtime="20200715 07:58:39.584"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.569" endtime="20200715 07:58:39.584"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.561" endtime="20200715 07:58:39.584"></status>
</kw>
<status status="PASS" starttime="20200715 07:58:39.560" endtime="20200715 07:58:39.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:58:39.587" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:58:39.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:58:39.637" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.585" endtime="20200715 07:58:39.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:58:39.638" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.4...
* Connected to recon (172.26.0.4) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 441
&lt; 
* Ignoring the response-body
{ [data not shown]

100   441  100   441    0     0  14128      0 --:--:-- --:--:-- --:--:-- 14225
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xec4f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.4) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQLO72L0VrfnFoyGWPtZtef70P2J/OQwt2wSuMIexoxMqG4ebT10u2dSPOGiac+xor+Ga2SmTOJsxAD2Z9JBo7PnykjsI552Pepbt2dBLr2PEk83hw8fw+CcyKUwK+Wbuv1qKmF8V+6COHNV35/uYpb5sHbVOpSsn472Mm+pajpSZ0aZZbhstT7NCykiGRD/BtiNxNAjRDLL8nG1PqEKdrAZdllvtYNbs5OucsGkmI+Zq3nR7Ud66y2EaVNKpHozUbmhbpuVqg+8Izs3Lo8ygFLUBA9ySNMLMdbusKCwH25AmHspkJmaY+prV0LuvTuiV+dkF5JBnzAZNu/cjEYoda5mcWWkgdIwgc+gAwIBEqKBxwSBxCuzg1GPJJxq8ZI1JCXUW5wL+e8ZN2JeFZCw3uzBjj8T9A49UKIGosAXkD0+kfppc958oz0FgMwVfH4F/ZibNaH0rdtFRQbcgdIQ5U3Mi1WcZYcxFjc8eYP2eFA0pzYf0ymi8+67c1iQN33Tgfd9GdGy42NCsLa5tW7swac+2C+u8GxE3OuWoyinYzR5CnDui1ujBABSKcuWNS6VPHCeYtTnC3bmKkRbRXJRPwv2OqO4G8FHCvU9oLLpPZ3Wm5waYVAl3zk=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Date: Wed, 15 Jul 2020 07:58:39 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCqx2unTRxjY9pl43eiIagcNXSf06Qvh6wdLZgJdiKUWGYM0o0VGCD5pSnKwAWTPZ1E13sH5JgZqV8OD4cfyQNiPzL
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594835919630&amp;s=MfpcBfpR3BzQQnZlCeAEpzY88m1m6JXZJZEg/xzcGHQ="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 06:46:50 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  51929      0 --:--:-- --:--:-- --:--:-- 51929
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.eeb92191.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2f7524a2.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c5fb9812.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.637" endtime="20200715 07:58:39.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:58:39.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:58:39.638" endtime="20200715 07:58:39.639"></status>
</kw>
<msg timestamp="20200715 07:58:39.639" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 07:58:39.584" endtime="20200715 07:58:39.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200715 07:58:39.639" endtime="20200715 07:58:39.640"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:58:39.559" endtime="20200715 07:58:39.640" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200715 07:58:00.235" endtime="20200715 07:58:39.641"></status>
</suite>
<status status="PASS" starttime="20200715 07:58:00.209" endtime="20200715 07:58:39.644"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
