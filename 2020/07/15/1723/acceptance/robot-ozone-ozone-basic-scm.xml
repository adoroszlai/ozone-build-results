<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 07:12:17.277" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200715 07:12:17.321" endtime="20200715 07:12:17.321"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:12:17.326" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:12:17.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:12:17.394" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:12:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 06:41:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200715 07:12:17.321" endtime="20200715 07:12:17.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:12:17.395" level="INFO">HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:12:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 06:41:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200715 07:12:17.394" endtime="20200715 07:12:17.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:12:17.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:12:17.395" endtime="20200715 07:12:17.395"></status>
</kw>
<msg timestamp="20200715 07:12:17.396" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 07:12:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 06:41:52 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200715 07:12:17.321" endtime="20200715 07:12:17.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200715 07:12:17.396" endtime="20200715 07:12:17.396"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:12:17.320" endtime="20200715 07:12:17.397" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:12:17.398" endtime="20200715 07:12:17.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:12:17.401" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:17.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:17.559" level="INFO">${output} = 2020-07-15 07:12:18,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:12:19,085 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:12:17.399" endtime="20200715 07:13:17.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:17.560" level="INFO">2020-07-15 07:12:18,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:12:19,085 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 07:12:19,086 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 07:12:20,967 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 07:12:20,968 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-15 07:12:20,970 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-15 07:12:20,972 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 07:12:20,984 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-15 07:12:21,034 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86794, with hadoop as owner.
2020-07-15 07:12:21,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-73196, with hadoop as owner.
2020-07-15 07:12:21,303 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-35329, with hadoop as owner.
2020-07-15 07:12:21,315 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-95524, with hadoop as owner.
2020-07-15 07:12:21,326 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-40785, with hadoop as owner.
2020-07-15 07:12:21,342 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86794/bucket-0-61111, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,424 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-73196/bucket-0-89508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,431 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-35329/bucket-0-85998, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95524/bucket-0-33594, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40785/bucket-0-19446, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,464 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86794/bucket-1-74464, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,470 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-73196/bucket-1-50096, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,481 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-35329/bucket-1-96416, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,495 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95524/bucket-1-14303, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,504 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40785/bucket-1-82191, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,515 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86794/bucket-2-23932, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,525 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-73196/bucket-2-53864, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-35329/bucket-2-96389, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,548 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95524/bucket-2-76126, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,563 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40785/bucket-2-91818, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86794/bucket-3-94919, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,581 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-73196/bucket-3-32453, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,587 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-35329/bucket-3-66610, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,598 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95524/bucket-3-90704, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,605 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40785/bucket-3-04831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,614 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86794/bucket-4-51275, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,619 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-73196/bucket-4-71356, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,629 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-35329/bucket-4-66280, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-95524/bucket-4-31567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-40785/bucket-4-98969, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 07:12:21,992 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-15 07:12:22,673 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 07:12:22,993 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-15 07:12:23,993 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-15 07:12:24,994 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-15 07:12:26,054 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-15 07:12:27,057 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-15 07:12:28,058 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-15 07:12:29,058 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-15 07:12:30,059 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-15 07:12:31,061 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-15 07:12:32,061 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-07-15 07:12:33,062 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-15 07:12:34,062 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-15 07:12:35,066 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-07-15 07:12:36,068 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-07-15 07:12:37,068 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-07-15 07:12:38,070 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-07-15 07:12:39,070 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-07-15 07:12:40,071 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-07-15 07:12:41,071 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-15 07:12:42,071 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-15 07:12:43,072 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-15 07:12:44,072 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-15 07:12:45,076 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-07-15 07:12:46,076 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-15 07:12:47,077 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-15 07:12:48,079 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-15 07:12:49,079 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-15 07:12:50,079 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-15 07:12:51,080 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-07-15 07:12:52,080 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-07-15 07:12:53,081 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-07-15 07:12:54,081 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-15 07:12:55,082 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-15 07:12:56,082 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-15 07:12:57,086 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-15 07:12:58,086 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-15 07:12:59,087 [Thread-7] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2020-07-15 07:13:00,087 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-07-15 07:13:01,088 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-07-15 07:13:02,088 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-07-15 07:13:03,089 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-15 07:13:04,089 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-15 07:13:05,090 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-07-15 07:13:06,090 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-15 07:13:07,091 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-07-15 07:13:08,093 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-07-15 07:13:09,094 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-07-15 07:13:10,095 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-15 07:13:11,095 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-15 07:13:12,096 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,312
Average Time spent in bucket creation: 00:00:00,172
Average Time spent in key creation: 00:00:02,149
Average Time spent in key write: 00:00:00,902
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:57,941
***************************************************</msg>
<status status="PASS" starttime="20200715 07:13:17.559" endtime="20200715 07:13:17.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:17.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:17.560" endtime="20200715 07:13:17.561"></status>
</kw>
<msg timestamp="20200715 07:13:17.561" level="INFO">${result} = 2020-07-15 07:12:18,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 07:12:19,085 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 07:12:17.399" endtime="20200715 07:13:17.561"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:17.562" endtime="20200715 07:13:17.562"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:17.561" endtime="20200715 07:13:17.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:17.562" endtime="20200715 07:13:17.563"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 07:12:17.398" endtime="20200715 07:13:17.563" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200715 07:12:17.301" endtime="20200715 07:13:17.564"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200715 07:13:17.571" level="INFO">${random} = 92780</msg>
<status status="PASS" starttime="20200715 07:13:17.571" endtime="20200715 07:13:17.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200715 07:13:17.571" level="INFO">${prefix} = 92780</msg>
<status status="PASS" starttime="20200715 07:13:17.571" endtime="20200715 07:13:17.571"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:17.570" endtime="20200715 07:13:17.572"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:17.572" endtime="20200715 07:13:17.572"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:17.577" level="INFO">Running command 'ozone sh volume info o3://om:9862/92780-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:20.084" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:13:20.084" level="INFO">${output} = VOLUME_NOT_FOUND Volume 92780-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 07:13:17.574" endtime="20200715 07:13:20.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:20.086" level="INFO">VOLUME_NOT_FOUND Volume 92780-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 07:13:20.085" endtime="20200715 07:13:20.086"></status>
</kw>
<msg timestamp="20200715 07:13:20.086" level="INFO">${result} = VOLUME_NOT_FOUND Volume 92780-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 07:13:17.573" endtime="20200715 07:13:20.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:20.087" endtime="20200715 07:13:20.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:20.091" level="INFO">Running command 'ozone sh volume create o3://om:9862/92780-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:22.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:22.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:20.088" endtime="20200715 07:13:22.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:22.607" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:22.606" endtime="20200715 07:13:22.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:22.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:22.607" endtime="20200715 07:13:22.608"></status>
</kw>
<msg timestamp="20200715 07:13:22.608" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:13:20.087" endtime="20200715 07:13:22.608"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:22.608" endtime="20200715 07:13:22.608"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:22.612" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="92780-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:25.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:25.970" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 07:13:22.609" endtime="20200715 07:13:25.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:25.971" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:13:25.971" endtime="20200715 07:13:25.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:25.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:25.972" endtime="20200715 07:13:25.972"></status>
</kw>
<msg timestamp="20200715 07:13:25.972" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 07:13:22.608" endtime="20200715 07:13:25.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:25.972" endtime="20200715 07:13:25.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:25.976" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="92780-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:28.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:28.833" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 07:13:25.973" endtime="20200715 07:13:28.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:28.834" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:13:28.833" endtime="20200715 07:13:28.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:28.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:28.834" endtime="20200715 07:13:28.834"></status>
</kw>
<msg timestamp="20200715 07:13:28.835" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:13:22.396Z",
  "modificationTime": "2020-07-15T07:13:22.396Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 07:13:25.973" endtime="20200715 07:13:28.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:28.835" endtime="20200715 07:13:28.835"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:28.839" level="INFO">Running command 'ozone sh volume update o3://om:9862/92780-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:31.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:31.530" level="INFO">${output} = {
  "metadata" : { },
  "name" : "92780-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:13:22.396Z",
  "modificationTime" : "2020-07-15T07:13:31.202Z",
  "acl...</msg>
<status status="PASS" starttime="20200715 07:13:28.836" endtime="20200715 07:13:31.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:31.531" level="INFO">{
  "metadata" : { },
  "name" : "92780-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:13:22.396Z",
  "modificationTime" : "2020-07-15T07:13:31.202Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 07:13:31.530" endtime="20200715 07:13:31.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:31.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:31.531" endtime="20200715 07:13:31.532"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:28.835" endtime="20200715 07:13:31.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:31.536" level="INFO">Running command 'ozone sh volume info o3://om:9862/92780-rpcwoport | jq -r '. | select(.name=="92780-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:34.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:34.213" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:13:31.533" endtime="20200715 07:13:34.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:34.216" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 07:13:34.214" endtime="20200715 07:13:34.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:34.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:34.216" endtime="20200715 07:13:34.217"></status>
</kw>
<msg timestamp="20200715 07:13:34.217" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:13:31.532" endtime="20200715 07:13:34.217"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:34.217" endtime="20200715 07:13:34.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:34.221" level="INFO">Running command 'ozone sh bucket create o3://om:9862/92780-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:36.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:36.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:34.218" endtime="20200715 07:13:36.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:36.786" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:36.785" endtime="20200715 07:13:36.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:36.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:36.786" endtime="20200715 07:13:36.787"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:34.217" endtime="20200715 07:13:36.787"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:36.791" level="INFO">Running command 'ozone sh bucket info o3://om:9862/92780-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:39.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:39.456" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 07:13:36.788" endtime="20200715 07:13:39.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:39.457" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 07:13:39.456" endtime="20200715 07:13:39.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:39.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:39.457" endtime="20200715 07:13:39.457"></status>
</kw>
<msg timestamp="20200715 07:13:39.458" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 07:13:36.787" endtime="20200715 07:13:39.458"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:39.458" endtime="20200715 07:13:39.458"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:39.462" level="INFO">Running command 'ozone sh bucket list o3://om:9862/92780-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:42.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:42.231" level="INFO">${output} = 92780-rpcwoport</msg>
<status status="PASS" starttime="20200715 07:13:39.459" endtime="20200715 07:13:42.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:42.232" level="INFO">92780-rpcwoport</msg>
<status status="PASS" starttime="20200715 07:13:42.232" endtime="20200715 07:13:42.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:42.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:42.232" endtime="20200715 07:13:42.233"></status>
</kw>
<msg timestamp="20200715 07:13:42.233" level="INFO">${result} = 92780-rpcwoport</msg>
<status status="PASS" starttime="20200715 07:13:39.458" endtime="20200715 07:13:42.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 07:13:42.233" endtime="20200715 07:13:42.234"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:42.237" level="INFO">Running command 'ozone sh key put o3://om:9862/92780-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:46.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:46.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:42.235" endtime="20200715 07:13:46.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:46.731" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:46.730" endtime="20200715 07:13:46.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:46.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:46.731" endtime="20200715 07:13:46.731"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:42.235" endtime="20200715 07:13:46.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:46.735" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:46.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:46.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:46.732" endtime="20200715 07:13:46.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:46.737" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:46.737" endtime="20200715 07:13:46.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:46.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:46.738" endtime="20200715 07:13:46.738"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:46.732" endtime="20200715 07:13:46.738"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:46.742" level="INFO">Running command 'ozone sh key get o3://om:9862/92780-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:51.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:51.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:46.739" endtime="20200715 07:13:51.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:51.114" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:51.113" endtime="20200715 07:13:51.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:51.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:51.114" endtime="20200715 07:13:51.115"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:46.738" endtime="20200715 07:13:51.115"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:51.119" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:51.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:51.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:51.116" endtime="20200715 07:13:51.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:51.122" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:51.121" endtime="20200715 07:13:51.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:51.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:51.122" endtime="20200715 07:13:51.123"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:51.115" endtime="20200715 07:13:51.123"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:51.126" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/92780-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:55.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:55.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:51.123" endtime="20200715 07:13:55.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:55.740" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:55.739" endtime="20200715 07:13:55.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:55.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:55.740" endtime="20200715 07:13:55.740"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:51.123" endtime="20200715 07:13:55.741"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:55.743" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:55.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:55.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:55.741" endtime="20200715 07:13:55.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:55.747" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:55.746" endtime="20200715 07:13:55.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:55.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:55.747" endtime="20200715 07:13:55.747"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:55.741" endtime="20200715 07:13:55.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:55.750" level="INFO">Running command 'ozone sh key get o3://om:9862/92780-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:59.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:59.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:55.748" endtime="20200715 07:13:59.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:59.946" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:59.946" endtime="20200715 07:13:59.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:59.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:59.947" endtime="20200715 07:13:59.947"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:55.748" endtime="20200715 07:13:59.947"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:59.950" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:13:59.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:13:59.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:13:59.948" endtime="20200715 07:13:59.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:13:59.953" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:13:59.953" endtime="20200715 07:13:59.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:13:59.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:13:59.953" endtime="20200715 07:13:59.954"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:59.947" endtime="20200715 07:13:59.954"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:13:59.956" level="INFO">Running command 'ozone sh key info o3://om:9862/92780-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:02.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:02.888" level="INFO">${output} = {
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:53.595Z",
  "modificationTime": "2020-07-15T07:13:55.341Z",...</msg>
<status status="PASS" starttime="20200715 07:13:59.955" endtime="20200715 07:14:02.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:02.889" level="INFO">{
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:53.595Z",
  "modificationTime": "2020-07-15T07:13:55.341Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516631500750980,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:14:02.888" endtime="20200715 07:14:02.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:02.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:02.889" endtime="20200715 07:14:02.889"></status>
</kw>
<msg timestamp="20200715 07:14:02.890" level="INFO">${result} = {
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:53.595Z",
  "modificationTime": "2020-07-15T07:13:55.341Z",...</msg>
<status status="PASS" starttime="20200715 07:13:59.954" endtime="20200715 07:14:02.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:02.890" endtime="20200715 07:14:02.890"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:02.894" level="INFO">Running command 'ozone sh key delete o3://om:9862/92780-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:05.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:05.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:02.891" endtime="20200715 07:14:05.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:05.319" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:05.318" endtime="20200715 07:14:05.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:05.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:05.319" endtime="20200715 07:14:05.319"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:02.890" endtime="20200715 07:14:05.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:05.322" level="INFO">Running command 'ozone sh key cp o3://om:9862/92780-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:09.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:09.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:05.320" endtime="20200715 07:14:09.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:09.800" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:09.799" endtime="20200715 07:14:09.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:09.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:09.800" endtime="20200715 07:14:09.801"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:05.320" endtime="20200715 07:14:09.801"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:09.809" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:09.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:09.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:09.802" endtime="20200715 07:14:09.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:09.815" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:09.814" endtime="20200715 07:14:09.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:09.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:09.815" endtime="20200715 07:14:09.815"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:09.801" endtime="20200715 07:14:09.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:09.818" level="INFO">Running command 'ozone sh key get o3://om:9862/92780-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:14.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:14.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:09.816" endtime="20200715 07:14:14.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:14.039" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:14.038" endtime="20200715 07:14:14.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:14.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:14.039" endtime="20200715 07:14:14.039"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:09.816" endtime="20200715 07:14:14.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:14.042" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:14.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:14.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:14.040" endtime="20200715 07:14:14.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:14.046" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:14.045" endtime="20200715 07:14:14.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:14.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:14.046" endtime="20200715 07:14:14.047"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:14.040" endtime="20200715 07:14:14.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:14.050" level="INFO">Running command 'ozone sh key delete o3://om:9862/92780-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:16.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:16.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:14.048" endtime="20200715 07:14:16.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:16.559" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:16.558" endtime="20200715 07:14:16.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:16.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:16.559" endtime="20200715 07:14:16.560"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:14.047" endtime="20200715 07:14:16.560"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:16.563" level="INFO">Running command 'ozone sh key get o3://om:9862/92780-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:19.018" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:14:19.018" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:14:16.560" endtime="20200715 07:14:19.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:19.019" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:14:19.018" endtime="20200715 07:14:19.019"></status>
</kw>
<msg timestamp="20200715 07:14:19.019" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:14:16.560" endtime="20200715 07:14:19.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:19.019" endtime="20200715 07:14:19.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:19.023" level="INFO">Running command 'ozone sh key get --force o3://om:9862/92780-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:23.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:23.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:19.020" endtime="20200715 07:14:23.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:23.309" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:23.308" endtime="20200715 07:14:23.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:23.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:23.309" endtime="20200715 07:14:23.309"></status>
</kw>
<msg timestamp="20200715 07:14:23.309" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:14:19.020" endtime="20200715 07:14:23.310"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:23.310" endtime="20200715 07:14:23.310"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:23.313" level="INFO">Running command 'ozone sh key info o3://om:9862/92780-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:26.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:26.558" level="INFO">${output} = {
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:44.632Z",
  "modificationTime": "2020-07-15T07:13:46.343Z",
  "re...</msg>
<status status="PASS" starttime="20200715 07:14:23.311" endtime="20200715 07:14:26.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:26.559" level="INFO">{
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:44.632Z",
  "modificationTime": "2020-07-15T07:13:46.343Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516630913417340,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:14:26.559" endtime="20200715 07:14:26.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:26.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:26.560" endtime="20200715 07:14:26.560"></status>
</kw>
<msg timestamp="20200715 07:14:26.560" level="INFO">${result} = {
  "volumeName": "92780-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:13:44.632Z",
  "modificationTime": "2020-07-15T07:13:46.343Z",
  "re...</msg>
<status status="PASS" starttime="20200715 07:14:23.310" endtime="20200715 07:14:26.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:26.560" endtime="20200715 07:14:26.561"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:26.565" level="INFO">Running command 'ozone sh key list o3://om:9862/92780-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:29.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:29.336" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 07:14:26.562" endtime="20200715 07:14:29.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:29.337" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 07:14:29.337" endtime="20200715 07:14:29.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:29.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:29.338" endtime="20200715 07:14:29.338"></status>
</kw>
<msg timestamp="20200715 07:14:29.338" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 07:14:26.561" endtime="20200715 07:14:29.339"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:29.339" endtime="20200715 07:14:29.339"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:29.342" level="INFO">Running command 'ozone sh key rename o3://om:9862/92780-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:31.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:31.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:29.340" endtime="20200715 07:14:31.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:31.776" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:31.775" endtime="20200715 07:14:31.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:31.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:31.776" endtime="20200715 07:14:31.777"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:29.339" endtime="20200715 07:14:31.777"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:31.780" level="INFO">Running command 'ozone sh key list o3://om:9862/92780-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:34.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:34.386" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 07:14:31.778" endtime="20200715 07:14:34.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:34.387" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 07:14:34.387" endtime="20200715 07:14:34.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:34.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:34.388" endtime="20200715 07:14:34.388"></status>
</kw>
<msg timestamp="20200715 07:14:34.388" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 07:14:31.777" endtime="20200715 07:14:34.388"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:34.389" endtime="20200715 07:14:34.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:34.393" level="INFO">Running command 'ozone sh key delete o3://om:9862/92780-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:36.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:36.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:34.390" endtime="20200715 07:14:36.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:36.977" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:36.976" endtime="20200715 07:14:36.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:36.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:36.977" endtime="20200715 07:14:36.978"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:34.389" endtime="20200715 07:14:36.978"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:42.234" endtime="20200715 07:14:36.978"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:42.234" endtime="20200715 07:14:36.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:36.981" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/92780-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:39.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:39.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:36.979" endtime="20200715 07:14:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:39.406" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:39.405" endtime="20200715 07:14:39.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:39.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:39.406" endtime="20200715 07:14:39.407"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:36.978" endtime="20200715 07:14:39.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:39.410" level="INFO">Running command 'ozone sh volume delete o3://om:9862/92780-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:42.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:42.054" level="INFO">${output} = Volume 92780-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200715 07:14:39.407" endtime="20200715 07:14:42.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:42.055" level="INFO">Volume 92780-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200715 07:14:42.054" endtime="20200715 07:14:42.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:42.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:42.055" endtime="20200715 07:14:42.056"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:39.407" endtime="20200715 07:14:42.056"></status>
</kw>
<status status="PASS" starttime="20200715 07:13:17.573" endtime="20200715 07:14:42.056"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:13:17.572" endtime="20200715 07:14:42.056" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:42.058" endtime="20200715 07:14:42.058"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:42.068" level="INFO">Running command 'ozone sh volume create o3://om:9862/92780-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:44.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:44.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:14:42.065" endtime="20200715 07:14:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:44.578" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:14:44.578" endtime="20200715 07:14:44.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:44.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:44.579" endtime="20200715 07:14:44.579"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:42.065" endtime="20200715 07:14:44.579"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:44.582" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/92780-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:47.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:47.521" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:14:44.580" endtime="20200715 07:14:47.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:47.522" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:14:47.522" endtime="20200715 07:14:47.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:47.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:47.522" endtime="20200715 07:14:47.523"></status>
</kw>
<msg timestamp="20200715 07:14:47.523" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:14:44.579" endtime="20200715 07:14:47.523"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:47.523" endtime="20200715 07:14:47.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:47.528" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/92780-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:50.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:50.003" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 07:14:47.525" endtime="20200715 07:14:50.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:50.004" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 07:14:50.003" endtime="20200715 07:14:50.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:50.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:50.004" endtime="20200715 07:14:50.005"></status>
</kw>
<msg timestamp="20200715 07:14:50.005" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 07:14:47.524" endtime="20200715 07:14:50.005"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:50.009" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/92780-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:52.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:52.760" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:14:50.006" endtime="20200715 07:14:52.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:52.761" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:14:52.760" endtime="20200715 07:14:52.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:52.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:52.761" endtime="20200715 07:14:52.762"></status>
</kw>
<msg timestamp="20200715 07:14:52.762" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:14:50.005" endtime="20200715 07:14:52.762"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:52.762" endtime="20200715 07:14:52.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:52.766" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/92780-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:55.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:55.362" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 07:14:52.764" endtime="20200715 07:14:55.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:55.363" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 07:14:55.362" endtime="20200715 07:14:55.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:55.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:55.363" endtime="20200715 07:14:55.364"></status>
</kw>
<msg timestamp="20200715 07:14:55.364" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 07:14:52.763" endtime="20200715 07:14:55.364"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:55.368" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/92780-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:14:58.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:14:58.174" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:14:55.365" endtime="20200715 07:14:58.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:14:58.175" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:14:58.174" endtime="20200715 07:14:58.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:14:58.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:14:58.175" endtime="20200715 07:14:58.176"></status>
</kw>
<msg timestamp="20200715 07:14:58.176" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:14:55.364" endtime="20200715 07:14:58.176"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:14:58.176" endtime="20200715 07:14:58.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:14:58.180" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/92780-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:00.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:00.781" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:14:58.178" endtime="20200715 07:15:00.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:00.782" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:00.781" endtime="20200715 07:15:00.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:00.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:00.782" endtime="20200715 07:15:00.783"></status>
</kw>
<msg timestamp="20200715 07:15:00.783" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:14:58.178" endtime="20200715 07:15:00.783"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:00.786" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/92780-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:03.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:03.536" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200715 07:15:00.784" endtime="20200715 07:15:03.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:03.537" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:03.537" endtime="20200715 07:15:03.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:03.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:03.538" endtime="20200715 07:15:03.538"></status>
</kw>
<msg timestamp="20200715 07:15:03.538" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200715 07:15:00.783" endtime="20200715 07:15:03.539"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:03.539" endtime="20200715 07:15:03.539"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:03.539" endtime="20200715 07:15:03.540"></status>
</kw>
<status status="PASS" starttime="20200715 07:14:42.058" endtime="20200715 07:15:03.540"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:14:42.057" endtime="20200715 07:15:03.540" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:03.542" endtime="20200715 07:15:03.542"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:03.546" level="INFO">Running command 'ozone sh bucket create o3://om:9862/92780-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:06.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:06.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:15:03.544" endtime="20200715 07:15:06.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:06.075" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:15:06.075" endtime="20200715 07:15:06.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:06.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:06.076" endtime="20200715 07:15:06.076"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:03.544" endtime="20200715 07:15:06.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:06.079" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/92780-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:08.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:08.644" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:06.077" endtime="20200715 07:15:08.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:08.645" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:08.645" endtime="20200715 07:15:08.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:08.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:08.646" endtime="20200715 07:15:08.646"></status>
</kw>
<msg timestamp="20200715 07:15:08.647" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:06.076" endtime="20200715 07:15:08.647"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:08.647" endtime="20200715 07:15:08.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:08.650" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/92780-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:11.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:11.045" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 07:15:08.648" endtime="20200715 07:15:11.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:11.046" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 07:15:11.045" endtime="20200715 07:15:11.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:11.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:11.046" endtime="20200715 07:15:11.047"></status>
</kw>
<msg timestamp="20200715 07:15:11.047" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 07:15:08.647" endtime="20200715 07:15:11.047"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:11.051" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/92780-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:13.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:13.796" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:11.048" endtime="20200715 07:15:13.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:13.797" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:13.796" endtime="20200715 07:15:13.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:13.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:13.797" endtime="20200715 07:15:13.797"></status>
</kw>
<msg timestamp="20200715 07:15:13.798" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:11.047" endtime="20200715 07:15:13.798"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:13.798" endtime="20200715 07:15:13.799"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:13.802" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/92780-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:16.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:16.356" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:13.800" endtime="20200715 07:15:16.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:16.357" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:16.356" endtime="20200715 07:15:16.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:16.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:16.357" endtime="20200715 07:15:16.358"></status>
</kw>
<msg timestamp="20200715 07:15:16.358" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:13.799" endtime="20200715 07:15:16.358"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:16.361" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/92780-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:19.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:19.082" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:16.359" endtime="20200715 07:15:19.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:19.083" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:19.083" endtime="20200715 07:15:19.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:19.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:19.084" endtime="20200715 07:15:19.084"></status>
</kw>
<msg timestamp="20200715 07:15:19.084" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:16.358" endtime="20200715 07:15:19.084"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:19.084" endtime="20200715 07:15:19.085"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:19.088" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/92780-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:21.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:21.637" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:19.086" endtime="20200715 07:15:21.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:21.638" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:21.637" endtime="20200715 07:15:21.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:21.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:21.638" endtime="20200715 07:15:21.639"></status>
</kw>
<msg timestamp="20200715 07:15:21.639" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:19.085" endtime="20200715 07:15:21.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:21.643" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/92780-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:24.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:24.516" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 07:15:21.640" endtime="20200715 07:15:24.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:24.517" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:24.517" endtime="20200715 07:15:24.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:24.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:24.518" endtime="20200715 07:15:24.518"></status>
</kw>
<msg timestamp="20200715 07:15:24.518" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 07:15:21.639" endtime="20200715 07:15:24.518"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:24.519" endtime="20200715 07:15:24.519"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:24.519" endtime="20200715 07:15:24.520"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:03.542" endtime="20200715 07:15:24.520"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:15:03.541" endtime="20200715 07:15:24.520" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:24.522" endtime="20200715 07:15:24.522"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:24.525" level="INFO">Running command 'ozone sh key put o3://om:9862/92780-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:29.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:29.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:15:24.523" endtime="20200715 07:15:29.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:29.226" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:15:29.225" endtime="20200715 07:15:29.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:29.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:29.226" endtime="20200715 07:15:29.226"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:24.523" endtime="20200715 07:15:29.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:29.229" level="INFO">Running command 'ozone sh key getacl o3://om:9862/92780-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:31.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:31.865" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:29.227" endtime="20200715 07:15:31.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:31.866" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:31.865" endtime="20200715 07:15:31.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:31.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:31.866" endtime="20200715 07:15:31.867"></status>
</kw>
<msg timestamp="20200715 07:15:31.867" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:29.227" endtime="20200715 07:15:31.867"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:31.867" endtime="20200715 07:15:31.868"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:31.871" level="INFO">Running command 'ozone sh key addacl o3://om:9862/92780-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:34.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:34.445" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 07:15:31.868" endtime="20200715 07:15:34.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:34.446" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 07:15:34.445" endtime="20200715 07:15:34.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:34.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:34.446" endtime="20200715 07:15:34.447"></status>
</kw>
<msg timestamp="20200715 07:15:34.447" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 07:15:31.868" endtime="20200715 07:15:34.447"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:34.451" level="INFO">Running command 'ozone sh key getacl o3://om:9862/92780-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:37.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:37.135" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:34.448" endtime="20200715 07:15:37.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:37.137" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:37.136" endtime="20200715 07:15:37.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:37.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:37.137" endtime="20200715 07:15:37.137"></status>
</kw>
<msg timestamp="20200715 07:15:37.138" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:34.447" endtime="20200715 07:15:37.138"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:37.138" endtime="20200715 07:15:37.139"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:37.142" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/92780-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:39.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:39.589" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:37.140" endtime="20200715 07:15:39.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:39.590" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:39.590" endtime="20200715 07:15:39.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:39.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:39.591" endtime="20200715 07:15:39.591"></status>
</kw>
<msg timestamp="20200715 07:15:39.591" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 07:15:37.139" endtime="20200715 07:15:39.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:39.594" level="INFO">Running command 'ozone sh key getacl o3://om:9862/92780-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:42.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:42.275" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:39.592" endtime="20200715 07:15:42.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:42.277" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:42.276" endtime="20200715 07:15:42.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:42.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:42.277" endtime="20200715 07:15:42.277"></status>
</kw>
<msg timestamp="20200715 07:15:42.278" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 07:15:39.592" endtime="20200715 07:15:42.278"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:42.278" endtime="20200715 07:15:42.278"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:42.282" level="INFO">Running command 'ozone sh key setacl o3://om:9862/92780-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:44.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:44.586" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:42.279" endtime="20200715 07:15:44.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:44.587" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:44.587" endtime="20200715 07:15:44.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:44.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:44.588" endtime="20200715 07:15:44.588"></status>
</kw>
<msg timestamp="20200715 07:15:44.589" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 07:15:42.279" endtime="20200715 07:15:44.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:44.591" level="INFO">Running command 'ozone sh key getacl o3://om:9862/92780-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:47.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:47.193" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 07:15:44.589" endtime="20200715 07:15:47.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:47.194" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 07:15:47.193" endtime="20200715 07:15:47.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:47.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:47.194" endtime="20200715 07:15:47.195"></status>
</kw>
<msg timestamp="20200715 07:15:47.195" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 07:15:44.589" endtime="20200715 07:15:47.195"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:47.195" endtime="20200715 07:15:47.195"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:47.195" endtime="20200715 07:15:47.196"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:24.523" endtime="20200715 07:15:47.196"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:15:24.521" endtime="20200715 07:15:47.197" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:47.198" endtime="20200715 07:15:47.198"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:47.201" level="INFO">Running command 'ozone sh volume info o3:///92780-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:49.608" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:15:49.608" level="INFO">${output} = VOLUME_NOT_FOUND Volume 92780-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 07:15:47.199" endtime="20200715 07:15:49.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:49.609" level="INFO">VOLUME_NOT_FOUND Volume 92780-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 07:15:49.609" endtime="20200715 07:15:49.609"></status>
</kw>
<msg timestamp="20200715 07:15:49.610" level="INFO">${result} = VOLUME_NOT_FOUND Volume 92780-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 07:15:47.199" endtime="20200715 07:15:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:49.610" endtime="20200715 07:15:49.610"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:49.613" level="INFO">Running command 'ozone sh volume create o3:///92780-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:51.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:51.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:15:49.611" endtime="20200715 07:15:51.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:51.904" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:15:51.903" endtime="20200715 07:15:51.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:51.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:51.904" endtime="20200715 07:15:51.905"></status>
</kw>
<msg timestamp="20200715 07:15:51.905" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:15:49.610" endtime="20200715 07:15:51.905"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:51.905" endtime="20200715 07:15:51.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:51.908" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="92780-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:54.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:54.557" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 07:15:51.906" endtime="20200715 07:15:54.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:54.559" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:15:54.558" endtime="20200715 07:15:54.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:54.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:54.559" endtime="20200715 07:15:54.559"></status>
</kw>
<msg timestamp="20200715 07:15:54.560" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 07:15:51.906" endtime="20200715 07:15:54.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:54.560" endtime="20200715 07:15:54.560"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:54.563" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="92780-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:57.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:57.236" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 07:15:54.560" endtime="20200715 07:15:57.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:57.237" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:15:57.237" endtime="20200715 07:15:57.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:57.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:57.238" endtime="20200715 07:15:57.238"></status>
</kw>
<msg timestamp="20200715 07:15:57.238" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:15:51.852Z",
  "modificationTime": "2020-07-15T07:15:51.852Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 07:15:54.560" endtime="20200715 07:15:57.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:15:57.239" endtime="20200715 07:15:57.239"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:57.241" level="INFO">Running command 'ozone sh volume update o3:///92780-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:15:59.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:15:59.851" level="INFO">${output} = {
  "metadata" : { },
  "name" : "92780-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:15:51.852Z",
  "modificationTime" : "2020-07-15T07:15:59.512Z",
  "acls...</msg>
<status status="PASS" starttime="20200715 07:15:57.239" endtime="20200715 07:15:59.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:15:59.852" level="INFO">{
  "metadata" : { },
  "name" : "92780-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:15:51.852Z",
  "modificationTime" : "2020-07-15T07:15:59.512Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 07:15:59.852" endtime="20200715 07:15:59.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:15:59.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:15:59.853" endtime="20200715 07:15:59.853"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:57.239" endtime="20200715 07:15:59.853"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:15:59.858" level="INFO">Running command 'ozone sh volume info o3:///92780-rpcwport | jq -r '. | select(.name=="92780-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:02.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:02.506" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:15:59.854" endtime="20200715 07:16:02.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:02.507" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 07:16:02.506" endtime="20200715 07:16:02.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:02.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:02.507" endtime="20200715 07:16:02.507"></status>
</kw>
<msg timestamp="20200715 07:16:02.507" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:15:59.853" endtime="20200715 07:16:02.508"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:02.508" endtime="20200715 07:16:02.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:02.511" level="INFO">Running command 'ozone sh bucket create o3:///92780-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:05.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:05.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:02.509" endtime="20200715 07:16:05.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:05.097" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:05.096" endtime="20200715 07:16:05.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:05.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:05.097" endtime="20200715 07:16:05.097"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:02.508" endtime="20200715 07:16:05.098"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:05.102" level="INFO">Running command 'ozone sh bucket info o3:///92780-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:07.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:07.873" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 07:16:05.098" endtime="20200715 07:16:07.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:07.875" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 07:16:07.874" endtime="20200715 07:16:07.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:07.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:07.875" endtime="20200715 07:16:07.875"></status>
</kw>
<msg timestamp="20200715 07:16:07.876" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 07:16:05.098" endtime="20200715 07:16:07.876"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:07.876" endtime="20200715 07:16:07.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:07.880" level="INFO">Running command 'ozone sh bucket list o3:///92780-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:10.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:10.766" level="INFO">${output} = 92780-rpcwport</msg>
<status status="PASS" starttime="20200715 07:16:07.877" endtime="20200715 07:16:10.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:10.767" level="INFO">92780-rpcwport</msg>
<status status="PASS" starttime="20200715 07:16:10.767" endtime="20200715 07:16:10.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:10.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:10.768" endtime="20200715 07:16:10.768"></status>
</kw>
<msg timestamp="20200715 07:16:10.768" level="INFO">${result} = 92780-rpcwport</msg>
<status status="PASS" starttime="20200715 07:16:07.876" endtime="20200715 07:16:10.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:10.768" endtime="20200715 07:16:10.769"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:10.773" level="INFO">Running command 'ozone sh key put o3:///92780-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:15.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:15.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:10.770" endtime="20200715 07:16:15.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:15.181" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:15.181" endtime="20200715 07:16:15.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:15.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:15.182" endtime="20200715 07:16:15.182"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:10.770" endtime="20200715 07:16:15.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:15.185" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:15.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:15.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:15.183" endtime="20200715 07:16:15.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:15.188" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:15.188" endtime="20200715 07:16:15.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:15.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:15.189" endtime="20200715 07:16:15.189"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:15.182" endtime="20200715 07:16:15.189"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:15.192" level="INFO">Running command 'ozone sh key get o3:///92780-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:19.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:19.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:15.190" endtime="20200715 07:16:19.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:19.509" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:19.508" endtime="20200715 07:16:19.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:19.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:19.509" endtime="20200715 07:16:19.510"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:15.189" endtime="20200715 07:16:19.511"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:19.515" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:19.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:19.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:19.511" endtime="20200715 07:16:19.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:19.521" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:19.521" endtime="20200715 07:16:19.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:19.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:19.521" endtime="20200715 07:16:19.522"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:19.511" endtime="20200715 07:16:19.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:19.524" level="INFO">Running command 'ozone sh key put -t RATIS o3:///92780-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:24.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:24.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:19.523" endtime="20200715 07:16:24.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:24.084" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:24.083" endtime="20200715 07:16:24.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:24.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:24.084" endtime="20200715 07:16:24.085"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:19.522" endtime="20200715 07:16:24.085"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:24.088" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:24.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:24.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:24.085" endtime="20200715 07:16:24.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:24.091" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:24.090" endtime="20200715 07:16:24.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:24.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:24.091" endtime="20200715 07:16:24.092"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:24.085" endtime="20200715 07:16:24.092"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:24.095" level="INFO">Running command 'ozone sh key get o3:///92780-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:28.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:28.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:24.093" endtime="20200715 07:16:28.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:28.499" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:28.499" endtime="20200715 07:16:28.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:28.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:28.500" endtime="20200715 07:16:28.500"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:24.092" endtime="20200715 07:16:28.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:28.503" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:28.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:28.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:28.501" endtime="20200715 07:16:28.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:28.506" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:28.505" endtime="20200715 07:16:28.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:28.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:28.506" endtime="20200715 07:16:28.507"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:28.500" endtime="20200715 07:16:28.507"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:28.510" level="INFO">Running command 'ozone sh key info o3:///92780-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:31.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:31.226" level="INFO">${output} = {
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:22.092Z",
  "modificationTime": "2020-07-15T07:16:23.590Z",
...</msg>
<status status="PASS" starttime="20200715 07:16:28.507" endtime="20200715 07:16:31.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:31.227" level="INFO">{
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:22.092Z",
  "modificationTime": "2020-07-15T07:16:23.590Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516641232650370,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:16:31.227" endtime="20200715 07:16:31.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:31.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:31.227" endtime="20200715 07:16:31.228"></status>
</kw>
<msg timestamp="20200715 07:16:31.228" level="INFO">${result} = {
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:22.092Z",
  "modificationTime": "2020-07-15T07:16:23.590Z",
...</msg>
<status status="PASS" starttime="20200715 07:16:28.507" endtime="20200715 07:16:31.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:31.228" endtime="20200715 07:16:31.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:31.231" level="INFO">Running command 'ozone sh key delete o3:///92780-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:33.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:33.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:31.229" endtime="20200715 07:16:33.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:33.644" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:33.643" endtime="20200715 07:16:33.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:33.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:33.644" endtime="20200715 07:16:33.645"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:31.229" endtime="20200715 07:16:33.645"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:33.648" level="INFO">Running command 'ozone sh key cp o3:///92780-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:38.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:38.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:33.646" endtime="20200715 07:16:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:38.231" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:38.230" endtime="20200715 07:16:38.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:38.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:38.231" endtime="20200715 07:16:38.231"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:33.645" endtime="20200715 07:16:38.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:38.234" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:38.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:38.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:38.232" endtime="20200715 07:16:38.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:38.237" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:38.237" endtime="20200715 07:16:38.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:38.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:38.237" endtime="20200715 07:16:38.238"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:38.232" endtime="20200715 07:16:38.238"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:38.240" level="INFO">Running command 'ozone sh key get o3:///92780-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:42.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:42.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:38.238" endtime="20200715 07:16:42.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:42.355" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:42.354" endtime="20200715 07:16:42.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:42.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:42.355" endtime="20200715 07:16:42.355"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:38.238" endtime="20200715 07:16:42.355"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:42.358" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:42.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:42.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:42.356" endtime="20200715 07:16:42.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:42.361" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:42.361" endtime="20200715 07:16:42.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:42.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:42.361" endtime="20200715 07:16:42.362"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:42.356" endtime="20200715 07:16:42.362"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:42.364" level="INFO">Running command 'ozone sh key delete o3:///92780-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:44.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:44.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:42.363" endtime="20200715 07:16:44.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:44.759" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:44.758" endtime="20200715 07:16:44.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:44.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:44.759" endtime="20200715 07:16:44.760"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:42.362" endtime="20200715 07:16:44.760"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:44.763" level="INFO">Running command 'ozone sh key get o3:///92780-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:47.066" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:16:47.066" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:16:44.761" endtime="20200715 07:16:47.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:47.067" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:16:47.067" endtime="20200715 07:16:47.067"></status>
</kw>
<msg timestamp="20200715 07:16:47.068" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:16:44.760" endtime="20200715 07:16:47.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:47.068" endtime="20200715 07:16:47.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:47.071" level="INFO">Running command 'ozone sh key get --force o3:///92780-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:51.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:51.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:47.069" endtime="20200715 07:16:51.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:51.336" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:51.335" endtime="20200715 07:16:51.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:51.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:51.336" endtime="20200715 07:16:51.336"></status>
</kw>
<msg timestamp="20200715 07:16:51.337" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:16:47.068" endtime="20200715 07:16:51.337"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:51.337" endtime="20200715 07:16:51.337"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:51.340" level="INFO">Running command 'ozone sh key info o3:///92780-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:53.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:53.957" level="INFO">${output} = {
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:13.161Z",
  "modificationTime": "2020-07-15T07:16:14.753Z",
  "rep...</msg>
<status status="PASS" starttime="20200715 07:16:51.338" endtime="20200715 07:16:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:53.959" level="INFO">{
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:13.161Z",
  "modificationTime": "2020-07-15T07:16:14.753Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516640647217280,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:16:53.958" endtime="20200715 07:16:53.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:53.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:53.959" endtime="20200715 07:16:53.959"></status>
</kw>
<msg timestamp="20200715 07:16:53.959" level="INFO">${result} = {
  "volumeName": "92780-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:16:13.161Z",
  "modificationTime": "2020-07-15T07:16:14.753Z",
  "rep...</msg>
<status status="PASS" starttime="20200715 07:16:51.337" endtime="20200715 07:16:53.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:53.960" endtime="20200715 07:16:53.960"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:53.963" level="INFO">Running command 'ozone sh key list o3:///92780-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:56.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:56.704" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 07:16:53.961" endtime="20200715 07:16:56.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:56.705" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 07:16:56.705" endtime="20200715 07:16:56.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:56.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:56.706" endtime="20200715 07:16:56.706"></status>
</kw>
<msg timestamp="20200715 07:16:56.707" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 07:16:53.960" endtime="20200715 07:16:56.707"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:16:56.707" endtime="20200715 07:16:56.707"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:56.710" level="INFO">Running command 'ozone sh key rename o3:///92780-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:16:59.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:16:59.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:16:56.708" endtime="20200715 07:16:59.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:16:59.205" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:16:59.204" endtime="20200715 07:16:59.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:16:59.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:16:59.205" endtime="20200715 07:16:59.206"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:56.707" endtime="20200715 07:16:59.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:16:59.210" level="INFO">Running command 'ozone sh key list o3:///92780-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:01.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:01.953" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 07:16:59.207" endtime="20200715 07:17:01.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:01.954" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 07:17:01.953" endtime="20200715 07:17:01.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:01.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:01.954" endtime="20200715 07:17:01.955"></status>
</kw>
<msg timestamp="20200715 07:17:01.955" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 07:16:59.206" endtime="20200715 07:17:01.955"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:01.955" endtime="20200715 07:17:01.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:01.959" level="INFO">Running command 'ozone sh key delete o3:///92780-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:04.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:04.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:01.957" endtime="20200715 07:17:04.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:04.329" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:04.329" endtime="20200715 07:17:04.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:04.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:04.329" endtime="20200715 07:17:04.330"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:01.956" endtime="20200715 07:17:04.330"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:10.769" endtime="20200715 07:17:04.330"></status>
</kw>
<status status="PASS" starttime="20200715 07:16:10.769" endtime="20200715 07:17:04.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:04.333" level="INFO">Running command 'ozone sh bucket delete o3:///92780-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:06.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:06.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:04.331" endtime="20200715 07:17:06.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:06.687" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:06.687" endtime="20200715 07:17:06.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:06.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:06.687" endtime="20200715 07:17:06.688"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:04.330" endtime="20200715 07:17:06.688"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:06.691" level="INFO">Running command 'ozone sh volume delete o3:///92780-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:09.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:09.195" level="INFO">${output} = Volume 92780-rpcwport is deleted</msg>
<status status="PASS" starttime="20200715 07:17:06.689" endtime="20200715 07:17:09.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:09.196" level="INFO">Volume 92780-rpcwport is deleted</msg>
<status status="PASS" starttime="20200715 07:17:09.196" endtime="20200715 07:17:09.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:09.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:09.197" endtime="20200715 07:17:09.197"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:06.688" endtime="20200715 07:17:09.197"></status>
</kw>
<status status="PASS" starttime="20200715 07:15:47.198" endtime="20200715 07:17:09.197"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:15:47.197" endtime="20200715 07:17:09.198" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:09.199" endtime="20200715 07:17:09.200"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:09.203" level="INFO">Running command 'ozone sh volume info /92780-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:11.677" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:17:11.677" level="INFO">${output} = VOLUME_NOT_FOUND Volume 92780-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 07:17:09.201" endtime="20200715 07:17:11.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:11.678" level="INFO">VOLUME_NOT_FOUND Volume 92780-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 07:17:11.678" endtime="20200715 07:17:11.678"></status>
</kw>
<msg timestamp="20200715 07:17:11.679" level="INFO">${result} = VOLUME_NOT_FOUND Volume 92780-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 07:17:09.200" endtime="20200715 07:17:11.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:11.679" endtime="20200715 07:17:11.679"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:11.682" level="INFO">Running command 'ozone sh volume create /92780-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:14.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:14.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:11.680" endtime="20200715 07:17:14.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:14.073" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:14.072" endtime="20200715 07:17:14.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:14.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:14.073" endtime="20200715 07:17:14.074"></status>
</kw>
<msg timestamp="20200715 07:17:14.074" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:17:11.679" endtime="20200715 07:17:14.074"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:14.074" endtime="20200715 07:17:14.075"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:14.078" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="92780-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:16.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:16.731" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 07:17:14.076" endtime="20200715 07:17:16.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:16.732" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:17:16.731" endtime="20200715 07:17:16.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:16.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:16.733" endtime="20200715 07:17:16.733"></status>
</kw>
<msg timestamp="20200715 07:17:16.733" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 07:17:14.075" endtime="20200715 07:17:16.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:16.733" endtime="20200715 07:17:16.734"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:16.737" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="92780-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:19.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:19.218" level="INFO">${output} = {
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 07:17:16.734" endtime="20200715 07:17:19.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:19.219" level="INFO">{
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 07:17:19.218" endtime="20200715 07:17:19.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:19.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:19.219" endtime="20200715 07:17:19.220"></status>
</kw>
<msg timestamp="20200715 07:17:19.220" level="INFO">${result} = {
  "metadata": {},
  "name": "92780-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T07:17:14.015Z",
  "modificationTime": "2020-07-15T07:17:14.015Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 07:17:16.734" endtime="20200715 07:17:19.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:19.220" endtime="20200715 07:17:19.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:19.224" level="INFO">Running command 'ozone sh volume update /92780-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:21.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:21.726" level="INFO">${output} = {
  "metadata" : { },
  "name" : "92780-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:17:14.015Z",
  "modificationTime" : "2020-07-15T07:17:21.384Z",
  "a...</msg>
<status status="PASS" starttime="20200715 07:17:19.221" endtime="20200715 07:17:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:21.727" level="INFO">{
  "metadata" : { },
  "name" : "92780-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T07:17:14.015Z",
  "modificationTime" : "2020-07-15T07:17:21.384Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 07:17:21.726" endtime="20200715 07:17:21.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:21.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:21.727" endtime="20200715 07:17:21.727"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:19.221" endtime="20200715 07:17:21.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:21.731" level="INFO">Running command 'ozone sh volume info /92780-rpcwoscheme | jq -r '. | select(.name=="92780-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:24.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:24.537" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:17:21.728" endtime="20200715 07:17:24.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:24.538" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 07:17:24.538" endtime="20200715 07:17:24.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:24.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:24.539" endtime="20200715 07:17:24.539"></status>
</kw>
<msg timestamp="20200715 07:17:24.539" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 07:17:21.728" endtime="20200715 07:17:24.539"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:24.539" endtime="20200715 07:17:24.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:24.543" level="INFO">Running command 'ozone sh bucket create /92780-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:27.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:27.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:24.540" endtime="20200715 07:17:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:27.033" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:27.033" endtime="20200715 07:17:27.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:27.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:27.034" endtime="20200715 07:17:27.034"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:24.540" endtime="20200715 07:17:27.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:27.038" level="INFO">Running command 'ozone sh bucket info /92780-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:29.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:29.752" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 07:17:27.035" endtime="20200715 07:17:29.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:29.753" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 07:17:29.752" endtime="20200715 07:17:29.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:29.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:29.753" endtime="20200715 07:17:29.754"></status>
</kw>
<msg timestamp="20200715 07:17:29.754" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 07:17:27.034" endtime="20200715 07:17:29.754"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:29.754" endtime="20200715 07:17:29.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:29.758" level="INFO">Running command 'ozone sh bucket list /92780-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:32.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:32.469" level="INFO">${output} = 92780-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 07:17:29.755" endtime="20200715 07:17:32.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:32.471" level="INFO">92780-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 07:17:32.470" endtime="20200715 07:17:32.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:32.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:32.471" endtime="20200715 07:17:32.471"></status>
</kw>
<msg timestamp="20200715 07:17:32.472" level="INFO">${result} = 92780-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 07:17:29.755" endtime="20200715 07:17:32.472"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:32.472" endtime="20200715 07:17:32.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:32.475" level="INFO">Running command 'ozone sh key put /92780-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:36.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:36.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:32.474" endtime="20200715 07:17:36.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:36.942" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:36.941" endtime="20200715 07:17:36.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:36.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:36.942" endtime="20200715 07:17:36.942"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:32.473" endtime="20200715 07:17:36.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:36.945" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:36.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:36.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:36.943" endtime="20200715 07:17:36.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:36.949" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:36.948" endtime="20200715 07:17:36.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:36.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:36.949" endtime="20200715 07:17:36.949"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:36.943" endtime="20200715 07:17:36.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:36.953" level="INFO">Running command 'ozone sh key get /92780-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:41.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:41.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:36.950" endtime="20200715 07:17:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:41.062" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:41.059" endtime="20200715 07:17:41.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:41.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:41.062" endtime="20200715 07:17:41.063"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:36.950" endtime="20200715 07:17:41.063"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:41.065" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:41.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:41.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:41.063" endtime="20200715 07:17:41.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:41.068" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:41.068" endtime="20200715 07:17:41.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:41.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:41.069" endtime="20200715 07:17:41.069"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:41.063" endtime="20200715 07:17:41.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:41.072" level="INFO">Running command 'ozone sh key put -t RATIS /92780-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:45.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:45.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:41.070" endtime="20200715 07:17:45.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:45.778" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:45.777" endtime="20200715 07:17:45.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:45.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:45.778" endtime="20200715 07:17:45.779"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:41.069" endtime="20200715 07:17:45.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:45.782" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:45.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:45.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:45.780" endtime="20200715 07:17:45.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:45.785" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:45.785" endtime="20200715 07:17:45.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:45.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:45.786" endtime="20200715 07:17:45.786"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:45.779" endtime="20200715 07:17:45.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:45.789" level="INFO">Running command 'ozone sh key get /92780-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:50.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:50.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:45.787" endtime="20200715 07:17:50.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:50.180" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:50.179" endtime="20200715 07:17:50.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:50.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:50.180" endtime="20200715 07:17:50.180"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:45.786" endtime="20200715 07:17:50.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:50.183" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:50.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:50.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:50.181" endtime="20200715 07:17:50.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:50.186" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:50.185" endtime="20200715 07:17:50.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:50.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:50.186" endtime="20200715 07:17:50.186"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:50.181" endtime="20200715 07:17:50.187"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:50.189" level="INFO">Running command 'ozone sh key info /92780-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:52.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:52.778" level="INFO">${output} = {
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:43.395Z",
  "modificationTime": "2020-07-15T07:17:45.296Z...</msg>
<status status="PASS" starttime="20200715 07:17:50.187" endtime="20200715 07:17:52.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:52.779" level="INFO">{
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:43.395Z",
  "modificationTime": "2020-07-15T07:17:45.296Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516646560923780,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:17:52.779" endtime="20200715 07:17:52.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:52.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:52.779" endtime="20200715 07:17:52.780"></status>
</kw>
<msg timestamp="20200715 07:17:52.780" level="INFO">${result} = {
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:43.395Z",
  "modificationTime": "2020-07-15T07:17:45.296Z...</msg>
<status status="PASS" starttime="20200715 07:17:50.187" endtime="20200715 07:17:52.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 07:17:52.780" endtime="20200715 07:17:52.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:52.784" level="INFO">Running command 'ozone sh key delete /92780-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:55.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:55.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:52.781" endtime="20200715 07:17:55.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:55.146" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:55.145" endtime="20200715 07:17:55.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:55.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:55.146" endtime="20200715 07:17:55.147"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:52.781" endtime="20200715 07:17:55.147"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:55.149" level="INFO">Running command 'ozone sh key cp /92780-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:59.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:59.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:55.147" endtime="20200715 07:17:59.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:59.619" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:59.619" endtime="20200715 07:17:59.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:59.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:59.620" endtime="20200715 07:17:59.620"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:55.147" endtime="20200715 07:17:59.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:59.623" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:17:59.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:17:59.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:59.621" endtime="20200715 07:17:59.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:17:59.626" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:17:59.625" endtime="20200715 07:17:59.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:17:59.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:17:59.626" endtime="20200715 07:17:59.627"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:59.620" endtime="20200715 07:17:59.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:17:59.629" level="INFO">Running command 'ozone sh key get /92780-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:03.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:03.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:17:59.628" endtime="20200715 07:18:03.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:03.696" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:03.696" endtime="20200715 07:18:03.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:03.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:03.697" endtime="20200715 07:18:03.697"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:59.627" endtime="20200715 07:18:03.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:03.700" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:03.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:03.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:03.698" endtime="20200715 07:18:03.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:03.703" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:03.702" endtime="20200715 07:18:03.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:03.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:03.703" endtime="20200715 07:18:03.704"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:03.697" endtime="20200715 07:18:03.704"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:03.707" level="INFO">Running command 'ozone sh key delete /92780-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:06.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:06.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:03.705" endtime="20200715 07:18:06.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:06.112" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:06.112" endtime="20200715 07:18:06.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:06.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:06.113" endtime="20200715 07:18:06.113"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:03.704" endtime="20200715 07:18:06.113"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:06.116" level="INFO">Running command 'ozone sh key get /92780-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:08.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 07:18:08.495" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:18:06.114" endtime="20200715 07:18:08.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:08.496" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:18:08.495" endtime="20200715 07:18:08.496"></status>
</kw>
<msg timestamp="20200715 07:18:08.496" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 07:18:06.113" endtime="20200715 07:18:08.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:18:08.497" endtime="20200715 07:18:08.498"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:08.501" level="INFO">Running command 'ozone sh key get --force /92780-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:12.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:12.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:08.498" endtime="20200715 07:18:12.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:12.239" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:12.239" endtime="20200715 07:18:12.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:12.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:12.239" endtime="20200715 07:18:12.240"></status>
</kw>
<msg timestamp="20200715 07:18:12.240" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 07:18:08.498" endtime="20200715 07:18:12.240"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 07:18:12.240" endtime="20200715 07:18:12.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:12.244" level="INFO">Running command 'ozone sh key info /92780-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:14.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:14.833" level="INFO">${output} = {
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:34.774Z",
  "modificationTime": "2020-07-15T07:17:36.463Z",
  "...</msg>
<status status="PASS" starttime="20200715 07:18:12.242" endtime="20200715 07:18:14.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:14.834" level="INFO">{
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:34.774Z",
  "modificationTime": "2020-07-15T07:17:36.463Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104516645995937920,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 07:18:14.834" endtime="20200715 07:18:14.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:14.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:14.835" endtime="20200715 07:18:14.835"></status>
</kw>
<msg timestamp="20200715 07:18:14.835" level="INFO">${result} = {
  "volumeName": "92780-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T07:17:34.774Z",
  "modificationTime": "2020-07-15T07:17:36.463Z",
  "...</msg>
<status status="PASS" starttime="20200715 07:18:12.241" endtime="20200715 07:18:14.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 07:18:14.836" endtime="20200715 07:18:14.836"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:14.839" level="INFO">Running command 'ozone sh key list /92780-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:17.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:17.307" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 07:18:14.837" endtime="20200715 07:18:17.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:17.308" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 07:18:17.307" endtime="20200715 07:18:17.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:17.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:17.308" endtime="20200715 07:18:17.308"></status>
</kw>
<msg timestamp="20200715 07:18:17.309" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 07:18:14.836" endtime="20200715 07:18:17.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 07:18:17.309" endtime="20200715 07:18:17.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:17.312" level="INFO">Running command 'ozone sh key rename /92780-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:19.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:19.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:17.310" endtime="20200715 07:18:19.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:19.660" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:19.659" endtime="20200715 07:18:19.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:19.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:19.660" endtime="20200715 07:18:19.661"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:17.309" endtime="20200715 07:18:19.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:19.664" level="INFO">Running command 'ozone sh key list /92780-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:22.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:22.321" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 07:18:19.661" endtime="20200715 07:18:22.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:22.322" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 07:18:22.321" endtime="20200715 07:18:22.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:22.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:22.322" endtime="20200715 07:18:22.322"></status>
</kw>
<msg timestamp="20200715 07:18:22.322" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 07:18:19.661" endtime="20200715 07:18:22.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 07:18:22.323" endtime="20200715 07:18:22.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:22.326" level="INFO">Running command 'ozone sh key delete /92780-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:24.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:24.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:22.324" endtime="20200715 07:18:24.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:24.903" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:24.903" endtime="20200715 07:18:24.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:24.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:24.904" endtime="20200715 07:18:24.904"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:22.323" endtime="20200715 07:18:24.904"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:32.472" endtime="20200715 07:18:24.904"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:32.472" endtime="20200715 07:18:24.905"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:24.907" level="INFO">Running command 'ozone sh bucket delete /92780-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:27.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:27.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 07:18:24.905" endtime="20200715 07:18:27.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:27.242" level="INFO"></msg>
<status status="PASS" starttime="20200715 07:18:27.242" endtime="20200715 07:18:27.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:27.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:27.243" endtime="20200715 07:18:27.243"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:24.905" endtime="20200715 07:18:27.243"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 07:18:27.246" level="INFO">Running command 'ozone sh volume delete /92780-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 07:18:29.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 07:18:29.674" level="INFO">${output} = Volume 92780-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200715 07:18:27.244" endtime="20200715 07:18:29.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 07:18:29.675" level="INFO">Volume 92780-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200715 07:18:29.674" endtime="20200715 07:18:29.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 07:18:29.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 07:18:29.675" endtime="20200715 07:18:29.675"></status>
</kw>
<status status="PASS" starttime="20200715 07:18:27.243" endtime="20200715 07:18:29.676"></status>
</kw>
<status status="PASS" starttime="20200715 07:17:09.200" endtime="20200715 07:18:29.676"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 07:17:09.198" endtime="20200715 07:18:29.676" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200715 07:13:17.565" endtime="20200715 07:18:29.680"></status>
</suite>
<status status="PASS" starttime="20200715 07:12:17.277" endtime="20200715 07:18:29.683"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
