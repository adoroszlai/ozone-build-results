<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 13:17:44.691" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:17:44.738" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:17:52.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:17:52.811" level="INFO">${output} = 2020-07-15 13:17:46,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:46,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:44.733" endtime="20200715 13:17:52.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:17:52.812" level="INFO">2020-07-15 13:17:46,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:46,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:17:46,206 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 13:17:47,210 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 13:17:47,211 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 13:17:47,221 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 13:17:47,230 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:17:47,282 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-81551, with hadoop as owner.
2020-07-15 13:17:47,325 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-81551/bucket-0-08309, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:17:47,715 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 13:17:48,236 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,083
Average Time spent in bucket creation: 00:00:00,010
Average Time spent in key creation: 00:00:00,058
Average Time spent in key write: 00:00:00,473
Total bytes written: 10240
Total Execution time: 00:00:06,004
***************************************************</msg>
<status status="PASS" starttime="20200715 13:17:52.811" endtime="20200715 13:17:52.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:17:52.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:17:52.812" endtime="20200715 13:17:52.812"></status>
</kw>
<msg timestamp="20200715 13:17:52.813" level="INFO">${result} = 2020-07-15 13:17:46,042 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:46,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:44.733" endtime="20200715 13:17:52.813"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:17:52.813" endtime="20200715 13:17:52.814"></status>
</kw>
<status status="PASS" starttime="20200715 13:17:52.813" endtime="20200715 13:17:52.814"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:17:44.732" endtime="20200715 13:17:52.814" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:17:52.818" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:17:58.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:17:58.000" level="INFO">${output} = 2020-07-15 13:17:54,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:54,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:52.816" endtime="20200715 13:17:58.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:17:58.001" level="INFO">2020-07-15 13:17:54,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:54,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:17:54,279 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 13:17:54,444 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ict5wkhox5
2020-07-15 13:17:54,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:17:55,251 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-15 13:17:55,286 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:17:55,471 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:17:55,801 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 13:17:56,472 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:17:57,473 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 13:17:57,632 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1241.856041, max=1241.856041, mean=1241.856041, stddev=0.0, median=1241.856041, p75=1241.856041, p95=1241.856041, p98=1241.856041, p99=1241.856041, p999=1241.856041, mean_rate=0.4300306599647684, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 13:17:57,633 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-15 13:17:57,633 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 13:17:57,633 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 13:17:58.001" endtime="20200715 13:17:58.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:17:58.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:17:58.001" endtime="20200715 13:17:58.002"></status>
</kw>
<msg timestamp="20200715 13:17:58.002" level="INFO">${result} = 2020-07-15 13:17:54,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:54,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:52.815" endtime="20200715 13:17:58.002"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:17:58.003" endtime="20200715 13:17:58.003"></status>
</kw>
<status status="PASS" starttime="20200715 13:17:58.002" endtime="20200715 13:17:58.003"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:17:52.814" endtime="20200715 13:17:58.003" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:17:58.007" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:18:01.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:18:01.793" level="INFO">${output} = 2020-07-15 13:17:59,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:59,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:58.005" endtime="20200715 13:18:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:18:01.794" level="INFO">2020-07-15 13:17:59,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:59,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:17:59,551 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 13:17:59,666 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 34bgzjww0w
2020-07-15 13:17:59,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:18:00,688 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 13:18:01,696 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=66.737636, max=66.737636, mean=66.737636, stddev=0.0, median=66.737636, p75=66.737636, p95=66.737636, p98=66.737636, p99=66.737636, p999=66.737636, mean_rate=0.8862954670283621, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 13:18:01,700 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 13:18:01,700 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 13:18:01,700 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 13:18:01.793" endtime="20200715 13:18:01.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:18:01.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:18:01.794" endtime="20200715 13:18:01.795"></status>
</kw>
<msg timestamp="20200715 13:18:01.795" level="INFO">${result} = 2020-07-15 13:17:59,380 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:17:59,551 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:17:58.005" endtime="20200715 13:18:01.795"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:18:01.796" endtime="20200715 13:18:01.796"></status>
</kw>
<status status="PASS" starttime="20200715 13:18:01.796" endtime="20200715 13:18:01.796"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:17:58.004" endtime="20200715 13:18:01.797" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:18:01.802" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:18:05.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:18:05.416" level="INFO">${output} = 2020-07-15 13:18:03,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:18:03,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:18:01.799" endtime="20200715 13:18:05.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:18:05.417" level="INFO">2020-07-15 13:18:03,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:18:03,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:18:03,316 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 13:18:03,490 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xngqbegzys
2020-07-15 13:18:03,504 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 13:18:04,513 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 13:18:05,386 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.154475, max=16.154475, mean=16.154475, stddev=0.0, median=16.154475, p75=16.154475, p95=16.154475, p98=16.154475, p99=16.154475, p999=16.154475, mean_rate=0.8948070888886813, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 13:18:05,388 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 13:18:05,402 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 13:18:05,402 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 13:18:05.416" endtime="20200715 13:18:05.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:18:05.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:18:05.417" endtime="20200715 13:18:05.418"></status>
</kw>
<msg timestamp="20200715 13:18:05.418" level="INFO">${result} = 2020-07-15 13:18:03,190 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:18:03,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:18:01.798" endtime="20200715 13:18:05.418"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:18:05.418" endtime="20200715 13:18:05.419"></status>
</kw>
<status status="PASS" starttime="20200715 13:18:05.418" endtime="20200715 13:18:05.419"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:18:01.797" endtime="20200715 13:18:05.419" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200715 13:17:44.714" endtime="20200715 13:18:05.420"></status>
</suite>
<status status="PASS" starttime="20200715 13:17:44.692" endtime="20200715 13:18:05.423"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
