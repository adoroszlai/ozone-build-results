<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 13:01:39.645" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200715 13:01:39.690" endtime="20200715 13:01:39.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:01:39.695" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:01:39.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:01:39.774" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:01:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 12:35:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200715 13:01:39.691" endtime="20200715 13:01:39.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:01:39.775" level="INFO">HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:01:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 12:35:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200715 13:01:39.775" endtime="20200715 13:01:39.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:01:39.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:01:39.775" endtime="20200715 13:01:39.776"></status>
</kw>
<msg timestamp="20200715 13:01:39.776" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:01:39 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 15 Jul 2020 12:35:44 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200715 13:01:39.690" endtime="20200715 13:01:39.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200715 13:01:39.776" endtime="20200715 13:01:39.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:01:39.689" endtime="20200715 13:01:39.776" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:01:39.778" endtime="20200715 13:01:39.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:01:39.782" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:42.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:42.493" level="INFO">${output} = 2020-07-15 13:01:41,193 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:01:41,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:01:39.779" endtime="20200715 13:02:42.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:42.494" level="INFO">2020-07-15 13:01:41,193 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:01:41,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:01:41,327 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 13:01:43,061 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 13:01:43,062 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-15 13:01:43,067 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-15 13:01:43,068 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 13:01:43,073 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-15 13:01:43,124 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-47547, with hadoop as owner.
2020-07-15 13:01:43,301 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-74293, with hadoop as owner.
2020-07-15 13:01:43,308 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-49137, with hadoop as owner.
2020-07-15 13:01:43,320 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-47526, with hadoop as owner.
2020-07-15 13:01:43,324 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-00864, with hadoop as owner.
2020-07-15 13:01:43,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47547/bucket-0-68584, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,443 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74293/bucket-0-08507, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,458 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-49137/bucket-0-30146, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-47526/bucket-0-95811, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,496 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00864/bucket-0-31321, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,506 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47547/bucket-1-42126, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,513 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74293/bucket-1-98935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,521 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-49137/bucket-1-36541, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,526 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-47526/bucket-1-92771, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,530 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00864/bucket-1-67741, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,535 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47547/bucket-2-79899, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,544 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74293/bucket-2-04706, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,548 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-49137/bucket-2-78958, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,553 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-47526/bucket-2-87435, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00864/bucket-2-76948, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,566 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47547/bucket-3-99023, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,575 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74293/bucket-3-77126, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,580 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-49137/bucket-3-99969, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,587 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-47526/bucket-3-98647, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,593 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00864/bucket-3-63025, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,597 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-47547/bucket-4-81034, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,601 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-74293/bucket-4-80571, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,604 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-49137/bucket-4-25649, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,607 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-47526/bucket-4-92615, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:43,612 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-00864/bucket-4-51265, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:01:44,084 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-15 13:01:44,571 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 13:01:45,084 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-15 13:01:46,085 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-15 13:01:47,085 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-15 13:01:48,086 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-15 13:01:49,087 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-07-15 13:01:50,087 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-15 13:01:51,088 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-15 13:01:52,088 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-15 13:01:53,089 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-07-15 13:01:54,090 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-15 13:01:55,090 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-07-15 13:01:56,093 [Thread-7] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2020-07-15 13:01:57,093 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-07-15 13:01:58,094 [Thread-7] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2020-07-15 13:01:59,105 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-15 13:02:00,106 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-07-15 13:02:01,107 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-07-15 13:02:02,107 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-07-15 13:02:03,107 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-07-15 13:02:04,108 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-07-15 13:02:05,109 [Thread-7] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2020-07-15 13:02:06,109 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-15 13:02:07,110 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-15 13:02:08,110 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-07-15 13:02:09,111 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-15 13:02:10,112 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-15 13:02:11,112 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-07-15 13:02:12,113 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-15 13:02:13,114 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-15 13:02:14,114 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-15 13:02:15,115 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-07-15 13:02:16,115 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-15 13:02:17,116 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-15 13:02:18,117 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-15 13:02:19,117 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-15 13:02:20,118 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-15 13:02:21,118 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-15 13:02:22,119 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-15 13:02:23,119 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-07-15 13:02:24,120 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-15 13:02:25,121 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-07-15 13:02:26,121 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-15 13:02:27,121 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-15 13:02:28,122 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-15 13:02:29,123 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-15 13:02:30,123 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-15 13:02:31,124 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-15 13:02:32,124 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-15 13:02:33,125 [Thread-7] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2020-07-15 13:02:34,125 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-15 13:02:35,126 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-15 13:02:36,126 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-07-15 13:02:37,127 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,213
Average Time spent in bucket creation: 00:00:00,221
Average Time spent in key creation: 00:00:01,821
Average Time spent in key write: 00:00:00,835
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:00,619
***************************************************</msg>
<status status="PASS" starttime="20200715 13:02:42.494" endtime="20200715 13:02:42.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:42.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:42.495" endtime="20200715 13:02:42.496"></status>
</kw>
<msg timestamp="20200715 13:02:42.496" level="INFO">${result} = 2020-07-15 13:01:41,193 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:01:41,327 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:01:39.779" endtime="20200715 13:02:42.496"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:42.497" endtime="20200715 13:02:42.498"></status>
</kw>
<status status="PASS" starttime="20200715 13:02:42.496" endtime="20200715 13:02:42.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:42.498" endtime="20200715 13:02:42.498"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:01:39.778" endtime="20200715 13:02:42.499" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200715 13:01:39.670" endtime="20200715 13:02:42.500"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200715 13:02:42.510" level="INFO">${random} = 44723</msg>
<status status="PASS" starttime="20200715 13:02:42.509" endtime="20200715 13:02:42.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200715 13:02:42.510" level="INFO">${prefix} = 44723</msg>
<status status="PASS" starttime="20200715 13:02:42.510" endtime="20200715 13:02:42.510"></status>
</kw>
<status status="PASS" starttime="20200715 13:02:42.509" endtime="20200715 13:02:42.510"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:42.511" endtime="20200715 13:02:42.511"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:42.515" level="INFO">Running command 'ozone sh volume info o3://om:9862/44723-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:44.701" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:02:44.701" level="INFO">${output} = VOLUME_NOT_FOUND Volume 44723-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 13:02:42.512" endtime="20200715 13:02:44.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:44.702" level="INFO">VOLUME_NOT_FOUND Volume 44723-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 13:02:44.702" endtime="20200715 13:02:44.703"></status>
</kw>
<msg timestamp="20200715 13:02:44.703" level="INFO">${result} = VOLUME_NOT_FOUND Volume 44723-rpcwoport is not found</msg>
<status status="PASS" starttime="20200715 13:02:42.512" endtime="20200715 13:02:44.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:44.703" endtime="20200715 13:02:44.703"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:44.706" level="INFO">Running command 'ozone sh volume create o3://om:9862/44723-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:47.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:47.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:02:44.704" endtime="20200715 13:02:47.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:47.181" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:02:47.180" endtime="20200715 13:02:47.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:47.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:47.181" endtime="20200715 13:02:47.181"></status>
</kw>
<msg timestamp="20200715 13:02:47.182" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:02:44.703" endtime="20200715 13:02:47.182"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:47.182" endtime="20200715 13:02:47.182"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:47.186" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="44723-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:49.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:49.681" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 13:02:47.183" endtime="20200715 13:02:49.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:49.682" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:02:49.682" endtime="20200715 13:02:49.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:49.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:49.682" endtime="20200715 13:02:49.683"></status>
</kw>
<msg timestamp="20200715 13:02:49.683" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 13:02:47.182" endtime="20200715 13:02:49.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:49.683" endtime="20200715 13:02:49.683"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:49.686" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="44723-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:52.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:52.147" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 13:02:49.684" endtime="20200715 13:02:52.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:52.148" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:02:52.147" endtime="20200715 13:02:52.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:52.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:52.148" endtime="20200715 13:02:52.148"></status>
</kw>
<msg timestamp="20200715 13:02:52.149" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:02:47.036Z",
  "modificationTime": "2020-07-15T13:02:47.036Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200715 13:02:49.683" endtime="20200715 13:02:52.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:52.149" endtime="20200715 13:02:52.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:52.151" level="INFO">Running command 'ozone sh volume update o3://om:9862/44723-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:54.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:54.709" level="INFO">${output} = {
  "metadata" : { },
  "name" : "44723-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:02:47.036Z",
  "modificationTime" : "2020-07-15T13:02:54.280Z",
  "acl...</msg>
<status status="PASS" starttime="20200715 13:02:52.150" endtime="20200715 13:02:54.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:54.710" level="INFO">{
  "metadata" : { },
  "name" : "44723-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:02:47.036Z",
  "modificationTime" : "2020-07-15T13:02:54.280Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 13:02:54.710" endtime="20200715 13:02:54.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:54.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:54.711" endtime="20200715 13:02:54.711"></status>
</kw>
<status status="PASS" starttime="20200715 13:02:52.149" endtime="20200715 13:02:54.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:54.715" level="INFO">Running command 'ozone sh volume info o3://om:9862/44723-rpcwoport | jq -r '. | select(.name=="44723-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:57.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:57.145" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:02:54.712" endtime="20200715 13:02:57.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:57.146" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 13:02:57.145" endtime="20200715 13:02:57.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:57.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:57.146" endtime="20200715 13:02:57.146"></status>
</kw>
<msg timestamp="20200715 13:02:57.147" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:02:54.711" endtime="20200715 13:02:57.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 13:02:57.147" endtime="20200715 13:02:57.147"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:57.151" level="INFO">Running command 'ozone sh bucket create o3://om:9862/44723-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:02:59.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:02:59.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:02:57.148" endtime="20200715 13:02:59.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:02:59.310" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:02:59.309" endtime="20200715 13:02:59.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:02:59.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:02:59.310" endtime="20200715 13:02:59.311"></status>
</kw>
<status status="PASS" starttime="20200715 13:02:57.148" endtime="20200715 13:02:59.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:02:59.314" level="INFO">Running command 'ozone sh bucket info o3://om:9862/44723-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:01.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:01.768" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 13:02:59.312" endtime="20200715 13:03:01.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:01.769" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 13:03:01.768" endtime="20200715 13:03:01.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:01.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:01.769" endtime="20200715 13:03:01.769"></status>
</kw>
<msg timestamp="20200715 13:03:01.769" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 13:02:59.311" endtime="20200715 13:03:01.769"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:01.769" endtime="20200715 13:03:01.770"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:01.773" level="INFO">Running command 'ozone sh bucket list o3://om:9862/44723-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:04.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:04.335" level="INFO">${output} = 44723-rpcwoport</msg>
<status status="PASS" starttime="20200715 13:03:01.770" endtime="20200715 13:03:04.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:04.336" level="INFO">44723-rpcwoport</msg>
<status status="PASS" starttime="20200715 13:03:04.336" endtime="20200715 13:03:04.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:04.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:04.336" endtime="20200715 13:03:04.337"></status>
</kw>
<msg timestamp="20200715 13:03:04.337" level="INFO">${result} = 44723-rpcwoport</msg>
<status status="PASS" starttime="20200715 13:03:01.770" endtime="20200715 13:03:04.337"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:04.340" endtime="20200715 13:03:04.341"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:04.347" level="INFO">Running command 'ozone sh key put o3://om:9862/44723-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:08.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:08.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:04.343" endtime="20200715 13:03:08.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:08.425" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:08.424" endtime="20200715 13:03:08.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:08.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:08.425" endtime="20200715 13:03:08.426"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:04.342" endtime="20200715 13:03:08.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:08.429" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:08.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:08.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:08.426" endtime="20200715 13:03:08.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:08.431" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:08.431" endtime="20200715 13:03:08.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:08.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:08.432" endtime="20200715 13:03:08.432"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:08.426" endtime="20200715 13:03:08.432"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:08.436" level="INFO">Running command 'ozone sh key get o3://om:9862/44723-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:12.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:12.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:08.433" endtime="20200715 13:03:12.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:12.414" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:12.414" endtime="20200715 13:03:12.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:12.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:12.415" endtime="20200715 13:03:12.416"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:08.432" endtime="20200715 13:03:12.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:12.418" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:12.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:12.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:12.416" endtime="20200715 13:03:12.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:12.422" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:12.422" endtime="20200715 13:03:12.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:12.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:12.422" endtime="20200715 13:03:12.423"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:12.416" endtime="20200715 13:03:12.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:12.425" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/44723-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:16.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:16.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:12.423" endtime="20200715 13:03:16.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:16.312" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:16.311" endtime="20200715 13:03:16.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:16.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:16.312" endtime="20200715 13:03:16.312"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:12.423" endtime="20200715 13:03:16.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:16.315" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:16.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:16.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:16.313" endtime="20200715 13:03:16.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:16.319" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:16.319" endtime="20200715 13:03:16.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:16.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:16.320" endtime="20200715 13:03:16.320"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:16.313" endtime="20200715 13:03:16.320"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:16.323" level="INFO">Running command 'ozone sh key get o3://om:9862/44723-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:20.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:20.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:16.321" endtime="20200715 13:03:20.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:20.423" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:20.423" endtime="20200715 13:03:20.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:20.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:20.424" endtime="20200715 13:03:20.424"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:16.321" endtime="20200715 13:03:20.424"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:20.427" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:20.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:20.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:20.425" endtime="20200715 13:03:20.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:20.430" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:20.429" endtime="20200715 13:03:20.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:20.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:20.430" endtime="20200715 13:03:20.430"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:20.424" endtime="20200715 13:03:20.431"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:20.433" level="INFO">Running command 'ozone sh key info o3://om:9862/44723-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:23.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:23.038" level="INFO">${output} = {
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:14.412Z",
  "modificationTime": "2020-07-15T13:03:15.850Z",...</msg>
<status status="PASS" starttime="20200715 13:03:20.431" endtime="20200715 13:03:23.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:23.039" level="INFO">{
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:14.412Z",
  "modificationTime": "2020-07-15T13:03:15.850Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518005188853890,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:03:23.038" endtime="20200715 13:03:23.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:23.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:23.039" endtime="20200715 13:03:23.040"></status>
</kw>
<msg timestamp="20200715 13:03:23.040" level="INFO">${result} = {
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:14.412Z",
  "modificationTime": "2020-07-15T13:03:15.850Z",...</msg>
<status status="PASS" starttime="20200715 13:03:20.431" endtime="20200715 13:03:23.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:23.040" endtime="20200715 13:03:23.040"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:23.044" level="INFO">Running command 'ozone sh key delete o3://om:9862/44723-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:25.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:25.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:23.041" endtime="20200715 13:03:25.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:25.580" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:25.579" endtime="20200715 13:03:25.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:25.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:25.580" endtime="20200715 13:03:25.581"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:23.041" endtime="20200715 13:03:25.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:25.583" level="INFO">Running command 'ozone sh key cp o3://om:9862/44723-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:29.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:29.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:25.581" endtime="20200715 13:03:29.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:29.602" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:29.601" endtime="20200715 13:03:29.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:29.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:29.603" endtime="20200715 13:03:29.603"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:25.581" endtime="20200715 13:03:29.603"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:29.606" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:29.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:29.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:29.604" endtime="20200715 13:03:29.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:29.608" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:29.608" endtime="20200715 13:03:29.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:29.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:29.609" endtime="20200715 13:03:29.609"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:29.603" endtime="20200715 13:03:29.609"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:29.611" level="INFO">Running command 'ozone sh key get o3://om:9862/44723-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:33.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:33.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:29.610" endtime="20200715 13:03:33.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:33.627" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:33.626" endtime="20200715 13:03:33.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:33.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:33.627" endtime="20200715 13:03:33.627"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:29.609" endtime="20200715 13:03:33.627"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:33.630" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:33.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:33.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:33.628" endtime="20200715 13:03:33.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:33.633" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:33.633" endtime="20200715 13:03:33.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:33.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:33.633" endtime="20200715 13:03:33.634"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:33.627" endtime="20200715 13:03:33.634"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:33.637" level="INFO">Running command 'ozone sh key delete o3://om:9862/44723-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:35.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:35.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:33.634" endtime="20200715 13:03:35.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:35.762" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:35.762" endtime="20200715 13:03:35.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:35.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:35.762" endtime="20200715 13:03:35.763"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:33.634" endtime="20200715 13:03:35.763"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:35.766" level="INFO">Running command 'ozone sh key get o3://om:9862/44723-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:37.723" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:03:37.723" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:03:35.764" endtime="20200715 13:03:37.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:37.724" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:03:37.724" endtime="20200715 13:03:37.724"></status>
</kw>
<msg timestamp="20200715 13:03:37.724" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:03:35.763" endtime="20200715 13:03:37.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:37.725" endtime="20200715 13:03:37.725"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:37.729" level="INFO">Running command 'ozone sh key get --force o3://om:9862/44723-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:41.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:41.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:37.726" endtime="20200715 13:03:41.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:41.527" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:41.527" endtime="20200715 13:03:41.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:41.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:41.527" endtime="20200715 13:03:41.528"></status>
</kw>
<msg timestamp="20200715 13:03:41.528" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:03:37.725" endtime="20200715 13:03:41.528"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:41.528" endtime="20200715 13:03:41.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:41.531" level="INFO">Running command 'ozone sh key info o3://om:9862/44723-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:43.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:43.762" level="INFO">${output} = {
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:06.469Z",
  "modificationTime": "2020-07-15T13:03:08.049Z",
  "re...</msg>
<status status="PASS" starttime="20200715 13:03:41.529" endtime="20200715 13:03:43.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:43.763" level="INFO">{
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:06.469Z",
  "modificationTime": "2020-07-15T13:03:08.049Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518004668366980,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:03:43.762" endtime="20200715 13:03:43.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:43.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:43.763" endtime="20200715 13:03:43.764"></status>
</kw>
<msg timestamp="20200715 13:03:43.764" level="INFO">${result} = {
  "volumeName": "44723-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:03:06.469Z",
  "modificationTime": "2020-07-15T13:03:08.049Z",
  "re...</msg>
<status status="PASS" starttime="20200715 13:03:41.529" endtime="20200715 13:03:43.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:43.764" endtime="20200715 13:03:43.764"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:43.768" level="INFO">Running command 'ozone sh key list o3://om:9862/44723-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:46.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:46.048" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 13:03:43.765" endtime="20200715 13:03:46.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:46.049" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 13:03:46.048" endtime="20200715 13:03:46.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:46.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:46.049" endtime="20200715 13:03:46.049"></status>
</kw>
<msg timestamp="20200715 13:03:46.050" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 13:03:43.764" endtime="20200715 13:03:46.050"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:46.050" endtime="20200715 13:03:46.050"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:46.052" level="INFO">Running command 'ozone sh key rename o3://om:9862/44723-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:48.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:48.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:46.050" endtime="20200715 13:03:48.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:48.168" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:48.167" endtime="20200715 13:03:48.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:48.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:48.168" endtime="20200715 13:03:48.169"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:46.050" endtime="20200715 13:03:48.169"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:48.173" level="INFO">Running command 'ozone sh key list o3://om:9862/44723-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:50.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:50.433" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 13:03:48.170" endtime="20200715 13:03:50.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:50.434" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 13:03:50.434" endtime="20200715 13:03:50.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:50.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:50.435" endtime="20200715 13:03:50.435"></status>
</kw>
<msg timestamp="20200715 13:03:50.435" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 13:03:48.169" endtime="20200715 13:03:50.435"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:50.436" endtime="20200715 13:03:50.436"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:50.439" level="INFO">Running command 'ozone sh key delete o3://om:9862/44723-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:52.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:52.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:50.437" endtime="20200715 13:03:52.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:52.550" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:52.549" endtime="20200715 13:03:52.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:52.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:52.550" endtime="20200715 13:03:52.551"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:50.436" endtime="20200715 13:03:52.551"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:04.341" endtime="20200715 13:03:52.551"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:04.341" endtime="20200715 13:03:52.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:52.553" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/44723-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:54.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:54.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:52.551" endtime="20200715 13:03:54.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:54.688" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:54.688" endtime="20200715 13:03:54.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:54.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:54.689" endtime="20200715 13:03:54.689"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:52.551" endtime="20200715 13:03:54.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:54.692" level="INFO">Running command 'ozone sh volume delete o3://om:9862/44723-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:56.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:56.784" level="INFO">${output} = Volume 44723-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200715 13:03:54.690" endtime="20200715 13:03:56.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:56.786" level="INFO">Volume 44723-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200715 13:03:56.785" endtime="20200715 13:03:56.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:56.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:56.786" endtime="20200715 13:03:56.786"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:54.689" endtime="20200715 13:03:56.787"></status>
</kw>
<status status="PASS" starttime="20200715 13:02:42.512" endtime="20200715 13:03:56.787"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:02:42.510" endtime="20200715 13:03:56.787" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:03:56.788" endtime="20200715 13:03:56.788"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:56.792" level="INFO">Running command 'ozone sh volume create o3://om:9862/44723-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:03:58.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:03:58.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:03:56.789" endtime="20200715 13:03:58.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:03:58.907" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:03:58.907" endtime="20200715 13:03:58.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:03:58.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:03:58.908" endtime="20200715 13:03:58.908"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:56.789" endtime="20200715 13:03:58.908"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:03:58.912" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/44723-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:01.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:01.441" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:03:58.909" endtime="20200715 13:04:01.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:01.442" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:01.441" endtime="20200715 13:04:01.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:01.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:01.442" endtime="20200715 13:04:01.442"></status>
</kw>
<msg timestamp="20200715 13:04:01.442" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:03:58.908" endtime="20200715 13:04:01.442"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:01.442" endtime="20200715 13:04:01.443"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:01.447" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/44723-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:03.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:03.438" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:01.444" endtime="20200715 13:04:03.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:03.439" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:03.439" endtime="20200715 13:04:03.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:03.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:03.439" endtime="20200715 13:04:03.440"></status>
</kw>
<msg timestamp="20200715 13:04:03.441" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:01.443" endtime="20200715 13:04:03.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:03.443" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/44723-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:05.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:05.688" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:03.441" endtime="20200715 13:04:05.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:05.689" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:05.689" endtime="20200715 13:04:05.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:05.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:05.689" endtime="20200715 13:04:05.690"></status>
</kw>
<msg timestamp="20200715 13:04:05.690" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:03.441" endtime="20200715 13:04:05.690"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:05.690" endtime="20200715 13:04:05.691"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:05.694" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/44723-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:07.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:07.824" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:04:05.692" endtime="20200715 13:04:07.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:07.825" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:04:07.824" endtime="20200715 13:04:07.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:07.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:07.825" endtime="20200715 13:04:07.825"></status>
</kw>
<msg timestamp="20200715 13:04:07.825" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:04:05.691" endtime="20200715 13:04:07.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:07.829" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/44723-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:09.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:09.986" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:07.826" endtime="20200715 13:04:09.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:09.987" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:09.986" endtime="20200715 13:04:09.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:09.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:09.987" endtime="20200715 13:04:09.988"></status>
</kw>
<msg timestamp="20200715 13:04:09.988" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:07.826" endtime="20200715 13:04:09.988"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:09.988" endtime="20200715 13:04:09.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:09.992" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/44723-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:12.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:12.204" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:09.990" endtime="20200715 13:04:12.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:12.205" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:12.205" endtime="20200715 13:04:12.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:12.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:12.205" endtime="20200715 13:04:12.206"></status>
</kw>
<msg timestamp="20200715 13:04:12.206" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:09.989" endtime="20200715 13:04:12.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:12.208" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/44723-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:14.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:14.597" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200715 13:04:12.207" endtime="20200715 13:04:14.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:14.597" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:14.597" endtime="20200715 13:04:14.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:14.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:14.598" endtime="20200715 13:04:14.598"></status>
</kw>
<msg timestamp="20200715 13:04:14.598" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200715 13:04:12.206" endtime="20200715 13:04:14.598"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:14.598" endtime="20200715 13:04:14.599"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:14.599" endtime="20200715 13:04:14.600"></status>
</kw>
<status status="PASS" starttime="20200715 13:03:56.789" endtime="20200715 13:04:14.600"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:03:56.787" endtime="20200715 13:04:14.600" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:14.601" endtime="20200715 13:04:14.602"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:14.605" level="INFO">Running command 'ozone sh bucket create o3://om:9862/44723-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:16.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:16.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:04:14.603" endtime="20200715 13:04:16.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:16.748" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:04:16.748" endtime="20200715 13:04:16.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:16.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:16.749" endtime="20200715 13:04:16.749"></status>
</kw>
<status status="PASS" starttime="20200715 13:04:14.603" endtime="20200715 13:04:16.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:16.752" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/44723-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:18.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:18.955" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:16.750" endtime="20200715 13:04:18.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:18.956" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:18.955" endtime="20200715 13:04:18.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:18.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:18.956" endtime="20200715 13:04:18.957"></status>
</kw>
<msg timestamp="20200715 13:04:18.957" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:16.749" endtime="20200715 13:04:18.957"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:18.957" endtime="20200715 13:04:18.958"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:18.961" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/44723-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:21.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:21.066" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 13:04:18.958" endtime="20200715 13:04:21.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:21.067" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 13:04:21.066" endtime="20200715 13:04:21.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:21.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:21.067" endtime="20200715 13:04:21.068"></status>
</kw>
<msg timestamp="20200715 13:04:21.068" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200715 13:04:18.958" endtime="20200715 13:04:21.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:21.071" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/44723-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:23.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:23.474" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:21.069" endtime="20200715 13:04:23.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:23.475" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:23.475" endtime="20200715 13:04:23.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:23.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:23.476" endtime="20200715 13:04:23.476"></status>
</kw>
<msg timestamp="20200715 13:04:23.476" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:21.068" endtime="20200715 13:04:23.476"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:23.477" endtime="20200715 13:04:23.478"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:23.483" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/44723-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:25.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:25.560" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:23.478" endtime="20200715 13:04:25.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:25.561" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:25.560" endtime="20200715 13:04:25.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:25.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:25.561" endtime="20200715 13:04:25.562"></status>
</kw>
<msg timestamp="20200715 13:04:25.562" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:23.478" endtime="20200715 13:04:25.562"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:25.565" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/44723-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:27.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:27.791" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:25.562" endtime="20200715 13:04:27.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:27.792" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:27.792" endtime="20200715 13:04:27.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:27.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:27.792" endtime="20200715 13:04:27.793"></status>
</kw>
<msg timestamp="20200715 13:04:27.793" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:25.562" endtime="20200715 13:04:27.793"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:27.793" endtime="20200715 13:04:27.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:27.797" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/44723-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:29.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:29.910" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:27.794" endtime="20200715 13:04:29.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:29.911" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:29.911" endtime="20200715 13:04:29.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:29.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:29.912" endtime="20200715 13:04:29.912"></status>
</kw>
<msg timestamp="20200715 13:04:29.912" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:27.794" endtime="20200715 13:04:29.912"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:29.915" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/44723-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:32.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:32.323" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 13:04:29.913" endtime="20200715 13:04:32.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:32.324" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:32.324" endtime="20200715 13:04:32.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:32.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:32.325" endtime="20200715 13:04:32.325"></status>
</kw>
<msg timestamp="20200715 13:04:32.325" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 13:04:29.912" endtime="20200715 13:04:32.325"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:32.325" endtime="20200715 13:04:32.326"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:32.326" endtime="20200715 13:04:32.326"></status>
</kw>
<status status="PASS" starttime="20200715 13:04:14.602" endtime="20200715 13:04:32.326"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:04:14.600" endtime="20200715 13:04:32.327" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:32.328" endtime="20200715 13:04:32.328"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:32.331" level="INFO">Running command 'ozone sh key put o3://om:9862/44723-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:36.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:36.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:04:32.329" endtime="20200715 13:04:36.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:36.198" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:04:36.198" endtime="20200715 13:04:36.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:36.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:36.199" endtime="20200715 13:04:36.199"></status>
</kw>
<status status="PASS" starttime="20200715 13:04:32.328" endtime="20200715 13:04:36.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:36.201" level="INFO">Running command 'ozone sh key getacl o3://om:9862/44723-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:38.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:38.518" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:36.200" endtime="20200715 13:04:38.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:38.519" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:38.518" endtime="20200715 13:04:38.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:38.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:38.519" endtime="20200715 13:04:38.519"></status>
</kw>
<msg timestamp="20200715 13:04:38.519" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:36.199" endtime="20200715 13:04:38.519"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:38.519" endtime="20200715 13:04:38.520"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:38.522" level="INFO">Running command 'ozone sh key addacl o3://om:9862/44723-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:40.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:40.547" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:38.520" endtime="20200715 13:04:40.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:40.549" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:40.548" endtime="20200715 13:04:40.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:40.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:40.549" endtime="20200715 13:04:40.550"></status>
</kw>
<msg timestamp="20200715 13:04:40.551" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200715 13:04:38.520" endtime="20200715 13:04:40.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:40.554" level="INFO">Running command 'ozone sh key getacl o3://om:9862/44723-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:42.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:42.813" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:40.552" endtime="20200715 13:04:42.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:42.814" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:42.814" endtime="20200715 13:04:42.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:42.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:42.815" endtime="20200715 13:04:42.815"></status>
</kw>
<msg timestamp="20200715 13:04:42.815" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:40.551" endtime="20200715 13:04:42.815"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:42.815" endtime="20200715 13:04:42.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:42.820" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/44723-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:44.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:44.911" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:42.817" endtime="20200715 13:04:44.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:44.911" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:44.911" endtime="20200715 13:04:44.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:44.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:44.912" endtime="20200715 13:04:44.912"></status>
</kw>
<msg timestamp="20200715 13:04:44.912" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200715 13:04:42.816" endtime="20200715 13:04:44.912"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:44.914" level="INFO">Running command 'ozone sh key getacl o3://om:9862/44723-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:47.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:47.157" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:44.913" endtime="20200715 13:04:47.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:47.158" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:47.157" endtime="20200715 13:04:47.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:47.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:47.158" endtime="20200715 13:04:47.158"></status>
</kw>
<msg timestamp="20200715 13:04:47.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200715 13:04:44.912" endtime="20200715 13:04:47.158"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:47.159" endtime="20200715 13:04:47.159"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:47.161" level="INFO">Running command 'ozone sh key setacl o3://om:9862/44723-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:49.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:49.313" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:47.160" endtime="20200715 13:04:49.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:49.313" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:49.313" endtime="20200715 13:04:49.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:49.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:49.314" endtime="20200715 13:04:49.314"></status>
</kw>
<msg timestamp="20200715 13:04:49.314" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200715 13:04:47.159" endtime="20200715 13:04:49.314"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:49.317" level="INFO">Running command 'ozone sh key getacl o3://om:9862/44723-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:51.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:51.585" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 13:04:49.315" endtime="20200715 13:04:51.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:51.586" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200715 13:04:51.585" endtime="20200715 13:04:51.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:51.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:51.586" endtime="20200715 13:04:51.587"></status>
</kw>
<msg timestamp="20200715 13:04:51.587" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200715 13:04:49.315" endtime="20200715 13:04:51.587"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:51.587" endtime="20200715 13:04:51.588"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:51.588" endtime="20200715 13:04:51.589"></status>
</kw>
<status status="PASS" starttime="20200715 13:04:32.328" endtime="20200715 13:04:51.589"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:04:32.327" endtime="20200715 13:04:51.589" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:51.590" endtime="20200715 13:04:51.590"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:51.593" level="INFO">Running command 'ozone sh volume info o3:///44723-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:53.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:04:53.689" level="INFO">${output} = VOLUME_NOT_FOUND Volume 44723-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 13:04:51.591" endtime="20200715 13:04:53.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:53.689" level="INFO">VOLUME_NOT_FOUND Volume 44723-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 13:04:53.689" endtime="20200715 13:04:53.690"></status>
</kw>
<msg timestamp="20200715 13:04:53.690" level="INFO">${result} = VOLUME_NOT_FOUND Volume 44723-rpcwport is not found</msg>
<status status="PASS" starttime="20200715 13:04:51.591" endtime="20200715 13:04:53.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:53.690" endtime="20200715 13:04:53.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:53.692" level="INFO">Running command 'ozone sh volume create o3:///44723-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:55.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:55.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:04:53.691" endtime="20200715 13:04:55.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:55.814" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:04:55.813" endtime="20200715 13:04:55.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:55.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:55.814" endtime="20200715 13:04:55.815"></status>
</kw>
<msg timestamp="20200715 13:04:55.815" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:04:53.690" endtime="20200715 13:04:55.815"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:55.815" endtime="20200715 13:04:55.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:55.818" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="44723-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:04:58.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:04:58.151" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 13:04:55.816" endtime="20200715 13:04:58.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:04:58.152" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:04:58.151" endtime="20200715 13:04:58.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:04:58.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:04:58.152" endtime="20200715 13:04:58.152"></status>
</kw>
<msg timestamp="20200715 13:04:58.153" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 13:04:55.816" endtime="20200715 13:04:58.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:04:58.153" endtime="20200715 13:04:58.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:04:58.156" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="44723-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:00.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:00.623" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 13:04:58.153" endtime="20200715 13:05:00.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:00.624" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:05:00.624" endtime="20200715 13:05:00.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:00.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:00.625" endtime="20200715 13:05:00.625"></status>
</kw>
<msg timestamp="20200715 13:05:00.625" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:04:55.699Z",
  "modificationTime": "2020-07-15T13:04:55.699Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200715 13:04:58.153" endtime="20200715 13:05:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:00.625" endtime="20200715 13:05:00.629"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:00.631" level="INFO">Running command 'ozone sh volume update o3:///44723-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:03.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:03.044" level="INFO">${output} = {
  "metadata" : { },
  "name" : "44723-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:04:55.699Z",
  "modificationTime" : "2020-07-15T13:05:02.731Z",
  "acls...</msg>
<status status="PASS" starttime="20200715 13:05:00.629" endtime="20200715 13:05:03.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:03.045" level="INFO">{
  "metadata" : { },
  "name" : "44723-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:04:55.699Z",
  "modificationTime" : "2020-07-15T13:05:02.731Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 13:05:03.045" endtime="20200715 13:05:03.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:03.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:03.046" endtime="20200715 13:05:03.046"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:00.629" endtime="20200715 13:05:03.046"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:03.049" level="INFO">Running command 'ozone sh volume info o3:///44723-rpcwport | jq -r '. | select(.name=="44723-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:05.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:05.353" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:05:03.047" endtime="20200715 13:05:05.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:05.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 13:05:05.354" endtime="20200715 13:05:05.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:05.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:05.355" endtime="20200715 13:05:05.355"></status>
</kw>
<msg timestamp="20200715 13:05:05.355" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:05:03.046" endtime="20200715 13:05:05.355"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:05.355" endtime="20200715 13:05:05.356"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:05.358" level="INFO">Running command 'ozone sh bucket create o3:///44723-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:07.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:07.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:05.356" endtime="20200715 13:05:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:07.424" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:07.424" endtime="20200715 13:05:07.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:07.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:07.425" endtime="20200715 13:05:07.425"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:05.356" endtime="20200715 13:05:07.425"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:07.428" level="INFO">Running command 'ozone sh bucket info o3:///44723-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:09.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:09.814" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 13:05:07.426" endtime="20200715 13:05:09.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:09.815" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 13:05:09.814" endtime="20200715 13:05:09.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:09.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:09.815" endtime="20200715 13:05:09.815"></status>
</kw>
<msg timestamp="20200715 13:05:09.816" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 13:05:07.425" endtime="20200715 13:05:09.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:09.816" endtime="20200715 13:05:09.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:09.818" level="INFO">Running command 'ozone sh bucket list o3:///44723-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:12.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:12.189" level="INFO">${output} = 44723-rpcwport</msg>
<status status="PASS" starttime="20200715 13:05:09.817" endtime="20200715 13:05:12.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:12.190" level="INFO">44723-rpcwport</msg>
<status status="PASS" starttime="20200715 13:05:12.190" endtime="20200715 13:05:12.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:12.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:12.190" endtime="20200715 13:05:12.191"></status>
</kw>
<msg timestamp="20200715 13:05:12.191" level="INFO">${result} = 44723-rpcwport</msg>
<status status="PASS" starttime="20200715 13:05:09.816" endtime="20200715 13:05:12.191"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:12.191" endtime="20200715 13:05:12.191"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:12.194" level="INFO">Running command 'ozone sh key put o3:///44723-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:15.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:15.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:12.192" endtime="20200715 13:05:15.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:15.731" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:15.731" endtime="20200715 13:05:15.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:15.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:15.731" endtime="20200715 13:05:15.732"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:12.192" endtime="20200715 13:05:15.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:15.736" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:15.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:15.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:15.732" endtime="20200715 13:05:15.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:15.737" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:15.737" endtime="20200715 13:05:15.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:15.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:15.738" endtime="20200715 13:05:15.738"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:15.732" endtime="20200715 13:05:15.738"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:15.741" level="INFO">Running command 'ozone sh key get o3:///44723-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:19.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:19.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:15.739" endtime="20200715 13:05:19.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:19.495" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:19.495" endtime="20200715 13:05:19.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:19.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:19.496" endtime="20200715 13:05:19.496"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:15.738" endtime="20200715 13:05:19.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:19.499" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:19.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:19.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:19.497" endtime="20200715 13:05:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:19.501" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:19.501" endtime="20200715 13:05:19.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:19.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:19.501" endtime="20200715 13:05:19.501"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:19.496" endtime="20200715 13:05:19.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:19.504" level="INFO">Running command 'ozone sh key put -t RATIS o3:///44723-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:23.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:23.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:19.502" endtime="20200715 13:05:23.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:23.220" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:23.219" endtime="20200715 13:05:23.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:23.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:23.220" endtime="20200715 13:05:23.221"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:19.502" endtime="20200715 13:05:23.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:23.224" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:23.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:23.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:23.221" endtime="20200715 13:05:23.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:23.226" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:23.226" endtime="20200715 13:05:23.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:23.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:23.226" endtime="20200715 13:05:23.227"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:23.221" endtime="20200715 13:05:23.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:23.230" level="INFO">Running command 'ozone sh key get o3:///44723-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:27.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:27.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:23.227" endtime="20200715 13:05:27.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:27.014" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:27.014" endtime="20200715 13:05:27.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:27.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:27.014" endtime="20200715 13:05:27.015"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:23.227" endtime="20200715 13:05:27.015"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:27.017" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:27.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:27.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:27.015" endtime="20200715 13:05:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:27.020" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:27.020" endtime="20200715 13:05:27.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:27.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:27.020" endtime="20200715 13:05:27.021"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:27.015" endtime="20200715 13:05:27.021"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:27.024" level="INFO">Running command 'ozone sh key info o3:///44723-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:29.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:29.494" level="INFO">${output} = {
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:21.500Z",
  "modificationTime": "2020-07-15T13:05:22.811Z",
...</msg>
<status status="PASS" starttime="20200715 13:05:27.022" endtime="20200715 13:05:29.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:29.495" level="INFO">{
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:21.500Z",
  "modificationTime": "2020-07-15T13:05:22.811Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518013517693060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:05:29.494" endtime="20200715 13:05:29.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:29.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:29.495" endtime="20200715 13:05:29.496"></status>
</kw>
<msg timestamp="20200715 13:05:29.496" level="INFO">${result} = {
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:21.500Z",
  "modificationTime": "2020-07-15T13:05:22.811Z",
...</msg>
<status status="PASS" starttime="20200715 13:05:27.021" endtime="20200715 13:05:29.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:29.496" endtime="20200715 13:05:29.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:29.499" level="INFO">Running command 'ozone sh key delete o3:///44723-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:31.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:31.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:29.497" endtime="20200715 13:05:31.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:31.663" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:31.662" endtime="20200715 13:05:31.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:31.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:31.663" endtime="20200715 13:05:31.663"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:29.496" endtime="20200715 13:05:31.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:31.667" level="INFO">Running command 'ozone sh key cp o3:///44723-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:35.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:35.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:31.664" endtime="20200715 13:05:35.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:35.777" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:35.777" endtime="20200715 13:05:35.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:35.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:35.778" endtime="20200715 13:05:35.778"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:31.664" endtime="20200715 13:05:35.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:35.781" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:35.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:35.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:35.779" endtime="20200715 13:05:35.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:35.784" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:35.783" endtime="20200715 13:05:35.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:35.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:35.784" endtime="20200715 13:05:35.784"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:35.778" endtime="20200715 13:05:35.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:35.787" level="INFO">Running command 'ozone sh key get o3:///44723-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:39.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:39.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:35.785" endtime="20200715 13:05:39.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:39.172" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:39.172" endtime="20200715 13:05:39.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:39.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:39.173" endtime="20200715 13:05:39.173"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:35.784" endtime="20200715 13:05:39.173"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:39.175" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:39.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:39.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:39.173" endtime="20200715 13:05:39.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:39.178" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:39.178" endtime="20200715 13:05:39.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:39.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:39.178" endtime="20200715 13:05:39.179"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:39.173" endtime="20200715 13:05:39.179"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:39.181" level="INFO">Running command 'ozone sh key delete o3:///44723-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:41.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:41.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:39.179" endtime="20200715 13:05:41.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:41.457" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:41.457" endtime="20200715 13:05:41.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:41.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:41.457" endtime="20200715 13:05:41.458"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:39.179" endtime="20200715 13:05:41.458"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:41.462" level="INFO">Running command 'ozone sh key get o3:///44723-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:43.398" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:05:43.398" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:05:41.459" endtime="20200715 13:05:43.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:43.399" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:05:43.399" endtime="20200715 13:05:43.399"></status>
</kw>
<msg timestamp="20200715 13:05:43.399" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:05:41.458" endtime="20200715 13:05:43.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:43.400" endtime="20200715 13:05:43.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:43.403" level="INFO">Running command 'ozone sh key get --force o3:///44723-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:47.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:47.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:43.401" endtime="20200715 13:05:47.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:47.168" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:47.168" endtime="20200715 13:05:47.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:47.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:47.168" endtime="20200715 13:05:47.169"></status>
</kw>
<msg timestamp="20200715 13:05:47.169" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:05:43.400" endtime="20200715 13:05:47.169"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:47.169" endtime="20200715 13:05:47.169"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:47.172" level="INFO">Running command 'ozone sh key info o3:///44723-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:49.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:49.523" level="INFO">${output} = {
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:14.082Z",
  "modificationTime": "2020-07-15T13:05:15.347Z",
  "rep...</msg>
<status status="PASS" starttime="20200715 13:05:47.170" endtime="20200715 13:05:49.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:49.524" level="INFO">{
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:14.082Z",
  "modificationTime": "2020-07-15T13:05:15.347Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518013031612540,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:05:49.523" endtime="20200715 13:05:49.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:49.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:49.524" endtime="20200715 13:05:49.524"></status>
</kw>
<msg timestamp="20200715 13:05:49.524" level="INFO">${result} = {
  "volumeName": "44723-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:05:14.082Z",
  "modificationTime": "2020-07-15T13:05:15.347Z",
  "rep...</msg>
<status status="PASS" starttime="20200715 13:05:47.169" endtime="20200715 13:05:49.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:49.524" endtime="20200715 13:05:49.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:49.527" level="INFO">Running command 'ozone sh key list o3:///44723-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:51.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:51.729" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 13:05:49.525" endtime="20200715 13:05:51.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:51.730" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 13:05:51.730" endtime="20200715 13:05:51.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:51.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:51.731" endtime="20200715 13:05:51.731"></status>
</kw>
<msg timestamp="20200715 13:05:51.731" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 13:05:49.525" endtime="20200715 13:05:51.731"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:51.731" endtime="20200715 13:05:51.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:51.735" level="INFO">Running command 'ozone sh key rename o3:///44723-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:53.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:53.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:51.732" endtime="20200715 13:05:53.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:53.778" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:53.777" endtime="20200715 13:05:53.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:53.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:53.778" endtime="20200715 13:05:53.779"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:51.732" endtime="20200715 13:05:53.779"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:53.781" level="INFO">Running command 'ozone sh key list o3:///44723-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:56.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:56.230" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 13:05:53.779" endtime="20200715 13:05:56.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:56.231" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 13:05:56.230" endtime="20200715 13:05:56.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:56.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:56.231" endtime="20200715 13:05:56.231"></status>
</kw>
<msg timestamp="20200715 13:05:56.232" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 13:05:53.779" endtime="20200715 13:05:56.232"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 13:05:56.232" endtime="20200715 13:05:56.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:56.235" level="INFO">Running command 'ozone sh key delete o3:///44723-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:05:58.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:05:58.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:56.233" endtime="20200715 13:05:58.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:05:58.387" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:05:58.387" endtime="20200715 13:05:58.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:05:58.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:05:58.387" endtime="20200715 13:05:58.388"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:56.233" endtime="20200715 13:05:58.388"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:12.191" endtime="20200715 13:05:58.388"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:12.191" endtime="20200715 13:05:58.388"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:05:58.391" level="INFO">Running command 'ozone sh bucket delete o3:///44723-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:00.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:00.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:05:58.389" endtime="20200715 13:06:00.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:00.576" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:00.575" endtime="20200715 13:06:00.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:00.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:00.576" endtime="20200715 13:06:00.577"></status>
</kw>
<status status="PASS" starttime="20200715 13:05:58.388" endtime="20200715 13:06:00.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:00.581" level="INFO">Running command 'ozone sh volume delete o3:///44723-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:02.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:02.742" level="INFO">${output} = Volume 44723-rpcwport is deleted</msg>
<status status="PASS" starttime="20200715 13:06:00.578" endtime="20200715 13:06:02.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:02.743" level="INFO">Volume 44723-rpcwport is deleted</msg>
<status status="PASS" starttime="20200715 13:06:02.743" endtime="20200715 13:06:02.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:02.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:02.744" endtime="20200715 13:06:02.744"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:00.577" endtime="20200715 13:06:02.744"></status>
</kw>
<status status="PASS" starttime="20200715 13:04:51.590" endtime="20200715 13:06:02.744"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:04:51.589" endtime="20200715 13:06:02.745" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:02.746" endtime="20200715 13:06:02.746"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:02.749" level="INFO">Running command 'ozone sh volume info /44723-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:04.751" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:06:04.751" level="INFO">${output} = VOLUME_NOT_FOUND Volume 44723-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 13:06:02.747" endtime="20200715 13:06:04.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:04.752" level="INFO">VOLUME_NOT_FOUND Volume 44723-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 13:06:04.752" endtime="20200715 13:06:04.752"></status>
</kw>
<msg timestamp="20200715 13:06:04.752" level="INFO">${result} = VOLUME_NOT_FOUND Volume 44723-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200715 13:06:02.747" endtime="20200715 13:06:04.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:04.753" endtime="20200715 13:06:04.753"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:04.755" level="INFO">Running command 'ozone sh volume create /44723-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:06.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:06.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:04.753" endtime="20200715 13:06:06.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:06.984" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:06.984" endtime="20200715 13:06:06.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:06.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:06.985" endtime="20200715 13:06:06.985"></status>
</kw>
<msg timestamp="20200715 13:06:06.986" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:06:04.753" endtime="20200715 13:06:06.986"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:06.986" endtime="20200715 13:06:06.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:06.990" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="44723-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:09.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:09.269" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 13:06:06.987" endtime="20200715 13:06:09.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:09.271" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:06:09.270" endtime="20200715 13:06:09.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:09.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:09.271" endtime="20200715 13:06:09.271"></status>
</kw>
<msg timestamp="20200715 13:06:09.271" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 13:06:06.986" endtime="20200715 13:06:09.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:09.272" endtime="20200715 13:06:09.272"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:09.275" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="44723-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:11.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:11.608" level="INFO">${output} = {
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 13:06:09.272" endtime="20200715 13:06:11.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:11.608" level="INFO">{
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200715 13:06:11.608" endtime="20200715 13:06:11.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:11.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:11.609" endtime="20200715 13:06:11.609"></status>
</kw>
<msg timestamp="20200715 13:06:11.609" level="INFO">${result} = {
  "metadata": {},
  "name": "44723-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-15T13:06:06.861Z",
  "modificationTime": "2020-07-15T13:06:06.861Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200715 13:06:09.272" endtime="20200715 13:06:11.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:11.609" endtime="20200715 13:06:11.610"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:11.612" level="INFO">Running command 'ozone sh volume update /44723-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:13.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:13.824" level="INFO">${output} = {
  "metadata" : { },
  "name" : "44723-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:06:06.861Z",
  "modificationTime" : "2020-07-15T13:06:13.574Z",
  "a...</msg>
<status status="PASS" starttime="20200715 13:06:11.610" endtime="20200715 13:06:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:13.825" level="INFO">{
  "metadata" : { },
  "name" : "44723-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-15T13:06:06.861Z",
  "modificationTime" : "2020-07-15T13:06:13.574Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200715 13:06:13.825" endtime="20200715 13:06:13.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:13.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:13.825" endtime="20200715 13:06:13.826"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:11.610" endtime="20200715 13:06:13.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:13.829" level="INFO">Running command 'ozone sh volume info /44723-rpcwoscheme | jq -r '. | select(.name=="44723-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:16.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:16.135" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:06:13.827" endtime="20200715 13:06:16.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:16.136" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200715 13:06:16.136" endtime="20200715 13:06:16.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:16.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:16.137" endtime="20200715 13:06:16.137"></status>
</kw>
<msg timestamp="20200715 13:06:16.137" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200715 13:06:13.826" endtime="20200715 13:06:16.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:16.137" endtime="20200715 13:06:16.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:16.140" level="INFO">Running command 'ozone sh bucket create /44723-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:18.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:18.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:16.138" endtime="20200715 13:06:18.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:18.175" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:18.174" endtime="20200715 13:06:18.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:18.175" endtime="20200715 13:06:18.176"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:16.138" endtime="20200715 13:06:18.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:18.178" level="INFO">Running command 'ozone sh bucket info /44723-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:20.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:20.389" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200715 13:06:18.176" endtime="20200715 13:06:20.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:20.390" level="INFO">DISK</msg>
<status status="PASS" starttime="20200715 13:06:20.390" endtime="20200715 13:06:20.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:20.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:20.391" endtime="20200715 13:06:20.391"></status>
</kw>
<msg timestamp="20200715 13:06:20.391" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200715 13:06:18.176" endtime="20200715 13:06:20.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:20.391" endtime="20200715 13:06:20.392"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:20.395" level="INFO">Running command 'ozone sh bucket list /44723-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:22.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:22.656" level="INFO">${output} = 44723-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 13:06:20.392" endtime="20200715 13:06:22.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:22.657" level="INFO">44723-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 13:06:22.656" endtime="20200715 13:06:22.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:22.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:22.657" endtime="20200715 13:06:22.658"></status>
</kw>
<msg timestamp="20200715 13:06:22.658" level="INFO">${result} = 44723-rpcwoscheme</msg>
<status status="PASS" starttime="20200715 13:06:20.392" endtime="20200715 13:06:22.658"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:22.658" endtime="20200715 13:06:22.658"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:22.662" level="INFO">Running command 'ozone sh key put /44723-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:26.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:26.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:22.659" endtime="20200715 13:06:26.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:26.511" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:26.510" endtime="20200715 13:06:26.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:26.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:26.511" endtime="20200715 13:06:26.511"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:22.659" endtime="20200715 13:06:26.512"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:26.514" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:26.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:26.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:26.512" endtime="20200715 13:06:26.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:26.517" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:26.516" endtime="20200715 13:06:26.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:26.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:26.517" endtime="20200715 13:06:26.517"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:26.512" endtime="20200715 13:06:26.518"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:26.520" level="INFO">Running command 'ozone sh key get /44723-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:30.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:30.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:26.518" endtime="20200715 13:06:30.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:30.070" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:30.069" endtime="20200715 13:06:30.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:30.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:30.070" endtime="20200715 13:06:30.071"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:26.518" endtime="20200715 13:06:30.071"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:30.074" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:30.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:30.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:30.071" endtime="20200715 13:06:30.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:30.077" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:30.076" endtime="20200715 13:06:30.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:30.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:30.077" endtime="20200715 13:06:30.077"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:30.071" endtime="20200715 13:06:30.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:30.080" level="INFO">Running command 'ozone sh key put -t RATIS /44723-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:34.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:34.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:30.078" endtime="20200715 13:06:34.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:34.018" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:34.018" endtime="20200715 13:06:34.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:34.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:34.018" endtime="20200715 13:06:34.019"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:30.078" endtime="20200715 13:06:34.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:34.022" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:34.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:34.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:34.019" endtime="20200715 13:06:34.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:34.024" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:34.024" endtime="20200715 13:06:34.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:34.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:34.024" endtime="20200715 13:06:34.024"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:34.019" endtime="20200715 13:06:34.025"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:34.027" level="INFO">Running command 'ozone sh key get /44723-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:38.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:38.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:34.025" endtime="20200715 13:06:38.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:38.223" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:38.223" endtime="20200715 13:06:38.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:38.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:38.224" endtime="20200715 13:06:38.224"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:34.025" endtime="20200715 13:06:38.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:38.227" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:38.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:38.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:38.225" endtime="20200715 13:06:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:38.230" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:38.230" endtime="20200715 13:06:38.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:38.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:38.231" endtime="20200715 13:06:38.231"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:38.224" endtime="20200715 13:06:38.231"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:38.234" level="INFO">Running command 'ozone sh key info /44723-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:41.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:41.095" level="INFO">${output} = {
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:32.215Z",
  "modificationTime": "2020-07-15T13:06:33.494Z...</msg>
<status status="PASS" starttime="20200715 13:06:38.232" endtime="20200715 13:06:41.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:41.096" level="INFO">{
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:32.215Z",
  "modificationTime": "2020-07-15T13:06:33.494Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518018152136830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:06:41.095" endtime="20200715 13:06:41.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:41.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:41.096" endtime="20200715 13:06:41.097"></status>
</kw>
<msg timestamp="20200715 13:06:41.097" level="INFO">${result} = {
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:32.215Z",
  "modificationTime": "2020-07-15T13:06:33.494Z...</msg>
<status status="PASS" starttime="20200715 13:06:38.231" endtime="20200715 13:06:41.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:41.097" endtime="20200715 13:06:41.097"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:41.101" level="INFO">Running command 'ozone sh key delete /44723-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:43.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:43.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:41.098" endtime="20200715 13:06:43.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:43.616" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:43.616" endtime="20200715 13:06:43.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:43.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:43.616" endtime="20200715 13:06:43.617"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:41.097" endtime="20200715 13:06:43.617"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:43.620" level="INFO">Running command 'ozone sh key cp /44723-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:48.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:48.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:43.618" endtime="20200715 13:06:48.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:48.528" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:48.528" endtime="20200715 13:06:48.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:48.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:48.529" endtime="20200715 13:06:48.529"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:43.617" endtime="20200715 13:06:48.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:48.532" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:48.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:48.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:48.530" endtime="20200715 13:06:48.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:48.535" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:48.535" endtime="20200715 13:06:48.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:48.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:48.536" endtime="20200715 13:06:48.537"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:48.530" endtime="20200715 13:06:48.537"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:48.540" level="INFO">Running command 'ozone sh key get /44723-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:52.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:52.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:48.537" endtime="20200715 13:06:52.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:52.974" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:52.973" endtime="20200715 13:06:52.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:52.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:52.974" endtime="20200715 13:06:52.975"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:48.537" endtime="20200715 13:06:52.975"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:52.978" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:52.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:52.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:52.975" endtime="20200715 13:06:52.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:52.981" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:52.981" endtime="20200715 13:06:52.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:52.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:52.982" endtime="20200715 13:06:52.982"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:52.975" endtime="20200715 13:06:52.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:52.985" level="INFO">Running command 'ozone sh key delete /44723-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:55.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:06:55.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:52.983" endtime="20200715 13:06:55.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:55.309" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:06:55.308" endtime="20200715 13:06:55.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:06:55.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:06:55.309" endtime="20200715 13:06:55.309"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:52.982" endtime="20200715 13:06:55.309"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:55.313" level="INFO">Running command 'ozone sh key get /44723-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:06:57.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20200715 13:06:57.579" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:06:55.310" endtime="20200715 13:06:57.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:06:57.580" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:06:57.580" endtime="20200715 13:06:57.581"></status>
</kw>
<msg timestamp="20200715 13:06:57.581" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200715 13:06:55.310" endtime="20200715 13:06:57.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:06:57.581" endtime="20200715 13:06:57.581"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:06:57.584" level="INFO">Running command 'ozone sh key get --force /44723-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:02.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:02.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:06:57.582" endtime="20200715 13:07:02.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:02.063" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:07:02.063" endtime="20200715 13:07:02.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:02.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:02.064" endtime="20200715 13:07:02.064"></status>
</kw>
<msg timestamp="20200715 13:07:02.064" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200715 13:06:57.581" endtime="20200715 13:07:02.064"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200715 13:07:02.064" endtime="20200715 13:07:02.065"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:02.068" level="INFO">Running command 'ozone sh key info /44723-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:04.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:04.832" level="INFO">${output} = {
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:24.680Z",
  "modificationTime": "2020-07-15T13:06:26.148Z",
  "...</msg>
<status status="PASS" starttime="20200715 13:07:02.066" endtime="20200715 13:07:04.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:04.833" level="INFO">{
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:24.680Z",
  "modificationTime": "2020-07-15T13:06:26.148Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104518017658323070,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200715 13:07:04.832" endtime="20200715 13:07:04.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:04.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:04.833" endtime="20200715 13:07:04.834"></status>
</kw>
<msg timestamp="20200715 13:07:04.834" level="INFO">${result} = {
  "volumeName": "44723-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-15T13:06:24.680Z",
  "modificationTime": "2020-07-15T13:06:26.148Z",
  "...</msg>
<status status="PASS" starttime="20200715 13:07:02.065" endtime="20200715 13:07:04.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200715 13:07:04.834" endtime="20200715 13:07:04.834"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:04.838" level="INFO">Running command 'ozone sh key list /44723-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:07.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:07.485" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200715 13:07:04.835" endtime="20200715 13:07:07.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:07.486" level="INFO">key1</msg>
<status status="PASS" starttime="20200715 13:07:07.485" endtime="20200715 13:07:07.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:07.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:07.486" endtime="20200715 13:07:07.487"></status>
</kw>
<msg timestamp="20200715 13:07:07.487" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200715 13:07:04.834" endtime="20200715 13:07:07.487"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:07:07.487" endtime="20200715 13:07:07.487"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:07.491" level="INFO">Running command 'ozone sh key rename /44723-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:10.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:10.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:07:07.488" endtime="20200715 13:07:10.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:10.214" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:07:10.213" endtime="20200715 13:07:10.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:10.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:10.214" endtime="20200715 13:07:10.215"></status>
</kw>
<status status="PASS" starttime="20200715 13:07:07.487" endtime="20200715 13:07:10.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:10.219" level="INFO">Running command 'ozone sh key list /44723-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:12.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:12.905" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200715 13:07:10.216" endtime="20200715 13:07:12.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:12.906" level="INFO">key2</msg>
<status status="PASS" starttime="20200715 13:07:12.905" endtime="20200715 13:07:12.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:12.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:12.906" endtime="20200715 13:07:12.906"></status>
</kw>
<msg timestamp="20200715 13:07:12.907" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200715 13:07:10.215" endtime="20200715 13:07:12.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200715 13:07:12.907" endtime="20200715 13:07:12.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:12.911" level="INFO">Running command 'ozone sh key delete /44723-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:15.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:15.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:07:12.908" endtime="20200715 13:07:15.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:15.231" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:07:15.230" endtime="20200715 13:07:15.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:15.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:15.231" endtime="20200715 13:07:15.232"></status>
</kw>
<status status="PASS" starttime="20200715 13:07:12.907" endtime="20200715 13:07:15.232"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:22.659" endtime="20200715 13:07:15.232"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:22.658" endtime="20200715 13:07:15.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:15.236" level="INFO">Running command 'ozone sh bucket delete /44723-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:17.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:17.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:07:15.233" endtime="20200715 13:07:17.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:17.733" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:07:17.732" endtime="20200715 13:07:17.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:17.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:17.733" endtime="20200715 13:07:17.734"></status>
</kw>
<status status="PASS" starttime="20200715 13:07:15.232" endtime="20200715 13:07:17.734"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:07:17.737" level="INFO">Running command 'ozone sh volume delete /44723-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:07:20.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:07:20.452" level="INFO">${output} = Volume 44723-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200715 13:07:17.735" endtime="20200715 13:07:20.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:07:20.453" level="INFO">Volume 44723-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200715 13:07:20.452" endtime="20200715 13:07:20.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:07:20.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:07:20.453" endtime="20200715 13:07:20.453"></status>
</kw>
<status status="PASS" starttime="20200715 13:07:17.734" endtime="20200715 13:07:20.453"></status>
</kw>
<status status="PASS" starttime="20200715 13:06:02.746" endtime="20200715 13:07:20.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200715 13:06:02.745" endtime="20200715 13:07:20.454" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200715 13:02:42.503" endtime="20200715 13:07:20.455"></status>
</suite>
<status status="PASS" starttime="20200715 13:01:39.646" endtime="20200715 13:07:20.459"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
