<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 13:44:28.935" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:28.979" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:28.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:28.981" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:44:28.975" endtime="20200715 13:44:28.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:28.981" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:44:28.981" endtime="20200715 13:44:28.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:28.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:28.981" endtime="20200715 13:44:28.982"></status>
</kw>
<msg timestamp="20200715 13:44:28.982" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:44:28.974" endtime="20200715 13:44:28.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:44:28.983" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:44:28.982" endtime="20200715 13:44:28.983"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:28.986" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:28.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:28.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:44:28.984" endtime="20200715 13:44:28.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:28.997" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:44:28.997" endtime="20200715 13:44:28.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:28.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:28.997" endtime="20200715 13:44:28.998"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:28.983" endtime="20200715 13:44:28.998"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:28.983" endtime="20200715 13:44:28.998"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:28.974" endtime="20200715 13:44:28.998"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:28.974" endtime="20200715 13:44:28.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:29.001" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:37.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:37.017" level="INFO">${output} = 2020-07-15 13:44:30,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:44:30,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:44:28.998" endtime="20200715 13:44:37.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:37.018" level="INFO">2020-07-15 13:44:30,066 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:44:30,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:44:30,200 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-15 13:44:31,500 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 13:44:31,501 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 13:44:31,514 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 13:44:31,523 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-15 13:44:31,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-95027, with testuser/scm@EXAMPLE.COM as owner.
2020-07-15 13:44:31,672 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-95027/bucket-0-79722, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:44:32,133 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 13:44:32,526 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,009
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,144
Average Time spent in key write: 00:00:00,384
Total bytes written: 10250
Total Execution time: 00:00:06,342
***************************************************</msg>
<status status="PASS" starttime="20200715 13:44:37.017" endtime="20200715 13:44:37.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:37.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:37.018" endtime="20200715 13:44:37.018"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:28.998" endtime="20200715 13:44:37.019"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:44:28.974" endtime="20200715 13:44:37.019" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:37.024" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:37.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:37.026" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:44:37.022" endtime="20200715 13:44:37.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:37.027" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:44:37.026" endtime="20200715 13:44:37.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:37.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:37.027" endtime="20200715 13:44:37.027"></status>
</kw>
<msg timestamp="20200715 13:44:37.027" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:44:37.022" endtime="20200715 13:44:37.027"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:37.030" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:37.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:37.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:44:37.028" endtime="20200715 13:44:37.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:37.040" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:44:37.039" endtime="20200715 13:44:37.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:37.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:37.040" endtime="20200715 13:44:37.040"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:37.028" endtime="20200715 13:44:37.041"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:37.027" endtime="20200715 13:44:37.041"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:37.021" endtime="20200715 13:44:37.041"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:37.021" endtime="20200715 13:44:37.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:37.043" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:37.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:37.193" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:37.041" endtime="20200715 13:44:37.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:37.194" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    532      0 --:--:-- --:--:-- --:--:--   534
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 13:44:37.193" endtime="20200715 13:44:37.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:37.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:37.194" endtime="20200715 13:44:37.194"></status>
</kw>
<msg timestamp="20200715 13:44:37.194" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:37.041" endtime="20200715 13:44:37.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:44:37.195" endtime="20200715 13:44:37.195"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:37.197" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:37.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:37.223" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:37.196" endtime="20200715 13:44:37.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:37.224" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   151k      0 --:--:-- --:--:-- --:--:--  157k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 13:44:37.223" endtime="20200715 13:44:37.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:37.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:37.224" endtime="20200715 13:44:37.225"></status>
</kw>
<msg timestamp="20200715 13:44:37.225" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:37.195" endtime="20200715 13:44:37.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 13:44:37.226" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   151k      0 --:--:-- --:--:-- --:--:--  157k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 13:44:37.225" endtime="20200715 13:44:37.226"></status>
</kw>
<status status="FAIL" starttime="20200715 13:44:37.020" endtime="20200715 13:44:37.226"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:47.233" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:47.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:47.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:44:47.230" endtime="20200715 13:44:47.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:47.238" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:44:47.238" endtime="20200715 13:44:47.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:47.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:47.238" endtime="20200715 13:44:47.239"></status>
</kw>
<msg timestamp="20200715 13:44:47.239" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:44:47.229" endtime="20200715 13:44:47.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:47.242" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:47.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:47.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:44:47.240" endtime="20200715 13:44:47.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:47.254" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:44:47.254" endtime="20200715 13:44:47.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:47.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:47.254" endtime="20200715 13:44:47.255"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:47.240" endtime="20200715 13:44:47.255"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:47.239" endtime="20200715 13:44:47.255"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:47.228" endtime="20200715 13:44:47.255"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:47.228" endtime="20200715 13:44:47.255"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:47.257" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:47.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:47.276" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:47.255" endtime="20200715 13:44:47.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:47.277" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  11025      0 --:--:-- --:--:-- --:--:-- 12833
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 13:44:47.277" endtime="20200715 13:44:47.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:47.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:47.277" endtime="20200715 13:44:47.278"></status>
</kw>
<msg timestamp="20200715 13:44:47.278" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:47.255" endtime="20200715 13:44:47.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:44:47.278" endtime="20200715 13:44:47.278"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:47.281" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:47.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:47.294" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:47.279" endtime="20200715 13:44:47.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:47.295" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   367k      0 --:--:-- --:--:-- --:--:--  333k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 13:44:47.294" endtime="20200715 13:44:47.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:47.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:47.295" endtime="20200715 13:44:47.296"></status>
</kw>
<msg timestamp="20200715 13:44:47.296" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:47.278" endtime="20200715 13:44:47.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 13:44:47.297" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   367k      0 --:--:-- --:--:-- --:--:--  333k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 13:44:47.296" endtime="20200715 13:44:47.297"></status>
</kw>
<status status="FAIL" starttime="20200715 13:44:47.227" endtime="20200715 13:44:47.297"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:57.304" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:57.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:57.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:44:57.301" endtime="20200715 13:44:57.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:57.308" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:44:57.308" endtime="20200715 13:44:57.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:57.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:57.308" endtime="20200715 13:44:57.309"></status>
</kw>
<msg timestamp="20200715 13:44:57.309" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:44:57.300" endtime="20200715 13:44:57.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:57.312" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:57.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:57.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:44:57.310" endtime="20200715 13:44:57.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:57.325" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:44:57.325" endtime="20200715 13:44:57.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:57.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:57.326" endtime="20200715 13:44:57.326"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:57.310" endtime="20200715 13:44:57.326"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:57.309" endtime="20200715 13:44:57.326"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:57.300" endtime="20200715 13:44:57.326"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:57.299" endtime="20200715 13:44:57.326"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:57.329" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:57.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:57.342" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:57.327" endtime="20200715 13:44:57.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:57.342" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  13710      0 --:--:-- --:--:-- --:--:-- 15400
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":145}]}}</msg>
<status status="PASS" starttime="20200715 13:44:57.342" endtime="20200715 13:44:57.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:57.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:57.343" endtime="20200715 13:44:57.343"></status>
</kw>
<msg timestamp="20200715 13:44:57.343" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:57.327" endtime="20200715 13:44:57.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:44:57.344" endtime="20200715 13:44:57.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:44:57.347" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:44:57.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:44:57.360" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:57.345" endtime="20200715 13:44:57.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:44:57.361" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   328k      0 --:--:-- --:--:-- --:--:--  333k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200715 13:44:57.361" endtime="20200715 13:44:57.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:44:57.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:44:57.362" endtime="20200715 13:44:57.362"></status>
</kw>
<msg timestamp="20200715 13:44:57.362" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:44:57.344" endtime="20200715 13:44:57.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200715 13:44:57.363" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Date: Wed, 15 Jul 2020 13:44:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3070
&lt; 
{ [data not shown]

100  3070  100  3070    0     0   328k      0 --:--:-- --:--:-- --:--:--  333k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200715 13:44:57.362" endtime="20200715 13:44:57.363"></status>
</kw>
<status status="FAIL" starttime="20200715 13:44:57.298" endtime="20200715 13:44:57.363"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.369" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:07.366" endtime="20200715 13:45:07.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.372" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:07.372" endtime="20200715 13:45:07.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.372" endtime="20200715 13:45:07.373"></status>
</kw>
<msg timestamp="20200715 13:45:07.373" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:07.366" endtime="20200715 13:45:07.373"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.376" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:07.374" endtime="20200715 13:45:07.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.399" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:07.398" endtime="20200715 13:45:07.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.399" endtime="20200715 13:45:07.400"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.374" endtime="20200715 13:45:07.400"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.373" endtime="20200715 13:45:07.400"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.365" endtime="20200715 13:45:07.400"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.365" endtime="20200715 13:45:07.400"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.405" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.424" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.401" endtime="20200715 13:45:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.425" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 147
&lt; 
{ [data not shown]

100   147  100   147    0     0   9917      0 --:--:-- --:--:-- --:--:-- 10500
* Connection #0 to host recon left intact
{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":5},{"ContainerID":3,"NumberOfKeys":5}]}}</msg>
<status status="PASS" starttime="20200715 13:45:07.424" endtime="20200715 13:45:07.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.425" endtime="20200715 13:45:07.425"></status>
</kw>
<msg timestamp="20200715 13:45:07.425" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.400" endtime="20200715 13:45:07.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.426" endtime="20200715 13:45:07.426"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.428" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.443" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.426" endtime="20200715 13:45:07.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.444" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3215
&lt; 
{ [data not shown]

100  3215  100  3215    0     0   324k      0 --:--:-- --:--:-- --:--:--  348k
* Connection #0 to host recon left intact
[{"volume":"vol-3-02768","bucket":"bucket-2-55919","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-4-82129","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-1-13361","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-3-40385","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-4-94366","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-4-99519","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-3-26201","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-3-08951","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-0-48250","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-0-49008","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-0-44467","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-1-62857","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-0-61879","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-4-89023","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-1-98930","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-4-10001","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-2-92988","fileSize":16384,"count":5},{"volume":"vol-4-84886","bucket":"bucket-2-48200","fileSize":16384,"count":5},{"volume":"vol-3-02768","bucket":"bucket-1-34126","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-2-38691","fileSize":16384,"count":5},{"volume":"vol-1-19238","bucket":"bucket-3-18256","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-2-43178","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-0-06521","fileSize":16384,"count":5},{"volume":"vol-2-94096","bucket":"bucket-3-74854","fileSize":16384,"count":5},{"volume":"vol-0-38410","bucket":"bucket-1-01199","fileSize":16384,"count":5},{"volume":"09937-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"09937-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"09937-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest347","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-18691","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-29247","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"destbucket-39425","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-29247","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-17127","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45480","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-51733","fileSize":1024,"count":2},{"volume":"vol-0-95027","bucket":"bucket-0-79722","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200715 13:45:07.443" endtime="20200715 13:45:07.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.444" endtime="20200715 13:45:07.444"></status>
</kw>
<msg timestamp="20200715 13:45:07.445" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.426" endtime="20200715 13:45:07.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.445" endtime="20200715 13:45:07.445"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.364" endtime="20200715 13:45:07.445"></status>
</kw>
<status status="PASS" starttime="20200715 13:44:37.020" endtime="20200715 13:45:07.446"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:44:37.019" endtime="20200715 13:45:07.446" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.450" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.476" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.448" endtime="20200715 13:45:07.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.477" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1971
&lt; 
{ [data not shown]

100  1971  100  1971    0     0  90363      0 --:--:-- --:--:-- --:--:-- 93857
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"4a24e090-5656-4d3d-b445-94a15a87927b","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594820685685,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24989872128},"pipelines":[{"pipelineID":"9e98056f-7e59-412c-aded-a4b0870d6eb6","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"},{"pipelineID":"10029ade-cc08-48b6-b61b-83a69aea3cde","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":1,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594819579814},{"uuid":"b671352a-3dd8-4a9d-8f36-11162e631281","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594820702996,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24989872128},"pipelines":[{"pipelineID":"6c623029-2e10-44bd-b330-e95b6787f00a","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"10029ade-cc08-48b6-b61b-83a69aea3cde","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2,"version":"0.6.0-SNAPSHOT","setupTime":1594819579039},{"uuid":"b56c62a2-8dd8-4bee-8b7f-ae2afcd2a4b0","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594820702973,"storageReport":{"capacity":89311358976,"used":8192,"remaining":24989872128},"pipelines":[{"pipelineID":"10029ade-cc08-48b6-b61b-83a69aea3cde","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"2f992ae1-18a8-4a58-9162-8874bb54dbe7","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1,"version":"0.6.0-SNAPSHOT","setupTime":1594819579826}]}</msg>
<status status="PASS" starttime="20200715 13:45:07.476" endtime="20200715 13:45:07.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.477" endtime="20200715 13:45:07.477"></status>
</kw>
<msg timestamp="20200715 13:45:07.477" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.447" endtime="20200715 13:45:07.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.478" endtime="20200715 13:45:07.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.478" endtime="20200715 13:45:07.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.478" endtime="20200715 13:45:07.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.479" endtime="20200715 13:45:07.479"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.482" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.501" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.479" endtime="20200715 13:45:07.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.502" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  91036      0 --:--:-- --:--:-- --:--:-- 97714
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"6c623029-2e10-44bd-b330-e95b6787f00a","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1098299,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"9e98056f-7e59-412c-aded-a4b0870d6eb6","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1098182,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":0},{"pipelineId":"10029ade-cc08-48b6-b61b-83a69aea3cde","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1098134,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"2f992ae1-18a8-4a58-9162-8874bb54dbe7","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1098444,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200715 13:45:07.501" endtime="20200715 13:45:07.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.502" endtime="20200715 13:45:07.502"></status>
</kw>
<msg timestamp="20200715 13:45:07.502" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.479" endtime="20200715 13:45:07.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.502" endtime="20200715 13:45:07.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.503" endtime="20200715 13:45:07.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.504" endtime="20200715 13:45:07.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.504" endtime="20200715 13:45:07.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.505" endtime="20200715 13:45:07.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.505" endtime="20200715 13:45:07.506"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.508" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.524" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.506" endtime="20200715 13:45:07.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.525" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  16922      0 --:--:-- --:--:-- --:--:-- 18600
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":74969616384},"containers":3,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200715 13:45:07.524" endtime="20200715 13:45:07.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.525" endtime="20200715 13:45:07.525"></status>
</kw>
<msg timestamp="20200715 13:45:07.526" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.506" endtime="20200715 13:45:07.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.526" endtime="20200715 13:45:07.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.526" endtime="20200715 13:45:07.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.527" endtime="20200715 13:45:07.527"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.530" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.554" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.528" endtime="20200715 13:45:07.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.555" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  23865      0 --:--:-- --:--:-- --:--:-- 25222
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594819635750,"lastReportTimestamp":1594820655699},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594819635233,"lastReportTimestamp":1594820702997},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594819635573,"lastReportTimestamp":1594820673003}]</msg>
<status status="PASS" starttime="20200715 13:45:07.555" endtime="20200715 13:45:07.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.555" endtime="20200715 13:45:07.556"></status>
</kw>
<msg timestamp="20200715 13:45:07.556" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.527" endtime="20200715 13:45:07.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.556" endtime="20200715 13:45:07.557"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:07.447" endtime="20200715 13:45:07.557" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.561" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.564" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:07.559" endtime="20200715 13:45:07.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.564" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:07.564" endtime="20200715 13:45:07.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.565" endtime="20200715 13:45:07.565"></status>
</kw>
<msg timestamp="20200715 13:45:07.565" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:07.559" endtime="20200715 13:45:07.565"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.568" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:07.566" endtime="20200715 13:45:07.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.578" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:07.578" endtime="20200715 13:45:07.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.579" endtime="20200715 13:45:07.579"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.566" endtime="20200715 13:45:07.579"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.565" endtime="20200715 13:45:07.579"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.559" endtime="20200715 13:45:07.580"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:07.558" endtime="20200715 13:45:07.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:07.583" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:07.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:07.613" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.580" endtime="20200715 13:45:07.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:07.614" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  27678      0 --:--:-- --:--:-- --:--:-- 29466
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x683f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQL/+brCloGUZVHL0szUPzkwal3M5uOPNvrHb6akatwXn2jDDq1Pht93IuzwnyvQxQtDtXZUJ9WfheyISQpbHng/LrXwf5YSANnxc3TJUfxwM/Fsp5FfZEblCxqv7auJ3tOrnwWt6QWmdCXkUQn2EQCxtHr6zjKKdmeEQ83hTWN6PmN4QfqGGROPzkjIx41xp9HXEU/dDOtfX7j/7exuYrf8gU0L8MB8uOt0ulk3VSs6GfgUlpZaKpk5YN87CE46LHxdHLIPLCLe3PtZdDrreewxhnMMqIrYtP5ae6418Z5XDrJL0pW6cc8W6gIyDUcXfGqACawQWhn+tR+G0tHSty7yFlukgdIwgc+gAwIBEqKBxwSBxJKsQyussoUQganoXVs8+fS5chQIwf4VeW2YAGzkzpY3W06Dhr1/2Hjh9QkixNisapiPgHHlHfUfMcxGtceQWnFDO80aLGEPENQvdpfTcJ7Q3v4ZP6a7eN/0VTom7dBYnfp89XE1/j6qa7Ct+CXM4qFMDhqy4b8DVdMuk5/VpHzkj2OnXOK6oTLi4Hqav8sJUEVjLdKHJLMni2NOIvrfIDg/9VsftdS17TVdstm0yqZ6GAt5lG/leeaYGVN8mJlIq2c+ucM=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:07 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCIbCOANjnBu+XcN27kYNwTmGXQBu5MBBi1J10upKAAiPLKd+xri4L9v+CeVzzKE+Ws1eX+oWQkpxFuqge683tPbRK
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856707608&amp;s=y8kn73qyNhG4LQ+d3rVALcJiQCrHt7LgOENyCpZUhT4="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 12:40:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  88399      0 --:--:-- --:--:-- --:--:-- 88399
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.eeb92191.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.2f7524a2.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.c5fb9812.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.614" endtime="20200715 13:45:07.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:07.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:07.615" endtime="20200715 13:45:07.615"></status>
</kw>
<msg timestamp="20200715 13:45:07.615" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200715 13:45:07.580" endtime="20200715 13:45:07.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:07.616" endtime="20200715 13:45:07.616"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:07.558" endtime="20200715 13:45:07.616" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200715 13:44:28.956" endtime="20200715 13:45:07.618"></status>
</suite>
<status status="PASS" starttime="20200715 13:44:28.936" endtime="20200715 13:45:07.620"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
