<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 13:13:40.870" rpa="false">
<suite id="s1" name="ozone-ozone-secure-token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
</arguments>
<kw name="Token Test in Unsecure Cluster">
<kw name="Get Token in Unsecure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token get</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:13:40.911" level="INFO">Running command 'ozone sh token get 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:13:42.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:13:42.045" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:40.908" endtime="20200715 13:13:42.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:13:42.046" level="INFO">Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:42.045" endtime="20200715 13:13:42.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:13:42.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:13:42.046" endtime="20200715 13:13:42.046"></status>
</kw>
<msg timestamp="20200715 13:13:42.047" level="INFO">${output} = Error: 'ozone sh token get' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:40.907" endtime="20200715 13:13:42.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token get</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:42.047" endtime="20200715 13:13:42.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:42.047" endtime="20200715 13:13:42.047"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:40.907" endtime="20200715 13:13:42.048"></status>
</kw>
<kw name="Renew Token in Unsecure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token renew</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:13:42.051" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:13:43.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:13:43.054" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:42.048" endtime="20200715 13:13:43.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:13:43.054" level="INFO">Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:43.054" endtime="20200715 13:13:43.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:13:43.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:13:43.055" endtime="20200715 13:13:43.055"></status>
</kw>
<msg timestamp="20200715 13:13:43.055" level="INFO">${output} = Error: 'ozone sh token renew' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:42.048" endtime="20200715 13:13:43.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token renew</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:43.055" endtime="20200715 13:13:43.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:43.056" endtime="20200715 13:13:43.056"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:42.048" endtime="20200715 13:13:43.056"></status>
</kw>
<kw name="Cancel Token in Unsecure Cluster">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token cancel</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:13:43.059" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:13:44.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:13:44.150" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:43.056" endtime="20200715 13:13:44.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:13:44.151" level="INFO">Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:44.150" endtime="20200715 13:13:44.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:13:44.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:13:44.151" endtime="20200715 13:13:44.152"></status>
</kw>
<msg timestamp="20200715 13:13:44.152" level="INFO">${output} = Error: 'ozone sh token cancel' operation works only when security is enabled. To enable security set ozone.security.enabled to true.</msg>
<status status="PASS" starttime="20200715 13:13:43.056" endtime="20200715 13:13:44.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>ozone sh token cancel</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:44.152" endtime="20200715 13:13:44.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>only when security is enabled</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:44.153" endtime="20200715 13:13:44.153"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:43.056" endtime="20200715 13:13:44.153"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:40.907" endtime="20200715 13:13:44.153"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:40.907" endtime="20200715 13:13:44.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:44.153" endtime="20200715 13:13:44.154"></status>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh token print -t /asdf</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:13:44.157" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:13:45.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:13:45.294" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:13:44.154" endtime="20200715 13:13:45.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:13:45.295" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:13:45.294" endtime="20200715 13:13:45.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:13:45.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:13:45.295" endtime="20200715 13:13:45.296"></status>
</kw>
<msg timestamp="20200715 13:13:45.296" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20200715 13:13:44.154" endtime="20200715 13:13:45.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
</arguments>
<status status="PASS" starttime="20200715 13:13:45.296" endtime="20200715 13:13:45.296"></status>
</kw>
<status status="PASS" starttime="20200715 13:13:44.154" endtime="20200715 13:13:45.297"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:13:40.906" endtime="20200715 13:13:45.297" critical="yes"></status>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20200715 13:13:40.871" endtime="20200715 13:13:45.298"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="ozone-ozone-secure-token">ozone-ozone-secure-token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
