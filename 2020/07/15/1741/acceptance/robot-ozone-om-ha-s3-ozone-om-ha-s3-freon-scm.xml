<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 12:56:53.047" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 12:56:53.092" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 12:57:01.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 12:57:01.121" level="INFO">${output} = 2020-07-15 12:56:54,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:56:54,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:56:53.087" endtime="20200715 12:57:01.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 12:57:01.122" level="INFO">2020-07-15 12:56:54,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:56:54,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 12:56:54,559 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 12:56:55,626 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 12:56:55,627 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 12:56:55,635 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 12:56:55,646 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:56:55,682 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-14081, with hadoop as owner.
2020-07-15 12:56:55,744 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-14081/bucket-0-69079, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 12:56:56,331 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 12:56:56,648 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,085
Average Time spent in bucket creation: 00:00:00,050
Average Time spent in key creation: 00:00:00,115
Average Time spent in key write: 00:00:00,612
Total bytes written: 10240
Total Execution time: 00:00:06,045
***************************************************</msg>
<status status="PASS" starttime="20200715 12:57:01.121" endtime="20200715 12:57:01.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 12:57:01.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 12:57:01.122" endtime="20200715 12:57:01.122"></status>
</kw>
<msg timestamp="20200715 12:57:01.123" level="INFO">${result} = 2020-07-15 12:56:54,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:56:54,559 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:56:53.087" endtime="20200715 12:57:01.123"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 12:57:01.124" endtime="20200715 12:57:01.124"></status>
</kw>
<status status="PASS" starttime="20200715 12:57:01.123" endtime="20200715 12:57:01.124"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 12:56:53.086" endtime="20200715 12:57:01.124" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 12:57:01.128" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 12:57:06.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 12:57:06.384" level="INFO">${output} = 2020-07-15 12:57:02,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:02,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:01.126" endtime="20200715 12:57:06.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 12:57:06.385" level="INFO">2020-07-15 12:57:02,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:02,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 12:57:02,679 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 12:57:02,846 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ldbxfcmeik
2020-07-15 12:57:02,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:03,736 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-15 12:57:03,803 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 12:57:03,874 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:04,431 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 12:57:04,875 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:05,875 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 12:57:06,025 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1325.30562, max=1325.30562, mean=1325.30562, stddev=0.0, median=1325.30562, p75=1325.30562, p95=1325.30562, p98=1325.30562, p99=1325.30562, p999=1325.30562, mean_rate=0.4586332981614184, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 12:57:06,026 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-15 12:57:06,026 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 12:57:06,026 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 12:57:06.385" endtime="20200715 12:57:06.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 12:57:06.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 12:57:06.386" endtime="20200715 12:57:06.386"></status>
</kw>
<msg timestamp="20200715 12:57:06.386" level="INFO">${result} = 2020-07-15 12:57:02,478 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:02,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:01.126" endtime="20200715 12:57:06.386"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 12:57:06.387" endtime="20200715 12:57:06.387"></status>
</kw>
<status status="PASS" starttime="20200715 12:57:06.386" endtime="20200715 12:57:06.387"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 12:57:01.125" endtime="20200715 12:57:06.387" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 12:57:06.391" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 12:57:10.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 12:57:10.174" level="INFO">${output} = 2020-07-15 12:57:07,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:07,811 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:06.389" endtime="20200715 12:57:10.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 12:57:10.175" level="INFO">2020-07-15 12:57:07,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:07,811 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 12:57:07,811 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 12:57:07,977 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dd6l62kjyu
2020-07-15 12:57:07,999 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:09,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:10,003 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 12:57:10,149 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=75.907819, max=75.907819, mean=75.907819, stddev=0.0, median=75.907819, p75=75.907819, p95=75.907819, p98=75.907819, p99=75.907819, p999=75.907819, mean_rate=0.8775321432411478, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 12:57:10,150 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 12:57:10,150 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 12:57:10,150 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 12:57:10.175" endtime="20200715 12:57:10.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 12:57:10.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 12:57:10.175" endtime="20200715 12:57:10.176"></status>
</kw>
<msg timestamp="20200715 12:57:10.176" level="INFO">${result} = 2020-07-15 12:57:07,592 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:07,811 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:06.388" endtime="20200715 12:57:10.176"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 12:57:10.177" endtime="20200715 12:57:10.177"></status>
</kw>
<status status="PASS" starttime="20200715 12:57:10.176" endtime="20200715 12:57:10.177"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 12:57:06.388" endtime="20200715 12:57:10.177" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 12:57:10.181" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 12:57:13.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 12:57:13.804" level="INFO">${output} = 2020-07-15 12:57:11,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:11,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:10.179" endtime="20200715 12:57:13.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 12:57:13.805" level="INFO">2020-07-15 12:57:11,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:11,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 12:57:11,583 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-15 12:57:11,754 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xs2akarxyh
2020-07-15 12:57:11,774 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-15 12:57:12,777 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-15 12:57:13,776 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=20.787043, max=20.787043, mean=20.787043, stddev=0.0, median=20.787043, p75=20.787043, p95=20.787043, p98=20.787043, p99=20.787043, p999=20.787043, mean_rate=0.8483966202753016, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-15 12:57:13,779 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-15 12:57:13,779 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-15 12:57:13,779 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200715 12:57:13.805" endtime="20200715 12:57:13.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 12:57:13.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 12:57:13.806" endtime="20200715 12:57:13.806"></status>
</kw>
<msg timestamp="20200715 12:57:13.806" level="INFO">${result} = 2020-07-15 12:57:11,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 12:57:11,583 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 12:57:10.179" endtime="20200715 12:57:13.806"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200715 12:57:13.807" endtime="20200715 12:57:13.807"></status>
</kw>
<status status="PASS" starttime="20200715 12:57:13.807" endtime="20200715 12:57:13.807"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 12:57:10.178" endtime="20200715 12:57:13.807" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200715 12:56:53.069" endtime="20200715 12:57:13.809"></status>
</suite>
<status status="PASS" starttime="20200715 12:56:53.048" endtime="20200715 12:57:13.811"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
