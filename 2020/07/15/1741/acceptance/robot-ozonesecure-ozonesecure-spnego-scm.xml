<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200715 13:45:28.429" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:28.481" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:28.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:28.483" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:28.478" endtime="20200715 13:45:28.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:28.484" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:28.484" endtime="20200715 13:45:28.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:28.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:28.485" endtime="20200715 13:45:28.485"></status>
</kw>
<msg timestamp="20200715 13:45:28.485" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:28.478" endtime="20200715 13:45:28.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:28.486" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:28.486" endtime="20200715 13:45:28.487"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:28.489" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:28.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:28.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:28.487" endtime="20200715 13:45:28.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:28.499" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:28.498" endtime="20200715 13:45:28.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:28.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:28.499" endtime="20200715 13:45:28.500"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:28.487" endtime="20200715 13:45:28.500"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:28.487" endtime="20200715 13:45:28.500"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:28.477" endtime="20200715 13:45:28.500"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:28.477" endtime="20200715 13:45:28.500"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:28.502" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.533" level="INFO">${output} = 2020-07-15 13:45:29,720 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:45:29,867 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200715 13:45:28.501" endtime="20200715 13:45:36.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.534" level="INFO">2020-07-15 13:45:29,720 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-15 13:45:29,867 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-15 13:45:29,867 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-15 13:45:31,118 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-15 13:45:31,119 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-15 13:45:31,130 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-15 13:45:31,139 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-15 13:45:31,182 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-49703, with testuser/scm@EXAMPLE.COM as owner.
2020-07-15 13:45:31,220 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-49703/bucket-0-81189, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-15 13:45:31,699 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-15 13:45:32,140 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,006
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,022
Average Time spent in key write: 00:00:00,088
Total bytes written: 2050
Total Execution time: 00:00:06,117
***************************************************</msg>
<status status="PASS" starttime="20200715 13:45:36.533" endtime="20200715 13:45:36.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.534" endtime="20200715 13:45:36.535"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:28.500" endtime="20200715 13:45:36.535"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:28.475" endtime="20200715 13:45:36.535" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.541" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.538" endtime="20200715 13:45:36.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.545" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.544" endtime="20200715 13:45:36.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.545" endtime="20200715 13:45:36.545"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.538" endtime="20200715 13:45:36.545"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.537" endtime="20200715 13:45:36.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.549" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.567" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 13:45:36.546" endtime="20200715 13:45:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.568" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200715 13:45:36.567" endtime="20200715 13:45:36.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.568" endtime="20200715 13:45:36.569"></status>
</kw>
<msg timestamp="20200715 13:45:36.569" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 13:45:36.546" endtime="20200715 13:45:36.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.569" endtime="20200715 13:45:36.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.573" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.574" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.570" endtime="20200715 13:45:36.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.575" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:36.574" endtime="20200715 13:45:36.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.575" endtime="20200715 13:45:36.575"></status>
</kw>
<msg timestamp="20200715 13:45:36.576" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.570" endtime="20200715 13:45:36.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:36.576" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:36.576" endtime="20200715 13:45:36.576"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.577" endtime="20200715 13:45:36.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.588" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.588" endtime="20200715 13:45:36.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.589" endtime="20200715 13:45:36.589"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.577" endtime="20200715 13:45:36.589"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.576" endtime="20200715 13:45:36.589"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.570" endtime="20200715 13:45:36.589"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.569" endtime="20200715 13:45:36.589"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.592" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.614" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 13:45:36.590" endtime="20200715 13:45:36.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.615" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0xfa7f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYV/GlWFzG8ejSf+4rwPR3v8FSRG7tDhs5OOcG8rx8kzHFZAL9uYpZeLDoH+g8J7KyhN0Qv0OnEdzXVczXatcBQZk92WGVeK0Ey7xWnNXE48NHkn58s+wwbRvyaaZtvX/+ZpIqIp4XW2OAYPkU8EkgsvLaD6JqkVjX7BxMCG0Vb2i2qD2siO+t1wTroMKlYOKZncE7TIETfNZ8IHV+MQrRTI1X+NScR8sgASJAJX2Bg7pPVQ8ztgKMHr7yLacQ511RhjETqOi37G8onBov9XIsexN1g4YRDn5ImNIjXDBea6y85LJrKqsFQ4dJE9GJQdCp/Zma5TAeKpI6p4DW6udYrz081Ydn/pIHWMIHToAMCARKigcsEgchJyTZ87zRdZrETGEol9B9Y5cmbYhHSUn3Vt7q6EX0gNCqAJtWSAEay8eGaN2Yo/uMNioqBr5ofZAaoMUlbaUV6myEcTKFGwMVCHUjrCuysthtBNBHLJqS9IawP4/ZvJkXPNqFKwCCCjtKA/z6xyavTNDJR7jCEjITzZ3pL1vzXUzJ38/FBWfWQ9vKWG1un+lDYX62J+upwPVGcV1Zi2G4I5MXZbOstB+bzS32aM8jokeEFPjq8yMCYfjzjC9jKBKY3hBbwjJRgRQ==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEsRDFTh7P8N6YDPpstQ4SJ9i5xOuCP9ZmfSIbclrGOH1/i1zbkiB4f+h7EcMNKRi29hjWnVoirORvtJG/ESWFDx1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736609&amp;s=lcDKJYGZnUAuxZbWjNODba4Egn16oo12I9xsTkwJaVo="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 12:36:12 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:45:36 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEsRDFTh7P8N6YDPpstQ4SJ9i5xOuCP9ZmfSIbclrGOH1/i1zbkiB4f+h7EcMNKRi29hjWnVoirORvtJG/ESWFDx1
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736609&amp;s=lcDKJYGZnUAuxZbWjNODba4Egn16oo12I9xsTkwJaVo="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 12:36:12 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200715 13:45:36.614" endtime="20200715 13:45:36.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.615" endtime="20200715 13:45:36.615"></status>
</kw>
<msg timestamp="20200715 13:45:36.615" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200715 13:45:36.589" endtime="20200715 13:45:36.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.616" endtime="20200715 13:45:36.616"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.537" endtime="20200715 13:45:36.616"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:36.536" endtime="20200715 13:45:36.616" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.620" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.618" endtime="20200715 13:45:36.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.622" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.622" endtime="20200715 13:45:36.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.622" endtime="20200715 13:45:36.623"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.618" endtime="20200715 13:45:36.623"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.617" endtime="20200715 13:45:36.623"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.625" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.636" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.623" endtime="20200715 13:45:36.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.637" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200715 13:45:36.636" endtime="20200715 13:45:36.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.637" endtime="20200715 13:45:36.637"></status>
</kw>
<msg timestamp="20200715 13:45:36.637" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.623" endtime="20200715 13:45:36.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.638" endtime="20200715 13:45:36.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.640" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.642" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.639" endtime="20200715 13:45:36.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.643" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:36.643" endtime="20200715 13:45:36.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.644" endtime="20200715 13:45:36.644"></status>
</kw>
<msg timestamp="20200715 13:45:36.644" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.638" endtime="20200715 13:45:36.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:36.645" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:36.644" endtime="20200715 13:45:36.645"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.648" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.645" endtime="20200715 13:45:36.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.664" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.663" endtime="20200715 13:45:36.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.664" endtime="20200715 13:45:36.664"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.645" endtime="20200715 13:45:36.664"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.645" endtime="20200715 13:45:36.664"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.638" endtime="20200715 13:45:36.665"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.638" endtime="20200715 13:45:36.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.667" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.722" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.665" endtime="20200715 13:45:36.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.723" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x13b3f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYVzqTKcLg3EeyRJJCH+dXLvXYXB+i7IuyBJ5anADtOCTB1Rcm04CZpMgJ6HvAANfiqOzp9KWn80zyaHGj696f1ecs/r13u9JIyu/BcI/fAFRCPqgji+0hq/a5p8WzDuOckeu6esE4Vtu2XaV+ZjP8FG6FQG4zrp04Zq76XAtsssmYHZPporURfvNz2w/wF6+1apwGRG5LC9ohRHiQJF3tTteqHCTbEkneFn7FBtLJQroMKzepa95wb/vXrOXWtsiX9tlP0wog5fDzg3nqMKg+QCcimad8CO9fTwxWa4klFDNwE0SE33zciHhTe233wHlCASf/0be0Y3fFKuC4XGUMXW6JTvphKpIHWMIHToAMCARKigcsEgcjCrVGAKizQlhpDiTsT0gUcQIPOOJGiM1AebBuJQVo3gqwi8p5vwKkMw+YTIe2zFgTys1J9hsv1y6hyMFjXIm/JrYkLAGMeZJSdj20iwUbouF4xBhHQAAjAaQSIOvLKT3zuF4wPRnDdDhGCKleX8K2RgDk0xla6lzG4H2wvOncpTziJd1hypZ2mUiUD/kbh2slCWH30XCBWEy5r4S8+vohyc7L3D6EGsr3ZHgN8EQWw8iLt6uC5kSHIO5D6QiA7YQNdDAX7m5n3kg==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCT2P7dma8H57CfMHP/kNtA5adiYqzYNynLogXQrattsAT6hh75lE+Se7/raZdcP7N4Ds7DfK3wXtv/tQfgwICqXGS
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736690&amp;s=PnPK8IZBGdCfw3iRJf0WrhkXMpwJjsZNcPZ3zQzvVPI="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594820736690.tgz"
&lt; Content-Length: 76081
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:45:36 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCT2P7dma8H57CfMHP/kNtA5adiYqzYNynLogXQrattsAT6hh75lE+Se7/raZdcP7N4Ds7DfK3wXtv/tQfgwICqXGS
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736690&amp;s=PnPK8IZBGdCfw3iRJf0WrhkXMpwJjsZNcPZ3zQzvVPI="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594820736690.tgz"
Content-Length: 76081
</msg>
<status status="PASS" starttime="20200715 13:45:36.722" endtime="20200715 13:45:36.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.723" endtime="20200715 13:45:36.724"></status>
</kw>
<msg timestamp="20200715 13:45:36.724" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.665" endtime="20200715 13:45:36.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.724" endtime="20200715 13:45:36.724"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.617" endtime="20200715 13:45:36.724"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:36.616" endtime="20200715 13:45:36.725" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.728" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.726" endtime="20200715 13:45:36.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.732" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.731" endtime="20200715 13:45:36.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.732" endtime="20200715 13:45:36.732"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.726" endtime="20200715 13:45:36.732"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.726" endtime="20200715 13:45:36.733"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.735" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.747" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 13:45:36.733" endtime="20200715 13:45:36.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.748" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200715 13:45:36.747" endtime="20200715 13:45:36.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.748" endtime="20200715 13:45:36.748"></status>
</kw>
<msg timestamp="20200715 13:45:36.748" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 13:45:36.733" endtime="20200715 13:45:36.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.748" endtime="20200715 13:45:36.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.751" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.750" endtime="20200715 13:45:36.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.755" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:36.754" endtime="20200715 13:45:36.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.755" endtime="20200715 13:45:36.755"></status>
</kw>
<msg timestamp="20200715 13:45:36.756" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.749" endtime="20200715 13:45:36.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:36.756" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:36.756" endtime="20200715 13:45:36.756"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.760" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.757" endtime="20200715 13:45:36.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.769" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.769" endtime="20200715 13:45:36.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.769" endtime="20200715 13:45:36.770"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.757" endtime="20200715 13:45:36.770"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.756" endtime="20200715 13:45:36.770"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.749" endtime="20200715 13:45:36.770"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.749" endtime="20200715 13:45:36.770"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.772" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.799" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 13:45:36.771" endtime="20200715 13:45:36.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.800" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0xc2af50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.2) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZ10iQ3xzXKCLvyClyc83D8Ms6YaDbKRcBN9N66YCMJ7eJBpwTT6UEFo5jXwK0udJNMNiaufs1Yd73TI66hnwxHrzYf19Zaa2HOoSzeK0QEGwi/dBN2RFN1UCie6uEWb+4t3yB1PF5phS4e4BKTKgSeJMyKHVCwzEpI1RUXFeVSNG2NgZOI/o2vfVJKEFwtFDpkSkJPsUgxZpJtQ9wcd7Jvsi5ljrdtM9edrPQxkzbv1oPvCOqV6CyPKz3Gi2uE36BaC05U5xokwMjzREhQF9OhWUMWiiC7UqXjHVO2eOxqZm3pa1v1cmJvaEwQ87Sd9j9VFmk09QYSQ0C+ZWzHK/LYkumYyja+pIHWMIHToAMCARKigcsEgcjvbyTR/42Izeio1Rh0MGePkXXZF8Il1KbTRg+4bdo0Y+4IHen9BGwyowocRIYvoudF/3ImhJyJl2YzAtOU2pY4JKYOM+23R/PenJjXnI5FHrAqs3cQd44Z+/ix7Pv5w/ZTVyiu1KEm22+uDogKb0BabFmX/RC+dismgxayyS4dpq77sUcGUUhBYaYqpSacqBNo4H/q2xMmZ4yk5LCaWUqd6K2j2FhLOiWSIdTH6bdI4F4HcA6iRfsAz5bS8wkAJMQv769jqro+Yw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC6vjtiDKtZ29/CVAfVdFR5aZTeGpK69X3tO5uvB2vz8p14DE+c2X0fcVWZ7LOYw7SGg/JPJWnuf8JqR5dXqZb528Y
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736789&amp;s=eSMMB9GHBJVG6vHSNhHsnWdUQxxkYwlOqZl6fyZ0ilY="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:45:36 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC6vjtiDKtZ29/CVAfVdFR5aZTeGpK69X3tO5uvB2vz8p14DE+c2X0fcVWZ7LOYw7SGg/JPJWnuf8JqR5dXqZb528Y
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736789&amp;s=eSMMB9GHBJVG6vHSNhHsnWdUQxxkYwlOqZl6fyZ0ilY="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200715 13:45:36.799" endtime="20200715 13:45:36.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.800" endtime="20200715 13:45:36.801"></status>
</kw>
<msg timestamp="20200715 13:45:36.801" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.2...
* Connected to om (172.26.0.2) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200715 13:45:36.770" endtime="20200715 13:45:36.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.801" endtime="20200715 13:45:36.801"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.725" endtime="20200715 13:45:36.801"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:36.725" endtime="20200715 13:45:36.802" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.807" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.805" endtime="20200715 13:45:36.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.810" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.810" endtime="20200715 13:45:36.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.810" endtime="20200715 13:45:36.811"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.804" endtime="20200715 13:45:36.811"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.804" endtime="20200715 13:45:36.811"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.814" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.829" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 13:45:36.811" endtime="20200715 13:45:36.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.830" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200715 13:45:36.830" endtime="20200715 13:45:36.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.830" endtime="20200715 13:45:36.831"></status>
</kw>
<msg timestamp="20200715 13:45:36.831" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 13:45:36.811" endtime="20200715 13:45:36.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.831" endtime="20200715 13:45:36.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.835" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.836" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.832" endtime="20200715 13:45:36.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.836" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:36.836" endtime="20200715 13:45:36.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.837" endtime="20200715 13:45:36.837"></status>
</kw>
<msg timestamp="20200715 13:45:36.837" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.832" endtime="20200715 13:45:36.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:36.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:36.837" endtime="20200715 13:45:36.837"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.840" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.838" endtime="20200715 13:45:36.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.848" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.848" endtime="20200715 13:45:36.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.848" endtime="20200715 13:45:36.849"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.838" endtime="20200715 13:45:36.849"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.837" endtime="20200715 13:45:36.849"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.832" endtime="20200715 13:45:36.849"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.831" endtime="20200715 13:45:36.849"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.851" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.877" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 13:45:36.850" endtime="20200715 13:45:36.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.878" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x191df20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.9) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGYr3r1C4peaPiSE5UTiQ4GXiZjymFuKKMCbo+BeQQurP7YwFEIfc8x37PL0J6JxcGB27opRk+ysmHMoapbD61K3EIptusuG3hKV+RZ3/49gAEEASUBFFl472r2df9V3OknHKfIWzUNMtce2qIpAMG/YKw5uj+K7anYaItlqGwCLZ5UeNoLPWMZSIN8wch5t/tVEMklzflVzmBX8E+xDQWTQCzkCDKJbJ9Tjvnamgu8QaTJGXfQykP09G3xj/gcYUbZ7Ol/fCjp3VKSEEBTTUkgPDyi0IJ0oJXogsDkk0ZXtK5B6DwlTaChlS52LOWzHDHq3I135JSmbiqBdXQJcNjg9P5FTmPXqSB1jCB06ADAgESooHLBIHIfmoXjRbM/ICp7CQCKN+JYEdDZ4wLcdkJtTHFry520CLLRWrOhaYgISL9KowggBl3xVh6R9+adX4s+OQ7eoNSsZWHgSwEqTvXwk5h+OXmQcgzJlJj6Kzq4oAtGMib+vlNUthyr9lhL8VmE6mNFuIZdYwe/p3M4YL4VGYATq/II4LQP10p3af+o9IVaJUtfDK0YAZ9EPMX3LVBQiSEoUXZx7aPGLDR9hao/u8l2nvUM3TXil6JINsKuQ4b547P9L3s18jzIq5I68c=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKBEZ+YwyKyG0kmIITS4cNkzs6l8VyCJ+p+khmEBPupC6Ri2r3Q4yRcP8RGjcL8amOVJcGW4Yt2itUzIKl/Yg3yW8
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736873&amp;s=e04GWzjgqvLfLlVH2rIzLOzFTumS7cDDL+k/VxN3eQA="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 12:35:54 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:45:36 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKBEZ+YwyKyG0kmIITS4cNkzs6l8VyCJ+p+khmEBPupC6Ri2r3Q4yRcP8RGjcL8amOVJcGW4Yt2itUzIKl/Yg3yW8
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736873&amp;s=e04GWzjgqvLfLlVH2rIzLOzFTumS7cDDL+k/VxN3eQA="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 12:35:54 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200715 13:45:36.877" endtime="20200715 13:45:36.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.878" endtime="20200715 13:45:36.878"></status>
</kw>
<msg timestamp="20200715 13:45:36.878" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.9...
* Connected to scm (172.26.0.9) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200715 13:45:36.849" endtime="20200715 13:45:36.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.878" endtime="20200715 13:45:36.879"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.804" endtime="20200715 13:45:36.879"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:36.803" endtime="20200715 13:45:36.879" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.882" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.881" endtime="20200715 13:45:36.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.886" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.885" endtime="20200715 13:45:36.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.886" endtime="20200715 13:45:36.886"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.881" endtime="20200715 13:45:36.886"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.881" endtime="20200715 13:45:36.886"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.888" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.903" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.887" endtime="20200715 13:45:36.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.903" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200715 13:45:36.903" endtime="20200715 13:45:36.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.903" endtime="20200715 13:45:36.904"></status>
</kw>
<msg timestamp="20200715 13:45:36.904" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.887" endtime="20200715 13:45:36.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.904" endtime="20200715 13:45:36.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.907" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.909" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.905" endtime="20200715 13:45:36.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.910" level="INFO">scm</msg>
<status status="PASS" starttime="20200715 13:45:36.909" endtime="20200715 13:45:36.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.910" endtime="20200715 13:45:36.910"></status>
</kw>
<msg timestamp="20200715 13:45:36.911" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200715 13:45:36.905" endtime="20200715 13:45:36.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200715 13:45:36.911" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200715 13:45:36.911" endtime="20200715 13:45:36.911"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200715 13:45:36.912" endtime="20200715 13:45:36.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.923" level="INFO"></msg>
<status status="PASS" starttime="20200715 13:45:36.923" endtime="20200715 13:45:36.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.923" endtime="20200715 13:45:36.924"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.912" endtime="20200715 13:45:36.924"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.911" endtime="20200715 13:45:36.924"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.905" endtime="20200715 13:45:36.924"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.904" endtime="20200715 13:45:36.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200715 13:45:36.926" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200715 13:45:36.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20200715 13:45:36.949" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.925" endtime="20200715 13:45:36.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200715 13:45:36.950" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x19b5f20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.7) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQa9YkPVeVyAoZpPDM+8EnQE5XLz3AliKVfPVJFF7LDg9/qe7Xb4YjPjVGKSJqC2dEgLkdJ/U5CNM3+3eSGThFhmhs3wN23pZ93FD1ODmItRdXYEvCoQq7BaB8XGWSzQ2zqBcaEknJIago0j7ZaBHWVVH26/cJlC4fYfKVtpq+IglAljt9HXUxWqq6ikrMI2+195V0MadxvizEY8/KI92s07XFHCdSO9gwuKQ6f4b8WqJO2h+VRY+5BZM2HP2+jutyvphhn6dKdLv1I1daiGhU45cATL4CP7DPAu8+BZyYnA7X5W9WNdkEKYS5Tu8qh8XcO/oS9chQHBjaTy8vm+h5fbL5zA6pGRpIHWMIHToAMCARKigcsEgcgGTAr3SE8oR0ula5PqIe5d7D86nEv+wyx9iyuN73B3haiwd4EXMrioQNsJkHP0Av4HpSTD99y7a6gOB3ywSGUub3i7uTE58yPBPCadlrdWsdtqTjcQQYuj2H6tw95ICoN1OE/bWu5rxFE8HBBcfXPLQfbbsXs0i/JSD0eqocZQ6xfbnrwrCxM9ISbHh79spTp/KG8mHci/RSk+dEPU1KwRyvD1XAP+Uh22M2a8zYeU+bf0oXAgaNQCFBKN/EMOSIX25WjrQgMbbg==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Date: Wed, 15 Jul 2020 13:45:36 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0ml4C2ObawstqsWnDSe7Hjd3jetKI+GsvBZdXRKKB4c3EgCVQTfrBSuL88b8e8+anY8d+z9ngJWWQKjC77mHEt9J
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736945&amp;s=T43TG0K5RxiN0kmpOI0P+Tl9c+p2tEgJdlRmR06YUvA="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 15 Jul 2020 12:40:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Wed, 15 Jul 2020 13:45:36 GMT
Cache-Control: no-cache
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Wed, 15 Jul 2020 13:45:36 GMT
Date: Wed, 15 Jul 2020 13:45:36 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC0ml4C2ObawstqsWnDSe7Hjd3jetKI+GsvBZdXRKKB4c3EgCVQTfrBSuL88b8e8+anY8d+z9ngJWWQKjC77mHEt9J
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594856736945&amp;s=T43TG0K5RxiN0kmpOI0P+Tl9c+p2tEgJdlRmR06YUvA="; Path=/; HttpOnly
Last-Modified: Wed, 15 Jul 2020 12:40:04 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200715 13:45:36.949" endtime="20200715 13:45:36.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200715 13:45:36.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200715 13:45:36.950" endtime="20200715 13:45:36.950"></status>
</kw>
<msg timestamp="20200715 13:45:36.950" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.7...
* Connected to recon (172.26.0.7) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200715 13:45:36.924" endtime="20200715 13:45:36.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200715 13:45:36.951" endtime="20200715 13:45:36.951"></status>
</kw>
<status status="PASS" starttime="20200715 13:45:36.880" endtime="20200715 13:45:36.951"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200715 13:45:36.880" endtime="20200715 13:45:36.951" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200715 13:45:28.455" endtime="20200715 13:45:36.952"></status>
</suite>
<status status="PASS" starttime="20200715 13:45:28.430" endtime="20200715 13:45:36.954"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
