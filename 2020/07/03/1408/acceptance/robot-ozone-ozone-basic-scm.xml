<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200703 18:14:40.963" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200703 18:14:41.001" endtime="20200703 18:14:41.001"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:14:41.004" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:14:41.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:14:41.083" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 03 Jul 2020 18:14:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 03 Jul 2020 17:49:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200703 18:14:41.001" endtime="20200703 18:14:41.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:14:41.084" level="INFO">HTTP/1.1 200 OK
Date: Fri, 03 Jul 2020 18:14:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 03 Jul 2020 17:49:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200703 18:14:41.084" endtime="20200703 18:14:41.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:14:41.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:14:41.085" endtime="20200703 18:14:41.085"></status>
</kw>
<msg timestamp="20200703 18:14:41.085" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 03 Jul 2020 18:14:41 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 03 Jul 2020 17:49:12 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200703 18:14:41.001" endtime="20200703 18:14:41.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200703 18:14:41.086" endtime="20200703 18:14:41.086"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:14:41.000" endtime="20200703 18:14:41.086" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:14:41.088" endtime="20200703 18:14:41.088"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:14:41.091" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:41.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:41.052" level="INFO">${output} = 2020-07-03 18:14:42,494 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:14:42,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:14:41.089" endtime="20200703 18:15:41.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:41.053" level="INFO">2020-07-03 18:14:42,494 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:14:42,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:14:42,693 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:14:44,350 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-03 18:14:44,350 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-03 18:14:44,351 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-03 18:14:44,351 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-03 18:14:44,351 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-03 18:14:44,351 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-03 18:14:44,351 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-03 18:14:44,362 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-03 18:14:44,363 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-03 18:14:44,374 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-03 18:14:44,421 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-10909, with hadoop as owner.
2020-07-03 18:14:44,593 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-76586, with hadoop as owner.
2020-07-03 18:14:44,598 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-53794, with hadoop as owner.
2020-07-03 18:14:44,605 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-86819, with hadoop as owner.
2020-07-03 18:14:44,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-12431, with hadoop as owner.
2020-07-03 18:14:44,635 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10909/bucket-0-04037, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,705 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76586/bucket-0-23251, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,715 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53794/bucket-0-50803, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,723 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86819/bucket-0-76132, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,731 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12431/bucket-0-97840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,741 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10909/bucket-1-16479, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,749 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76586/bucket-1-45284, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,753 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53794/bucket-1-78532, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,758 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86819/bucket-1-58732, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12431/bucket-1-86578, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,766 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10909/bucket-2-43683, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,775 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76586/bucket-2-83355, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,781 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53794/bucket-2-76075, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,786 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86819/bucket-2-85001, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,793 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12431/bucket-2-93298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,799 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10909/bucket-3-63325, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,806 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76586/bucket-3-20064, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,812 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53794/bucket-3-67255, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,817 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86819/bucket-3-07492, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,824 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12431/bucket-3-19940, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,827 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10909/bucket-4-89343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,832 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76586/bucket-4-67718, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,837 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-53794/bucket-4-95260, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,849 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-86819/bucket-4-23431, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:44,855 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-12431/bucket-4-74145, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:14:45,379 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-03 18:14:45,643 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:14:46,379 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-03 18:14:47,380 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-03 18:14:48,380 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-03 18:14:49,380 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-03 18:14:50,381 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2020-07-03 18:14:51,385 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-03 18:14:52,386 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-03 18:14:53,386 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-03 18:14:54,387 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-03 18:14:55,388 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-03 18:14:56,388 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-03 18:14:57,393 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-07-03 18:14:58,394 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-03 18:14:59,394 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-03 18:15:00,395 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-07-03 18:15:01,396 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-07-03 18:15:02,396 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-07-03 18:15:03,397 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-07-03 18:15:04,397 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-03 18:15:05,397 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-03 18:15:06,399 [Thread-7] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2020-07-03 18:15:07,400 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-03 18:15:08,400 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-07-03 18:15:09,406 [Thread-7] INFO freon.ProgressBar: Progress: 43.20 % (54 out of 125)
2020-07-03 18:15:10,407 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-03 18:15:11,407 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-07-03 18:15:12,408 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-07-03 18:15:13,408 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-07-03 18:15:14,409 [Thread-7] INFO freon.ProgressBar: Progress: 50.40 % (63 out of 125)
2020-07-03 18:15:15,410 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-07-03 18:15:16,410 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-03 18:15:17,411 [Thread-7] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2020-07-03 18:15:18,411 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-03 18:15:19,412 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-03 18:15:20,412 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-07-03 18:15:21,413 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-07-03 18:15:22,414 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-07-03 18:15:23,414 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-03 18:15:24,414 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-07-03 18:15:25,415 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-07-03 18:15:26,416 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-07-03 18:15:27,423 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-03 18:15:28,424 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-03 18:15:29,425 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-07-03 18:15:30,425 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-03 18:15:31,425 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-03 18:15:32,427 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-07-03 18:15:33,428 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-07-03 18:15:34,428 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-07-03 18:15:35,430 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-07-03 18:15:36,431 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,227
Average Time spent in bucket creation: 00:00:00,153
Average Time spent in key creation: 00:00:01,731
Average Time spent in key write: 00:00:00,658
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:57,862
***************************************************</msg>
<status status="PASS" starttime="20200703 18:15:41.053" endtime="20200703 18:15:41.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:41.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:41.054" endtime="20200703 18:15:41.054"></status>
</kw>
<msg timestamp="20200703 18:15:41.054" level="INFO">${result} = 2020-07-03 18:14:42,494 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:14:42,693 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:14:41.088" endtime="20200703 18:15:41.054"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:41.055" endtime="20200703 18:15:41.055"></status>
</kw>
<status status="PASS" starttime="20200703 18:15:41.054" endtime="20200703 18:15:41.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:41.055" endtime="20200703 18:15:41.056"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:14:41.087" endtime="20200703 18:15:41.056" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200703 18:14:40.983" endtime="20200703 18:15:41.057"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200703 18:15:41.063" level="INFO">${random} = 23810</msg>
<status status="PASS" starttime="20200703 18:15:41.063" endtime="20200703 18:15:41.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200703 18:15:41.064" level="INFO">${prefix} = 23810</msg>
<status status="PASS" starttime="20200703 18:15:41.063" endtime="20200703 18:15:41.064"></status>
</kw>
<status status="PASS" starttime="20200703 18:15:41.062" endtime="20200703 18:15:41.064"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:41.065" endtime="20200703 18:15:41.065"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:41.068" level="INFO">Running command 'ozone sh volume info o3://om:9862/23810-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:43.224" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:15:43.224" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23810-rpcwoport is not found</msg>
<status status="PASS" starttime="20200703 18:15:41.066" endtime="20200703 18:15:43.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:43.225" level="INFO">VOLUME_NOT_FOUND Volume 23810-rpcwoport is not found</msg>
<status status="PASS" starttime="20200703 18:15:43.224" endtime="20200703 18:15:43.225"></status>
</kw>
<msg timestamp="20200703 18:15:43.225" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23810-rpcwoport is not found</msg>
<status status="PASS" starttime="20200703 18:15:41.065" endtime="20200703 18:15:43.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:43.225" endtime="20200703 18:15:43.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:43.228" level="INFO">Running command 'ozone sh volume create o3://om:9862/23810-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:45.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:45.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:15:43.226" endtime="20200703 18:15:45.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:45.302" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:15:45.302" endtime="20200703 18:15:45.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:45.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:45.302" endtime="20200703 18:15:45.303"></status>
</kw>
<msg timestamp="20200703 18:15:45.303" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:15:43.226" endtime="20200703 18:15:45.303"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:45.303" endtime="20200703 18:15:45.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:45.307" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="23810-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:47.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:47.683" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200703 18:15:45.304" endtime="20200703 18:15:47.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:47.684" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:15:47.684" endtime="20200703 18:15:47.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:47.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:47.684" endtime="20200703 18:15:47.685"></status>
</kw>
<msg timestamp="20200703 18:15:47.685" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200703 18:15:45.303" endtime="20200703 18:15:47.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:47.685" endtime="20200703 18:15:47.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:47.689" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="23810-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:49.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:49.946" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200703 18:15:47.686" endtime="20200703 18:15:49.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:49.947" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:15:49.947" endtime="20200703 18:15:49.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:49.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:49.948" endtime="20200703 18:15:49.948"></status>
</kw>
<msg timestamp="20200703 18:15:49.948" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:15:45.238Z",
  "modificationTime": "2020-07-03T18:15:45.238Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200703 18:15:47.685" endtime="20200703 18:15:49.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:49.948" endtime="20200703 18:15:49.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:49.951" level="INFO">Running command 'ozone sh volume update o3://om:9862/23810-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:52.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:52.292" level="INFO">${output} = {
  "metadata" : { },
  "name" : "23810-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:15:45.238Z",
  "modificationTime" : "2020-07-03T18:15:51.997Z",
  "acl...</msg>
<status status="PASS" starttime="20200703 18:15:49.949" endtime="20200703 18:15:52.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:52.292" level="INFO">{
  "metadata" : { },
  "name" : "23810-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:15:45.238Z",
  "modificationTime" : "2020-07-03T18:15:51.997Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200703 18:15:52.292" endtime="20200703 18:15:52.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:52.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:52.293" endtime="20200703 18:15:52.293"></status>
</kw>
<status status="PASS" starttime="20200703 18:15:49.949" endtime="20200703 18:15:52.293"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:52.296" level="INFO">Running command 'ozone sh volume info o3://om:9862/23810-rpcwoport | jq -r '. | select(.name=="23810-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:54.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:54.571" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:15:52.294" endtime="20200703 18:15:54.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:54.572" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200703 18:15:54.571" endtime="20200703 18:15:54.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:54.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:54.572" endtime="20200703 18:15:54.572"></status>
</kw>
<msg timestamp="20200703 18:15:54.572" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:15:52.293" endtime="20200703 18:15:54.572"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:54.573" endtime="20200703 18:15:54.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:54.575" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23810-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:56.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:56.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:15:54.573" endtime="20200703 18:15:56.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:56.652" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:15:56.651" endtime="20200703 18:15:56.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:56.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:56.652" endtime="20200703 18:15:56.653"></status>
</kw>
<status status="PASS" starttime="20200703 18:15:54.573" endtime="20200703 18:15:56.653"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:56.655" level="INFO">Running command 'ozone sh bucket info o3://om:9862/23810-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:15:58.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:15:58.897" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200703 18:15:56.653" endtime="20200703 18:15:58.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:15:58.898" level="INFO">DISK</msg>
<status status="PASS" starttime="20200703 18:15:58.898" endtime="20200703 18:15:58.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:15:58.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:15:58.898" endtime="20200703 18:15:58.899"></status>
</kw>
<msg timestamp="20200703 18:15:58.899" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200703 18:15:56.653" endtime="20200703 18:15:58.899"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200703 18:15:58.899" endtime="20200703 18:15:58.900"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:15:58.903" level="INFO">Running command 'ozone sh bucket list o3://om:9862/23810-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:01.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:01.306" level="INFO">${output} = 23810-rpcwoport</msg>
<status status="PASS" starttime="20200703 18:15:58.900" endtime="20200703 18:16:01.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:01.307" level="INFO">23810-rpcwoport</msg>
<status status="PASS" starttime="20200703 18:16:01.306" endtime="20200703 18:16:01.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:01.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:01.307" endtime="20200703 18:16:01.307"></status>
</kw>
<msg timestamp="20200703 18:16:01.307" level="INFO">${result} = 23810-rpcwoport</msg>
<status status="PASS" starttime="20200703 18:15:58.900" endtime="20200703 18:16:01.308"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:01.308" endtime="20200703 18:16:01.308"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:01.312" level="INFO">Running command 'ozone sh key put o3://om:9862/23810-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:05.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:05.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:01.309" endtime="20200703 18:16:05.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:05.403" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:05.402" endtime="20200703 18:16:05.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:05.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:05.403" endtime="20200703 18:16:05.403"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:01.309" endtime="20200703 18:16:05.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:05.407" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:05.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:05.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:05.405" endtime="20200703 18:16:05.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:05.411" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:05.410" endtime="20200703 18:16:05.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:05.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:05.411" endtime="20200703 18:16:05.411"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:05.404" endtime="20200703 18:16:05.411"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:05.414" level="INFO">Running command 'ozone sh key get o3://om:9862/23810-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:09.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:09.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:05.412" endtime="20200703 18:16:09.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:09.231" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:09.230" endtime="20200703 18:16:09.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:09.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:09.231" endtime="20200703 18:16:09.232"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:05.411" endtime="20200703 18:16:09.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:09.235" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:09.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:09.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:09.232" endtime="20200703 18:16:09.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:09.238" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:09.238" endtime="20200703 18:16:09.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:09.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:09.239" endtime="20200703 18:16:09.239"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:09.232" endtime="20200703 18:16:09.239"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:09.242" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/23810-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:13.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:13.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:09.240" endtime="20200703 18:16:13.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:13.010" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:13.010" endtime="20200703 18:16:13.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:13.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:13.010" endtime="20200703 18:16:13.011"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:09.239" endtime="20200703 18:16:13.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:13.013" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:13.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:13.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:13.011" endtime="20200703 18:16:13.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:13.016" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:13.015" endtime="20200703 18:16:13.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:13.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:13.016" endtime="20200703 18:16:13.017"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:13.011" endtime="20200703 18:16:13.017"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:13.019" level="INFO">Running command 'ozone sh key get o3://om:9862/23810-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:16.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:16.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:13.017" endtime="20200703 18:16:16.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:16.721" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:16.721" endtime="20200703 18:16:16.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:16.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:16.722" endtime="20200703 18:16:16.722"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:13.017" endtime="20200703 18:16:16.722"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:16.724" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:16.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:16.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:16.722" endtime="20200703 18:16:16.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:16.727" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:16.727" endtime="20200703 18:16:16.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:16.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:16.727" endtime="20200703 18:16:16.728"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:16.722" endtime="20200703 18:16:16.728"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:16.730" level="INFO">Running command 'ozone sh key info o3://om:9862/23810-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:19.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:19.168" level="INFO">${output} = {
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:11.306Z",
  "modificationTime": "2020-07-03T18:16:12.630Z",...</msg>
<status status="PASS" starttime="20200703 18:16:16.729" endtime="20200703 18:16:19.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:19.168" level="INFO">{
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:11.306Z",
  "modificationTime": "2020-07-03T18:16:12.630Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451288026644600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:16:19.168" endtime="20200703 18:16:19.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:19.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:19.169" endtime="20200703 18:16:19.169"></status>
</kw>
<msg timestamp="20200703 18:16:19.169" level="INFO">${result} = {
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:11.306Z",
  "modificationTime": "2020-07-03T18:16:12.630Z",...</msg>
<status status="PASS" starttime="20200703 18:16:16.728" endtime="20200703 18:16:19.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:19.170" endtime="20200703 18:16:19.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:19.173" level="INFO">Running command 'ozone sh key delete o3://om:9862/23810-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:21.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:21.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:19.170" endtime="20200703 18:16:21.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:21.316" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:21.315" endtime="20200703 18:16:21.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:21.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:21.316" endtime="20200703 18:16:21.316"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:19.170" endtime="20200703 18:16:21.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:21.320" level="INFO">Running command 'ozone sh key cp o3://om:9862/23810-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:25.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:25.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:21.317" endtime="20200703 18:16:25.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:25.659" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:25.658" endtime="20200703 18:16:25.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:25.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:25.659" endtime="20200703 18:16:25.659"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:21.317" endtime="20200703 18:16:25.660"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:25.662" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:25.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:25.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:25.660" endtime="20200703 18:16:25.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:25.665" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:25.664" endtime="20200703 18:16:25.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:25.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:25.665" endtime="20200703 18:16:25.665"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:25.660" endtime="20200703 18:16:25.666"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:25.668" level="INFO">Running command 'ozone sh key get o3://om:9862/23810-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:29.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:29.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:25.666" endtime="20200703 18:16:29.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:29.824" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:29.823" endtime="20200703 18:16:29.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:29.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:29.824" endtime="20200703 18:16:29.824"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:25.666" endtime="20200703 18:16:29.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:29.827" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:29.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:29.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:29.825" endtime="20200703 18:16:29.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:29.830" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:29.830" endtime="20200703 18:16:29.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:29.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:29.831" endtime="20200703 18:16:29.831"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:29.825" endtime="20200703 18:16:29.831"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:29.834" level="INFO">Running command 'ozone sh key delete o3://om:9862/23810-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:31.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:31.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:29.832" endtime="20200703 18:16:31.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:31.955" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:31.954" endtime="20200703 18:16:31.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:31.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:31.955" endtime="20200703 18:16:31.955"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:29.831" endtime="20200703 18:16:31.955"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:31.959" level="INFO">Running command 'ozone sh key get o3://om:9862/23810-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:34.420" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:16:34.420" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:16:31.956" endtime="20200703 18:16:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:34.421" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:16:34.420" endtime="20200703 18:16:34.421"></status>
</kw>
<msg timestamp="20200703 18:16:34.421" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:16:31.955" endtime="20200703 18:16:34.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:34.421" endtime="20200703 18:16:34.422"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:34.425" level="INFO">Running command 'ozone sh key get --force o3://om:9862/23810-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:38.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:38.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:34.422" endtime="20200703 18:16:38.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:38.035" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:38.035" endtime="20200703 18:16:38.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:38.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:38.036" endtime="20200703 18:16:38.036"></status>
</kw>
<msg timestamp="20200703 18:16:38.036" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:16:34.422" endtime="20200703 18:16:38.036"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:38.036" endtime="20200703 18:16:38.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:38.041" level="INFO">Running command 'ozone sh key info o3://om:9862/23810-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:40.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:40.512" level="INFO">${output} = {
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:03.435Z",
  "modificationTime": "2020-07-03T18:16:04.996Z",
  "re...</msg>
<status status="PASS" starttime="20200703 18:16:38.037" endtime="20200703 18:16:40.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:40.513" level="INFO">{
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:03.435Z",
  "modificationTime": "2020-07-03T18:16:04.996Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451287510745220,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:16:40.513" endtime="20200703 18:16:40.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:40.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:40.513" endtime="20200703 18:16:40.514"></status>
</kw>
<msg timestamp="20200703 18:16:40.514" level="INFO">${result} = {
  "volumeName": "23810-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:16:03.435Z",
  "modificationTime": "2020-07-03T18:16:04.996Z",
  "re...</msg>
<status status="PASS" starttime="20200703 18:16:38.037" endtime="20200703 18:16:40.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:40.514" endtime="20200703 18:16:40.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:40.517" level="INFO">Running command 'ozone sh key list o3://om:9862/23810-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:42.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:42.951" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200703 18:16:40.515" endtime="20200703 18:16:42.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:42.952" level="INFO">key1</msg>
<status status="PASS" starttime="20200703 18:16:42.951" endtime="20200703 18:16:42.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:42.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:42.952" endtime="20200703 18:16:42.953"></status>
</kw>
<msg timestamp="20200703 18:16:42.953" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200703 18:16:40.514" endtime="20200703 18:16:42.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:42.953" endtime="20200703 18:16:42.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:42.957" level="INFO">Running command 'ozone sh key rename o3://om:9862/23810-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:45.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:45.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:42.954" endtime="20200703 18:16:45.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:45.015" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:45.015" endtime="20200703 18:16:45.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:45.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:45.015" endtime="20200703 18:16:45.016"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:42.954" endtime="20200703 18:16:45.016"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:45.019" level="INFO">Running command 'ozone sh key list o3://om:9862/23810-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:47.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:47.480" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200703 18:16:45.017" endtime="20200703 18:16:47.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:47.481" level="INFO">key2</msg>
<status status="PASS" starttime="20200703 18:16:47.481" endtime="20200703 18:16:47.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:47.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:47.482" endtime="20200703 18:16:47.482"></status>
</kw>
<msg timestamp="20200703 18:16:47.482" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200703 18:16:45.016" endtime="20200703 18:16:47.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:47.482" endtime="20200703 18:16:47.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:47.485" level="INFO">Running command 'ozone sh key delete o3://om:9862/23810-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:49.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:49.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:47.483" endtime="20200703 18:16:49.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:49.597" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:49.596" endtime="20200703 18:16:49.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:49.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:49.597" endtime="20200703 18:16:49.598"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:47.483" endtime="20200703 18:16:49.598"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:01.308" endtime="20200703 18:16:49.598"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:01.308" endtime="20200703 18:16:49.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:49.600" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/23810-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:51.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:51.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:49.598" endtime="20200703 18:16:51.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:51.793" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:51.792" endtime="20200703 18:16:51.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:51.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:51.793" endtime="20200703 18:16:51.793"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:49.598" endtime="20200703 18:16:51.794"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:51.796" level="INFO">Running command 'ozone sh volume delete o3://om:9862/23810-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:53.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:53.900" level="INFO">${output} = Volume 23810-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200703 18:16:51.794" endtime="20200703 18:16:53.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:53.901" level="INFO">Volume 23810-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200703 18:16:53.900" endtime="20200703 18:16:53.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:53.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:53.901" endtime="20200703 18:16:53.901"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:51.794" endtime="20200703 18:16:53.901"></status>
</kw>
<status status="PASS" starttime="20200703 18:15:41.065" endtime="20200703 18:16:53.902"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:15:41.064" endtime="20200703 18:16:53.902" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:53.903" endtime="20200703 18:16:53.903"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:53.906" level="INFO">Running command 'ozone sh volume create o3://om:9862/23810-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:55.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:55.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:16:53.904" endtime="20200703 18:16:55.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:55.968" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:16:55.967" endtime="20200703 18:16:55.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:55.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:55.968" endtime="20200703 18:16:55.968"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:53.903" endtime="20200703 18:16:55.969"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:55.971" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23810-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:16:58.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:16:58.310" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:16:55.969" endtime="20200703 18:16:58.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:16:58.311" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:16:58.310" endtime="20200703 18:16:58.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:16:58.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:16:58.311" endtime="20200703 18:16:58.311"></status>
</kw>
<msg timestamp="20200703 18:16:58.312" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:16:55.969" endtime="20200703 18:16:58.312"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:16:58.312" endtime="20200703 18:16:58.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:16:58.316" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/23810-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:00.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:00.339" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200703 18:16:58.313" endtime="20200703 18:17:00.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:00.340" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200703 18:17:00.339" endtime="20200703 18:17:00.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:00.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:00.340" endtime="20200703 18:17:00.341"></status>
</kw>
<msg timestamp="20200703 18:17:00.341" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200703 18:16:58.313" endtime="20200703 18:17:00.341"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:00.344" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23810-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:02.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:02.662" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:00.342" endtime="20200703 18:17:02.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:02.663" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:02.663" endtime="20200703 18:17:02.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:02.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:02.663" endtime="20200703 18:17:02.664"></status>
</kw>
<msg timestamp="20200703 18:17:02.664" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:00.341" endtime="20200703 18:17:02.664"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:02.664" endtime="20200703 18:17:02.665"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:02.667" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/23810-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:04.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:04.804" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200703 18:17:02.666" endtime="20200703 18:17:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:04.805" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200703 18:17:04.804" endtime="20200703 18:17:04.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:04.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:04.805" endtime="20200703 18:17:04.805"></status>
</kw>
<msg timestamp="20200703 18:17:04.806" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200703 18:17:02.665" endtime="20200703 18:17:04.806"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:04.808" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23810-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:07.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:07.106" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:04.806" endtime="20200703 18:17:07.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:07.107" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:07.106" endtime="20200703 18:17:07.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:07.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:07.107" endtime="20200703 18:17:07.107"></status>
</kw>
<msg timestamp="20200703 18:17:07.108" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:04.806" endtime="20200703 18:17:07.108"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:07.108" endtime="20200703 18:17:07.109"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:07.113" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/23810-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:09.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:09.100" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:07.109" endtime="20200703 18:17:09.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:09.101" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:09.101" endtime="20200703 18:17:09.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:09.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:09.101" endtime="20200703 18:17:09.102"></status>
</kw>
<msg timestamp="20200703 18:17:09.102" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:07.109" endtime="20200703 18:17:09.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:09.105" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/23810-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:11.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:11.461" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200703 18:17:09.103" endtime="20200703 18:17:11.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:11.462" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:11.461" endtime="20200703 18:17:11.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:11.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:11.462" endtime="20200703 18:17:11.462"></status>
</kw>
<msg timestamp="20200703 18:17:11.463" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200703 18:17:09.102" endtime="20200703 18:17:11.463"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:11.463" endtime="20200703 18:17:11.463"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:11.463" endtime="20200703 18:17:11.464"></status>
</kw>
<status status="PASS" starttime="20200703 18:16:53.903" endtime="20200703 18:17:11.464"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:16:53.902" endtime="20200703 18:17:11.465" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:11.466" endtime="20200703 18:17:11.466"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:11.471" level="INFO">Running command 'ozone sh bucket create o3://om:9862/23810-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:13.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:13.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:17:11.468" endtime="20200703 18:17:13.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:13.780" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:17:13.779" endtime="20200703 18:17:13.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:13.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:13.780" endtime="20200703 18:17:13.780"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:11.468" endtime="20200703 18:17:13.780"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:13.783" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23810-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:16.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:16.222" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:13.781" endtime="20200703 18:17:16.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:16.223" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:16.222" endtime="20200703 18:17:16.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:16.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:16.223" endtime="20200703 18:17:16.224"></status>
</kw>
<msg timestamp="20200703 18:17:16.224" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:13.780" endtime="20200703 18:17:16.224"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:16.224" endtime="20200703 18:17:16.224"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:16.227" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/23810-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:18.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:18.402" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200703 18:17:16.225" endtime="20200703 18:17:18.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:18.403" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200703 18:17:18.403" endtime="20200703 18:17:18.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:18.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:18.403" endtime="20200703 18:17:18.404"></status>
</kw>
<msg timestamp="20200703 18:17:18.404" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200703 18:17:16.224" endtime="20200703 18:17:18.404"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:18.406" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23810-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:20.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:20.652" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:18.404" endtime="20200703 18:17:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:20.652" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:20.652" endtime="20200703 18:17:20.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:20.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:20.653" endtime="20200703 18:17:20.653"></status>
</kw>
<msg timestamp="20200703 18:17:20.653" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:18.404" endtime="20200703 18:17:20.653"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:20.654" endtime="20200703 18:17:20.654"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:20.657" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/23810-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:23.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:23.083" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:20.655" endtime="20200703 18:17:23.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:23.084" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:23.084" endtime="20200703 18:17:23.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:23.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:23.085" endtime="20200703 18:17:23.085"></status>
</kw>
<msg timestamp="20200703 18:17:23.085" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:20.654" endtime="20200703 18:17:23.086"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:23.089" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23810-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:25.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:25.494" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:23.087" endtime="20200703 18:17:25.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:25.495" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:25.494" endtime="20200703 18:17:25.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:25.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:25.495" endtime="20200703 18:17:25.496"></status>
</kw>
<msg timestamp="20200703 18:17:25.496" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:23.086" endtime="20200703 18:17:25.496"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:25.496" endtime="20200703 18:17:25.497"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:25.499" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/23810-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:27.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:27.626" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:25.497" endtime="20200703 18:17:27.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:27.627" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:27.626" endtime="20200703 18:17:27.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:27.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:27.627" endtime="20200703 18:17:27.628"></status>
</kw>
<msg timestamp="20200703 18:17:27.628" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:25.497" endtime="20200703 18:17:27.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:27.631" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/23810-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:30.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:30.068" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200703 18:17:27.629" endtime="20200703 18:17:30.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:30.069" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:30.068" endtime="20200703 18:17:30.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:30.069" endtime="20200703 18:17:30.070"></status>
</kw>
<msg timestamp="20200703 18:17:30.070" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200703 18:17:27.628" endtime="20200703 18:17:30.070"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:30.070" endtime="20200703 18:17:30.071"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:30.071" endtime="20200703 18:17:30.071"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:11.466" endtime="20200703 18:17:30.071"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:17:11.465" endtime="20200703 18:17:30.071" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:30.074" endtime="20200703 18:17:30.074"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:30.076" level="INFO">Running command 'ozone sh key put o3://om:9862/23810-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:34.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:34.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:17:30.075" endtime="20200703 18:17:34.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:34.132" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:17:34.132" endtime="20200703 18:17:34.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:34.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:34.132" endtime="20200703 18:17:34.133"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:30.074" endtime="20200703 18:17:34.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:34.135" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23810-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:36.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:36.537" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:34.134" endtime="20200703 18:17:36.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:36.538" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:36.537" endtime="20200703 18:17:36.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:36.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:36.538" endtime="20200703 18:17:36.539"></status>
</kw>
<msg timestamp="20200703 18:17:36.539" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:34.133" endtime="20200703 18:17:36.539"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:36.539" endtime="20200703 18:17:36.540"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:36.543" level="INFO">Running command 'ozone sh key addacl o3://om:9862/23810-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:38.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:38.636" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200703 18:17:36.540" endtime="20200703 18:17:38.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:38.637" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200703 18:17:38.637" endtime="20200703 18:17:38.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:38.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:38.638" endtime="20200703 18:17:38.638"></status>
</kw>
<msg timestamp="20200703 18:17:38.638" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200703 18:17:36.540" endtime="20200703 18:17:38.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:38.640" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23810-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:40.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:40.932" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:38.639" endtime="20200703 18:17:40.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:40.933" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:40.932" endtime="20200703 18:17:40.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:40.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:40.933" endtime="20200703 18:17:40.934"></status>
</kw>
<msg timestamp="20200703 18:17:40.934" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:38.638" endtime="20200703 18:17:40.934"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:40.934" endtime="20200703 18:17:40.935"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:40.937" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/23810-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:43.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:43.118" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:40.935" endtime="20200703 18:17:43.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:43.119" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:43.118" endtime="20200703 18:17:43.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:43.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:43.119" endtime="20200703 18:17:43.119"></status>
</kw>
<msg timestamp="20200703 18:17:43.119" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200703 18:17:40.935" endtime="20200703 18:17:43.120"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:43.122" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23810-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:45.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:45.327" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:43.120" endtime="20200703 18:17:45.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:45.328" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:45.327" endtime="20200703 18:17:45.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:45.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:45.329" endtime="20200703 18:17:45.329"></status>
</kw>
<msg timestamp="20200703 18:17:45.330" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200703 18:17:43.120" endtime="20200703 18:17:45.330"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:45.330" endtime="20200703 18:17:45.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:45.333" level="INFO">Running command 'ozone sh key setacl o3://om:9862/23810-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:47.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:47.571" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:45.331" endtime="20200703 18:17:47.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:47.572" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:47.571" endtime="20200703 18:17:47.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:47.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:47.572" endtime="20200703 18:17:47.573"></status>
</kw>
<msg timestamp="20200703 18:17:47.573" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200703 18:17:45.330" endtime="20200703 18:17:47.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:47.575" level="INFO">Running command 'ozone sh key getacl o3://om:9862/23810-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:49.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:49.841" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200703 18:17:47.574" endtime="20200703 18:17:49.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:49.842" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200703 18:17:49.841" endtime="20200703 18:17:49.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:49.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:49.842" endtime="20200703 18:17:49.842"></status>
</kw>
<msg timestamp="20200703 18:17:49.842" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200703 18:17:47.573" endtime="20200703 18:17:49.842"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:49.843" endtime="20200703 18:17:49.843"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:49.843" endtime="20200703 18:17:49.844"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:30.074" endtime="20200703 18:17:49.844"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:17:30.073" endtime="20200703 18:17:49.844" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:49.845" endtime="20200703 18:17:49.846"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:49.849" level="INFO">Running command 'ozone sh volume info o3:///23810-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:52.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:17:52.016" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23810-rpcwport is not found</msg>
<status status="PASS" starttime="20200703 18:17:49.847" endtime="20200703 18:17:52.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:52.017" level="INFO">VOLUME_NOT_FOUND Volume 23810-rpcwport is not found</msg>
<status status="PASS" starttime="20200703 18:17:52.017" endtime="20200703 18:17:52.018"></status>
</kw>
<msg timestamp="20200703 18:17:52.018" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23810-rpcwport is not found</msg>
<status status="PASS" starttime="20200703 18:17:49.847" endtime="20200703 18:17:52.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:52.018" endtime="20200703 18:17:52.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:52.021" level="INFO">Running command 'ozone sh volume create o3:///23810-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:54.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:54.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:17:52.019" endtime="20200703 18:17:54.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:54.204" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:17:54.204" endtime="20200703 18:17:54.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:54.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:54.204" endtime="20200703 18:17:54.205"></status>
</kw>
<msg timestamp="20200703 18:17:54.205" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:17:52.018" endtime="20200703 18:17:54.205"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:54.205" endtime="20200703 18:17:54.206"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:54.208" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="23810-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:56.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:56.513" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200703 18:17:54.206" endtime="20200703 18:17:56.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:56.514" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:17:56.514" endtime="20200703 18:17:56.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:56.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:56.514" endtime="20200703 18:17:56.515"></status>
</kw>
<msg timestamp="20200703 18:17:56.515" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200703 18:17:54.206" endtime="20200703 18:17:56.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:56.515" endtime="20200703 18:17:56.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:56.518" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="23810-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:17:58.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:17:58.864" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200703 18:17:56.516" endtime="20200703 18:17:58.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:17:58.865" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:17:58.865" endtime="20200703 18:17:58.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:17:58.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:17:58.865" endtime="20200703 18:17:58.866"></status>
</kw>
<msg timestamp="20200703 18:17:58.866" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:17:54.102Z",
  "modificationTime": "2020-07-03T18:17:54.102Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200703 18:17:56.516" endtime="20200703 18:17:58.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:17:58.866" endtime="20200703 18:17:58.866"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:17:58.869" level="INFO">Running command 'ozone sh volume update o3:///23810-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:01.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:01.217" level="INFO">${output} = {
  "metadata" : { },
  "name" : "23810-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:17:54.102Z",
  "modificationTime" : "2020-07-03T18:18:00.880Z",
  "acls...</msg>
<status status="PASS" starttime="20200703 18:17:58.867" endtime="20200703 18:18:01.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:01.218" level="INFO">{
  "metadata" : { },
  "name" : "23810-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:17:54.102Z",
  "modificationTime" : "2020-07-03T18:18:00.880Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200703 18:18:01.218" endtime="20200703 18:18:01.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:01.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:01.218" endtime="20200703 18:18:01.219"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:58.866" endtime="20200703 18:18:01.219"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:01.223" level="INFO">Running command 'ozone sh volume info o3:///23810-rpcwport | jq -r '. | select(.name=="23810-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:03.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:03.483" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:18:01.220" endtime="20200703 18:18:03.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:03.484" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200703 18:18:03.484" endtime="20200703 18:18:03.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:03.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:03.485" endtime="20200703 18:18:03.485"></status>
</kw>
<msg timestamp="20200703 18:18:03.485" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:18:01.220" endtime="20200703 18:18:03.485"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:03.486" endtime="20200703 18:18:03.486"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:03.490" level="INFO">Running command 'ozone sh bucket create o3:///23810-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:05.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:05.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:03.487" endtime="20200703 18:18:05.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:05.583" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:05.583" endtime="20200703 18:18:05.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:05.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:05.584" endtime="20200703 18:18:05.584"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:03.486" endtime="20200703 18:18:05.584"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:05.588" level="INFO">Running command 'ozone sh bucket info o3:///23810-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:07.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:07.764" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200703 18:18:05.585" endtime="20200703 18:18:07.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:07.765" level="INFO">DISK</msg>
<status status="PASS" starttime="20200703 18:18:07.764" endtime="20200703 18:18:07.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:07.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:07.765" endtime="20200703 18:18:07.765"></status>
</kw>
<msg timestamp="20200703 18:18:07.765" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200703 18:18:05.584" endtime="20200703 18:18:07.765"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:07.766" endtime="20200703 18:18:07.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:07.769" level="INFO">Running command 'ozone sh bucket list o3:///23810-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:10.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:10.114" level="INFO">${output} = 23810-rpcwport</msg>
<status status="PASS" starttime="20200703 18:18:07.767" endtime="20200703 18:18:10.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:10.115" level="INFO">23810-rpcwport</msg>
<status status="PASS" starttime="20200703 18:18:10.114" endtime="20200703 18:18:10.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:10.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:10.115" endtime="20200703 18:18:10.115"></status>
</kw>
<msg timestamp="20200703 18:18:10.115" level="INFO">${result} = 23810-rpcwport</msg>
<status status="PASS" starttime="20200703 18:18:07.766" endtime="20200703 18:18:10.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:10.115" endtime="20200703 18:18:10.116"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:10.119" level="INFO">Running command 'ozone sh key put o3:///23810-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:14.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:14.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:10.117" endtime="20200703 18:18:14.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:14.045" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:14.045" endtime="20200703 18:18:14.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:14.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:14.045" endtime="20200703 18:18:14.046"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:10.116" endtime="20200703 18:18:14.046"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:14.049" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:14.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:14.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:14.046" endtime="20200703 18:18:14.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:14.051" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:14.051" endtime="20200703 18:18:14.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:14.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:14.052" endtime="20200703 18:18:14.052"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:14.046" endtime="20200703 18:18:14.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:14.054" level="INFO">Running command 'ozone sh key get o3:///23810-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:17.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:17.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:14.053" endtime="20200703 18:18:17.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:17.790" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:17.789" endtime="20200703 18:18:17.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:17.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:17.790" endtime="20200703 18:18:17.790"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:14.052" endtime="20200703 18:18:17.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:17.793" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:17.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:17.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:17.791" endtime="20200703 18:18:17.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:17.796" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:17.795" endtime="20200703 18:18:17.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:17.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:17.796" endtime="20200703 18:18:17.796"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:17.791" endtime="20200703 18:18:17.797"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:17.799" level="INFO">Running command 'ozone sh key put -t RATIS o3:///23810-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:21.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:21.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:17.797" endtime="20200703 18:18:21.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:21.686" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:21.686" endtime="20200703 18:18:21.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:21.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:21.687" endtime="20200703 18:18:21.687"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:17.797" endtime="20200703 18:18:21.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:21.690" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:21.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:21.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:21.688" endtime="20200703 18:18:21.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:21.692" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:21.692" endtime="20200703 18:18:21.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:21.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:21.693" endtime="20200703 18:18:21.693"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:21.687" endtime="20200703 18:18:21.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:21.695" level="INFO">Running command 'ozone sh key get o3:///23810-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:25.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:25.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:21.694" endtime="20200703 18:18:25.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:25.508" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:25.507" endtime="20200703 18:18:25.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:25.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:25.508" endtime="20200703 18:18:25.508"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:21.693" endtime="20200703 18:18:25.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:25.510" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:25.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:25.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:25.509" endtime="20200703 18:18:25.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:25.513" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:25.513" endtime="20200703 18:18:25.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:25.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:25.513" endtime="20200703 18:18:25.514"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:25.508" endtime="20200703 18:18:25.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:25.518" level="INFO">Running command 'ozone sh key info o3:///23810-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:27.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:27.887" level="INFO">${output} = {
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:19.823Z",
  "modificationTime": "2020-07-03T18:18:21.313Z",
...</msg>
<status status="PASS" starttime="20200703 18:18:25.515" endtime="20200703 18:18:27.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:27.887" level="INFO">{
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:19.823Z",
  "modificationTime": "2020-07-03T18:18:21.313Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451296449134720,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:18:27.887" endtime="20200703 18:18:27.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:27.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:27.888" endtime="20200703 18:18:27.888"></status>
</kw>
<msg timestamp="20200703 18:18:27.888" level="INFO">${result} = {
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:19.823Z",
  "modificationTime": "2020-07-03T18:18:21.313Z",
...</msg>
<status status="PASS" starttime="20200703 18:18:25.514" endtime="20200703 18:18:27.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:27.888" endtime="20200703 18:18:27.888"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:27.892" level="INFO">Running command 'ozone sh key delete o3:///23810-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:29.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:29.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:27.889" endtime="20200703 18:18:29.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:29.920" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:29.920" endtime="20200703 18:18:29.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:29.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:29.921" endtime="20200703 18:18:29.921"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:27.889" endtime="20200703 18:18:29.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:29.924" level="INFO">Running command 'ozone sh key cp o3:///23810-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:33.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:33.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:29.921" endtime="20200703 18:18:33.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:33.890" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:33.890" endtime="20200703 18:18:33.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:33.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:33.890" endtime="20200703 18:18:33.891"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:29.921" endtime="20200703 18:18:33.891"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:33.893" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:33.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:33.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:33.891" endtime="20200703 18:18:33.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:33.896" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:33.896" endtime="20200703 18:18:33.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:33.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:33.896" endtime="20200703 18:18:33.897"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:33.891" endtime="20200703 18:18:33.897"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:33.899" level="INFO">Running command 'ozone sh key get o3:///23810-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:37.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:37.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:33.897" endtime="20200703 18:18:37.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:37.581" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:37.581" endtime="20200703 18:18:37.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:37.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:37.581" endtime="20200703 18:18:37.582"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:33.897" endtime="20200703 18:18:37.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:37.586" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:37.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:37.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:37.583" endtime="20200703 18:18:37.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:37.590" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:37.589" endtime="20200703 18:18:37.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:37.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:37.590" endtime="20200703 18:18:37.590"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:37.582" endtime="20200703 18:18:37.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:37.593" level="INFO">Running command 'ozone sh key delete o3:///23810-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:39.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:39.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:37.591" endtime="20200703 18:18:39.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:39.731" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:39.730" endtime="20200703 18:18:39.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:39.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:39.731" endtime="20200703 18:18:39.731"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:37.591" endtime="20200703 18:18:39.732"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:39.735" level="INFO">Running command 'ozone sh key get o3:///23810-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:41.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:18:41.812" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:18:39.733" endtime="20200703 18:18:41.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:41.813" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:18:41.812" endtime="20200703 18:18:41.813"></status>
</kw>
<msg timestamp="20200703 18:18:41.813" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:18:39.732" endtime="20200703 18:18:41.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:41.814" endtime="20200703 18:18:41.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:41.816" level="INFO">Running command 'ozone sh key get --force o3:///23810-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:45.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:45.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:41.814" endtime="20200703 18:18:45.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:45.827" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:45.826" endtime="20200703 18:18:45.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:45.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:45.827" endtime="20200703 18:18:45.827"></status>
</kw>
<msg timestamp="20200703 18:18:45.828" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:18:41.814" endtime="20200703 18:18:45.828"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:45.828" endtime="20200703 18:18:45.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:45.831" level="INFO">Running command 'ozone sh key info o3:///23810-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:48.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:48.140" level="INFO">${output} = {
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:12.217Z",
  "modificationTime": "2020-07-03T18:18:13.499Z",
  "rep...</msg>
<status status="PASS" starttime="20200703 18:18:45.829" endtime="20200703 18:18:48.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:48.141" level="INFO">{
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:12.217Z",
  "modificationTime": "2020-07-03T18:18:13.499Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451295950733440,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:18:48.141" endtime="20200703 18:18:48.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:48.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:48.142" endtime="20200703 18:18:48.142"></status>
</kw>
<msg timestamp="20200703 18:18:48.142" level="INFO">${result} = {
  "volumeName": "23810-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:18:12.217Z",
  "modificationTime": "2020-07-03T18:18:13.499Z",
  "rep...</msg>
<status status="PASS" starttime="20200703 18:18:45.828" endtime="20200703 18:18:48.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:48.142" endtime="20200703 18:18:48.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:48.146" level="INFO">Running command 'ozone sh key list o3:///23810-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:50.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:50.394" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200703 18:18:48.143" endtime="20200703 18:18:50.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:50.395" level="INFO">key1</msg>
<status status="PASS" starttime="20200703 18:18:50.394" endtime="20200703 18:18:50.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:50.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:50.395" endtime="20200703 18:18:50.395"></status>
</kw>
<msg timestamp="20200703 18:18:50.396" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200703 18:18:48.143" endtime="20200703 18:18:50.396"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:50.396" endtime="20200703 18:18:50.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:50.400" level="INFO">Running command 'ozone sh key rename o3:///23810-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:52.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:52.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:50.397" endtime="20200703 18:18:52.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:52.524" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:52.524" endtime="20200703 18:18:52.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:52.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:52.525" endtime="20200703 18:18:52.525"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:50.396" endtime="20200703 18:18:52.525"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:52.527" level="INFO">Running command 'ozone sh key list o3:///23810-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:54.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:54.765" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200703 18:18:52.525" endtime="20200703 18:18:54.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:54.766" level="INFO">key2</msg>
<status status="PASS" starttime="20200703 18:18:54.765" endtime="20200703 18:18:54.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:54.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:54.766" endtime="20200703 18:18:54.767"></status>
</kw>
<msg timestamp="20200703 18:18:54.767" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200703 18:18:52.525" endtime="20200703 18:18:54.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200703 18:18:54.767" endtime="20200703 18:18:54.768"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:54.770" level="INFO">Running command 'ozone sh key delete o3:///23810-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:56.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:56.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:54.768" endtime="20200703 18:18:56.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:56.868" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:56.867" endtime="20200703 18:18:56.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:56.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:56.868" endtime="20200703 18:18:56.868"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:54.768" endtime="20200703 18:18:56.868"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:10.116" endtime="20200703 18:18:56.869"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:10.116" endtime="20200703 18:18:56.869"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:56.871" level="INFO">Running command 'ozone sh bucket delete o3:///23810-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:18:58.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:18:58.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:18:56.869" endtime="20200703 18:18:58.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:18:58.845" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:18:58.845" endtime="20200703 18:18:58.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:18:58.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:18:58.846" endtime="20200703 18:18:58.846"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:56.869" endtime="20200703 18:18:58.846"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:18:58.850" level="INFO">Running command 'ozone sh volume delete o3:///23810-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:00.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:00.943" level="INFO">${output} = Volume 23810-rpcwport is deleted</msg>
<status status="PASS" starttime="20200703 18:18:58.847" endtime="20200703 18:19:00.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:00.944" level="INFO">Volume 23810-rpcwport is deleted</msg>
<status status="PASS" starttime="20200703 18:19:00.943" endtime="20200703 18:19:00.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:00.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:00.944" endtime="20200703 18:19:00.945"></status>
</kw>
<status status="PASS" starttime="20200703 18:18:58.846" endtime="20200703 18:19:00.945"></status>
</kw>
<status status="PASS" starttime="20200703 18:17:49.846" endtime="20200703 18:19:00.945"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:17:49.845" endtime="20200703 18:19:00.945" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:00.946" endtime="20200703 18:19:00.947"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:00.951" level="INFO">Running command 'ozone sh volume info /23810-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:03.017" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:19:03.017" level="INFO">${output} = VOLUME_NOT_FOUND Volume 23810-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200703 18:19:00.948" endtime="20200703 18:19:03.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:03.018" level="INFO">VOLUME_NOT_FOUND Volume 23810-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200703 18:19:03.018" endtime="20200703 18:19:03.018"></status>
</kw>
<msg timestamp="20200703 18:19:03.019" level="INFO">${result} = VOLUME_NOT_FOUND Volume 23810-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200703 18:19:00.947" endtime="20200703 18:19:03.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:03.019" endtime="20200703 18:19:03.019"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:03.022" level="INFO">Running command 'ozone sh volume create /23810-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:05.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:05.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:03.020" endtime="20200703 18:19:05.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:05.066" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:05.066" endtime="20200703 18:19:05.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:05.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:05.067" endtime="20200703 18:19:05.067"></status>
</kw>
<msg timestamp="20200703 18:19:05.067" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:19:03.019" endtime="20200703 18:19:05.067"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:05.067" endtime="20200703 18:19:05.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:05.071" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="23810-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:07.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:07.528" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200703 18:19:05.068" endtime="20200703 18:19:07.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:07.530" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:19:07.529" endtime="20200703 18:19:07.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:07.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:07.530" endtime="20200703 18:19:07.530"></status>
</kw>
<msg timestamp="20200703 18:19:07.530" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200703 18:19:05.068" endtime="20200703 18:19:07.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:07.530" endtime="20200703 18:19:07.531"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:07.534" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="23810-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:09.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:09.672" level="INFO">${output} = {
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200703 18:19:07.531" endtime="20200703 18:19:09.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:09.673" level="INFO">{
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200703 18:19:09.672" endtime="20200703 18:19:09.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:09.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:09.673" endtime="20200703 18:19:09.673"></status>
</kw>
<msg timestamp="20200703 18:19:09.674" level="INFO">${result} = {
  "metadata": {},
  "name": "23810-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-03T18:19:04.996Z",
  "modificationTime": "2020-07-03T18:19:04.996Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200703 18:19:07.531" endtime="20200703 18:19:09.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:09.674" endtime="20200703 18:19:09.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:09.676" level="INFO">Running command 'ozone sh volume update /23810-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:12.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:12.104" level="INFO">${output} = {
  "metadata" : { },
  "name" : "23810-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:19:04.996Z",
  "modificationTime" : "2020-07-03T18:19:11.835Z",
  "a...</msg>
<status status="PASS" starttime="20200703 18:19:09.674" endtime="20200703 18:19:12.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:12.104" level="INFO">{
  "metadata" : { },
  "name" : "23810-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-03T18:19:04.996Z",
  "modificationTime" : "2020-07-03T18:19:11.835Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200703 18:19:12.104" endtime="20200703 18:19:12.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:12.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:12.105" endtime="20200703 18:19:12.105"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:09.674" endtime="20200703 18:19:12.105"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:12.109" level="INFO">Running command 'ozone sh volume info /23810-rpcwoscheme | jq -r '. | select(.name=="23810-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:14.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:14.481" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:19:12.106" endtime="20200703 18:19:14.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:14.482" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200703 18:19:14.481" endtime="20200703 18:19:14.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:14.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:14.482" endtime="20200703 18:19:14.482"></status>
</kw>
<msg timestamp="20200703 18:19:14.482" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200703 18:19:12.105" endtime="20200703 18:19:14.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:14.483" endtime="20200703 18:19:14.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:14.487" level="INFO">Running command 'ozone sh bucket create /23810-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:16.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:16.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:14.483" endtime="20200703 18:19:16.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:16.645" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:16.645" endtime="20200703 18:19:16.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:16.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:16.645" endtime="20200703 18:19:16.646"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:14.483" endtime="20200703 18:19:16.646"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:16.649" level="INFO">Running command 'ozone sh bucket info /23810-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:18.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:18.950" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200703 18:19:16.647" endtime="20200703 18:19:18.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:18.951" level="INFO">DISK</msg>
<status status="PASS" starttime="20200703 18:19:18.951" endtime="20200703 18:19:18.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:18.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:18.951" endtime="20200703 18:19:18.952"></status>
</kw>
<msg timestamp="20200703 18:19:18.952" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200703 18:19:16.646" endtime="20200703 18:19:18.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:18.952" endtime="20200703 18:19:18.952"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:18.955" level="INFO">Running command 'ozone sh bucket list /23810-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:21.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:21.312" level="INFO">${output} = 23810-rpcwoscheme</msg>
<status status="PASS" starttime="20200703 18:19:18.953" endtime="20200703 18:19:21.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:21.313" level="INFO">23810-rpcwoscheme</msg>
<status status="PASS" starttime="20200703 18:19:21.312" endtime="20200703 18:19:21.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:21.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:21.313" endtime="20200703 18:19:21.314"></status>
</kw>
<msg timestamp="20200703 18:19:21.314" level="INFO">${result} = 23810-rpcwoscheme</msg>
<status status="PASS" starttime="20200703 18:19:18.952" endtime="20200703 18:19:21.314"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:21.314" endtime="20200703 18:19:21.315"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:21.318" level="INFO">Running command 'ozone sh key put /23810-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:25.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:25.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:21.316" endtime="20200703 18:19:25.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:25.251" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:25.250" endtime="20200703 18:19:25.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:25.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:25.251" endtime="20200703 18:19:25.252"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:21.315" endtime="20200703 18:19:25.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:25.254" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:25.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:25.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:25.252" endtime="20200703 18:19:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:25.257" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:25.256" endtime="20200703 18:19:25.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:25.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:25.257" endtime="20200703 18:19:25.257"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:25.252" endtime="20200703 18:19:25.258"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:25.260" level="INFO">Running command 'ozone sh key get /23810-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:28.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:28.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:25.258" endtime="20200703 18:19:28.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:28.942" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:28.942" endtime="20200703 18:19:28.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:28.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:28.942" endtime="20200703 18:19:28.943"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:25.258" endtime="20200703 18:19:28.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:28.945" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:28.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:28.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:28.943" endtime="20200703 18:19:28.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:28.948" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:28.947" endtime="20200703 18:19:28.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:28.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:28.948" endtime="20200703 18:19:28.948"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:28.943" endtime="20200703 18:19:28.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:28.951" level="INFO">Running command 'ozone sh key put -t RATIS /23810-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:32.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:32.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:28.949" endtime="20200703 18:19:32.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:32.776" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:32.776" endtime="20200703 18:19:32.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:32.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:32.776" endtime="20200703 18:19:32.777"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:28.949" endtime="20200703 18:19:32.777"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:32.780" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:32.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:32.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:32.778" endtime="20200703 18:19:32.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:32.784" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:32.784" endtime="20200703 18:19:32.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:32.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:32.785" endtime="20200703 18:19:32.785"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:32.777" endtime="20200703 18:19:32.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:32.788" level="INFO">Running command 'ozone sh key get /23810-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:36.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:36.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:32.786" endtime="20200703 18:19:36.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:36.378" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:36.378" endtime="20200703 18:19:36.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:36.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:36.379" endtime="20200703 18:19:36.379"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:32.785" endtime="20200703 18:19:36.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:36.381" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:36.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:36.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:36.380" endtime="20200703 18:19:36.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:36.384" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:36.383" endtime="20200703 18:19:36.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:36.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:36.384" endtime="20200703 18:19:36.384"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:36.379" endtime="20200703 18:19:36.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:36.387" level="INFO">Running command 'ozone sh key info /23810-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:38.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:38.672" level="INFO">${output} = {
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:30.888Z",
  "modificationTime": "2020-07-03T18:19:32.400Z...</msg>
<status status="PASS" starttime="20200703 18:19:36.385" endtime="20200703 18:19:38.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:38.674" level="INFO">{
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:30.888Z",
  "modificationTime": "2020-07-03T18:19:32.400Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451301106450560,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:19:38.672" endtime="20200703 18:19:38.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:38.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:38.674" endtime="20200703 18:19:38.675"></status>
</kw>
<msg timestamp="20200703 18:19:38.675" level="INFO">${result} = {
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:30.888Z",
  "modificationTime": "2020-07-03T18:19:32.400Z...</msg>
<status status="PASS" starttime="20200703 18:19:36.385" endtime="20200703 18:19:38.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:38.675" endtime="20200703 18:19:38.675"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:38.678" level="INFO">Running command 'ozone sh key delete /23810-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:40.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:40.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:38.676" endtime="20200703 18:19:40.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:40.738" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:40.737" endtime="20200703 18:19:40.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:40.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:40.738" endtime="20200703 18:19:40.738"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:38.675" endtime="20200703 18:19:40.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:40.741" level="INFO">Running command 'ozone sh key cp /23810-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:44.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:44.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:40.739" endtime="20200703 18:19:44.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:44.899" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:44.899" endtime="20200703 18:19:44.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:44.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:44.899" endtime="20200703 18:19:44.900"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:40.739" endtime="20200703 18:19:44.900"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:44.902" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:44.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:44.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:44.900" endtime="20200703 18:19:44.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:44.905" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:44.905" endtime="20200703 18:19:44.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:44.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:44.906" endtime="20200703 18:19:44.907"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:44.900" endtime="20200703 18:19:44.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:44.910" level="INFO">Running command 'ozone sh key get /23810-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:48.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:48.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:44.907" endtime="20200703 18:19:48.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:48.522" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:48.522" endtime="20200703 18:19:48.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:48.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:48.522" endtime="20200703 18:19:48.523"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:44.907" endtime="20200703 18:19:48.523"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:48.525" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:48.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:48.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:48.523" endtime="20200703 18:19:48.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:48.528" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:48.528" endtime="20200703 18:19:48.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:48.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:48.528" endtime="20200703 18:19:48.528"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:48.523" endtime="20200703 18:19:48.529"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:48.531" level="INFO">Running command 'ozone sh key delete /23810-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:50.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:50.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:48.529" endtime="20200703 18:19:50.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:50.506" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:50.505" endtime="20200703 18:19:50.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:50.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:50.506" endtime="20200703 18:19:50.506"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:48.529" endtime="20200703 18:19:50.507"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:50.510" level="INFO">Running command 'ozone sh key get /23810-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:52.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20200703 18:19:52.558" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:19:50.507" endtime="20200703 18:19:52.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:52.559" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:19:52.559" endtime="20200703 18:19:52.559"></status>
</kw>
<msg timestamp="20200703 18:19:52.560" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200703 18:19:50.507" endtime="20200703 18:19:52.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:52.560" endtime="20200703 18:19:52.560"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:52.563" level="INFO">Running command 'ozone sh key get --force /23810-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:56.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:56.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:19:52.561" endtime="20200703 18:19:56.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:56.186" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:19:56.186" endtime="20200703 18:19:56.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:56.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:56.187" endtime="20200703 18:19:56.187"></status>
</kw>
<msg timestamp="20200703 18:19:56.187" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200703 18:19:52.560" endtime="20200703 18:19:56.187"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:56.187" endtime="20200703 18:19:56.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:56.190" level="INFO">Running command 'ozone sh key info /23810-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:19:58.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:19:58.714" level="INFO">${output} = {
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:23.377Z",
  "modificationTime": "2020-07-03T18:19:24.785Z",
  "...</msg>
<status status="PASS" starttime="20200703 18:19:56.188" endtime="20200703 18:19:58.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:19:58.716" level="INFO">{
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:23.377Z",
  "modificationTime": "2020-07-03T18:19:24.785Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104451300614209660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200703 18:19:58.715" endtime="20200703 18:19:58.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:19:58.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:19:58.716" endtime="20200703 18:19:58.717"></status>
</kw>
<msg timestamp="20200703 18:19:58.717" level="INFO">${result} = {
  "volumeName": "23810-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-03T18:19:23.377Z",
  "modificationTime": "2020-07-03T18:19:24.785Z",
  "...</msg>
<status status="PASS" starttime="20200703 18:19:56.188" endtime="20200703 18:19:58.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200703 18:19:58.717" endtime="20200703 18:19:58.717"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:19:58.721" level="INFO">Running command 'ozone sh key list /23810-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:01.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:01.128" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200703 18:19:58.718" endtime="20200703 18:20:01.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:01.129" level="INFO">key1</msg>
<status status="PASS" starttime="20200703 18:20:01.128" endtime="20200703 18:20:01.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:01.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:01.129" endtime="20200703 18:20:01.130"></status>
</kw>
<msg timestamp="20200703 18:20:01.130" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200703 18:19:58.717" endtime="20200703 18:20:01.130"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:20:01.130" endtime="20200703 18:20:01.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:20:01.133" level="INFO">Running command 'ozone sh key rename /23810-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:03.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:03.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:20:01.131" endtime="20200703 18:20:03.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:03.272" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:20:03.272" endtime="20200703 18:20:03.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:03.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:03.272" endtime="20200703 18:20:03.273"></status>
</kw>
<status status="PASS" starttime="20200703 18:20:01.131" endtime="20200703 18:20:03.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:20:03.275" level="INFO">Running command 'ozone sh key list /23810-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:05.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:05.494" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200703 18:20:03.273" endtime="20200703 18:20:05.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:05.495" level="INFO">key2</msg>
<status status="PASS" starttime="20200703 18:20:05.494" endtime="20200703 18:20:05.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:05.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:05.495" endtime="20200703 18:20:05.495"></status>
</kw>
<msg timestamp="20200703 18:20:05.496" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200703 18:20:03.273" endtime="20200703 18:20:05.496"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200703 18:20:05.496" endtime="20200703 18:20:05.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:20:05.499" level="INFO">Running command 'ozone sh key delete /23810-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:07.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:07.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:20:05.497" endtime="20200703 18:20:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:07.637" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:20:07.636" endtime="20200703 18:20:07.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:07.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:07.637" endtime="20200703 18:20:07.638"></status>
</kw>
<status status="PASS" starttime="20200703 18:20:05.496" endtime="20200703 18:20:07.638"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:21.315" endtime="20200703 18:20:07.638"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:21.315" endtime="20200703 18:20:07.638"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:20:07.640" level="INFO">Running command 'ozone sh bucket delete /23810-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:09.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:09.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200703 18:20:07.639" endtime="20200703 18:20:09.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:09.630" level="INFO"></msg>
<status status="PASS" starttime="20200703 18:20:09.629" endtime="20200703 18:20:09.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:09.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:09.630" endtime="20200703 18:20:09.631"></status>
</kw>
<status status="PASS" starttime="20200703 18:20:07.638" endtime="20200703 18:20:09.631"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:20:09.633" level="INFO">Running command 'ozone sh volume delete /23810-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:20:11.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:20:11.748" level="INFO">${output} = Volume 23810-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200703 18:20:09.631" endtime="20200703 18:20:11.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:20:11.749" level="INFO">Volume 23810-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200703 18:20:11.748" endtime="20200703 18:20:11.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:20:11.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:20:11.749" endtime="20200703 18:20:11.750"></status>
</kw>
<status status="PASS" starttime="20200703 18:20:09.631" endtime="20200703 18:20:11.750"></status>
</kw>
<status status="PASS" starttime="20200703 18:19:00.947" endtime="20200703 18:20:11.750"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200703 18:19:00.946" endtime="20200703 18:20:11.750" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200703 18:15:41.058" endtime="20200703 18:20:11.752"></status>
</suite>
<status status="PASS" starttime="20200703 18:14:40.964" endtime="20200703 18:20:11.756"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
