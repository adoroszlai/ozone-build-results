<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200703 18:29:18.038" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:18.082" endtime="20200703 18:29:18.083"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:18.087" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:26.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:26.269" level="INFO">${output} = 2020-07-03 18:29:19,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:19,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:29:18.083" endtime="20200703 18:29:26.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:26.270" level="INFO">2020-07-03 18:29:19,384 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:19,604 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:29:19,604 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:29:20,683 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-03 18:29:20,684 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-03 18:29:20,684 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-03 18:29:20,685 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-03 18:29:20,685 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-03 18:29:20,685 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-03 18:29:20,685 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-03 18:29:20,704 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-03 18:29:20,715 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-03 18:29:20,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-48529, with hadoop as owner.
2020-07-03 18:29:20,809 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-48529/bucket-0-28001, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:29:21,411 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:29:21,717 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,008
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,104
Average Time spent in key write: 00:00:00,597
Total bytes written: 10250
Total Execution time: 00:00:06,072
***************************************************</msg>
<status status="PASS" starttime="20200703 18:29:26.269" endtime="20200703 18:29:26.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:26.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:26.270" endtime="20200703 18:29:26.271"></status>
</kw>
<status status="PASS" starttime="20200703 18:29:18.083" endtime="20200703 18:29:26.271"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:18.082" endtime="20200703 18:29:26.271" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:26.273" endtime="20200703 18:29:26.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:26.277" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:26.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:26.481" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:26.274" endtime="20200703 18:29:26.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:26.482" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    386      0 --:--:-- --:--:-- --:--:--   385
100    77  100    77    0     0    386      0 --:--:-- --:--:-- --:--:--   385
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200703 18:29:26.481" endtime="20200703 18:29:26.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:26.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:26.482" endtime="20200703 18:29:26.483"></status>
</kw>
<msg timestamp="20200703 18:29:26.483" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:26.273" endtime="20200703 18:29:26.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:26.483" endtime="20200703 18:29:26.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:26.487" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:26.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:26.544" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:26.484" endtime="20200703 18:29:26.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:26.545" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3005
&lt; 
{ [data not shown]

100  3005  100  3005    0     0  61538      0 --:--:-- --:--:-- --:--:-- 63936
* Connection #0 to host recon left intact
[{"volume":"vol-4-12431","bucket":"bucket-0-97840","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-0-50803","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-1-86578","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-2-83355","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-3-63325","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-4-74145","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-2-93298","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-3-19940","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-1-45284","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-2-76075","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-2-85001","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-0-04037","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-4-89343","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-3-20064","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-4-67718","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-2-43683","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-0-76132","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-3-07492","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-1-16479","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-4-23431","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-0-23251","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-1-78532","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-4-95260","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-1-58732","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-3-67255","fileSize":16384,"count":5},{"volume":"23810-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23810-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"rdnms","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-60938","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-45909","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-18815","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45909","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-25707","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200703 18:29:26.545" endtime="20200703 18:29:26.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:26.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:26.546" endtime="20200703 18:29:26.546"></status>
</kw>
<msg timestamp="20200703 18:29:26.546" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:26.484" endtime="20200703 18:29:26.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200703 18:29:26.547" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3005
&lt; 
{ [data not shown]

100  3005  100  3005    0     0  61538      0 --:--:-- --:--:-- --:--:-- 63936
* Connection #0 to host recon left intact
[{"volume":"vol-4-12431","bucket":"bucket-0-97840","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-0-50803","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-1-86578","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-2-83355","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-3-63325","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-4-74145","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-2-93298","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-3-19940","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-1-45284","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-2-76075","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-2-85001","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-0-04037","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-4-89343","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-3-20064","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-4-67718","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-2-43683","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-0-76132","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-3-07492","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-1-16479","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-4-23431","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-0-23251","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-1-78532","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-4-95260","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-1-58732","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-3-67255","fileSize":16384,"count":5},{"volume":"23810-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23810-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"rdnms","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-60938","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-45909","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-18815","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45909","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-25707","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200703 18:29:26.547" endtime="20200703 18:29:26.548"></status>
</kw>
<status status="FAIL" starttime="20200703 18:29:26.273" endtime="20200703 18:29:26.548"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.549" endtime="20200703 18:29:36.550"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.553" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.575" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.550" endtime="20200703 18:29:36.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.576" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  12064      0 --:--:-- --:--:-- --:--:-- 13000
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":5},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200703 18:29:36.575" endtime="20200703 18:29:36.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.576" endtime="20200703 18:29:36.576"></status>
</kw>
<msg timestamp="20200703 18:29:36.577" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.550" endtime="20200703 18:29:36.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.577" endtime="20200703 18:29:36.577"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.580" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.596" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.578" endtime="20200703 18:29:36.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.597" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3217
&lt; 
{ [data not shown]

100  3217  100  3217    0     0   282k      0 --:--:-- --:--:-- --:--:--  285k
* Connection #0 to host recon left intact
[{"volume":"vol-4-12431","bucket":"bucket-0-97840","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-0-50803","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-1-86578","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-2-83355","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-3-63325","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-4-74145","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-2-93298","fileSize":16384,"count":5},{"volume":"vol-4-12431","bucket":"bucket-3-19940","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-1-45284","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-2-76075","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-2-85001","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-0-04037","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-4-89343","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-3-20064","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-4-67718","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-2-43683","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-0-76132","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-3-07492","fileSize":16384,"count":5},{"volume":"vol-0-10909","bucket":"bucket-1-16479","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-4-23431","fileSize":16384,"count":5},{"volume":"vol-1-76586","bucket":"bucket-0-23251","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-1-78532","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-4-95260","fileSize":16384,"count":5},{"volume":"vol-3-86819","bucket":"bucket-1-58732","fileSize":16384,"count":5},{"volume":"vol-2-53794","bucket":"bucket-3-67255","fileSize":16384,"count":5},{"volume":"23810-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"23810-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"23810-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"rdnms","bucket":"mybucket1","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest2","bucket":"bucket3-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-60938","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-45909","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-18815","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-45909","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-25707","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-73555","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-96142","fileSize":1024,"count":1},{"volume":"vol-0-48529","bucket":"bucket-0-28001","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20200703 18:29:36.597" endtime="20200703 18:29:36.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.598" endtime="20200703 18:29:36.598"></status>
</kw>
<msg timestamp="20200703 18:29:36.598" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.577" endtime="20200703 18:29:36.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.598" endtime="20200703 18:29:36.599"></status>
</kw>
<status status="PASS" starttime="20200703 18:29:36.548" endtime="20200703 18:29:36.599"></status>
</kw>
<status status="PASS" starttime="20200703 18:29:26.272" endtime="20200703 18:29:36.599"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:26.272" endtime="20200703 18:29:36.599" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.603" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.633" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.601" endtime="20200703 18:29:36.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.633" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0  73173      0 --:--:-- --:--:-- --:--:-- 74086
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"43e0500e-3f36-4e2b-9d11-74631c03bd32","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1593800962295,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25734914048},"pipelines":[{"pipelineID":"7244f4d3-ea7a-4cbd-bd5e-b0aa9b2b52e5","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"},{"pipelineID":"d3502e6c-3d12-4b0a-a2b5-04b2b5216ded","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":2},{"uuid":"ac0d447e-1292-44d5-ab43-618d149ed757","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1593800962277,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25760092160},"pipelines":[{"pipelineID":"f478a2c2-8830-452c-ac1d-c87d3ee57e1f","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"d3502e6c-3d12-4b0a-a2b5-04b2b5216ded","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"df77bf7e-5d1a-4a28-bf28-95b388df2ac6","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1593800962262,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25734914048},"pipelines":[{"pipelineID":"3226449b-22e4-46dc-93e7-45e27be6f21e","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"d3502e6c-3d12-4b0a-a2b5-04b2b5216ded","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200703 18:29:36.633" endtime="20200703 18:29:36.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.634" endtime="20200703 18:29:36.634"></status>
</kw>
<msg timestamp="20200703 18:29:36.634" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.601" endtime="20200703 18:29:36.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.634" endtime="20200703 18:29:36.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.635" endtime="20200703 18:29:36.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.635" endtime="20200703 18:29:36.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.635" endtime="20200703 18:29:36.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.640" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.657" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.636" endtime="20200703 18:29:36.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.658" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1244
&lt; 
{ [data not shown]

100  1244  100  1244    0     0   107k      0 --:--:-- --:--:-- --:--:--  110k
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"3226449b-22e4-46dc-93e7-45e27be6f21e","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":911640,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"7244f4d3-ea7a-4cbd-bd5e-b0aa9b2b52e5","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":911864,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f478a2c2-8830-452c-ac1d-c87d3ee57e1f","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":911291,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"d3502e6c-3d12-4b0a-a2b5-04b2b5216ded","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default","ozone_datanode_2.ozone_default","ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":911238,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1}]}</msg>
<status status="PASS" starttime="20200703 18:29:36.657" endtime="20200703 18:29:36.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.658" endtime="20200703 18:29:36.658"></status>
</kw>
<msg timestamp="20200703 18:29:36.658" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.636" endtime="20200703 18:29:36.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.659" endtime="20200703 18:29:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.659" endtime="20200703 18:29:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.660" endtime="20200703 18:29:36.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.660" endtime="20200703 18:29:36.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.660" endtime="20200703 18:29:36.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.661" endtime="20200703 18:29:36.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.664" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.682" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.662" endtime="20200703 18:29:36.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.682" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  14849      0 --:--:-- --:--:-- --:--:-- 15500
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77229920256},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200703 18:29:36.682" endtime="20200703 18:29:36.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.683" endtime="20200703 18:29:36.683"></status>
</kw>
<msg timestamp="20200703 18:29:36.683" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.661" endtime="20200703 18:29:36.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.683" endtime="20200703 18:29:36.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.684" endtime="20200703 18:29:36.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.684" endtime="20200703 18:29:36.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.687" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.709" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.685" endtime="20200703 18:29:36.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.709" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  26224      0 --:--:-- --:--:-- --:--:-- 27866
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1593800147472,"lastReportTimestamp":1593800927473},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1593800147238,"lastReportTimestamp":1593800927235},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1593800117087,"lastReportTimestamp":1593800927025}]</msg>
<status status="PASS" starttime="20200703 18:29:36.709" endtime="20200703 18:29:36.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.710" endtime="20200703 18:29:36.710"></status>
</kw>
<msg timestamp="20200703 18:29:36.710" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.685" endtime="20200703 18:29:36.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.710" endtime="20200703 18:29:36.711"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:36.600" endtime="20200703 18:29:36.711" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.713" endtime="20200703 18:29:36.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:36.716" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:36.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:36.729" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.713" endtime="20200703 18:29:36.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:36.730" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.5...
* Connected to recon (172.23.0.5) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Date: Fri, 03 Jul 2020 18:29:36 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Fri, 03 Jul 2020 17:53:44 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   274k      0 --:--:-- --:--:-- --:--:--  316k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.729" endtime="20200703 18:29:36.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:36.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:36.730" endtime="20200703 18:29:36.731"></status>
</kw>
<msg timestamp="20200703 18:29:36.731" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200703 18:29:36.713" endtime="20200703 18:29:36.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:36.731" endtime="20200703 18:29:36.732"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:36.712" endtime="20200703 18:29:36.732" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200703 18:29:18.061" endtime="20200703 18:29:36.733"></status>
</suite>
<status status="PASS" starttime="20200703 18:29:18.038" endtime="20200703 18:29:36.736"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
