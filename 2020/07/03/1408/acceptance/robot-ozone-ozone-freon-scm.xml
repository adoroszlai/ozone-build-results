<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200703 18:29:48.197" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:48.247" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:29:56.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:29:56.368" level="INFO">${output} = 2020-07-03 18:29:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:49,734 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:29:48.243" endtime="20200703 18:29:56.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:29:56.369" level="INFO">2020-07-03 18:29:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:49,734 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:29:49,734 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:29:50,839 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-03 18:29:50,840 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-03 18:29:50,842 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-03 18:29:50,852 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:29:50,886 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-86716, with hadoop as owner.
2020-07-03 18:29:50,919 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-86716/bucket-0-52905, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:29:51,467 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:29:51,857 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,052
Average Time spent in bucket creation: 00:00:00,020
Average Time spent in key creation: 00:00:00,077
Average Time spent in key write: 00:00:00,623
Total bytes written: 10240
Total Execution time: 00:00:06,068
***************************************************</msg>
<status status="PASS" starttime="20200703 18:29:56.368" endtime="20200703 18:29:56.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:29:56.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:29:56.369" endtime="20200703 18:29:56.370"></status>
</kw>
<msg timestamp="20200703 18:29:56.370" level="INFO">${result} = 2020-07-03 18:29:49,531 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:49,734 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:29:48.242" endtime="20200703 18:29:56.370"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:29:56.371" endtime="20200703 18:29:56.371"></status>
</kw>
<status status="PASS" starttime="20200703 18:29:56.370" endtime="20200703 18:29:56.371"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:48.242" endtime="20200703 18:29:56.371" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:29:56.375" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:30:01.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:30:01.712" level="INFO">${output} = 2020-07-03 18:29:57,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:57,916 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:29:56.373" endtime="20200703 18:30:01.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:30:01.713" level="INFO">2020-07-03 18:29:57,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:57,916 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:29:57,916 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:29:58,067 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s7m2q1doym
2020-07-03 18:29:58,092 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:29:59,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:29:59,113 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-03 18:29:59,175 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:29:59,750 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:30:00,106 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:30:01,106 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:30:01,353 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1289.242815, max=1289.242815, mean=1289.242815, stddev=0.0, median=1289.242815, p75=1289.242815, p95=1289.242815, p98=1289.242815, p99=1289.242815, p999=1289.242815, mean_rate=0.46800192605069457, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:30:01,355 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-03 18:30:01,356 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:30:01,356 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:30:01.713" endtime="20200703 18:30:01.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:30:01.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:30:01.714" endtime="20200703 18:30:01.714"></status>
</kw>
<msg timestamp="20200703 18:30:01.714" level="INFO">${result} = 2020-07-03 18:29:57,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:29:57,916 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:29:56.372" endtime="20200703 18:30:01.714"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:30:01.715" endtime="20200703 18:30:01.715"></status>
</kw>
<status status="PASS" starttime="20200703 18:30:01.714" endtime="20200703 18:30:01.715"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:29:56.372" endtime="20200703 18:30:01.715" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:30:01.719" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:30:05.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:30:05.596" level="INFO">${output} = 2020-07-03 18:30:03,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:03,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:30:01.717" endtime="20200703 18:30:05.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:30:05.597" level="INFO">2020-07-03 18:30:03,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:03,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:30:03,329 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:30:03,515 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 8op9c8zjwt
2020-07-03 18:30:03,539 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:30:04,542 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:30:05,547 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=55.178223, max=55.178223, mean=55.178223, stddev=0.0, median=55.178223, p75=55.178223, p95=55.178223, p98=55.178223, p99=55.178223, p999=55.178223, mean_rate=0.8949252039368307, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:30:05,548 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-03 18:30:05,550 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:30:05,550 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:30:05.596" endtime="20200703 18:30:05.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:30:05.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:30:05.597" endtime="20200703 18:30:05.598"></status>
</kw>
<msg timestamp="20200703 18:30:05.598" level="INFO">${result} = 2020-07-03 18:30:03,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:03,328 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:30:01.716" endtime="20200703 18:30:05.598"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:30:05.599" endtime="20200703 18:30:05.599"></status>
</kw>
<status status="PASS" starttime="20200703 18:30:05.599" endtime="20200703 18:30:05.599"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:30:01.716" endtime="20200703 18:30:05.599" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:30:05.603" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:30:09.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:30:09.288" level="INFO">${output} = 2020-07-03 18:30:06,812 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:07,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:30:05.601" endtime="20200703 18:30:09.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:30:09.289" level="INFO">2020-07-03 18:30:06,812 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:07,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:30:07,057 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:30:07,249 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bzsdwsrn5d
2020-07-03 18:30:07,265 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:30:08,276 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:30:09,262 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=23.659096, max=23.659096, mean=23.659096, stddev=0.0, median=23.659096, p75=23.659096, p95=23.659096, p98=23.659096, p99=23.659096, p999=23.659096, mean_rate=0.8829109304973575, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:30:09,265 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-03 18:30:09,265 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:30:09,265 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:30:09.289" endtime="20200703 18:30:09.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:30:09.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:30:09.290" endtime="20200703 18:30:09.290"></status>
</kw>
<msg timestamp="20200703 18:30:09.290" level="INFO">${result} = 2020-07-03 18:30:06,812 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:30:07,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:30:05.600" endtime="20200703 18:30:09.290"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:30:09.291" endtime="20200703 18:30:09.291"></status>
</kw>
<status status="PASS" starttime="20200703 18:30:09.291" endtime="20200703 18:30:09.291"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:30:05.600" endtime="20200703 18:30:09.292" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200703 18:29:48.222" endtime="20200703 18:30:09.292"></status>
</suite>
<status status="PASS" starttime="20200703 18:29:48.198" endtime="20200703 18:30:09.295"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
