<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200703 18:10:06.751" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:10:06.792" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:10:14.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:10:14.712" level="INFO">${output} = 2020-07-03 18:10:07,959 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:08,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:06.789" endtime="20200703 18:10:14.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:10:14.713" level="INFO">2020-07-03 18:10:07,959 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:08,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:10:08,121 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:10:09,131 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-03 18:10:09,132 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-03 18:10:09,138 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-03 18:10:09,149 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:09,178 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-88353, with hadoop as owner.
2020-07-03 18:10:09,253 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88353/bucket-0-14039, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:10:09,740 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:10:10,151 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,090
Average Time spent in bucket creation: 00:00:00,025
Average Time spent in key creation: 00:00:00,083
Average Time spent in key write: 00:00:00,572
Total bytes written: 10240
Total Execution time: 00:00:05,982
***************************************************</msg>
<status status="PASS" starttime="20200703 18:10:14.712" endtime="20200703 18:10:14.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:10:14.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:10:14.713" endtime="20200703 18:10:14.713"></status>
</kw>
<msg timestamp="20200703 18:10:14.713" level="INFO">${result} = 2020-07-03 18:10:07,959 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:08,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:06.788" endtime="20200703 18:10:14.713"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:10:14.714" endtime="20200703 18:10:14.714"></status>
</kw>
<status status="PASS" starttime="20200703 18:10:14.714" endtime="20200703 18:10:14.714"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:10:06.788" endtime="20200703 18:10:14.715" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:10:14.718" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:10:19.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:10:19.678" level="INFO">${output} = 2020-07-03 18:10:15,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:16,044 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:14.716" endtime="20200703 18:10:19.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:10:19.679" level="INFO">2020-07-03 18:10:15,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:16,044 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:10:16,045 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:10:16,168 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qa5mmzxprt
2020-07-03 18:10:16,184 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:16,962 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-03 18:10:17,040 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-03 18:10:17,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:17,507 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-03 18:10:18,189 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:19,190 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:10:19,322 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1126.451769, max=1126.451769, mean=1126.451769, stddev=0.0, median=1126.451769, p75=1126.451769, p95=1126.451769, p98=1126.451769, p99=1126.451769, p999=1126.451769, mean_rate=0.4459406472610965, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:10:19,322 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-03 18:10:19,325 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:10:19,325 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:10:19.678" endtime="20200703 18:10:19.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:10:19.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:10:19.679" endtime="20200703 18:10:19.679"></status>
</kw>
<msg timestamp="20200703 18:10:19.680" level="INFO">${result} = 2020-07-03 18:10:15,848 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:16,044 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:14.716" endtime="20200703 18:10:19.680"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:10:19.680" endtime="20200703 18:10:19.681"></status>
</kw>
<status status="PASS" starttime="20200703 18:10:19.680" endtime="20200703 18:10:19.681"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:10:14.715" endtime="20200703 18:10:19.681" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:10:19.684" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:10:23.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:10:23.413" level="INFO">${output} = 2020-07-03 18:10:21,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:21,160 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:19.682" endtime="20200703 18:10:23.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:10:23.414" level="INFO">2020-07-03 18:10:21,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:21,160 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:10:21,161 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:10:21,335 [main] INFO freon.BaseFreonGenerator: Executing test with prefix g8zv0ye4dq
2020-07-03 18:10:21,359 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:22,366 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:10:23,313 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=84.608795, max=84.608795, mean=84.608795, stddev=0.0, median=84.608795, p75=84.608795, p95=84.608795, p98=84.608795, p99=84.608795, p999=84.608795, mean_rate=0.8936638132856899, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:10:23,314 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-03 18:10:23,314 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:10:23,314 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:10:23.413" endtime="20200703 18:10:23.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:10:23.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:10:23.414" endtime="20200703 18:10:23.415"></status>
</kw>
<msg timestamp="20200703 18:10:23.415" level="INFO">${result} = 2020-07-03 18:10:21,025 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:21,160 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:19.682" endtime="20200703 18:10:23.415"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:10:23.415" endtime="20200703 18:10:23.416"></status>
</kw>
<status status="PASS" starttime="20200703 18:10:23.415" endtime="20200703 18:10:23.416"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:10:19.681" endtime="20200703 18:10:23.416" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200703 18:10:23.419" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200703 18:10:26.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200703 18:10:26.954" level="INFO">${output} = 2020-07-03 18:10:24,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:24,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:23.417" endtime="20200703 18:10:26.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200703 18:10:26.955" level="INFO">2020-07-03 18:10:24,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:24,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-03 18:10:24,707 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-03 18:10:24,869 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zl5ak4ggxf
2020-07-03 18:10:24,890 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-03 18:10:25,891 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-03 18:10:26,906 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.47199, max=19.47199, mean=19.47199, stddev=0.0, median=19.47199, p75=19.47199, p95=19.47199, p98=19.47199, p99=19.47199, p999=19.47199, mean_rate=0.8784581069987485, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-03 18:10:26,907 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-03 18:10:26,907 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-03 18:10:26,907 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200703 18:10:26.955" endtime="20200703 18:10:26.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200703 18:10:26.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200703 18:10:26.956" endtime="20200703 18:10:26.956"></status>
</kw>
<msg timestamp="20200703 18:10:26.956" level="INFO">${result} = 2020-07-03 18:10:24,557 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-03 18:10:24,707 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200703 18:10:23.417" endtime="20200703 18:10:26.956"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200703 18:10:26.957" endtime="20200703 18:10:26.957"></status>
</kw>
<status status="PASS" starttime="20200703 18:10:26.957" endtime="20200703 18:10:26.957"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200703 18:10:23.416" endtime="20200703 18:10:26.957" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200703 18:10:06.771" endtime="20200703 18:10:26.959"></status>
</suite>
<status status="PASS" starttime="20200703 18:10:06.751" endtime="20200703 18:10:26.961"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
