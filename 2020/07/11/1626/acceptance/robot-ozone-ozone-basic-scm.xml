<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 13:07:17.800" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200711 13:07:17.862" endtime="20200711 13:07:17.863"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:07:17.868" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:07:17.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:07:17.980" level="INFO">${output} = HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:07:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 11 Jul 2020 12:35:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200711 13:07:17.863" endtime="20200711 13:07:17.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:07:17.981" level="INFO">HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:07:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 11 Jul 2020 12:35:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200711 13:07:17.981" endtime="20200711 13:07:17.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:07:17.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:07:17.982" endtime="20200711 13:07:17.982"></status>
</kw>
<msg timestamp="20200711 13:07:17.983" level="INFO">${result} = HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:07:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Sat, 11 Jul 2020 12:35:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200711 13:07:17.863" endtime="20200711 13:07:17.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200711 13:07:17.983" endtime="20200711 13:07:17.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:07:17.861" endtime="20200711 13:07:17.983" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:07:17.985" endtime="20200711 13:07:17.986"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:07:17.989" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:16.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:16.194" level="INFO">${output} = 2020-07-11 13:07:19,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:07:19,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:07:17.986" endtime="20200711 13:08:16.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:16.195" level="INFO">2020-07-11 13:07:19,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:07:19,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:07:19,993 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:07:21,968 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 13:07:21,969 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-11 13:07:21,978 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-11 13:07:21,980 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 13:07:21,988 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-11 13:07:22,033 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-95637, with hadoop as owner.
2020-07-11 13:07:22,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-16175, with hadoop as owner.
2020-07-11 13:07:22,338 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-91578, with hadoop as owner.
2020-07-11 13:07:22,344 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-06802, with hadoop as owner.
2020-07-11 13:07:22,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-37079, with hadoop as owner.
2020-07-11 13:07:22,364 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95637/bucket-0-30461, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,448 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16175/bucket-0-95892, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,453 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91578/bucket-0-85417, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,460 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06802/bucket-0-40999, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,465 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-37079/bucket-0-43155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,469 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95637/bucket-1-87780, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,473 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16175/bucket-1-13420, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,476 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91578/bucket-1-18660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,480 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06802/bucket-1-91257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,487 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-37079/bucket-1-85537, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,492 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95637/bucket-2-12132, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,497 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16175/bucket-2-10175, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,502 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91578/bucket-2-45600, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,506 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06802/bucket-2-39513, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-37079/bucket-2-05424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,515 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95637/bucket-3-55599, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,520 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16175/bucket-3-96930, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,534 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91578/bucket-3-45430, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,544 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06802/bucket-3-38355, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,547 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-37079/bucket-3-63783, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,553 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-95637/bucket-4-29900, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,558 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-16175/bucket-4-44156, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,564 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-91578/bucket-4-31314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,569 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06802/bucket-4-75142, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,574 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-37079/bucket-4-49129, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:07:22,990 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-11 13:07:23,714 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:07:23,990 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-11 13:07:24,991 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-11 13:07:25,992 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-11 13:07:26,993 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-11 13:07:27,993 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-11 13:07:28,994 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-07-11 13:07:29,994 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-07-11 13:07:30,996 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-11 13:07:31,997 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-11 13:07:32,997 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-11 13:07:34,001 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-07-11 13:07:35,002 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-07-11 13:07:36,002 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-07-11 13:07:37,003 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-11 13:07:38,003 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-11 13:07:39,004 [Thread-7] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2020-07-11 13:07:40,004 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-07-11 13:07:41,004 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-07-11 13:07:42,005 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-07-11 13:07:43,005 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-11 13:07:44,006 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-11 13:07:45,006 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-07-11 13:07:46,007 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-11 13:07:47,007 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-11 13:07:48,008 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-07-11 13:07:49,008 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-07-11 13:07:50,009 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-11 13:07:51,009 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-11 13:07:52,010 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-07-11 13:07:53,011 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-11 13:07:54,011 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-11 13:07:55,011 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-07-11 13:07:56,012 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-11 13:07:57,013 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-11 13:07:58,013 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-11 13:07:59,013 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-07-11 13:08:00,014 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-07-11 13:08:01,016 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-07-11 13:08:02,019 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-07-11 13:08:03,020 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-11 13:08:04,021 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-07-11 13:08:05,021 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-11 13:08:06,022 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-11 13:08:07,022 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-07-11 13:08:08,022 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-07-11 13:08:09,023 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-07-11 13:08:10,023 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-07-11 13:08:11,024 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,344
Average Time spent in bucket creation: 00:00:00,149
Average Time spent in key creation: 00:00:01,954
Average Time spent in key write: 00:00:00,999
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:55,667
***************************************************</msg>
<status status="PASS" starttime="20200711 13:08:16.194" endtime="20200711 13:08:16.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:16.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:16.195" endtime="20200711 13:08:16.196"></status>
</kw>
<msg timestamp="20200711 13:08:16.196" level="INFO">${result} = 2020-07-11 13:07:19,790 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:07:19,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:07:17.986" endtime="20200711 13:08:16.196"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:16.197" endtime="20200711 13:08:16.198"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:16.197" endtime="20200711 13:08:16.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:16.198" endtime="20200711 13:08:16.198"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:07:17.984" endtime="20200711 13:08:16.199" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200711 13:07:17.832" endtime="20200711 13:08:16.200"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200711 13:08:16.207" level="INFO">${random} = 87929</msg>
<status status="PASS" starttime="20200711 13:08:16.207" endtime="20200711 13:08:16.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200711 13:08:16.208" level="INFO">${prefix} = 87929</msg>
<status status="PASS" starttime="20200711 13:08:16.207" endtime="20200711 13:08:16.208"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:16.206" endtime="20200711 13:08:16.208"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:16.208" endtime="20200711 13:08:16.209"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:16.211" level="INFO">Running command 'ozone sh volume info o3://om:9862/87929-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:19.009" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:08:19.009" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87929-rpcwoport is not found</msg>
<status status="PASS" starttime="20200711 13:08:16.210" endtime="20200711 13:08:19.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:19.010" level="INFO">VOLUME_NOT_FOUND Volume 87929-rpcwoport is not found</msg>
<status status="PASS" starttime="20200711 13:08:19.009" endtime="20200711 13:08:19.010"></status>
</kw>
<msg timestamp="20200711 13:08:19.011" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87929-rpcwoport is not found</msg>
<status status="PASS" starttime="20200711 13:08:16.209" endtime="20200711 13:08:19.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:19.011" endtime="20200711 13:08:19.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:19.014" level="INFO">Running command 'ozone sh volume create o3://om:9862/87929-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:21.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:21.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:19.012" endtime="20200711 13:08:21.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:21.599" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:21.598" endtime="20200711 13:08:21.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:21.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:21.599" endtime="20200711 13:08:21.600"></status>
</kw>
<msg timestamp="20200711 13:08:21.600" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:08:19.011" endtime="20200711 13:08:21.600"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:21.600" endtime="20200711 13:08:21.601"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:21.605" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="87929-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:24.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:24.521" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200711 13:08:21.602" endtime="20200711 13:08:24.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:24.522" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:08:24.522" endtime="20200711 13:08:24.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:24.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:24.523" endtime="20200711 13:08:24.523"></status>
</kw>
<msg timestamp="20200711 13:08:24.523" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200711 13:08:21.601" endtime="20200711 13:08:24.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:24.523" endtime="20200711 13:08:24.524"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:24.528" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87929-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:27.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:27.390" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200711 13:08:24.524" endtime="20200711 13:08:27.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:27.391" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:08:27.390" endtime="20200711 13:08:27.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:27.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:27.391" endtime="20200711 13:08:27.391"></status>
</kw>
<msg timestamp="20200711 13:08:27.392" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:08:21.443Z",
  "modificationTime": "2020-07-11T13:08:21.443Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200711 13:08:24.524" endtime="20200711 13:08:27.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:27.392" endtime="20200711 13:08:27.392"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:27.395" level="INFO">Running command 'ozone sh volume update o3://om:9862/87929-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:30.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:30.128" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87929-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:08:21.443Z",
  "modificationTime" : "2020-07-11T13:08:29.815Z",
  "acl...</msg>
<status status="PASS" starttime="20200711 13:08:27.393" endtime="20200711 13:08:30.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:30.129" level="INFO">{
  "metadata" : { },
  "name" : "87929-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:08:21.443Z",
  "modificationTime" : "2020-07-11T13:08:29.815Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200711 13:08:30.129" endtime="20200711 13:08:30.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:30.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:30.130" endtime="20200711 13:08:30.130"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:27.392" endtime="20200711 13:08:30.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:30.133" level="INFO">Running command 'ozone sh volume info o3://om:9862/87929-rpcwoport | jq -r '. | select(.name=="87929-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:32.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:32.927" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:08:30.131" endtime="20200711 13:08:32.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:32.929" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200711 13:08:32.928" endtime="20200711 13:08:32.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:32.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:32.929" endtime="20200711 13:08:32.929"></status>
</kw>
<msg timestamp="20200711 13:08:32.930" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:08:30.130" endtime="20200711 13:08:32.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:32.930" endtime="20200711 13:08:32.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:32.933" level="INFO">Running command 'ozone sh bucket create o3://om:9862/87929-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:35.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:35.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:32.931" endtime="20200711 13:08:35.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:35.601" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:35.600" endtime="20200711 13:08:35.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:35.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:35.601" endtime="20200711 13:08:35.602"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:32.930" endtime="20200711 13:08:35.602"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:35.606" level="INFO">Running command 'ozone sh bucket info o3://om:9862/87929-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:38.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:38.320" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200711 13:08:35.603" endtime="20200711 13:08:38.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:38.322" level="INFO">DISK</msg>
<status status="PASS" starttime="20200711 13:08:38.321" endtime="20200711 13:08:38.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:38.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:38.322" endtime="20200711 13:08:38.323"></status>
</kw>
<msg timestamp="20200711 13:08:38.323" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200711 13:08:35.603" endtime="20200711 13:08:38.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:38.323" endtime="20200711 13:08:38.324"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:38.326" level="INFO">Running command 'ozone sh bucket list o3://om:9862/87929-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:41.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:41.367" level="INFO">${output} = 87929-rpcwoport</msg>
<status status="PASS" starttime="20200711 13:08:38.324" endtime="20200711 13:08:41.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:41.368" level="INFO">87929-rpcwoport</msg>
<status status="PASS" starttime="20200711 13:08:41.367" endtime="20200711 13:08:41.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:41.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:41.368" endtime="20200711 13:08:41.369"></status>
</kw>
<msg timestamp="20200711 13:08:41.369" level="INFO">${result} = 87929-rpcwoport</msg>
<status status="PASS" starttime="20200711 13:08:38.324" endtime="20200711 13:08:41.369"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200711 13:08:41.369" endtime="20200711 13:08:41.370"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:41.376" level="INFO">Running command 'ozone sh key put o3://om:9862/87929-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:45.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:45.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:41.373" endtime="20200711 13:08:45.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:45.949" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:45.948" endtime="20200711 13:08:45.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:45.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:45.949" endtime="20200711 13:08:45.950"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:41.371" endtime="20200711 13:08:45.950"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:45.952" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:45.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:45.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:45.951" endtime="20200711 13:08:45.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:45.955" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:45.955" endtime="20200711 13:08:45.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:45.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:45.956" endtime="20200711 13:08:45.956"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:45.950" endtime="20200711 13:08:45.956"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:45.959" level="INFO">Running command 'ozone sh key get o3://om:9862/87929-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:50.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:50.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:45.957" endtime="20200711 13:08:50.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:50.474" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:50.473" endtime="20200711 13:08:50.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:50.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:50.474" endtime="20200711 13:08:50.475"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:45.957" endtime="20200711 13:08:50.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:50.478" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:50.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:50.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:50.476" endtime="20200711 13:08:50.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:50.483" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:50.483" endtime="20200711 13:08:50.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:50.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:50.484" endtime="20200711 13:08:50.484"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:50.476" endtime="20200711 13:08:50.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:50.488" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/87929-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:55.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:55.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:50.485" endtime="20200711 13:08:55.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:55.059" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:55.058" endtime="20200711 13:08:55.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:55.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:55.060" endtime="20200711 13:08:55.060"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:50.485" endtime="20200711 13:08:55.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:55.063" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:55.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:55.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:55.061" endtime="20200711 13:08:55.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:55.067" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:55.066" endtime="20200711 13:08:55.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:55.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:55.067" endtime="20200711 13:08:55.068"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:55.060" endtime="20200711 13:08:55.068"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:55.071" level="INFO">Running command 'ozone sh key get o3://om:9862/87929-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:59.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:59.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:55.069" endtime="20200711 13:08:59.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:59.818" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:59.817" endtime="20200711 13:08:59.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:59.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:59.818" endtime="20200711 13:08:59.819"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:55.068" endtime="20200711 13:08:59.819"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:59.821" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:08:59.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:08:59.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:08:59.819" endtime="20200711 13:08:59.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:08:59.825" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:08:59.824" endtime="20200711 13:08:59.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:08:59.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:08:59.825" endtime="20200711 13:08:59.825"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:59.819" endtime="20200711 13:08:59.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:08:59.828" level="INFO">Running command 'ozone sh key info o3://om:9862/87929-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:02.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:02.695" level="INFO">${output} = {
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:53.026Z",
  "modificationTime": "2020-07-11T13:08:54.670Z",...</msg>
<status status="PASS" starttime="20200711 13:08:59.826" endtime="20200711 13:09:02.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:02.696" level="INFO">{
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:53.026Z",
  "modificationTime": "2020-07-11T13:08:54.670Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495378138726530,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:09:02.695" endtime="20200711 13:09:02.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:02.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:02.696" endtime="20200711 13:09:02.697"></status>
</kw>
<msg timestamp="20200711 13:09:02.697" level="INFO">${result} = {
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:53.026Z",
  "modificationTime": "2020-07-11T13:08:54.670Z",...</msg>
<status status="PASS" starttime="20200711 13:08:59.826" endtime="20200711 13:09:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:02.697" endtime="20200711 13:09:02.698"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:02.701" level="INFO">Running command 'ozone sh key delete o3://om:9862/87929-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:05.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:05.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:02.699" endtime="20200711 13:09:05.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:05.926" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:05.925" endtime="20200711 13:09:05.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:05.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:05.926" endtime="20200711 13:09:05.927"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:02.698" endtime="20200711 13:09:05.927"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:05.931" level="INFO">Running command 'ozone sh key cp o3://om:9862/87929-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:11.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:11.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:05.928" endtime="20200711 13:09:11.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:11.006" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:11.005" endtime="20200711 13:09:11.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:11.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:11.006" endtime="20200711 13:09:11.007"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:05.928" endtime="20200711 13:09:11.007"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:11.011" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:11.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:11.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:11.008" endtime="20200711 13:09:11.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:11.014" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:11.013" endtime="20200711 13:09:11.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:11.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:11.014" endtime="20200711 13:09:11.015"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:11.007" endtime="20200711 13:09:11.015"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:11.018" level="INFO">Running command 'ozone sh key get o3://om:9862/87929-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:15.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:15.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:11.016" endtime="20200711 13:09:15.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:15.458" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:15.457" endtime="20200711 13:09:15.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:15.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:15.458" endtime="20200711 13:09:15.459"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:11.015" endtime="20200711 13:09:15.459"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:15.462" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:15.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:15.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:15.460" endtime="20200711 13:09:15.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:15.466" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:15.465" endtime="20200711 13:09:15.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:15.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:15.466" endtime="20200711 13:09:15.466"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:15.459" endtime="20200711 13:09:15.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:15.468" level="INFO">Running command 'ozone sh key delete o3://om:9862/87929-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:18.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:18.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:15.467" endtime="20200711 13:09:18.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:18.174" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:18.173" endtime="20200711 13:09:18.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:18.174" endtime="20200711 13:09:18.175"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:15.467" endtime="20200711 13:09:18.175"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:18.178" level="INFO">Running command 'ozone sh key get o3://om:9862/87929-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:20.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:09:20.834" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:09:18.176" endtime="20200711 13:09:20.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:20.835" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:09:20.834" endtime="20200711 13:09:20.835"></status>
</kw>
<msg timestamp="20200711 13:09:20.835" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:09:18.175" endtime="20200711 13:09:20.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:20.835" endtime="20200711 13:09:20.836"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:20.839" level="INFO">Running command 'ozone sh key get --force o3://om:9862/87929-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:25.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:25.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:20.836" endtime="20200711 13:09:25.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:25.337" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:25.336" endtime="20200711 13:09:25.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:25.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:25.337" endtime="20200711 13:09:25.338"></status>
</kw>
<msg timestamp="20200711 13:09:25.338" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:09:20.836" endtime="20200711 13:09:25.338"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:25.338" endtime="20200711 13:09:25.339"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:25.341" level="INFO">Running command 'ozone sh key info o3://om:9862/87929-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:28.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:28.226" level="INFO">${output} = {
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:43.803Z",
  "modificationTime": "2020-07-11T13:08:45.539Z",
  "re...</msg>
<status status="PASS" starttime="20200711 13:09:25.339" endtime="20200711 13:09:28.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:28.227" level="INFO">{
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:43.803Z",
  "modificationTime": "2020-07-11T13:08:45.539Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495377534353540,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:09:28.227" endtime="20200711 13:09:28.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:28.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:28.228" endtime="20200711 13:09:28.228"></status>
</kw>
<msg timestamp="20200711 13:09:28.229" level="INFO">${result} = {
  "volumeName": "87929-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:08:43.803Z",
  "modificationTime": "2020-07-11T13:08:45.539Z",
  "re...</msg>
<status status="PASS" starttime="20200711 13:09:25.339" endtime="20200711 13:09:28.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:28.229" endtime="20200711 13:09:28.229"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:28.232" level="INFO">Running command 'ozone sh key list o3://om:9862/87929-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:31.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:31.161" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200711 13:09:28.230" endtime="20200711 13:09:31.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:31.162" level="INFO">key1</msg>
<status status="PASS" starttime="20200711 13:09:31.161" endtime="20200711 13:09:31.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:31.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:31.162" endtime="20200711 13:09:31.163"></status>
</kw>
<msg timestamp="20200711 13:09:31.163" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200711 13:09:28.229" endtime="20200711 13:09:31.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:31.163" endtime="20200711 13:09:31.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:31.168" level="INFO">Running command 'ozone sh key rename o3://om:9862/87929-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:33.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:33.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:31.165" endtime="20200711 13:09:33.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:33.551" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:33.550" endtime="20200711 13:09:33.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:33.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:33.551" endtime="20200711 13:09:33.552"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:31.164" endtime="20200711 13:09:33.552"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:33.555" level="INFO">Running command 'ozone sh key list o3://om:9862/87929-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:36.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:36.445" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200711 13:09:33.552" endtime="20200711 13:09:36.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:36.446" level="INFO">key2</msg>
<status status="PASS" starttime="20200711 13:09:36.445" endtime="20200711 13:09:36.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:36.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:36.446" endtime="20200711 13:09:36.446"></status>
</kw>
<msg timestamp="20200711 13:09:36.447" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200711 13:09:33.552" endtime="20200711 13:09:36.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:36.447" endtime="20200711 13:09:36.447"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:36.450" level="INFO">Running command 'ozone sh key delete o3://om:9862/87929-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:39.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:39.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:36.448" endtime="20200711 13:09:39.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:39.039" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:39.039" endtime="20200711 13:09:39.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:39.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:39.039" endtime="20200711 13:09:39.040"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:36.447" endtime="20200711 13:09:39.041"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:41.370" endtime="20200711 13:09:39.041"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:41.370" endtime="20200711 13:09:39.041"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:39.043" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/87929-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:41.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:41.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:39.041" endtime="20200711 13:09:41.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:41.646" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:41.646" endtime="20200711 13:09:41.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:41.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:41.647" endtime="20200711 13:09:41.647"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:39.041" endtime="20200711 13:09:41.647"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:41.650" level="INFO">Running command 'ozone sh volume delete o3://om:9862/87929-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:44.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:44.346" level="INFO">${output} = Volume 87929-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200711 13:09:41.648" endtime="20200711 13:09:44.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:44.347" level="INFO">Volume 87929-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200711 13:09:44.346" endtime="20200711 13:09:44.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:44.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:44.348" endtime="20200711 13:09:44.348"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:41.648" endtime="20200711 13:09:44.348"></status>
</kw>
<status status="PASS" starttime="20200711 13:08:16.209" endtime="20200711 13:09:44.349"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:08:16.208" endtime="20200711 13:09:44.349" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:44.350" endtime="20200711 13:09:44.351"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:44.356" level="INFO">Running command 'ozone sh volume create o3://om:9862/87929-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:47.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:47.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:09:44.352" endtime="20200711 13:09:47.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:47.058" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:09:47.057" endtime="20200711 13:09:47.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:47.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:47.059" endtime="20200711 13:09:47.059"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:44.351" endtime="20200711 13:09:47.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:47.063" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87929-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:50.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:50.079" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:09:47.061" endtime="20200711 13:09:50.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:50.080" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:09:50.079" endtime="20200711 13:09:50.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:50.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:50.080" endtime="20200711 13:09:50.080"></status>
</kw>
<msg timestamp="20200711 13:09:50.081" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:09:47.060" endtime="20200711 13:09:50.081"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:50.081" endtime="20200711 13:09:50.082"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:50.084" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/87929-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:53.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:53.413" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200711 13:09:50.082" endtime="20200711 13:09:53.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:53.414" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200711 13:09:53.413" endtime="20200711 13:09:53.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:53.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:53.414" endtime="20200711 13:09:53.415"></status>
</kw>
<msg timestamp="20200711 13:09:53.416" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200711 13:09:50.082" endtime="20200711 13:09:53.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:53.418" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87929-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:56.265" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:09:53.416" endtime="20200711 13:09:56.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:56.266" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:09:56.266" endtime="20200711 13:09:56.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:56.267" endtime="20200711 13:09:56.267"></status>
</kw>
<msg timestamp="20200711 13:09:56.267" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:09:53.416" endtime="20200711 13:09:56.267"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:09:56.268" endtime="20200711 13:09:56.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:56.271" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/87929-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:09:58.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:09:58.934" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200711 13:09:56.269" endtime="20200711 13:09:58.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:09:58.935" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200711 13:09:58.934" endtime="20200711 13:09:58.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:09:58.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:09:58.936" endtime="20200711 13:09:58.936"></status>
</kw>
<msg timestamp="20200711 13:09:58.936" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200711 13:09:56.269" endtime="20200711 13:09:58.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:09:58.939" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87929-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:02.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:02.003" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:09:58.937" endtime="20200711 13:10:02.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:02.004" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:02.003" endtime="20200711 13:10:02.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:02.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:02.004" endtime="20200711 13:10:02.004"></status>
</kw>
<msg timestamp="20200711 13:10:02.005" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:09:58.937" endtime="20200711 13:10:02.005"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:02.005" endtime="20200711 13:10:02.006"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:02.009" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/87929-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:04.791" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:02.007" endtime="20200711 13:10:04.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:04.792" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:04.791" endtime="20200711 13:10:04.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:04.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:04.792" endtime="20200711 13:10:04.793"></status>
</kw>
<msg timestamp="20200711 13:10:04.793" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:02.006" endtime="20200711 13:10:04.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:04.797" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/87929-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:07.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:07.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200711 13:10:04.794" endtime="20200711 13:10:07.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:07.477" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:07.476" endtime="20200711 13:10:07.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:07.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:07.477" endtime="20200711 13:10:07.478"></status>
</kw>
<msg timestamp="20200711 13:10:07.478" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200711 13:10:04.794" endtime="20200711 13:10:07.478"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:07.478" endtime="20200711 13:10:07.479"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:07.479" endtime="20200711 13:10:07.480"></status>
</kw>
<status status="PASS" starttime="20200711 13:09:44.351" endtime="20200711 13:10:07.480"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:09:44.349" endtime="20200711 13:10:07.480" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:07.482" endtime="20200711 13:10:07.482"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:07.487" level="INFO">Running command 'ozone sh bucket create o3://om:9862/87929-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:10.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:10.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:10:07.484" endtime="20200711 13:10:10.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:10.299" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:10:10.298" endtime="20200711 13:10:10.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:10.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:10.299" endtime="20200711 13:10:10.300"></status>
</kw>
<status status="PASS" starttime="20200711 13:10:07.483" endtime="20200711 13:10:10.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:10.302" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87929-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:13.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:13.167" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:10.301" endtime="20200711 13:10:13.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:13.168" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:13.167" endtime="20200711 13:10:13.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:13.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:13.168" endtime="20200711 13:10:13.169"></status>
</kw>
<msg timestamp="20200711 13:10:13.169" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:10.300" endtime="20200711 13:10:13.169"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:13.169" endtime="20200711 13:10:13.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:13.173" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/87929-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:15.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:15.662" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200711 13:10:13.171" endtime="20200711 13:10:15.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:15.663" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200711 13:10:15.662" endtime="20200711 13:10:15.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:15.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:15.663" endtime="20200711 13:10:15.664"></status>
</kw>
<msg timestamp="20200711 13:10:15.664" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200711 13:10:13.170" endtime="20200711 13:10:15.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:15.667" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87929-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:18.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:18.584" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:15.665" endtime="20200711 13:10:18.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:18.585" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:18.584" endtime="20200711 13:10:18.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:18.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:18.585" endtime="20200711 13:10:18.586"></status>
</kw>
<msg timestamp="20200711 13:10:18.586" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:15.664" endtime="20200711 13:10:18.586"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:18.586" endtime="20200711 13:10:18.587"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:18.591" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/87929-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:21.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:21.273" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:18.588" endtime="20200711 13:10:21.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:21.274" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:21.274" endtime="20200711 13:10:21.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:21.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:21.275" endtime="20200711 13:10:21.275"></status>
</kw>
<msg timestamp="20200711 13:10:21.275" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:18.587" endtime="20200711 13:10:21.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:21.278" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87929-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:23.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:23.974" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:21.276" endtime="20200711 13:10:23.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:23.976" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:23.975" endtime="20200711 13:10:23.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:23.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:23.976" endtime="20200711 13:10:23.976"></status>
</kw>
<msg timestamp="20200711 13:10:23.977" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:21.276" endtime="20200711 13:10:23.977"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:23.977" endtime="20200711 13:10:23.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:23.981" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/87929-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:26.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:26.442" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:23.979" endtime="20200711 13:10:26.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:26.443" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:26.442" endtime="20200711 13:10:26.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:26.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:26.443" endtime="20200711 13:10:26.444"></status>
</kw>
<msg timestamp="20200711 13:10:26.444" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:23.978" endtime="20200711 13:10:26.444"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:26.448" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/87929-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:29.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:29.238" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200711 13:10:26.445" endtime="20200711 13:10:29.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:29.239" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:29.239" endtime="20200711 13:10:29.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:29.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:29.240" endtime="20200711 13:10:29.240"></status>
</kw>
<msg timestamp="20200711 13:10:29.240" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200711 13:10:26.444" endtime="20200711 13:10:29.241"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:29.241" endtime="20200711 13:10:29.241"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:29.241" endtime="20200711 13:10:29.242"></status>
</kw>
<status status="PASS" starttime="20200711 13:10:07.482" endtime="20200711 13:10:29.242"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:10:07.481" endtime="20200711 13:10:29.242" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:29.244" endtime="20200711 13:10:29.244"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:29.249" level="INFO">Running command 'ozone sh key put o3://om:9862/87929-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:33.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:33.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:10:29.246" endtime="20200711 13:10:33.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:33.739" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:10:33.738" endtime="20200711 13:10:33.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:33.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:33.739" endtime="20200711 13:10:33.740"></status>
</kw>
<status status="PASS" starttime="20200711 13:10:29.245" endtime="20200711 13:10:33.740"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:33.743" level="INFO">Running command 'ozone sh key getacl o3://om:9862/87929-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:36.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:36.446" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:33.741" endtime="20200711 13:10:36.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:36.447" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:36.447" endtime="20200711 13:10:36.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:36.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:36.448" endtime="20200711 13:10:36.448"></status>
</kw>
<msg timestamp="20200711 13:10:36.449" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:33.740" endtime="20200711 13:10:36.449"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:36.449" endtime="20200711 13:10:36.450"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:36.453" level="INFO">Running command 'ozone sh key addacl o3://om:9862/87929-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:39.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:39.129" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200711 13:10:36.451" endtime="20200711 13:10:39.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:39.130" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200711 13:10:39.129" endtime="20200711 13:10:39.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:39.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:39.130" endtime="20200711 13:10:39.131"></status>
</kw>
<msg timestamp="20200711 13:10:39.131" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200711 13:10:36.450" endtime="20200711 13:10:39.131"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:39.133" level="INFO">Running command 'ozone sh key getacl o3://om:9862/87929-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:42.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:42.062" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:39.132" endtime="20200711 13:10:42.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:42.064" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:42.063" endtime="20200711 13:10:42.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:42.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:42.064" endtime="20200711 13:10:42.065"></status>
</kw>
<msg timestamp="20200711 13:10:42.065" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:39.131" endtime="20200711 13:10:42.065"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:42.065" endtime="20200711 13:10:42.066"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:42.069" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/87929-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:44.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:44.662" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:42.067" endtime="20200711 13:10:44.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:44.663" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:44.663" endtime="20200711 13:10:44.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:44.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:44.663" endtime="20200711 13:10:44.664"></status>
</kw>
<msg timestamp="20200711 13:10:44.664" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200711 13:10:42.066" endtime="20200711 13:10:44.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:44.667" level="INFO">Running command 'ozone sh key getacl o3://om:9862/87929-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:47.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:47.529" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:44.665" endtime="20200711 13:10:47.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:47.530" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:47.529" endtime="20200711 13:10:47.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:47.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:47.530" endtime="20200711 13:10:47.531"></status>
</kw>
<msg timestamp="20200711 13:10:47.531" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200711 13:10:44.664" endtime="20200711 13:10:47.531"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:47.531" endtime="20200711 13:10:47.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:47.535" level="INFO">Running command 'ozone sh key setacl o3://om:9862/87929-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:49.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:49.983" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:47.532" endtime="20200711 13:10:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:49.984" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:49.984" endtime="20200711 13:10:49.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:49.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:49.985" endtime="20200711 13:10:49.985"></status>
</kw>
<msg timestamp="20200711 13:10:49.985" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200711 13:10:47.532" endtime="20200711 13:10:49.985"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:49.988" level="INFO">Running command 'ozone sh key getacl o3://om:9862/87929-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:52.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:52.676" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200711 13:10:49.986" endtime="20200711 13:10:52.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:52.677" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200711 13:10:52.677" endtime="20200711 13:10:52.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:52.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:52.678" endtime="20200711 13:10:52.678"></status>
</kw>
<msg timestamp="20200711 13:10:52.678" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200711 13:10:49.986" endtime="20200711 13:10:52.678"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:52.679" endtime="20200711 13:10:52.679"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:52.679" endtime="20200711 13:10:52.680"></status>
</kw>
<status status="PASS" starttime="20200711 13:10:29.245" endtime="20200711 13:10:52.680"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:10:29.243" endtime="20200711 13:10:52.680" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:52.682" endtime="20200711 13:10:52.682"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:52.686" level="INFO">Running command 'ozone sh volume info o3:///87929-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:55.310" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:10:55.310" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87929-rpcwport is not found</msg>
<status status="PASS" starttime="20200711 13:10:52.684" endtime="20200711 13:10:55.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:55.311" level="INFO">VOLUME_NOT_FOUND Volume 87929-rpcwport is not found</msg>
<status status="PASS" starttime="20200711 13:10:55.311" endtime="20200711 13:10:55.312"></status>
</kw>
<msg timestamp="20200711 13:10:55.312" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87929-rpcwport is not found</msg>
<status status="PASS" starttime="20200711 13:10:52.683" endtime="20200711 13:10:55.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:55.313" endtime="20200711 13:10:55.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:55.316" level="INFO">Running command 'ozone sh volume create o3:///87929-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:10:57.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:10:57.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:10:55.313" endtime="20200711 13:10:57.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:10:57.807" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:10:57.806" endtime="20200711 13:10:57.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:10:57.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:10:57.807" endtime="20200711 13:10:57.808"></status>
</kw>
<msg timestamp="20200711 13:10:57.808" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:10:55.313" endtime="20200711 13:10:57.808"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200711 13:10:57.808" endtime="20200711 13:10:57.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:10:57.813" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="87929-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:00.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:00.396" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200711 13:10:57.810" endtime="20200711 13:11:00.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:00.397" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:11:00.396" endtime="20200711 13:11:00.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:00.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:00.397" endtime="20200711 13:11:00.397"></status>
</kw>
<msg timestamp="20200711 13:11:00.398" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200711 13:10:57.809" endtime="20200711 13:11:00.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:00.398" endtime="20200711 13:11:00.398"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:00.401" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87929-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:03.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:03.250" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200711 13:11:00.399" endtime="20200711 13:11:03.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:03.251" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:11:03.250" endtime="20200711 13:11:03.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:03.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:03.251" endtime="20200711 13:11:03.252"></status>
</kw>
<msg timestamp="20200711 13:11:03.252" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:10:57.746Z",
  "modificationTime": "2020-07-11T13:10:57.746Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200711 13:11:00.398" endtime="20200711 13:11:03.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:03.252" endtime="20200711 13:11:03.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:03.256" level="INFO">Running command 'ozone sh volume update o3:///87929-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:06.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:06.007" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87929-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:10:57.746Z",
  "modificationTime" : "2020-07-11T13:11:05.584Z",
  "acls...</msg>
<status status="PASS" starttime="20200711 13:11:03.253" endtime="20200711 13:11:06.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:06.009" level="INFO">{
  "metadata" : { },
  "name" : "87929-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:10:57.746Z",
  "modificationTime" : "2020-07-11T13:11:05.584Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200711 13:11:06.008" endtime="20200711 13:11:06.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:06.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:06.009" endtime="20200711 13:11:06.009"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:03.253" endtime="20200711 13:11:06.010"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:06.013" level="INFO">Running command 'ozone sh volume info o3:///87929-rpcwport | jq -r '. | select(.name=="87929-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:08.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:08.889" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:11:06.011" endtime="20200711 13:11:08.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:08.891" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200711 13:11:08.890" endtime="20200711 13:11:08.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:08.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:08.891" endtime="20200711 13:11:08.891"></status>
</kw>
<msg timestamp="20200711 13:11:08.892" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:11:06.010" endtime="20200711 13:11:08.892"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:08.892" endtime="20200711 13:11:08.892"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:08.895" level="INFO">Running command 'ozone sh bucket create o3:///87929-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:11.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:11.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:08.893" endtime="20200711 13:11:11.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:11.581" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:11.581" endtime="20200711 13:11:11.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:11.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:11.581" endtime="20200711 13:11:11.582"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:08.892" endtime="20200711 13:11:11.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:11.587" level="INFO">Running command 'ozone sh bucket info o3:///87929-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:14.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:14.499" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200711 13:11:11.583" endtime="20200711 13:11:14.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:14.500" level="INFO">DISK</msg>
<status status="PASS" starttime="20200711 13:11:14.499" endtime="20200711 13:11:14.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:14.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:14.501" endtime="20200711 13:11:14.501"></status>
</kw>
<msg timestamp="20200711 13:11:14.501" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200711 13:11:11.583" endtime="20200711 13:11:14.501"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:14.502" endtime="20200711 13:11:14.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:14.506" level="INFO">Running command 'ozone sh bucket list o3:///87929-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:17.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:17.475" level="INFO">${output} = 87929-rpcwport</msg>
<status status="PASS" starttime="20200711 13:11:14.503" endtime="20200711 13:11:17.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:17.476" level="INFO">87929-rpcwport</msg>
<status status="PASS" starttime="20200711 13:11:17.476" endtime="20200711 13:11:17.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:17.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:17.476" endtime="20200711 13:11:17.477"></status>
</kw>
<msg timestamp="20200711 13:11:17.477" level="INFO">${result} = 87929-rpcwport</msg>
<status status="PASS" starttime="20200711 13:11:14.502" endtime="20200711 13:11:17.477"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:17.477" endtime="20200711 13:11:17.478"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:17.482" level="INFO">Running command 'ozone sh key put o3:///87929-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:22.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:22.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:17.479" endtime="20200711 13:11:22.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:22.445" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:22.444" endtime="20200711 13:11:22.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:22.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:22.445" endtime="20200711 13:11:22.446"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:17.479" endtime="20200711 13:11:22.446"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:22.449" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:22.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:22.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:22.446" endtime="20200711 13:11:22.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:22.452" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:22.451" endtime="20200711 13:11:22.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:22.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:22.452" endtime="20200711 13:11:22.453"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:22.446" endtime="20200711 13:11:22.453"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:22.455" level="INFO">Running command 'ozone sh key get o3:///87929-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:27.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:27.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:22.453" endtime="20200711 13:11:27.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:27.027" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:27.026" endtime="20200711 13:11:27.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:27.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:27.027" endtime="20200711 13:11:27.027"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:22.453" endtime="20200711 13:11:27.028"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:27.030" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:27.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:27.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:27.028" endtime="20200711 13:11:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:27.033" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:27.033" endtime="20200711 13:11:27.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:27.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:27.033" endtime="20200711 13:11:27.034"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:27.028" endtime="20200711 13:11:27.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:27.036" level="INFO">Running command 'ozone sh key put -t RATIS o3:///87929-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:31.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:31.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:27.035" endtime="20200711 13:11:31.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:31.741" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:31.740" endtime="20200711 13:11:31.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:31.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:31.741" endtime="20200711 13:11:31.742"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:27.034" endtime="20200711 13:11:31.742"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:31.745" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:31.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:31.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:31.743" endtime="20200711 13:11:31.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:31.748" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:31.748" endtime="20200711 13:11:31.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:31.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:31.749" endtime="20200711 13:11:31.749"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:31.742" endtime="20200711 13:11:31.749"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:31.752" level="INFO">Running command 'ozone sh key get o3:///87929-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:36.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:36.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:31.750" endtime="20200711 13:11:36.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:36.052" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:36.052" endtime="20200711 13:11:36.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:36.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:36.053" endtime="20200711 13:11:36.053"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:31.750" endtime="20200711 13:11:36.053"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:36.056" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:36.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:36.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:36.054" endtime="20200711 13:11:36.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:36.061" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:36.060" endtime="20200711 13:11:36.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:36.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:36.061" endtime="20200711 13:11:36.061"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:36.054" endtime="20200711 13:11:36.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:36.066" level="INFO">Running command 'ozone sh key info o3:///87929-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:39.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:39.030" level="INFO">${output} = {
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:29.523Z",
  "modificationTime": "2020-07-11T13:11:31.368Z",
...</msg>
<status status="PASS" starttime="20200711 13:11:36.063" endtime="20200711 13:11:39.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:39.031" level="INFO">{
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:29.523Z",
  "modificationTime": "2020-07-11T13:11:31.368Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495388394848380,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:11:39.030" endtime="20200711 13:11:39.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:39.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:39.031" endtime="20200711 13:11:39.032"></status>
</kw>
<msg timestamp="20200711 13:11:39.032" level="INFO">${result} = {
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:29.523Z",
  "modificationTime": "2020-07-11T13:11:31.368Z",
...</msg>
<status status="PASS" starttime="20200711 13:11:36.062" endtime="20200711 13:11:39.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:39.032" endtime="20200711 13:11:39.032"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:39.035" level="INFO">Running command 'ozone sh key delete o3:///87929-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:41.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:41.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:39.033" endtime="20200711 13:11:41.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:41.624" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:41.623" endtime="20200711 13:11:41.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:41.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:41.624" endtime="20200711 13:11:41.625"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:39.032" endtime="20200711 13:11:41.625"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:41.628" level="INFO">Running command 'ozone sh key cp o3:///87929-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:46.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:46.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:41.626" endtime="20200711 13:11:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:46.547" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:46.546" endtime="20200711 13:11:46.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:46.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:46.547" endtime="20200711 13:11:46.548"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:41.625" endtime="20200711 13:11:46.548"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:46.551" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:46.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:46.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:46.549" endtime="20200711 13:11:46.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:46.554" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:46.553" endtime="20200711 13:11:46.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:46.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:46.554" endtime="20200711 13:11:46.555"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:46.548" endtime="20200711 13:11:46.555"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:46.557" level="INFO">Running command 'ozone sh key get o3:///87929-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:51.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:51.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:46.556" endtime="20200711 13:11:51.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:51.225" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:51.224" endtime="20200711 13:11:51.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:51.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:51.225" endtime="20200711 13:11:51.226"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:46.555" endtime="20200711 13:11:51.226"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:51.229" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:51.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:51.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:51.227" endtime="20200711 13:11:51.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:51.233" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:51.232" endtime="20200711 13:11:51.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:51.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:51.233" endtime="20200711 13:11:51.234"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:51.226" endtime="20200711 13:11:51.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:51.239" level="INFO">Running command 'ozone sh key delete o3:///87929-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:53.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:11:53.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:51.235" endtime="20200711 13:11:53.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:53.880" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:11:53.879" endtime="20200711 13:11:53.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:11:53.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:11:53.880" endtime="20200711 13:11:53.881"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:51.234" endtime="20200711 13:11:53.881"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:53.884" level="INFO">Running command 'ozone sh key get o3:///87929-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:11:56.444" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:11:56.445" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:11:53.882" endtime="20200711 13:11:56.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:11:56.446" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:11:56.445" endtime="20200711 13:11:56.446"></status>
</kw>
<msg timestamp="20200711 13:11:56.446" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:11:53.881" endtime="20200711 13:11:56.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:11:56.446" endtime="20200711 13:11:56.447"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:11:56.450" level="INFO">Running command 'ozone sh key get --force o3:///87929-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:00.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:00.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:11:56.447" endtime="20200711 13:12:00.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:00.802" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:00.802" endtime="20200711 13:12:00.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:00.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:00.803" endtime="20200711 13:12:00.803"></status>
</kw>
<msg timestamp="20200711 13:12:00.803" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:11:56.447" endtime="20200711 13:12:00.804"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:00.804" endtime="20200711 13:12:00.804"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:00.807" level="INFO">Running command 'ozone sh key info o3:///87929-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:03.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:03.733" level="INFO">${output} = {
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:20.259Z",
  "modificationTime": "2020-07-11T13:11:21.976Z",
  "rep...</msg>
<status status="PASS" starttime="20200711 13:12:00.805" endtime="20200711 13:12:03.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:03.734" level="INFO">{
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:20.259Z",
  "modificationTime": "2020-07-11T13:11:21.976Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495387787788420,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:12:03.733" endtime="20200711 13:12:03.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:03.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:03.735" endtime="20200711 13:12:03.735"></status>
</kw>
<msg timestamp="20200711 13:12:03.735" level="INFO">${result} = {
  "volumeName": "87929-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:11:20.259Z",
  "modificationTime": "2020-07-11T13:11:21.976Z",
  "rep...</msg>
<status status="PASS" starttime="20200711 13:12:00.804" endtime="20200711 13:12:03.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:03.736" endtime="20200711 13:12:03.736"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:03.739" level="INFO">Running command 'ozone sh key list o3:///87929-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:06.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:06.822" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200711 13:12:03.737" endtime="20200711 13:12:06.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:06.823" level="INFO">key1</msg>
<status status="PASS" starttime="20200711 13:12:06.822" endtime="20200711 13:12:06.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:06.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:06.823" endtime="20200711 13:12:06.824"></status>
</kw>
<msg timestamp="20200711 13:12:06.824" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200711 13:12:03.736" endtime="20200711 13:12:06.824"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:06.824" endtime="20200711 13:12:06.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:06.828" level="INFO">Running command 'ozone sh key rename o3:///87929-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:09.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:09.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:06.825" endtime="20200711 13:12:09.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:09.605" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:09.604" endtime="20200711 13:12:09.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:09.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:09.606" endtime="20200711 13:12:09.606"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:06.825" endtime="20200711 13:12:09.606"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:09.610" level="INFO">Running command 'ozone sh key list o3:///87929-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:12.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:12.588" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200711 13:12:09.607" endtime="20200711 13:12:12.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:12.590" level="INFO">key2</msg>
<status status="PASS" starttime="20200711 13:12:12.589" endtime="20200711 13:12:12.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:12.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:12.590" endtime="20200711 13:12:12.590"></status>
</kw>
<msg timestamp="20200711 13:12:12.591" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200711 13:12:09.607" endtime="20200711 13:12:12.591"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:12.591" endtime="20200711 13:12:12.591"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:12.594" level="INFO">Running command 'ozone sh key delete o3:///87929-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:15.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:15.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:12.592" endtime="20200711 13:12:15.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:15.207" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:15.206" endtime="20200711 13:12:15.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:15.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:15.207" endtime="20200711 13:12:15.207"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:12.592" endtime="20200711 13:12:15.208"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:17.478" endtime="20200711 13:12:15.208"></status>
</kw>
<status status="PASS" starttime="20200711 13:11:17.478" endtime="20200711 13:12:15.208"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:15.212" level="INFO">Running command 'ozone sh bucket delete o3:///87929-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:17.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:17.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:15.209" endtime="20200711 13:12:17.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:17.919" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:17.919" endtime="20200711 13:12:17.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:17.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:17.920" endtime="20200711 13:12:17.920"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:15.208" endtime="20200711 13:12:17.921"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:17.923" level="INFO">Running command 'ozone sh volume delete o3:///87929-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:20.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:20.400" level="INFO">${output} = Volume 87929-rpcwport is deleted</msg>
<status status="PASS" starttime="20200711 13:12:17.921" endtime="20200711 13:12:20.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:20.401" level="INFO">Volume 87929-rpcwport is deleted</msg>
<status status="PASS" starttime="20200711 13:12:20.401" endtime="20200711 13:12:20.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:20.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:20.402" endtime="20200711 13:12:20.402"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:17.921" endtime="20200711 13:12:20.402"></status>
</kw>
<status status="PASS" starttime="20200711 13:10:52.682" endtime="20200711 13:12:20.403"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:10:52.681" endtime="20200711 13:12:20.403" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:20.405" endtime="20200711 13:12:20.405"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:20.409" level="INFO">Running command 'ozone sh volume info /87929-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:23.130" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:12:23.131" level="INFO">${output} = VOLUME_NOT_FOUND Volume 87929-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200711 13:12:20.406" endtime="20200711 13:12:23.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:23.132" level="INFO">VOLUME_NOT_FOUND Volume 87929-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200711 13:12:23.131" endtime="20200711 13:12:23.132"></status>
</kw>
<msg timestamp="20200711 13:12:23.132" level="INFO">${result} = VOLUME_NOT_FOUND Volume 87929-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200711 13:12:20.406" endtime="20200711 13:12:23.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:23.132" endtime="20200711 13:12:23.133"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:23.135" level="INFO">Running command 'ozone sh volume create /87929-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:25.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:25.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:23.133" endtime="20200711 13:12:25.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:25.838" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:25.837" endtime="20200711 13:12:25.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:25.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:25.838" endtime="20200711 13:12:25.838"></status>
</kw>
<msg timestamp="20200711 13:12:25.839" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:12:23.133" endtime="20200711 13:12:25.839"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:25.839" endtime="20200711 13:12:25.839"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:25.842" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="87929-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:28.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:28.622" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200711 13:12:25.840" endtime="20200711 13:12:28.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:28.624" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:12:28.623" endtime="20200711 13:12:28.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:28.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:28.624" endtime="20200711 13:12:28.625"></status>
</kw>
<msg timestamp="20200711 13:12:28.625" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200711 13:12:25.839" endtime="20200711 13:12:28.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:28.625" endtime="20200711 13:12:28.626"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:28.628" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="87929-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:31.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:31.645" level="INFO">${output} = {
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200711 13:12:28.626" endtime="20200711 13:12:31.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:31.646" level="INFO">{
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200711 13:12:31.646" endtime="20200711 13:12:31.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:31.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:31.647" endtime="20200711 13:12:31.647"></status>
</kw>
<msg timestamp="20200711 13:12:31.648" level="INFO">${result} = {
  "metadata": {},
  "name": "87929-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-11T13:12:25.675Z",
  "modificationTime": "2020-07-11T13:12:25.675Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200711 13:12:28.626" endtime="20200711 13:12:31.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:31.648" endtime="20200711 13:12:31.648"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:31.652" level="INFO">Running command 'ozone sh volume update /87929-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:34.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:34.452" level="INFO">${output} = {
  "metadata" : { },
  "name" : "87929-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:12:25.675Z",
  "modificationTime" : "2020-07-11T13:12:34.108Z",
  "a...</msg>
<status status="PASS" starttime="20200711 13:12:31.649" endtime="20200711 13:12:34.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:34.453" level="INFO">{
  "metadata" : { },
  "name" : "87929-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-11T13:12:25.675Z",
  "modificationTime" : "2020-07-11T13:12:34.108Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200711 13:12:34.452" endtime="20200711 13:12:34.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:34.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:34.453" endtime="20200711 13:12:34.454"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:31.648" endtime="20200711 13:12:34.454"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:34.457" level="INFO">Running command 'ozone sh volume info /87929-rpcwoscheme | jq -r '. | select(.name=="87929-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:37.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:37.273" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:12:34.455" endtime="20200711 13:12:37.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:37.274" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200711 13:12:37.273" endtime="20200711 13:12:37.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:37.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:37.274" endtime="20200711 13:12:37.274"></status>
</kw>
<msg timestamp="20200711 13:12:37.275" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200711 13:12:34.454" endtime="20200711 13:12:37.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:37.275" endtime="20200711 13:12:37.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:37.278" level="INFO">Running command 'ozone sh bucket create /87929-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:39.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:39.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:37.276" endtime="20200711 13:12:39.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:39.965" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:39.964" endtime="20200711 13:12:39.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:39.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:39.965" endtime="20200711 13:12:39.966"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:37.275" endtime="20200711 13:12:39.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:39.971" level="INFO">Running command 'ozone sh bucket info /87929-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:43.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:43.138" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200711 13:12:39.967" endtime="20200711 13:12:43.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:43.140" level="INFO">DISK</msg>
<status status="PASS" starttime="20200711 13:12:43.139" endtime="20200711 13:12:43.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:43.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:43.140" endtime="20200711 13:12:43.140"></status>
</kw>
<msg timestamp="20200711 13:12:43.141" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200711 13:12:39.967" endtime="20200711 13:12:43.141"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:43.141" endtime="20200711 13:12:43.141"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:43.145" level="INFO">Running command 'ozone sh bucket list /87929-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:45.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:45.984" level="INFO">${output} = 87929-rpcwoscheme</msg>
<status status="PASS" starttime="20200711 13:12:43.142" endtime="20200711 13:12:45.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:45.985" level="INFO">87929-rpcwoscheme</msg>
<status status="PASS" starttime="20200711 13:12:45.985" endtime="20200711 13:12:45.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:45.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:45.986" endtime="20200711 13:12:45.986"></status>
</kw>
<msg timestamp="20200711 13:12:45.986" level="INFO">${result} = 87929-rpcwoscheme</msg>
<status status="PASS" starttime="20200711 13:12:43.141" endtime="20200711 13:12:45.986"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200711 13:12:45.987" endtime="20200711 13:12:45.987"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:45.991" level="INFO">Running command 'ozone sh key put /87929-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:50.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:50.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:45.989" endtime="20200711 13:12:50.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:50.694" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:50.693" endtime="20200711 13:12:50.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:50.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:50.694" endtime="20200711 13:12:50.694"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:45.988" endtime="20200711 13:12:50.695"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:50.697" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:50.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:50.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:50.695" endtime="20200711 13:12:50.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:50.701" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:50.700" endtime="20200711 13:12:50.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:50.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:50.701" endtime="20200711 13:12:50.701"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:50.695" endtime="20200711 13:12:50.702"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:50.705" level="INFO">Running command 'ozone sh key get /87929-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:55.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:55.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:50.702" endtime="20200711 13:12:55.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:55.204" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:55.203" endtime="20200711 13:12:55.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:55.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:55.204" endtime="20200711 13:12:55.205"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:50.702" endtime="20200711 13:12:55.205"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:55.207" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:55.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:55.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:55.206" endtime="20200711 13:12:55.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:55.211" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:55.210" endtime="20200711 13:12:55.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:55.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:55.211" endtime="20200711 13:12:55.211"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:55.205" endtime="20200711 13:12:55.211"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:55.214" level="INFO">Running command 'ozone sh key put -t RATIS /87929-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:59.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:59.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:55.212" endtime="20200711 13:12:59.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:59.756" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:59.755" endtime="20200711 13:12:59.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:59.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:59.756" endtime="20200711 13:12:59.756"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:55.212" endtime="20200711 13:12:59.757"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:59.759" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:12:59.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:12:59.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:59.757" endtime="20200711 13:12:59.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:12:59.763" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:12:59.762" endtime="20200711 13:12:59.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:12:59.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:12:59.763" endtime="20200711 13:12:59.764"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:59.757" endtime="20200711 13:12:59.764"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:12:59.767" level="INFO">Running command 'ozone sh key get /87929-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:04.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:04.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:12:59.764" endtime="20200711 13:13:04.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:04.211" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:04.210" endtime="20200711 13:13:04.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:04.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:04.211" endtime="20200711 13:13:04.212"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:59.764" endtime="20200711 13:13:04.212"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:04.215" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:04.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:04.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:04.213" endtime="20200711 13:13:04.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:04.219" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:04.218" endtime="20200711 13:13:04.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:04.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:04.219" endtime="20200711 13:13:04.220"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:04.212" endtime="20200711 13:13:04.220"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:04.223" level="INFO">Running command 'ozone sh key info /87929-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:07.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:07.056" level="INFO">${output} = {
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:57.717Z",
  "modificationTime": "2020-07-11T13:12:59.374Z...</msg>
<status status="PASS" starttime="20200711 13:13:04.221" endtime="20200711 13:13:07.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:07.057" level="INFO">{
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:57.717Z",
  "modificationTime": "2020-07-11T13:12:59.374Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495394174664830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:13:07.056" endtime="20200711 13:13:07.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:07.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:07.057" endtime="20200711 13:13:07.058"></status>
</kw>
<msg timestamp="20200711 13:13:07.058" level="INFO">${result} = {
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:57.717Z",
  "modificationTime": "2020-07-11T13:12:59.374Z...</msg>
<status status="PASS" starttime="20200711 13:13:04.220" endtime="20200711 13:13:07.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:07.058" endtime="20200711 13:13:07.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:07.062" level="INFO">Running command 'ozone sh key delete /87929-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:09.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:09.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:07.059" endtime="20200711 13:13:09.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:09.696" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:09.695" endtime="20200711 13:13:09.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:09.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:09.696" endtime="20200711 13:13:09.697"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:07.059" endtime="20200711 13:13:09.697"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:09.701" level="INFO">Running command 'ozone sh key cp /87929-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:14.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:14.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:09.698" endtime="20200711 13:13:14.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:14.652" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:14.651" endtime="20200711 13:13:14.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:14.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:14.652" endtime="20200711 13:13:14.653"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:09.697" endtime="20200711 13:13:14.653"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:14.656" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:14.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:14.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:14.654" endtime="20200711 13:13:14.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:14.659" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:14.658" endtime="20200711 13:13:14.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:14.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:14.659" endtime="20200711 13:13:14.660"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:14.653" endtime="20200711 13:13:14.660"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:14.662" level="INFO">Running command 'ozone sh key get /87929-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:19.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:19.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:14.661" endtime="20200711 13:13:19.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:19.138" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:19.138" endtime="20200711 13:13:19.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:19.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:19.139" endtime="20200711 13:13:19.139"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:14.660" endtime="20200711 13:13:19.140"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:19.143" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:19.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:19.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:19.140" endtime="20200711 13:13:19.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:19.146" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:19.145" endtime="20200711 13:13:19.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:19.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:19.146" endtime="20200711 13:13:19.146"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:19.140" endtime="20200711 13:13:19.147"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:19.150" level="INFO">Running command 'ozone sh key delete /87929-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:21.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:21.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:19.147" endtime="20200711 13:13:21.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:21.651" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:21.650" endtime="20200711 13:13:21.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:21.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:21.651" endtime="20200711 13:13:21.652"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:19.147" endtime="20200711 13:13:21.652"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:21.656" level="INFO">Running command 'ozone sh key get /87929-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:24.135" level="INFO">${rc} = 255</msg>
<msg timestamp="20200711 13:13:24.135" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:13:21.653" endtime="20200711 13:13:24.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:24.136" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:13:24.135" endtime="20200711 13:13:24.136"></status>
</kw>
<msg timestamp="20200711 13:13:24.136" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200711 13:13:21.652" endtime="20200711 13:13:24.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:24.137" endtime="20200711 13:13:24.137"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:24.140" level="INFO">Running command 'ozone sh key get --force /87929-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:28.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:28.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:24.138" endtime="20200711 13:13:28.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:28.691" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:28.691" endtime="20200711 13:13:28.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:28.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:28.691" endtime="20200711 13:13:28.692"></status>
</kw>
<msg timestamp="20200711 13:13:28.692" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200711 13:13:24.137" endtime="20200711 13:13:28.692"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:28.692" endtime="20200711 13:13:28.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:28.695" level="INFO">Running command 'ozone sh key info /87929-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:31.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:31.686" level="INFO">${output} = {
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:48.525Z",
  "modificationTime": "2020-07-11T13:12:50.269Z",
  "...</msg>
<status status="PASS" starttime="20200711 13:13:28.694" endtime="20200711 13:13:31.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:31.687" level="INFO">{
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:48.525Z",
  "modificationTime": "2020-07-11T13:12:50.269Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104495393572323460,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200711 13:13:31.686" endtime="20200711 13:13:31.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:31.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:31.687" endtime="20200711 13:13:31.688"></status>
</kw>
<msg timestamp="20200711 13:13:31.688" level="INFO">${result} = {
  "volumeName": "87929-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-11T13:12:48.525Z",
  "modificationTime": "2020-07-11T13:12:50.269Z",
  "...</msg>
<status status="PASS" starttime="20200711 13:13:28.693" endtime="20200711 13:13:31.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:31.688" endtime="20200711 13:13:31.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:31.692" level="INFO">Running command 'ozone sh key list /87929-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:34.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:34.259" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200711 13:13:31.690" endtime="20200711 13:13:34.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:34.261" level="INFO">key1</msg>
<status status="PASS" starttime="20200711 13:13:34.260" endtime="20200711 13:13:34.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:34.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:34.261" endtime="20200711 13:13:34.262"></status>
</kw>
<msg timestamp="20200711 13:13:34.262" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200711 13:13:31.689" endtime="20200711 13:13:34.262"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:34.262" endtime="20200711 13:13:34.263"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:34.265" level="INFO">Running command 'ozone sh key rename /87929-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:36.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:36.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:34.263" endtime="20200711 13:13:36.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:36.964" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:36.963" endtime="20200711 13:13:36.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:36.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:36.964" endtime="20200711 13:13:36.965"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:34.263" endtime="20200711 13:13:36.965"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:36.969" level="INFO">Running command 'ozone sh key list /87929-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:39.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:39.655" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200711 13:13:36.967" endtime="20200711 13:13:39.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:39.659" level="INFO">key2</msg>
<status status="PASS" starttime="20200711 13:13:39.657" endtime="20200711 13:13:39.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:39.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:39.659" endtime="20200711 13:13:39.660"></status>
</kw>
<msg timestamp="20200711 13:13:39.660" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200711 13:13:36.965" endtime="20200711 13:13:39.660"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:13:39.660" endtime="20200711 13:13:39.660"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:39.663" level="INFO">Running command 'ozone sh key delete /87929-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:42.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:42.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:39.661" endtime="20200711 13:13:42.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:42.291" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:42.290" endtime="20200711 13:13:42.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:42.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:42.291" endtime="20200711 13:13:42.291"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:39.661" endtime="20200711 13:13:42.292"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:45.988" endtime="20200711 13:13:42.292"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:45.987" endtime="20200711 13:13:42.292"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:42.296" level="INFO">Running command 'ozone sh bucket delete /87929-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:44.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:44.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:13:42.293" endtime="20200711 13:13:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:44.866" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:13:44.866" endtime="20200711 13:13:44.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:44.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:44.867" endtime="20200711 13:13:44.867"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:42.292" endtime="20200711 13:13:44.868"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:13:44.875" level="INFO">Running command 'ozone sh volume delete /87929-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:13:47.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:13:47.498" level="INFO">${output} = Volume 87929-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200711 13:13:44.869" endtime="20200711 13:13:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:13:47.499" level="INFO">Volume 87929-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200711 13:13:47.499" endtime="20200711 13:13:47.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:13:47.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:13:47.500" endtime="20200711 13:13:47.500"></status>
</kw>
<status status="PASS" starttime="20200711 13:13:44.868" endtime="20200711 13:13:47.500"></status>
</kw>
<status status="PASS" starttime="20200711 13:12:20.405" endtime="20200711 13:13:47.501"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200711 13:12:20.404" endtime="20200711 13:13:47.501" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200711 13:08:16.201" endtime="20200711 13:13:47.502"></status>
</suite>
<status status="PASS" starttime="20200711 13:07:17.801" endtime="20200711 13:13:47.507"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
