<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 13:24:09.942" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:24:10.001" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:24:18.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:24:18.335" level="INFO">${output} = 2020-07-11 13:24:11,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:11,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:09.996" endtime="20200711 13:24:18.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:24:18.336" level="INFO">2020-07-11 13:24:11,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:11,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:24:11,535 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:24:12,739 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 13:24:12,740 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-11 13:24:12,752 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 13:24:12,759 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:12,804 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-54878, with hadoop as owner.
2020-07-11 13:24:12,841 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-54878/bucket-0-16120, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:24:13,398 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:24:13,760 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,078
Average Time spent in bucket creation: 00:00:00,025
Average Time spent in key creation: 00:00:00,073
Average Time spent in key write: 00:00:00,650
Total bytes written: 10240
Total Execution time: 00:00:06,164
***************************************************</msg>
<status status="PASS" starttime="20200711 13:24:18.335" endtime="20200711 13:24:18.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:24:18.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:24:18.336" endtime="20200711 13:24:18.337"></status>
</kw>
<msg timestamp="20200711 13:24:18.337" level="INFO">${result} = 2020-07-11 13:24:11,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:11,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:09.995" endtime="20200711 13:24:18.337"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:24:18.338" endtime="20200711 13:24:18.338"></status>
</kw>
<status status="PASS" starttime="20200711 13:24:18.337" endtime="20200711 13:24:18.338"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:24:09.994" endtime="20200711 13:24:18.338" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:24:18.343" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:24:23.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:24:23.804" level="INFO">${output} = 2020-07-11 13:24:19,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:19,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:18.341" endtime="20200711 13:24:23.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:24:23.805" level="INFO">2020-07-11 13:24:19,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:19,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:24:19,987 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:24:20,177 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qn3awp7net
2020-07-11 13:24:20,192 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:21,202 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-11 13:24:21,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:21,248 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:24:21,836 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:24:22,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:23,204 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 13:24:23,468 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1335.650075, max=1335.650075, mean=1335.650075, stddev=0.0, median=1335.650075, p75=1335.650075, p95=1335.650075, p98=1335.650075, p99=1335.650075, p999=1335.650075, mean_rate=0.46120976223683435, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 13:24:23,468 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-11 13:24:23,474 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 13:24:23,474 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 13:24:23.804" endtime="20200711 13:24:23.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:24:23.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:24:23.806" endtime="20200711 13:24:23.806"></status>
</kw>
<msg timestamp="20200711 13:24:23.806" level="INFO">${result} = 2020-07-11 13:24:19,817 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:19,987 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:18.340" endtime="20200711 13:24:23.806"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:24:23.807" endtime="20200711 13:24:23.807"></status>
</kw>
<status status="PASS" starttime="20200711 13:24:23.806" endtime="20200711 13:24:23.807"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:24:18.340" endtime="20200711 13:24:23.807" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:24:23.811" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:24:27.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:24:27.959" level="INFO">${output} = 2020-07-11 13:24:25,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:25,570 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:23.809" endtime="20200711 13:24:27.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:24:27.960" level="INFO">2020-07-11 13:24:25,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:25,570 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:24:25,570 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:24:25,736 [main] INFO freon.BaseFreonGenerator: Executing test with prefix oztlweg8qk
2020-07-11 13:24:25,757 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:26,764 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:27,767 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 13:24:27,914 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=63.561518, max=63.561518, mean=63.561518, stddev=0.0, median=63.561518, p75=63.561518, p95=63.561518, p98=63.561518, p99=63.561518, p999=63.561518, mean_rate=0.8850427135331713, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 13:24:27,918 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-11 13:24:27,918 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 13:24:27,919 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 13:24:27.959" endtime="20200711 13:24:27.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:24:27.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:24:27.960" endtime="20200711 13:24:27.961"></status>
</kw>
<msg timestamp="20200711 13:24:27.961" level="INFO">${result} = 2020-07-11 13:24:25,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:25,570 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:23.809" endtime="20200711 13:24:27.961"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:24:27.962" endtime="20200711 13:24:27.962"></status>
</kw>
<status status="PASS" starttime="20200711 13:24:27.961" endtime="20200711 13:24:27.962"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:24:23.808" endtime="20200711 13:24:27.963" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:24:27.967" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:24:31.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:24:31.859" level="INFO">${output} = 2020-07-11 13:24:29,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:29,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:27.964" endtime="20200711 13:24:31.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:24:31.860" level="INFO">2020-07-11 13:24:29,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:29,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:24:29,527 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:24:29,711 [main] INFO freon.BaseFreonGenerator: Executing test with prefix tfndapngeu
2020-07-11 13:24:29,734 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 13:24:30,740 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 13:24:31,791 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.806158, max=16.806158, mean=16.806158, stddev=0.0, median=16.806158, p75=16.806158, p95=16.806158, p98=16.806158, p99=16.806158, p999=16.806158, mean_rate=0.8900894835173616, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 13:24:31,795 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-11 13:24:31,800 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 13:24:31,800 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 13:24:31.859" endtime="20200711 13:24:31.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:24:31.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:24:31.860" endtime="20200711 13:24:31.861"></status>
</kw>
<msg timestamp="20200711 13:24:31.861" level="INFO">${result} = 2020-07-11 13:24:29,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:24:29,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:24:27.964" endtime="20200711 13:24:31.861"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:24:31.862" endtime="20200711 13:24:31.862"></status>
</kw>
<status status="PASS" starttime="20200711 13:24:31.861" endtime="20200711 13:24:31.862"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:24:27.963" endtime="20200711 13:24:31.862" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200711 13:24:09.970" endtime="20200711 13:24:31.864"></status>
</suite>
<status status="PASS" starttime="20200711 13:24:09.943" endtime="20200711 13:24:31.867"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
