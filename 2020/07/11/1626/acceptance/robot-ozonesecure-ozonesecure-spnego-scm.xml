<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 13:55:46.459" rpa="false">
<suite id="s1" name="ozonesecure-spnego" source="/opt/hadoop/smoketest/spnego">
<suite id="s1-s1" name="Web" source="/opt/hadoop/smoketest/spnego/web.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:46.516" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:46.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:46.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:46.512" endtime="20200711 13:55:46.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:46.519" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:46.519" endtime="20200711 13:55:46.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:46.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:46.520" endtime="20200711 13:55:46.520"></status>
</kw>
<msg timestamp="20200711 13:55:46.520" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:46.511" endtime="20200711 13:55:46.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:46.521" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:46.520" endtime="20200711 13:55:46.521"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:46.524" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:46.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:46.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:46.522" endtime="20200711 13:55:46.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:46.541" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:46.541" endtime="20200711 13:55:46.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:46.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:46.541" endtime="20200711 13:55:46.542"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:46.522" endtime="20200711 13:55:46.542"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:46.521" endtime="20200711 13:55:46.542"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:46.511" endtime="20200711 13:55:46.542"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:46.511" endtime="20200711 13:55:46.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:46.544" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 2 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.219" level="INFO">${output} = 2020-07-11 13:55:47,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:55:48,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:55:46.543" endtime="20200711 13:55:55.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.220" level="INFO">2020-07-11 13:55:47,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:55:48,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:55:48,034 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-11 13:55:49,562 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 2.
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 13:55:49,563 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-11 13:55:49,574 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 13:55:49,587 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 2)
2020-07-11 13:55:49,621 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-62669, with testuser/scm@EXAMPLE.COM as owner.
2020-07-11 13:55:49,648 [pool-2-thread-3] INFO rpc.RpcClient: Creating Bucket: vol-0-62669/bucket-0-39116, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:55:50,147 [pool-2-thread-4] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:55:50,591 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (2 out of 2)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 2
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,028
Average Time spent in key write: 00:00:00,090
Total bytes written: 2050
Total Execution time: 00:00:06,514
***************************************************</msg>
<status status="PASS" starttime="20200711 13:55:55.219" endtime="20200711 13:55:55.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.220" endtime="20200711 13:55:55.221"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:46.542" endtime="20200711 13:55:55.221"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:46.510" endtime="20200711 13:55:55.221" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Test OM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.225" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.223" endtime="20200711 13:55:55.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.229" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.228" endtime="20200711 13:55:55.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.229" endtime="20200711 13:55:55.230"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.223" endtime="20200711 13:55:55.230"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.223" endtime="20200711 13:55:55.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.232" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.260" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200711 13:55:55.231" endtime="20200711 13:55:55.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.261" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200711 13:55:55.260" endtime="20200711 13:55:55.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.261" endtime="20200711 13:55:55.262"></status>
</kw>
<msg timestamp="20200711 13:55:55.262" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200711 13:55:55.230" endtime="20200711 13:55:55.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.262" endtime="20200711 13:55:55.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.267" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.268" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.264" endtime="20200711 13:55:55.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.270" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:55.268" endtime="20200711 13:55:55.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.270" endtime="20200711 13:55:55.271"></status>
</kw>
<msg timestamp="20200711 13:55:55.271" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.263" endtime="20200711 13:55:55.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:55.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:55.271" endtime="20200711 13:55:55.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.275" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.273" endtime="20200711 13:55:55.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.290" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.289" endtime="20200711 13:55:55.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.290" endtime="20200711 13:55:55.290"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.272" endtime="20200711 13:55:55.290"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.272" endtime="20200711 13:55:55.291"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.263" endtime="20200711 13:55:55.291"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.263" endtime="20200711 13:55:55.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.294" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.320" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200711 13:55:55.291" endtime="20200711 13:55:55.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.321" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/'
* Found bundle for host om: 0x2397f20
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQa7j793NjCfOiTBRl10JbN81zat+A7DBH1B5bXNaQPpwZTGGLd0KR3y13SJyMojc5i5vvV8QUATpWAcLfW/slSuCzxbLyhfbMbfStP9bOX6Lct+2trRNfxD27itlzgWuqLv9zn9Lafkopjwv78fIhMz9UeH25MueVhfN3DcGHNilgWKHMKCNuC5fCmhe34hgxGRediwORwbu7v+NUzoLxwLcLEejbegYqasAoG5iyDQi7fo8ClpJ+Mrun3iYoQ1CLuy6iFKzOtJ8jRzKrrHl+T8tUHAXrPk0EqTA61LCgYEjBJ7tjRzG/pbO3NbSGGUNNqx5MT6+aoFLJywbilrAlzEY5/hdHV9pIHWMIHToAMCARKigcsEgcjfACAgHvQk/tBUxbvlHyNTibYpdoPOkVPCzczJbtbFbvA0fXrZkrx7drvD8mwiVx6DBM9Hpi+Fmms5PcuPUfifAnHPTCUwlnknQgt+gLxizUKYGo3+5n9ghfp4LqUs7ziZfUCFI6MNf58JrEtODMzeHdqAy8ydaqBs+k0HxZ4ZYCCCd+wmP2yITrglDxva+kYlaMEuVHJgBNbK3bxKHPP6hyQcoNagiz9eFnCFNpZeey9qVHT4eVzXtf01ffNe5Gx/cpGjQRvhkw==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCNT4zPW3APdUijMGHFzVMFrNNmdC57vTkgBJzajTF14vWhAsnXVIDfcpVKovJ4yPXYRcW0QGMou5dG1NBQ7FNHaRr
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755316&amp;s=EoepV3h5LmmmKsXRANVzPU/R5PZKjxj646XfVGtKKEE="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 11 Jul 2020 12:36:18 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2927
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:55:55 GMT
Cache-Control: no-cache
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCNT4zPW3APdUijMGHFzVMFrNNmdC57vTkgBJzajTF14vWhAsnXVIDfcpVKovJ4yPXYRcW0QGMou5dG1NBQ7FNHaRr
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755316&amp;s=EoepV3h5LmmmKsXRANVzPU/R5PZKjxj646XfVGtKKEE="; Path=/; HttpOnly
Last-Modified: Sat, 11 Jul 2020 12:36:18 GMT
Accept-Ranges: bytes
Content-Length: 2927
</msg>
<status status="PASS" starttime="20200711 13:55:55.320" endtime="20200711 13:55:55.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.321" endtime="20200711 13:55:55.321"></status>
</kw>
<msg timestamp="20200711 13:55:55.321" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1...</msg>
<status status="PASS" starttime="20200711 13:55:55.291" endtime="20200711 13:55:55.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.322" endtime="20200711 13:55:55.322"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.222" endtime="20200711 13:55:55.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:55.222" endtime="20200711 13:55:55.322" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Test OM DB Checkpoint">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_DB_CHECKPOINT_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.328" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.325" endtime="20200711 13:55:55.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.332" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.331" endtime="20200711 13:55:55.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.332" endtime="20200711 13:55:55.332"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.325" endtime="20200711 13:55:55.332"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.324" endtime="20200711 13:55:55.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.335" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.347" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.333" endtime="20200711 13:55:55.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.348" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417
</msg>
<status status="PASS" starttime="20200711 13:55:55.347" endtime="20200711 13:55:55.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.348" endtime="20200711 13:55:55.349"></status>
</kw>
<msg timestamp="20200711 13:55:55.349" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.333" endtime="20200711 13:55:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.349" endtime="20200711 13:55:55.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.352" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.355" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.351" endtime="20200711 13:55:55.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.356" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:55.355" endtime="20200711 13:55:55.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.357" endtime="20200711 13:55:55.357"></status>
</kw>
<msg timestamp="20200711 13:55:55.358" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.350" endtime="20200711 13:55:55.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:55.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:55.358" endtime="20200711 13:55:55.359"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.363" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.360" endtime="20200711 13:55:55.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.389" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.389" endtime="20200711 13:55:55.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.390" endtime="20200711 13:55:55.390"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.360" endtime="20200711 13:55:55.390"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.359" endtime="20200711 13:55:55.391"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.350" endtime="20200711 13:55:55.391"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.350" endtime="20200711 13:55:55.391"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.393" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/dbCheckpoint 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.479" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.391" endtime="20200711 13:55:55.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.480" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 417
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/dbCheckpoint'
* Found bundle for host om: 0x1ca3f50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQaGTxlRo2GoaPtsqo18YlaUXZ+/SzQrLPEBHSyF2rY2o6xyZvxtKGVraXTIx29rp6B4VoD4hZfIPNrLZn9kVWqMmSdRjkqDXbPqjenn+FDMZNAi9DUiIyLNtyybdk0KzqxvorSrnlbXBxBQZnQQXwGEizuGJygyv1gpjxVfJuoP4cPtRk7nL6DHh9I3htXUZH+dQqmGahjdclFt/zgipRfuAsjHHg9rOFPP+VrXrFf/yLGitcUbqOOJlFUy1vmtre8v3QMymHd+D9nj26VcxwUyit16I9TBAK11kd/ot/RJdc3CPUlE77si4+79O9GDrq2L0gugMVW/2nnjVezk6Id/m37L5wH2pIHWMIHToAMCARKigcsEgcgBMuZxjpVAbksOCA2w8/nKGVD6cCbWMZHvcvU8keRzHPl4lu7xFYR33zpaU3BLdyrI3fOsSi9Wz3UPMfKLeRNA2MmBrElVDMI7FaW4CnZfezyAIS+ggIyrAmp6BOL5+IA4MT/FWDLRHTi9TC2mXs/SVpwMAAkpzviyOmQtEk4XTZsj9hGDDkiTFAm9DhtegJxgPCCd5KcGgmXBbJW39hCBJ56uPZiiL3JUCHTN+Tuq/JkV61MJnMNmm4IosjmV12yc8lBJKt7HQA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/x-tgz
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCCwFOU6M3uhXxjBkzlM3tr59p1oUMSjI1p2P+yJfH5cX+7vWrMzSX6xq5kQfSd/xoh2uoR6TAS3wfuiM8a0lFiNXl
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755419&amp;s=dyVrioYN7NEoR5T6DAH8uYLzGWlE9bceJzwv8BQ5kxE="; Path=/; HttpOnly
&lt; Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594475755421.tgz"
&lt; Content-Length: 75187
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 417

HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:55:55 GMT
Cache-Control: no-cache
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
Content-Type: application/x-tgz
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCCwFOU6M3uhXxjBkzlM3tr59p1oUMSjI1p2P+yJfH5cX+7vWrMzSX6xq5kQfSd/xoh2uoR6TAS3wfuiM8a0lFiNXl
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755419&amp;s=dyVrioYN7NEoR5T6DAH8uYLzGWlE9bceJzwv8BQ5kxE="; Path=/; HttpOnly
Content-Disposition: attachment; filename="rdb_rdb_checkpoint_1594475755421.tgz"
Content-Length: 75187
</msg>
<status status="PASS" starttime="20200711 13:55:55.479" endtime="20200711 13:55:55.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.480" endtime="20200711 13:55:55.481"></status>
</kw>
<msg timestamp="20200711 13:55:55.481" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /dbCheckpoint HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.391" endtime="20200711 13:55:55.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.481" endtime="20200711 13:55:55.482"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.324" endtime="20200711 13:55:55.482"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:55.323" endtime="20200711 13:55:55.482" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Test OM Service List">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${OM_SERVICE_LIST_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.489" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.485" endtime="20200711 13:55:55.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.491" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.491" endtime="20200711 13:55:55.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.492" endtime="20200711 13:55:55.492"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.485" endtime="20200711 13:55:55.492"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.485" endtime="20200711 13:55:55.492"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.496" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.508" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200711 13:55:55.493" endtime="20200711 13:55:55.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.509" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415
</msg>
<status status="PASS" starttime="20200711 13:55:55.508" endtime="20200711 13:55:55.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.509" endtime="20200711 13:55:55.510"></status>
</kw>
<msg timestamp="20200711 13:55:55.510" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200711 13:55:55.492" endtime="20200711 13:55:55.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.510" endtime="20200711 13:55:55.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.515" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.518" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.512" endtime="20200711 13:55:55.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.519" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:55.518" endtime="20200711 13:55:55.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.519" endtime="20200711 13:55:55.520"></status>
</kw>
<msg timestamp="20200711 13:55:55.520" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.511" endtime="20200711 13:55:55.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:55.521" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:55.521" endtime="20200711 13:55:55.521"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.527" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.523" endtime="20200711 13:55:55.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.552" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.551" endtime="20200711 13:55:55.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.552" endtime="20200711 13:55:55.553"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.523" endtime="20200711 13:55:55.553"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.521" endtime="20200711 13:55:55.553"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.511" endtime="20200711 13:55:55.553"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.511" endtime="20200711 13:55:55.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.556" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/serviceList 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.599" level="INFO">${output} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200711 13:55:55.554" endtime="20200711 13:55:55.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.600" level="INFO">* About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 415
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/serviceList'
* Found bundle for host om: 0x1fbbf50
* Re-using existing connection! (#0) with host om
* Connected to om (172.26.0.9) port 9874 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD /serviceList HTTP/1.1
&gt; Authorization: Negotiate YIICWAYJKoZIhvcSAQICAQBuggJHMIICQ6ADAgEFoQMCAQ6iBwMFACAAAACjggFTYYIBTzCCAUugAwIBBaENGwtFWEFNUExFLkNPTaIVMBOgAwIBA6EMMAobBEhUVFAbAm9to4IBHDCCARigAwIBEqEDAgECooIBCgSCAQYeNSWxHLCNPh3bavxyF2mLGmJDfz0n0ICXUwh69zQao/ZYSOan2U1GdRR5UfVGpadevG+JqzwqRzkJh2rYn9WSYKq4Hv9oOzZJTHWxrCLRfsuD2QSoUvN4NsBddEqBeU4/RGs9JTtEv2IbtgXQgnKL3ZIETBKxileP1IJJ0dh1ZLtgPj7w3NzSysBvf9AtzriFwKyc/taMIGDRG7iIy3WnKPolJS7IYeDohw0wAjfCZowJ/MuCusjJkIngDXr3tznNhNn8X6I3hPXczqGVl5kqKPSJG8HmQAqfMR7WR3Hq+q41n1nCtRJ4nnnzs3vB06B8irNAd83qw5RSVc5sD5OZhWJNR1hxpIHWMIHToAMCARKigcsEgcida63L2J3eSu9zUGHrc5bXwM6YZq8r9ssDi2AQvamXKQ2ZBW4IZQHrhYpFFiK0zLEdVJOLWbAtiH2NNN1VVLcHFMCs83BNarhe+BxWstaX2F70tgo/tutH5gN+DaiKHdGb4OD5gQbEYilpCDXAp7VPeHDjodJIGOjSqOhm08SbXfsu7MowlrzcxVXuAfhA/HftCPamAA6unxSJCchc7O//q7jJlYYoHxDLEAt26/MxpWXB/58EpiGBkIgjxfmhh9/+gG2911fdBA==
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdHotbUtLqo1rv5uSPXG4d28K4Btg0NuWFesszD55HBchHzK14myxuheEKe3hay5Use0E9Y4ZiUBgWYRM+wWd0xJ1
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755582&amp;s=nsmbDPRtW/c5r66f5cwm4FZc9xp8JFKGwUF3Spsm8+4="; Path=/; HttpOnly
&lt; Content-Length: 207
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 415

HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:55:55 GMT
Cache-Control: no-cache
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCdHotbUtLqo1rv5uSPXG4d28K4Btg0NuWFesszD55HBchHzK14myxuheEKe3hay5Use0E9Y4ZiUBgWYRM+wWd0xJ1
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755582&amp;s=nsmbDPRtW/c5r66f5cwm4FZc9xp8JFKGwUF3Spsm8+4="; Path=/; HttpOnly
Content-Length: 207
</msg>
<status status="PASS" starttime="20200711 13:55:55.599" endtime="20200711 13:55:55.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.600" endtime="20200711 13:55:55.601"></status>
</kw>
<msg timestamp="20200711 13:55:55.601" level="INFO">${result} = * About to connect() to om port 9874 (#0)
*   Trying 172.26.0.9...
* Connected to om (172.26.0.9) port 9874 (#0)
&gt; HEAD /serviceList HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: om:9874
&gt; Accept: */*
&gt; ...</msg>
<status status="PASS" starttime="20200711 13:55:55.553" endtime="20200711 13:55:55.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.601" endtime="20200711 13:55:55.602"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.484" endtime="20200711 13:55:55.602"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:55.483" endtime="20200711 13:55:55.602" critical="yes"></status>
</test>
<test id="s1-s1-t5" name="Test SCM portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${SCM_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.608" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.605" endtime="20200711 13:55:55.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.612" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.612" endtime="20200711 13:55:55.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.613" endtime="20200711 13:55:55.613"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.605" endtime="20200711 13:55:55.613"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.604" endtime="20200711 13:55:55.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.616" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.632" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200711 13:55:55.614" endtime="20200711 13:55:55.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.634" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200711 13:55:55.633" endtime="20200711 13:55:55.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.634" endtime="20200711 13:55:55.635"></status>
</kw>
<msg timestamp="20200711 13:55:55.635" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200711 13:55:55.614" endtime="20200711 13:55:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.635" endtime="20200711 13:55:55.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.648" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.649" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.645" endtime="20200711 13:55:55.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.650" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:55.650" endtime="20200711 13:55:55.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.651" endtime="20200711 13:55:55.651"></status>
</kw>
<msg timestamp="20200711 13:55:55.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.644" endtime="20200711 13:55:55.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:55.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:55.652" endtime="20200711 13:55:55.653"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.654" endtime="20200711 13:55:55.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.672" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.671" endtime="20200711 13:55:55.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.672" endtime="20200711 13:55:55.673"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.653" endtime="20200711 13:55:55.673"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.653" endtime="20200711 13:55:55.673"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.636" endtime="20200711 13:55:55.673"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.636" endtime="20200711 13:55:55.673"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.677" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://scm:9876 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.709" level="INFO">${output} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200711 13:55:55.674" endtime="20200711 13:55:55.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.710" level="INFO">* About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host scm left intact
* Issue another request to this URL: 'http://scm:9876/'
* Found bundle for host scm: 0x20def20
* Re-using existing connection! (#0) with host scm
* Connected to scm (172.26.0.6) port 9876 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3NjbaOCARwwggEYoAMCARKhAwIBAqKCAQoEggEGbFrby2iICyn+W6uAuLzYavmmKztnd2J+ziuGaoGXQ9Ii4tMqzoj0J543+W8Yg/FQ08pDEpaEkJL2yqXMmfeaKk/5l2Zw15KLWfWsMPWtuJZkJIF+jNRdWjWUtCeTQyGh9rGilAHpfxZIqBlYeZfiHH4LyvD8qahP9Nl6YKxhB63cHkzL+dXoC+OgUDkTtLwr4x2sLmuPgoJJNyqXeRe2CO+nrLboEsW3uTJF8BF278ufTMghH1cZmORc8jIwVRFAN4WYp0cm5Qm+p4vZjw2D7vaGoFW3KPxffW3zRui8e/nZRYlaapAXVuZdU8OuMSU3QqEHxuRFK0bahXqmHu4bgpCAhS6DRaSB1jCB06ADAgESooHLBIHIYncxlHdMvGQtdCoRYaS/Y/7IHyXHVqs4Z+Sm4zGzy2vBn/lTOx0ZunHWfND2Au9fg9/x8bg8ofnDO9gvkXvAvaG6WjTTiuE0HTePIHuUMH0jP+GC1eZ7uy2wuueE1l3ZX8kcsx9aFDHZCL92BZcQ9dXJZGmvXDpmbPnfJoYoH1dmH0DZfBUi2Gq1sMAzXDqtUQOtdN9ZGYupAMnZ9CRXvoUgKNTPshKt6BTcVJz1sdl1iILy8/GzxFNprmiirDPolKwo7LbUQNk=
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtmnMoPocuAX0gEcjoPvoRgN/uJqW3bU6eC9XlHoLIlsoKJMo60TUkLKqDM9scOMruHwIr43GbfvcMBBDHboc7eBm
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755704&amp;s=ZRmlWTOZDBiUwn9fYYMH4Nmdxj+BWePlbeEFuHm8OKg="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 11 Jul 2020 12:35:56 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2923
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:55:55 GMT
Cache-Control: no-cache
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtmnMoPocuAX0gEcjoPvoRgN/uJqW3bU6eC9XlHoLIlsoKJMo60TUkLKqDM9scOMruHwIr43GbfvcMBBDHboc7eBm
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755704&amp;s=ZRmlWTOZDBiUwn9fYYMH4Nmdxj+BWePlbeEFuHm8OKg="; Path=/; HttpOnly
Last-Modified: Sat, 11 Jul 2020 12:35:56 GMT
Accept-Ranges: bytes
Content-Length: 2923
</msg>
<status status="PASS" starttime="20200711 13:55:55.709" endtime="20200711 13:55:55.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.710" endtime="20200711 13:55:55.711"></status>
</kw>
<msg timestamp="20200711 13:55:55.711" level="INFO">${result} = * About to connect() to scm port 9876 (#0)
*   Trying 172.26.0.6...
* Connected to scm (172.26.0.6) port 9876 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: scm:9876
&gt; Accept: */*
&gt; 
&lt; HTTP/...</msg>
<status status="PASS" starttime="20200711 13:55:55.673" endtime="20200711 13:55:55.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.711" endtime="20200711 13:55:55.712"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.604" endtime="20200711 13:55:55.712"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:55.603" endtime="20200711 13:55:55.712" critical="yes"></status>
</test>
<test id="s1-s1-t6" name="Test Recon portal">
<kw name="Verify SPNEGO enabled URL">
<arguments>
<arg>${RECON_URL}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Execute</arg>
<arg>kdestroy</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.719" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.715" endtime="20200711 13:55:55.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.722" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.722" endtime="20200711 13:55:55.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.723" endtime="20200711 13:55:55.723"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.715" endtime="20200711 13:55:55.723"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.714" endtime="20200711 13:55:55.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.727" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.744" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.724" endtime="20200711 13:55:55.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.745" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
* gss_init_sec_context() failed: : No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442
</msg>
<status status="PASS" starttime="20200711 13:55:55.744" endtime="20200711 13:55:55.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.745" endtime="20200711 13:55:55.746"></status>
</kw>
<msg timestamp="20200711 13:55:55.746" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.724" endtime="20200711 13:55:55.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>401 Unauthorized</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.746" endtime="20200711 13:55:55.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.751" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.753" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.748" endtime="20200711 13:55:55.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.754" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:55.753" endtime="20200711 13:55:55.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.754" endtime="20200711 13:55:55.755"></status>
</kw>
<msg timestamp="20200711 13:55:55.755" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:55.748" endtime="20200711 13:55:55.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:55.756" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:55.755" endtime="20200711 13:55:55.756"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.760" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:55.757" endtime="20200711 13:55:55.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.773" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:55.772" endtime="20200711 13:55:55.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.773" endtime="20200711 13:55:55.774"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.756" endtime="20200711 13:55:55.774"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.756" endtime="20200711 13:55:55.774"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.747" endtime="20200711 13:55:55.774"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.747" endtime="20200711 13:55:55.774"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:55.778" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:55.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:55.805" level="INFO">${output} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.775" endtime="20200711 13:55:55.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:55.806" level="INFO">* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0x15aff20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.5) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; HEAD / HTTP/1.1
&gt; Authorization: Negotiate YIICWwYJKoZIhvcSAQICAQBuggJKMIICRqADAgEFoQMCAQ6iBwMFACAAAACjggFWYYIBUjCCAU6gAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBHDCCARigAwIBEqEDAgECooIBCgSCAQZvM0wogQU256cJXwej68r3Hf5/g4FHv9p8BtLKbMyQj5X2hokR8wPVGL171b2WRtZcMyhXuLDQzX2pmDW0H+jgkszvLPDCCPWOpLPBL7+Wm/HGFstWcLhibi3u7m2PqSV0IdiPiTdri20LX+NOBYEaZ5Vc3KjDnkFqo0rvbfnSdyFvEXm17qQNpyoR9Mu33tDOfK4YFwmRgSLPmKm3CQVhtpR80wgwU2f2OuZMppMGlszg/NKUZDrmS71MxZgy3W6oCXqGRubY6/i63h0GqiVOse1K7W2taQMKvWZ8qEV6uHGHcgPJsK6RKqlE569CQJ4SQtHCmFFvBq6Y3lmWPXjru0NkrnxIpIHWMIHToAMCARKigcsEgcgY235i5KEiYmnTaUeWdRgsoA8hUDvyOIsJ35DJa34xsrVnWaYIYhYPeuf/4Rg6BLHOvTAXWO48DWauHp3YHF26sjG1l4SriDHBQMZTrHbKbpZ4lBo5H+3D8PMY+sWA+wVkJSUKWq+ArcHX4Z7NRF4D12rXVnqv3MtNVRb4FNiRe/hffp7twrYk3oVte/x6HGzOTifs0q0GZws7uwMAkXf8WusZgUgk2e81a0ziL+80rICeYRon5UhloiANLWc685J6q78If1yKWA==
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:55 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCS1owsHwuJIn5RwTF0g8Xq1fgw8RKebqa8HF3x9sY8Az9/Z9jHr+jYKR4hE5NF/zf2SGGcpI7KEYMaOzqAPIAO4cy
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755802&amp;s=F8d/nlFl3eHLVQn+6Zoa+hBtQAYMhVrvUz791tB4KzA="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 11 Jul 2020 12:41:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
* Closing connection 0
HTTP/1.1 401 Unauthorized
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 442

HTTP/1.1 200 OK
Date: Sat, 11 Jul 2020 13:55:55 GMT
Cache-Control: no-cache
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
Content-Type: text/html;charset=utf-8
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Expires: Sat, 11 Jul 2020 13:55:55 GMT
Date: Sat, 11 Jul 2020 13:55:55 GMT
Pragma: no-cache
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCS1owsHwuJIn5RwTF0g8Xq1fgw8RKebqa8HF3x9sY8Az9/Z9jHr+jYKR4hE5NF/zf2SGGcpI7KEYMaOzqAPIAO4cy
Set-Cookie: hadoop.auth="u=root&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511755802&amp;s=F8d/nlFl3eHLVQn+6Zoa+hBtQAYMhVrvUz791tB4KzA="; Path=/; HttpOnly
Last-Modified: Sat, 11 Jul 2020 12:41:00 GMT
Accept-Ranges: bytes
Content-Length: 2267
</msg>
<status status="PASS" starttime="20200711 13:55:55.806" endtime="20200711 13:55:55.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:55.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:55.807" endtime="20200711 13:55:55.807"></status>
</kw>
<msg timestamp="20200711 13:55:55.807" level="INFO">${result} = * About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; HEAD / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt;...</msg>
<status status="PASS" starttime="20200711 13:55:55.774" endtime="20200711 13:55:55.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200 OK</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:55.807" endtime="20200711 13:55:55.808"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:55.714" endtime="20200711 13:55:55.808"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:55.713" endtime="20200711 13:55:55.808" critical="yes"></status>
</test>
<doc>Smoke test for spnego with docker-compose environments.</doc>
<status status="PASS" starttime="20200711 13:55:46.488" endtime="20200711 13:55:55.809"></status>
</suite>
<status status="PASS" starttime="20200711 13:55:46.460" endtime="20200711 13:55:55.811"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="ozonesecure-spnego">ozonesecure-spnego</stat>
<stat pass="6" fail="0" id="s1-s1" name="Web">ozonesecure-spnego.Web</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
