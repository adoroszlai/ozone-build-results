<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 13:23:29.133" rpa="false">
<suite id="s1" name="ozone-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:29.185" endtime="20200711 13:23:29.185"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:29.191" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:37.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:37.541" level="INFO">${output} = 2020-07-11 13:23:30,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:23:30,866 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:23:29.186" endtime="20200711 13:23:37.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:37.542" level="INFO">2020-07-11 13:23:30,650 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:23:30,866 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:23:30,866 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 13:23:31,987 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-11 13:23:31,988 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-11 13:23:31,988 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-11 13:23:31,988 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-11 13:23:31,988 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-11 13:23:31,989 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 13:23:31,989 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-11 13:23:31,999 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 13:23:32,014 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-11 13:23:32,041 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-56989, with hadoop as owner.
2020-07-11 13:23:32,104 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-56989/bucket-0-52338, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:23:32,702 [pool-2-thread-2] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:23:33,015 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,007
Average Time spent in bucket creation: 00:00:00,002
Average Time spent in key creation: 00:00:00,103
Average Time spent in key write: 00:00:00,580
Total bytes written: 10250
Total Execution time: 00:00:06,104
***************************************************</msg>
<status status="PASS" starttime="20200711 13:23:37.542" endtime="20200711 13:23:37.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:37.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:37.543" endtime="20200711 13:23:37.543"></status>
</kw>
<status status="PASS" starttime="20200711 13:23:29.186" endtime="20200711 13:23:37.543"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:23:29.184" endtime="20200711 13:23:37.544" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:37.546" endtime="20200711 13:23:37.546"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:37.549" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:37.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:37.738" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:37.547" endtime="20200711 13:23:37.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:37.739" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    418      0 --:--:-- --:--:-- --:--:--   418
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200711 13:23:37.738" endtime="20200711 13:23:37.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:37.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:37.739" endtime="20200711 13:23:37.740"></status>
</kw>
<msg timestamp="20200711 13:23:37.740" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:37.547" endtime="20200711 13:23:37.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:37.740" endtime="20200711 13:23:37.741"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:37.743" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:37.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:37.782" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:37.741" endtime="20200711 13:23:37.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:37.783" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3077
&lt; 
{ [data not shown]

100  3077  100  3077    0     0  91219      0 --:--:-- --:--:-- --:--:-- 93242
* Connection #0 to host recon left intact
[{"volume":"vol-3-06802","bucket":"bucket-3-38355","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-4-75142","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-3-45430","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-2-05424","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-4-49129","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-0-43155","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-2-45600","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-4-44156","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-2-10175","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-0-40999","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-2-39513","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-4-31314","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-1-85537","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-0-95892","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-1-13420","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-3-55599","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-3-96930","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-4-29900","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-2-12132","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-1-91257","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-0-85417","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-1-87780","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-3-63783","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-1-18660","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-0-30461","fileSize":16384,"count":5},{"volume":"87929-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"87929-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"lpjfx","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-81335","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14474","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14474","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-33082","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89394","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200711 13:23:37.782" endtime="20200711 13:23:37.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:37.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:37.783" endtime="20200711 13:23:37.784"></status>
</kw>
<msg timestamp="20200711 13:23:37.784" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:37.741" endtime="20200711 13:23:37.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200711 13:23:37.785" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:37 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3077
&lt; 
{ [data not shown]

100  3077  100  3077    0     0  91219      0 --:--:-- --:--:-- --:--:-- 93242
* Connection #0 to host recon left intact
[{"volume":"vol-3-06802","bucket":"bucket-3-38355","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-4-75142","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-3-45430","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-2-05424","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-4-49129","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-0-43155","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-2-45600","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-4-44156","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-2-10175","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-0-40999","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-2-39513","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-4-31314","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-1-85537","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-0-95892","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-1-13420","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-3-55599","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-3-96930","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-4-29900","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-2-12132","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-1-91257","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-0-85417","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-1-87780","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-3-63783","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-1-18660","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-0-30461","fileSize":16384,"count":5},{"volume":"87929-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"87929-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"lpjfx","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-81335","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14474","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14474","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-33082","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89394","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200711 13:23:37.784" endtime="20200711 13:23:37.785"></status>
</kw>
<status status="FAIL" starttime="20200711 13:23:37.546" endtime="20200711 13:23:37.786"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:47.787" endtime="20200711 13:23:47.788"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:47.790" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:47.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:47.805" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:47.788" endtime="20200711 13:23:47.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:47.806" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0  10366      0 --:--:-- --:--:-- --:--:-- 11000
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":143}]}}</msg>
<status status="PASS" starttime="20200711 13:23:47.805" endtime="20200711 13:23:47.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:47.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:47.806" endtime="20200711 13:23:47.807"></status>
</kw>
<msg timestamp="20200711 13:23:47.807" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:47.788" endtime="20200711 13:23:47.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:47.807" endtime="20200711 13:23:47.807"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:47.811" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:47.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:47.826" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:47.808" endtime="20200711 13:23:47.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:47.827" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3077
&lt; 
{ [data not shown]

100  3077  100  3077    0     0   293k      0 --:--:-- --:--:-- --:--:--  300k
* Connection #0 to host recon left intact
[{"volume":"vol-3-06802","bucket":"bucket-3-38355","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-4-75142","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-3-45430","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-2-05424","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-4-49129","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-0-43155","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-2-45600","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-4-44156","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-2-10175","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-0-40999","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-2-39513","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-4-31314","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-1-85537","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-0-95892","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-1-13420","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-3-55599","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-3-96930","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-4-29900","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-2-12132","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-1-91257","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-0-85417","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-1-87780","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-3-63783","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-1-18660","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-0-30461","fileSize":16384,"count":5},{"volume":"87929-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"87929-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"lpjfx","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-81335","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14474","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14474","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-33082","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89394","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200711 13:23:47.826" endtime="20200711 13:23:47.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:47.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:47.827" endtime="20200711 13:23:47.828"></status>
</kw>
<msg timestamp="20200711 13:23:47.828" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:47.808" endtime="20200711 13:23:47.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200711 13:23:47.829" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:47 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3077
&lt; 
{ [data not shown]

100  3077  100  3077    0     0   293k      0 --:--:-- --:--:-- --:--:--  300k
* Connection #0 to host recon left intact
[{"volume":"vol-3-06802","bucket":"bucket-3-38355","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-4-75142","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-3-45430","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-2-05424","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-4-49129","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-0-43155","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-2-45600","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-4-44156","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-2-10175","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-0-40999","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-2-39513","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-4-31314","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-1-85537","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-0-95892","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-1-13420","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-3-55599","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-3-96930","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-4-29900","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-2-12132","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-1-91257","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-0-85417","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-1-87780","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-3-63783","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-1-18660","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-0-30461","fileSize":16384,"count":5},{"volume":"87929-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"87929-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"lpjfx","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-81335","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14474","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14474","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-33082","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89394","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200711 13:23:47.828" endtime="20200711 13:23:47.829"></status>
</kw>
<status status="FAIL" starttime="20200711 13:23:47.786" endtime="20200711 13:23:47.829"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.831" endtime="20200711 13:23:57.831"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:57.835" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:57.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:57.854" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.832" endtime="20200711 13:23:57.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:57.855" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  15212      0 --:--:-- --:--:-- --:--:-- 16545
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":145},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":6},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20200711 13:23:57.854" endtime="20200711 13:23:57.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:57.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:57.855" endtime="20200711 13:23:57.856"></status>
</kw>
<msg timestamp="20200711 13:23:57.856" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.831" endtime="20200711 13:23:57.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.856" endtime="20200711 13:23:57.857"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:57.860" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:57.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:57.884" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.858" endtime="20200711 13:23:57.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:57.885" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3289
&lt; 
{ [data not shown]

100  3289  100  3289    0     0   196k      0 --:--:-- --:--:-- --:--:--  200k
* Connection #0 to host recon left intact
[{"volume":"vol-3-06802","bucket":"bucket-3-38355","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-4-75142","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-3-45430","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-2-05424","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-4-49129","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-0-43155","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-2-45600","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-4-44156","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-2-10175","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-0-40999","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-2-39513","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-4-31314","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-1-85537","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-0-95892","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-1-13420","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-3-55599","fileSize":16384,"count":5},{"volume":"vol-1-16175","bucket":"bucket-3-96930","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-4-29900","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-2-12132","fileSize":16384,"count":5},{"volume":"vol-3-06802","bucket":"bucket-1-91257","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-0-85417","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-1-87780","fileSize":16384,"count":5},{"volume":"vol-4-37079","bucket":"bucket-3-63783","fileSize":16384,"count":5},{"volume":"vol-2-91578","bucket":"bucket-1-18660","fileSize":16384,"count":5},{"volume":"vol-0-95637","bucket":"bucket-0-30461","fileSize":16384,"count":5},{"volume":"87929-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"87929-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"87929-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"lpjfx","bucket":"mybucket4","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":32768,"count":0},{"volume":"fstest1","bucket":"bucket2-o3fs","fileSize":1024,"count":0},{"volume":"s3v","bucket":"bucket-81335","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-14474","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-14474","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"destbucket-33082","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-89394","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-23223","fileSize":1024,"count":2},{"volume":"vol-0-56989","bucket":"bucket-0-52338","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-67425","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200711 13:23:57.884" endtime="20200711 13:23:57.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:57.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:57.885" endtime="20200711 13:23:57.885"></status>
</kw>
<msg timestamp="20200711 13:23:57.886" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.857" endtime="20200711 13:23:57.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.886" endtime="20200711 13:23:57.887"></status>
</kw>
<status status="PASS" starttime="20200711 13:23:57.830" endtime="20200711 13:23:57.887"></status>
</kw>
<status status="PASS" starttime="20200711 13:23:37.545" endtime="20200711 13:23:57.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:23:37.544" endtime="20200711 13:23:57.887" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:57.893" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:57.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:57.948" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.890" endtime="20200711 13:23:57.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:57.949" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1704
&lt; 
{ [data not shown]

100  1704  100  1704    0     0  35464      0 --:--:-- --:--:-- --:--:-- 36255
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"860302f2-b165-4d4d-960e-b5e58ac6df37","hostname":"ozone_datanode_2.ozone_default","state":"HEALTHY","lastHeartbeat":1594473813544,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25726808064},"pipelines":[{"pipelineID":"b038c379-198b-419a-aeba-93db7881c1d7","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"8ca41bdf-4678-42b7-b269-3ccff1f53fff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":2},{"uuid":"26edc9ae-cdfc-4749-9564-1c35c23abefa","hostname":"ozone_datanode_3.ozone_default","state":"HEALTHY","lastHeartbeat":1594473813572,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25726808064},"pipelines":[{"pipelineID":"8ca41bdf-4678-42b7-b269-3ccff1f53fff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"},{"pipelineID":"be2f52a9-d491-42f0-bd65-fcc7e9a5737a","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_3.ozone_default"}],"containers":2,"leaderCount":1},{"uuid":"a53c5f93-ada6-4293-ae99-d3c263c49dde","hostname":"ozone_datanode_1.ozone_default","state":"HEALTHY","lastHeartbeat":1594473813571,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25726857216},"pipelines":[{"pipelineID":"8101dcbf-1a28-4f20-863a-0616b4e4bc4b","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozone_datanode_1.ozone_default"},{"pipelineID":"8ca41bdf-4678-42b7-b269-3ccff1f53fff","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozone_datanode_2.ozone_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200711 13:23:57.949" endtime="20200711 13:23:57.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:57.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:57.949" endtime="20200711 13:23:57.950"></status>
</kw>
<msg timestamp="20200711 13:23:57.950" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.890" endtime="20200711 13:23:57.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.950" endtime="20200711 13:23:57.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.951" endtime="20200711 13:23:57.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.952" endtime="20200711 13:23:57.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.952" endtime="20200711 13:23:57.952"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:57.959" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:57.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:57.991" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.953" endtime="20200711 13:23:57.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:57.992" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1248
&lt; 
{ [data not shown]

100  1248  100  1248    0     0  51784      0 --:--:-- --:--:-- --:--:-- 52000
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"8101dcbf-1a28-4f20-863a-0616b4e4bc4b","status":"OPEN","leaderNode":"ozone_datanode_1.ozone_default","datanodes":["ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1021929,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"b038c379-198b-419a-aeba-93db7881c1d7","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default"],"lastLeaderElection":0,"duration":1023145,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8ca41bdf-4678-42b7-b269-3ccff1f53fff","status":"OPEN","leaderNode":"ozone_datanode_2.ozone_default","datanodes":["ozone_datanode_2.ozone_default","ozone_datanode_3.ozone_default","ozone_datanode_1.ozone_default"],"lastLeaderElection":0,"duration":1021910,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"be2f52a9-d491-42f0-bd65-fcc7e9a5737a","status":"OPEN","leaderNode":"ozone_datanode_3.ozone_default","datanodes":["ozone_datanode_3.ozone_default"],"lastLeaderElection":0,"duration":1022137,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200711 13:23:57.991" endtime="20200711 13:23:57.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:57.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:57.992" endtime="20200711 13:23:57.993"></status>
</kw>
<msg timestamp="20200711 13:23:57.993" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.953" endtime="20200711 13:23:57.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.993" endtime="20200711 13:23:57.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.994" endtime="20200711 13:23:57.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.996" endtime="20200711 13:23:57.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.997" endtime="20200711 13:23:57.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.997" endtime="20200711 13:23:57.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:57.998" endtime="20200711 13:23:57.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:58.002" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:58.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:58.030" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.999" endtime="20200711 13:23:58.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:58.031" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0   8924      0 --:--:-- --:--:-- --:--:--  9300
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":77180473344},"containers":4,"volumes":17,"buckets":51,"keys":167}</msg>
<status status="PASS" starttime="20200711 13:23:58.030" endtime="20200711 13:23:58.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:58.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:58.031" endtime="20200711 13:23:58.032"></status>
</kw>
<msg timestamp="20200711 13:23:58.032" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:57.998" endtime="20200711 13:23:58.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.032" endtime="20200711 13:23:58.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.033" endtime="20200711 13:23:58.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.033" endtime="20200711 13:23:58.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:58.038" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:58.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:58.070" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:58.035" endtime="20200711 13:23:58.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:58.071" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 418
&lt; 
{ [data not shown]

100   418  100   418    0     0  15536      0 --:--:-- --:--:-- --:--:-- 16076
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozone_datanode_1.ozone_default","firstReportTimestamp":1594472875559,"lastReportTimestamp":1594473745521},{"containerId":1,"datanodeHost":"ozone_datanode_2.ozone_default","firstReportTimestamp":1594472875281,"lastReportTimestamp":1594473775228},{"containerId":1,"datanodeHost":"ozone_datanode_3.ozone_default","firstReportTimestamp":1594472875594,"lastReportTimestamp":1594473805547}]</msg>
<status status="PASS" starttime="20200711 13:23:58.070" endtime="20200711 13:23:58.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:58.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:58.071" endtime="20200711 13:23:58.072"></status>
</kw>
<msg timestamp="20200711 13:23:58.073" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:58.034" endtime="20200711 13:23:58.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.073" endtime="20200711 13:23:58.074"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:23:57.889" endtime="20200711 13:23:58.074" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.076" endtime="20200711 13:23:58.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:23:58.080" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:23:58.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:23:58.095" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:58.077" endtime="20200711 13:23:58.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:23:58.096" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.23.0.6...
* Connected to recon (172.23.0.6) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Date: Sat, 11 Jul 2020 13:23:58 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Last-Modified: Sat, 11 Jul 2020 12:41:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0   275k      0 --:--:-- --:--:-- --:--:--  316k
* Connection #0 to host recon left intact
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200711 13:23:58.095" endtime="20200711 13:23:58.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:23:58.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:23:58.096" endtime="20200711 13:23:58.097"></status>
</kw>
<msg timestamp="20200711 13:23:58.097" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:23:58.077" endtime="20200711 13:23:58.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200711 13:23:58.097" endtime="20200711 13:23:58.097"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:23:58.075" endtime="20200711 13:23:58.098" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200711 13:23:29.161" endtime="20200711 13:23:58.099"></status>
</suite>
<status status="PASS" starttime="20200711 13:23:29.134" endtime="20200711 13:23:58.103"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-recon">ozone-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozone-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
