<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 12:59:19.306" rpa="false">
<suite id="s1" name="ozone-om-ha-s3-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 12:59:19.369" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 12:59:27.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 12:59:27.788" level="INFO">${output} = 2020-07-11 12:59:20,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:21,099 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:19.364" endtime="20200711 12:59:27.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 12:59:27.789" level="INFO">2020-07-11 12:59:20,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:21,099 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 12:59:21,099 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 12:59:22,148 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 12:59:22,150 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-11 12:59:22,152 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 12:59:22,161 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:22,196 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-38633, with hadoop as owner.
2020-07-11 12:59:22,271 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-38633/bucket-0-50108, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 12:59:22,946 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 12:59:23,163 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:24,164 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,030
Average Time spent in key creation: 00:00:00,094
Average Time spent in key write: 00:00:00,756
Total bytes written: 10240
Total Execution time: 00:00:06,017
***************************************************</msg>
<status status="PASS" starttime="20200711 12:59:27.789" endtime="20200711 12:59:27.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 12:59:27.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 12:59:27.790" endtime="20200711 12:59:27.790"></status>
</kw>
<msg timestamp="20200711 12:59:27.791" level="INFO">${result} = 2020-07-11 12:59:20,829 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:21,099 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:19.363" endtime="20200711 12:59:27.791"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 12:59:27.791" endtime="20200711 12:59:27.792"></status>
</kw>
<status status="PASS" starttime="20200711 12:59:27.791" endtime="20200711 12:59:27.792"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 12:59:19.363" endtime="20200711 12:59:27.792" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 12:59:27.798" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 12:59:33.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 12:59:33.414" level="INFO">${output} = 2020-07-11 12:59:29,283 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:29,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:27.794" endtime="20200711 12:59:33.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 12:59:33.416" level="INFO">2020-07-11 12:59:29,283 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:29,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 12:59:29,473 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 12:59:29,654 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nyc2ret8z4
2020-07-11 12:59:29,676 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:30,687 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:30,798 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-11 12:59:30,859 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 12:59:31,538 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 12:59:31,690 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:32,690 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 12:59:33,038 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1471.743618, max=1471.743618, mean=1471.743618, stddev=0.0, median=1471.743618, p75=1471.743618, p95=1471.743618, p98=1471.743618, p99=1471.743618, p999=1471.743618, mean_rate=0.46868762997950003, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 12:59:33,039 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-11 12:59:33,042 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 12:59:33,042 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 12:59:33.415" endtime="20200711 12:59:33.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 12:59:33.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 12:59:33.416" endtime="20200711 12:59:33.416"></status>
</kw>
<msg timestamp="20200711 12:59:33.417" level="INFO">${result} = 2020-07-11 12:59:29,283 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:29,473 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:27.794" endtime="20200711 12:59:33.417"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 12:59:33.417" endtime="20200711 12:59:33.418"></status>
</kw>
<status status="PASS" starttime="20200711 12:59:33.417" endtime="20200711 12:59:33.418"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 12:59:27.793" endtime="20200711 12:59:33.419" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 12:59:33.423" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 12:59:37.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 12:59:37.560" level="INFO">${output} = 2020-07-11 12:59:34,918 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:33.421" endtime="20200711 12:59:37.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 12:59:37.561" level="INFO">2020-07-11 12:59:34,918 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 12:59:35,111 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 12:59:35,284 [main] INFO freon.BaseFreonGenerator: Executing test with prefix iyvdnobxcw
2020-07-11 12:59:35,304 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:36,308 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:37,309 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 12:59:37,529 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=79.833626, max=79.833626, mean=79.833626, stddev=0.0, median=79.833626, p75=79.833626, p95=79.833626, p98=79.833626, p99=79.833626, p999=79.833626, mean_rate=0.8821729828177659, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 12:59:37,529 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-11 12:59:37,530 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 12:59:37,530 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 12:59:37.561" endtime="20200711 12:59:37.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 12:59:37.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 12:59:37.562" endtime="20200711 12:59:37.563"></status>
</kw>
<msg timestamp="20200711 12:59:37.563" level="INFO">${result} = 2020-07-11 12:59:34,918 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:35,111 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:33.420" endtime="20200711 12:59:37.563"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 12:59:37.564" endtime="20200711 12:59:37.564"></status>
</kw>
<status status="PASS" starttime="20200711 12:59:37.564" endtime="20200711 12:59:37.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 12:59:33.419" endtime="20200711 12:59:37.565" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 12:59:37.569" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 12:59:41.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 12:59:41.891" level="INFO">${output} = 2020-07-11 12:59:39,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:39,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:37.567" endtime="20200711 12:59:41.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 12:59:41.893" level="INFO">2020-07-11 12:59:39,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:39,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 12:59:39,361 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-11 12:59:39,569 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gvtq7ncew2
2020-07-11 12:59:39,589 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:40,595 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-11 12:59:41,596 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-11 12:59:41,865 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=28.542617, max=28.542617, mean=28.542617, stddev=0.0, median=28.542617, p75=28.542617, p95=28.542617, p98=28.542617, p99=28.542617, p999=28.542617, mean_rate=0.869759449046215, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-11 12:59:41,866 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-11 12:59:41,867 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-11 12:59:41,867 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200711 12:59:41.891" endtime="20200711 12:59:41.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 12:59:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 12:59:41.893" endtime="20200711 12:59:41.893"></status>
</kw>
<msg timestamp="20200711 12:59:41.894" level="INFO">${result} = 2020-07-11 12:59:39,150 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 12:59:39,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 12:59:37.566" endtime="20200711 12:59:41.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200711 12:59:41.894" endtime="20200711 12:59:41.895"></status>
</kw>
<status status="PASS" starttime="20200711 12:59:41.894" endtime="20200711 12:59:41.895"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 12:59:37.565" endtime="20200711 12:59:41.895" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200711 12:59:19.337" endtime="20200711 12:59:41.896"></status>
</suite>
<status status="PASS" starttime="20200711 12:59:19.306" endtime="20200711 12:59:41.899"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-om-ha-s3-freon">ozone-om-ha-s3-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-om-ha-s3-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
