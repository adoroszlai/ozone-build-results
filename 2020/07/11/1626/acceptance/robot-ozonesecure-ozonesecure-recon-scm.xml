<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200711 13:55:06.918" rpa="false">
<suite id="s1" name="ozonesecure-recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s1-t1" name="Generate Freon data">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:06.977" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:06.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:06.978" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:06.973" endtime="20200711 13:55:06.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:06.979" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:06.979" endtime="20200711 13:55:06.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:06.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:06.979" endtime="20200711 13:55:06.980"></status>
</kw>
<msg timestamp="20200711 13:55:06.980" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:06.972" endtime="20200711 13:55:06.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200711 13:55:06.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20200711 13:55:06.980" endtime="20200711 13:55:06.981"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:06.985" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:07.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:07.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:06.982" endtime="20200711 13:55:07.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:07.002" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:07.001" endtime="20200711 13:55:07.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:07.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:07.002" endtime="20200711 13:55:07.003"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:06.982" endtime="20200711 13:55:07.003"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:06.981" endtime="20200711 13:55:07.003"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:06.972" endtime="20200711 13:55:07.003"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:06.972" endtime="20200711 13:55:07.003"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:07.009" level="INFO">Running command 'ozone freon rk --replicationType=RATIS --numOfVolumes 1 --numOfBuckets 1 --numOfKeys 10 --keySize 1025 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:15.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:15.846" level="INFO">${output} = 2020-07-11 13:55:08,415 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:55:08,566 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200711 13:55:07.004" endtime="20200711 13:55:15.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:15.847" level="INFO">2020-07-11 13:55:08,415 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-11 13:55:08,566 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-11 13:55:08,566 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-07-11 13:55:10,259 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 10.
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: Key size: 1025 bytes
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-11 13:55:10,260 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-11 13:55:10,268 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-11 13:55:10,281 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2020-07-11 13:55:10,308 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-30393, with testuser/scm@EXAMPLE.COM as owner.
2020-07-11 13:55:10,351 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-30393/bucket-0-26334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-11 13:55:10,830 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-11 13:55:11,290 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 10
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,005
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:00,133
Average Time spent in key write: 00:00:00,438
Total bytes written: 10250
Total Execution time: 00:00:06,684
***************************************************</msg>
<status status="PASS" starttime="20200711 13:55:15.846" endtime="20200711 13:55:15.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:15.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:15.848" endtime="20200711 13:55:15.848"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:07.004" endtime="20200711 13:55:15.848"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:06.971" endtime="20200711 13:55:15.848" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Check if Recon picks up OM data">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
</arguments>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:15.854" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:15.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:15.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:15.852" endtime="20200711 13:55:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:15.857" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:15.857" endtime="20200711 13:55:15.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:15.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:15.857" endtime="20200711 13:55:15.858"></status>
</kw>
<msg timestamp="20200711 13:55:15.858" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:15.852" endtime="20200711 13:55:15.858"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:15.862" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:15.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:15.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:15.859" endtime="20200711 13:55:15.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:15.876" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:15.876" endtime="20200711 13:55:15.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:15.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:15.876" endtime="20200711 13:55:15.877"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:15.859" endtime="20200711 13:55:15.877"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:15.858" endtime="20200711 13:55:15.877"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:15.851" endtime="20200711 13:55:15.877"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:15.851" endtime="20200711 13:55:15.877"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:15.881" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:16.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:16.048" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:15.878" endtime="20200711 13:55:16.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:16.049" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:15 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:15 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:15 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 77
&lt; 
{ [data not shown]

100    77  100    77    0     0    476      0 --:--:-- --:--:-- --:--:--   478
* Connection #0 to host recon left intact
{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":144}]}}</msg>
<status status="PASS" starttime="20200711 13:55:16.048" endtime="20200711 13:55:16.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:16.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:16.049" endtime="20200711 13:55:16.049"></status>
</kw>
<msg timestamp="20200711 13:55:16.050" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:15.877" endtime="20200711 13:55:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:16.050" endtime="20200711 13:55:16.051"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:16.054" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:16.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:16.104" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:16.051" endtime="20200711 13:55:16.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:16.105" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0  67520      0 --:--:-- --:--:-- --:--:-- 68186
* Connection #0 to host recon left intact
[{"volume":"vol-1-41503","bucket":"bucket-3-91329","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-2-99151","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-1-41541","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-0-05014","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-4-16015","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-3-29060","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-3-59024","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-2-40115","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-4-58904","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-4-38283","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-1-22035","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-2-69779","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-1-53458","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-3-72731","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-4-42767","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-1-84531","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-2-35673","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-1-98500","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-2-67728","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-0-82723","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-0-05944","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-0-00669","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-3-50272","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-0-81393","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-4-16157","fileSize":16384,"count":5},{"volume":"11878-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"11878-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest348","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-86413","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42179","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-42179","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-06751","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-98889","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200711 13:55:16.104" endtime="20200711 13:55:16.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:16.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:16.105" endtime="20200711 13:55:16.106"></status>
</kw>
<msg timestamp="20200711 13:55:16.106" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:16.051" endtime="20200711 13:55:16.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<msg timestamp="20200711 13:55:16.107" level="FAIL">'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:16 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 2932
&lt; 
{ [data not shown]

100  2932  100  2932    0     0  67520      0 --:--:-- --:--:-- --:--:-- 68186
* Connection #0 to host recon left intact
[{"volume":"vol-1-41503","bucket":"bucket-3-91329","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-2-99151","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-1-41541","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-0-05014","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-4-16015","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-3-29060","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-3-59024","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-2-40115","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-4-58904","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-4-38283","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-1-22035","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-2-69779","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-1-53458","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-3-72731","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-4-42767","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-1-84531","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-2-35673","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-1-98500","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-2-67728","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-0-82723","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-0-05944","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-0-00669","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-3-50272","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-0-81393","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-4-16157","fileSize":16384,"count":5},{"volume":"11878-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"11878-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest348","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-86413","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42179","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-42179","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-06751","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-98889","fileSize":1024,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20200711 13:55:16.107" endtime="20200711 13:55:16.108"></status>
</kw>
<status status="FAIL" starttime="20200711 13:55:15.850" endtime="20200711 13:55:16.108"></status>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.114" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.116" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:26.111" endtime="20200711 13:55:26.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.117" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:26.117" endtime="20200711 13:55:26.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.118" endtime="20200711 13:55:26.118"></status>
</kw>
<msg timestamp="20200711 13:55:26.118" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:26.110" endtime="20200711 13:55:26.118"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.122" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:26.120" endtime="20200711 13:55:26.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.136" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:26.136" endtime="20200711 13:55:26.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.137" endtime="20200711 13:55:26.138"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.119" endtime="20200711 13:55:26.138"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.118" endtime="20200711 13:55:26.138"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.110" endtime="20200711 13:55:26.138"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.109" endtime="20200711 13:55:26.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.142" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.166" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.139" endtime="20200711 13:55:26.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.167" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 182
&lt; 
{ [data not shown]

100   182  100   182    0     0  16418      0 --:--:-- --:--:-- --:--:-- 18200
* Connection #0 to host recon left intact
{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":146},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20200711 13:55:26.166" endtime="20200711 13:55:26.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.167" endtime="20200711 13:55:26.168"></status>
</kw>
<msg timestamp="20200711 13:55:26.170" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.138" endtime="20200711 13:55:26.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"ContainerID\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.170" endtime="20200711 13:55:26.170"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/utilization/fileCount</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.179" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.204" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.171" endtime="20200711 13:55:26.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.205" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/utilization/fileCount HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 3144
&lt; 
{ [data not shown]

100  3144  100  3144    0     0   163k      0 --:--:-- --:--:-- --:--:--  170k
* Connection #0 to host recon left intact
[{"volume":"vol-1-41503","bucket":"bucket-3-91329","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-2-99151","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-1-41541","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-0-05014","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-4-16015","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-3-29060","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-3-59024","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-2-40115","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-4-58904","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-4-38283","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-1-22035","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-2-69779","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-1-53458","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-3-72731","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-4-42767","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-1-84531","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-2-35673","fileSize":16384,"count":5},{"volume":"vol-4-80910","bucket":"bucket-1-98500","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-2-67728","fileSize":16384,"count":5},{"volume":"vol-1-41503","bucket":"bucket-0-82723","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-0-05944","fileSize":16384,"count":5},{"volume":"vol-2-21501","bucket":"bucket-0-00669","fileSize":16384,"count":5},{"volume":"vol-0-68309","bucket":"bucket-3-50272","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-0-81393","fileSize":16384,"count":5},{"volume":"vol-3-27320","bucket":"bucket-4-16157","fileSize":16384,"count":5},{"volume":"11878-rpcwoport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoport2","bucket":"bb1","fileSize":32768,"count":1},{"volume":"11878-rpcwport","bucket":"bb1","fileSize":32768,"count":0},{"volume":"11878-rpcwoscheme","bucket":"bb1","fileSize":32768,"count":0},{"volume":"fstest348","bucket":"bk1","fileSize":32768,"count":1},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-ofs","fileSize":32768,"count":3},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":1024,"count":4},{"volume":"fstest1","bucket":"bucket1-o3fs","fileSize":32768,"count":3},{"volume":"s3v","bucket":"bucket-86413","fileSize":1024,"count":2},{"volume":"s3v","bucket":"bucket-42179","fileSize":8388608,"count":4},{"volume":"s3v","bucket":"bucket-42179","fileSize":16777216,"count":2},{"volume":"s3v","bucket":"bucket-06751","fileSize":1024,"count":1},{"volume":"s3v","bucket":"destbucket-98889","fileSize":1024,"count":1},{"volume":"s3v","bucket":"bucket-72841","fileSize":1024,"count":2},{"volume":"vol-0-30393","bucket":"bucket-0-26334","fileSize":2048,"count":10},{"volume":"s3v","bucket":"bucket-65298","fileSize":1024,"count":1}]</msg>
<status status="PASS" starttime="20200711 13:55:26.204" endtime="20200711 13:55:26.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.207" endtime="20200711 13:55:26.211"></status>
</kw>
<msg timestamp="20200711 13:55:26.211" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.171" endtime="20200711 13:55:26.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.211" endtime="20200711 13:55:26.211"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.108" endtime="20200711 13:55:26.212"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:15.850" endtime="20200711 13:55:26.212"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:15.849" endtime="20200711 13:55:26.212" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Check if Recon picks up DN heartbeats">
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/datanodes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.217" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.253" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.214" endtime="20200711 13:55:26.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.254" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/datanodes HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1812
&lt; 
{ [data not shown]

100  1812  100  1812    0     0  58857      0 --:--:-- --:--:-- --:--:-- 58451
* Connection #0 to host recon left intact
{"totalCount":3,"datanodes":[{"uuid":"ad5ec5f6-438e-4502-8a71-1a2f7ae3f91a","hostname":"ozonesecure_datanode_3.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594475711918,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25266262016},"pipelines":[{"pipelineID":"48f9dbf5-86bc-4b94-bfb1-80f645b3dd03","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"8b082e68-27a5-4a39-8648-01eb7439db31","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_3.ozonesecure_default"}],"containers":2,"leaderCount":1},{"uuid":"8a410e31-c8e6-4d98-8f14-aa1d281dfb4c","hostname":"ozonesecure_datanode_2.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594475711946,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25266286592},"pipelines":[{"pipelineID":"48f9dbf5-86bc-4b94-bfb1-80f645b3dd03","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"c8b131d7-035a-4b08-abc4-79ed31c821b1","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"}],"containers":2,"leaderCount":2},{"uuid":"e198a9d0-55b9-4ea0-ad1c-5ce4fdb46b52","hostname":"ozonesecure_datanode_1.ozonesecure_default","state":"HEALTHY","lastHeartbeat":1594475711867,"storageReport":{"capacity":89311358976,"used":8192,"remaining":25266266112},"pipelines":[{"pipelineID":"48f9dbf5-86bc-4b94-bfb1-80f645b3dd03","replicationType":"RATIS","replicationFactor":3,"leaderNode":"ozonesecure_datanode_2.ozonesecure_default"},{"pipelineID":"f863c45c-4e64-4219-97b3-22eca2125fa5","replicationType":"RATIS","replicationFactor":1,"leaderNode":"ozonesecure_datanode_1.ozonesecure_default"}],"containers":2,"leaderCount":1}]}</msg>
<status status="PASS" starttime="20200711 13:55:26.253" endtime="20200711 13:55:26.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.254" endtime="20200711 13:55:26.255"></status>
</kw>
<msg timestamp="20200711 13:55:26.255" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.213" endtime="20200711 13:55:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanodes</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.255" endtime="20200711 13:55:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.256" endtime="20200711 13:55:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.256" endtime="20200711 13:55:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.257" endtime="20200711 13:55:26.257"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/pipelines</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.260" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.287" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.257" endtime="20200711 13:55:26.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.287" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/pipelines HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 1368
&lt; 
{ [data not shown]

100  1368  100  1368    0     0  61788      0 --:--:-- --:--:-- --:--:-- 62181
* Connection #0 to host recon left intact
{"totalCount":4,"pipelines":[{"pipelineId":"48f9dbf5-86bc-4b94-bfb1-80f645b3dd03","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default","ozonesecure_datanode_2.ozonesecure_default","ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1268469,"leaderElections":0,"replicationType":"RATIS","replicationFactor":3,"containers":1},{"pipelineId":"c8b131d7-035a-4b08-abc4-79ed31c821b1","status":"OPEN","leaderNode":"ozonesecure_datanode_2.ozonesecure_default","datanodes":["ozonesecure_datanode_2.ozonesecure_default"],"lastLeaderElection":0,"duration":1269028,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"8b082e68-27a5-4a39-8648-01eb7439db31","status":"OPEN","leaderNode":"ozonesecure_datanode_3.ozonesecure_default","datanodes":["ozonesecure_datanode_3.ozonesecure_default"],"lastLeaderElection":0,"duration":1268529,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1},{"pipelineId":"f863c45c-4e64-4219-97b3-22eca2125fa5","status":"OPEN","leaderNode":"ozonesecure_datanode_1.ozonesecure_default","datanodes":["ozonesecure_datanode_1.ozonesecure_default"],"lastLeaderElection":0,"duration":1268597,"leaderElections":0,"replicationType":"RATIS","replicationFactor":1,"containers":1}]}</msg>
<status status="PASS" starttime="20200711 13:55:26.287" endtime="20200711 13:55:26.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.288" endtime="20200711 13:55:26.289"></status>
</kw>
<msg timestamp="20200711 13:55:26.289" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.257" endtime="20200711 13:55:26.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>pipelines</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.289" endtime="20200711 13:55:26.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.289" endtime="20200711 13:55:26.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.290" endtime="20200711 13:55:26.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.290" endtime="20200711 13:55:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_2</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.291" endtime="20200711 13:55:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>datanode_3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.291" endtime="20200711 13:55:26.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/clusterState</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.294" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.312" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.292" endtime="20200711 13:55:26.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.312" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/clusterState HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 186
&lt; 
{ [data not shown]

100   186  100   186    0     0  16182      0 --:--:-- --:--:-- --:--:-- 16909
* Connection #0 to host recon left intact
{"pipelines":4,"totalDatanodes":3,"healthyDatanodes":3,"storageReport":{"capacity":267934076928,"used":24576,"remaining":75798814720},"containers":4,"volumes":25,"buckets":55,"keys":171}</msg>
<status status="PASS" starttime="20200711 13:55:26.312" endtime="20200711 13:55:26.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.313" endtime="20200711 13:55:26.313"></status>
</kw>
<msg timestamp="20200711 13:55:26.313" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.292" endtime="20200711 13:55:26.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"totalDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.314" endtime="20200711 13:55:26.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"healthyDatanodes\":3</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.314" endtime="20200711 13:55:26.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"pipelines\":4</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.314" endtime="20200711 13:55:26.315"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.318" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.340" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.316" endtime="20200711 13:55:26.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.341" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET /api/v1/containers/1/replicaHistory HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Content-Length: 454
&lt; 
{ [data not shown]

100   454  100   454    0     0  28028      0 --:--:-- --:--:-- --:--:-- 28375
* Connection #0 to host recon left intact
[{"containerId":1,"datanodeHost":"ozonesecure_datanode_1.ozonesecure_default","firstReportTimestamp":1594474488536,"lastReportTimestamp":1594475628539},{"containerId":1,"datanodeHost":"ozonesecure_datanode_2.ozonesecure_default","firstReportTimestamp":1594474488225,"lastReportTimestamp":1594475657901},{"containerId":1,"datanodeHost":"ozonesecure_datanode_3.ozonesecure_default","firstReportTimestamp":1594474488477,"lastReportTimestamp":1594475658445}]</msg>
<status status="PASS" starttime="20200711 13:55:26.340" endtime="20200711 13:55:26.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.341" endtime="20200711 13:55:26.341"></status>
</kw>
<msg timestamp="20200711 13:55:26.342" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.315" endtime="20200711 13:55:26.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.342" endtime="20200711 13:55:26.342"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:26.212" endtime="20200711 13:55:26.342" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Check if Recon Web UI is up">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.347" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.350" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20200711 13:55:26.345" endtime="20200711 13:55:26.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.351" level="INFO">scm</msg>
<status status="PASS" starttime="20200711 13:55:26.350" endtime="20200711 13:55:26.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.351" endtime="20200711 13:55:26.351"></status>
</kw>
<msg timestamp="20200711 13:55:26.352" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20200711 13:55:26.345" endtime="20200711 13:55:26.352"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.354" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200711 13:55:26.353" endtime="20200711 13:55:26.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.372" level="INFO"></msg>
<status status="PASS" starttime="20200711 13:55:26.371" endtime="20200711 13:55:26.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.373" endtime="20200711 13:55:26.373"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.352" endtime="20200711 13:55:26.373"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.352" endtime="20200711 13:55:26.373"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.345" endtime="20200711 13:55:26.373"></status>
</kw>
<status status="PASS" starttime="20200711 13:55:26.344" endtime="20200711 13:55:26.373"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200711 13:55:26.377" level="INFO">Running command 'curl --negotiate -u : -v http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20200711 13:55:26.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200711 13:55:26.417" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.374" endtime="20200711 13:55:26.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200711 13:55:26.419" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to recon port 9888 (#0)
*   Trying 172.26.0.5...
* Connected to recon (172.26.0.5) port 9888 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 442
&lt; 
* Ignoring the response-body
{ [data not shown]

100   442  100   442    0     0  19219      0 --:--:-- --:--:-- --:--:-- 20090
* Connection #0 to host recon left intact
* Issue another request to this URL: 'http://recon:9888/'
* Found bundle for host recon: 0xadff20
* Re-using existing connection! (#0) with host recon
* Connected to recon (172.26.0.5) port 9888 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET / HTTP/1.1
&gt; Authorization: Negotiate YIICUwYJKoZIhvcSAQICAQBuggJCMIICPqADAgEFoQMCAQ6iBwMFACAAAACjggFSYYIBTjCCAUqgAwIBBaENGwtFWEFNUExFLkNPTaIYMBagAwIBA6EPMA0bBEhUVFAbBXJlY29uo4IBGDCCARSgAwIBEqEDAgECooIBBgSCAQJyPe7ucpFXtqmCSpDzxgkMmnb1XPrKRj3dNbdmnW86JFtXPEC1kCfAMAgssLgyz2OSijjpkuNy8f98CIiQ636vWPKRQMw6cvpw90gPtDIV2AI8FsVfWjnENPMIUm4iX1r0mGtSlagpvXorV2vSYQ7cRA+c27AlU83WSvGa2nSoY6ZsdAHpZQbOOz6wy1I+o/+uHtFxCQKh6H1oqXALjTelAVsE8MWe36CtZ7EeaBhwUj8pE8kJqiu1tIZWg/8SuUJG9DRJT8RsTj9ZLlkdjNPwefh6ym1do9FiKa6G+8fCuUjgRmlbgjD/pdYdcL/rdw1JtC1caUI1DSGJpWIEhuY6JoOkgdIwgc+gAwIBEqKBxwSBxHJW0+8rhZ2JQZ7W9buDWa/gH3t8BLO55rabEhl0kDz0VL3N7ZGIvd8ednNiq6dRtgrWY4iRnfPYmj/Uf6mcw9EWwRfhINaBtR8HXDFlG6zoyJogb/2v8weql6i2AWro2QDbs3PNIHP5g6FjtGjNzg9/igfQO9/b5o56oL3R7JwSW8vU7AK8fSaqQk7BRKgCP1IZ72QjpfriiAL+asjngE9TZk8BS8qM4vMLxlwiuNNidJbIukc0h/rsYBFU6vBHLEckVbY=
&gt; User-Agent: curl/7.29.0
&gt; Host: recon:9888
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Expires: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Date: Sat, 11 Jul 2020 13:55:26 GMT
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC9sk2TRjxv/FGEQqlgUAw7HV14IjdLZ9biYoj+dgoQRS9viRuJ6avL8TIy4S7PISqHh1DS+MTopT04YQ8gFLu/KqC
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1594511726413&amp;s=I4g43PHwgh00voNumcmS+qGIpszhuOAd0kNCYNnlaQM="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 11 Jul 2020 12:41:00 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 2267
&lt; 
{ [data not shown]

100  2267  100  2267    0     0  65007      0 --:--:-- --:--:-- --:--:-- 65007
* Closing connection 0
&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.91e4d86d.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.2ec5409c.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.ea8f5368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.01252c4e.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.418" endtime="20200711 13:55:26.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200711 13:55:26.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200711 13:55:26.420" endtime="20200711 13:55:26.420"></status>
</kw>
<msg timestamp="20200711 13:55:26.421" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20200711 13:55:26.374" endtime="20200711 13:55:26.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Ozone Recon</arg>
</arguments>
<status status="PASS" starttime="20200711 13:55:26.422" endtime="20200711 13:55:26.422"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200711 13:55:26.343" endtime="20200711 13:55:26.422" critical="yes"></status>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20200711 13:55:06.947" endtime="20200711 13:55:26.423"></status>
</suite>
<status status="PASS" starttime="20200711 13:55:06.919" endtime="20200711 13:55:26.426"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozonesecure-recon">ozonesecure-recon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Recon-Api">ozonesecure-recon.Recon-Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
