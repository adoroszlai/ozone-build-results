<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200702 17:48:20.468" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:48:20.534" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:48:28.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:48:28.902" level="INFO">${output} = 2020-07-02 17:48:22,082 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:22,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:20.527" endtime="20200702 17:48:28.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:48:28.904" level="INFO">2020-07-02 17:48:22,082 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:22,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-02 17:48:22,265 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-02 17:48:23,342 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-02 17:48:23,343 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-07-02 17:48:23,346 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-02 17:48:23,354 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:23,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-50382, with hadoop as owner.
2020-07-02 17:48:23,455 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-50382/bucket-0-64742, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:48:24,099 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-02 17:48:24,361 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,018
Average Time spent in key creation: 00:00:00,087
Average Time spent in key write: 00:00:00,754
Total bytes written: 10240
Total Execution time: 00:00:06,027
***************************************************</msg>
<status status="PASS" starttime="20200702 17:48:28.903" endtime="20200702 17:48:28.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:48:28.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:48:28.904" endtime="20200702 17:48:28.904"></status>
</kw>
<msg timestamp="20200702 17:48:28.905" level="INFO">${result} = 2020-07-02 17:48:22,082 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:22,265 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:20.527" endtime="20200702 17:48:28.905"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:48:28.905" endtime="20200702 17:48:28.906"></status>
</kw>
<status status="PASS" starttime="20200702 17:48:28.905" endtime="20200702 17:48:28.906"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:48:20.526" endtime="20200702 17:48:28.906" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:48:28.912" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:48:34.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:48:34.594" level="INFO">${output} = 2020-07-02 17:48:30,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:30,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:28.908" endtime="20200702 17:48:34.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:48:34.595" level="INFO">2020-07-02 17:48:30,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:30,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-02 17:48:30,661 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-02 17:48:30,841 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xaismsiiut
2020-07-02 17:48:30,857 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:31,867 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:31,998 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-07-02 17:48:32,067 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:48:32,651 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-02 17:48:32,868 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:33,868 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-02 17:48:34,229 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1613.414875, max=1613.414875, mean=1613.414875, stddev=0.0, median=1613.414875, p75=1613.414875, p95=1613.414875, p98=1613.414875, p99=1613.414875, p999=1613.414875, mean_rate=0.4692044515639088, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-02 17:48:34,230 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-07-02 17:48:34,232 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-02 17:48:34,232 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200702 17:48:34.594" endtime="20200702 17:48:34.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:48:34.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:48:34.596" endtime="20200702 17:48:34.596"></status>
</kw>
<msg timestamp="20200702 17:48:34.596" level="INFO">${result} = 2020-07-02 17:48:30,472 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:30,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:28.908" endtime="20200702 17:48:34.596"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:48:34.597" endtime="20200702 17:48:34.597"></status>
</kw>
<status status="PASS" starttime="20200702 17:48:34.597" endtime="20200702 17:48:34.597"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:48:28.907" endtime="20200702 17:48:34.598" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:48:34.602" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:48:38.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:48:38.728" level="INFO">${output} = 2020-07-02 17:48:36,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:36,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:34.599" endtime="20200702 17:48:38.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:48:38.729" level="INFO">2020-07-02 17:48:36,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:36,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-02 17:48:36,302 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-02 17:48:36,508 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qyxqsiyjbf
2020-07-02 17:48:36,524 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:37,534 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:38,535 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-02 17:48:38,678 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=65.085076, max=65.085076, mean=65.085076, stddev=0.0, median=65.085076, p75=65.085076, p95=65.085076, p98=65.085076, p99=65.085076, p999=65.085076, mean_rate=0.8972240645596858, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-02 17:48:38,679 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-02 17:48:38,682 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-02 17:48:38,682 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200702 17:48:38.729" endtime="20200702 17:48:38.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:48:38.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:48:38.730" endtime="20200702 17:48:38.730"></status>
</kw>
<msg timestamp="20200702 17:48:38.731" level="INFO">${result} = 2020-07-02 17:48:36,095 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:36,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:34.599" endtime="20200702 17:48:38.731"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:48:38.731" endtime="20200702 17:48:38.732"></status>
</kw>
<status status="PASS" starttime="20200702 17:48:38.731" endtime="20200702 17:48:38.732"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:48:34.598" endtime="20200702 17:48:38.732" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:48:38.736" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:48:42.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:48:42.777" level="INFO">${output} = 2020-07-02 17:48:40,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:40,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:38.734" endtime="20200702 17:48:42.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:48:42.778" level="INFO">2020-07-02 17:48:40,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:40,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-02 17:48:40,396 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-02 17:48:40,553 [main] INFO freon.BaseFreonGenerator: Executing test with prefix rocrzxvssm
2020-07-02 17:48:40,578 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:41,586 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-07-02 17:48:42,588 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-07-02 17:48:42,715 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.01922, max=17.01922, mean=17.01922, stddev=0.0, median=17.01922, p75=17.01922, p95=17.01922, p98=17.01922, p99=17.01922, p999=17.01922, mean_rate=0.8884780518991412, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-07-02 17:48:42,716 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-07-02 17:48:42,734 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-07-02 17:48:42,734 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200702 17:48:42.777" endtime="20200702 17:48:42.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:48:42.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:48:42.779" endtime="20200702 17:48:42.779"></status>
</kw>
<msg timestamp="20200702 17:48:42.779" level="INFO">${result} = 2020-07-02 17:48:40,256 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:48:40,396 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:48:38.733" endtime="20200702 17:48:42.780"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:48:42.780" endtime="20200702 17:48:42.781"></status>
</kw>
<status status="PASS" starttime="20200702 17:48:42.780" endtime="20200702 17:48:42.781"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:48:38.733" endtime="20200702 17:48:42.781" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200702 17:48:20.499" endtime="20200702 17:48:42.783"></status>
</suite>
<status status="PASS" starttime="20200702 17:48:20.469" endtime="20200702 17:48:42.786"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
