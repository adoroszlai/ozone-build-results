<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200702 17:30:22.909" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200702 17:30:22.969" endtime="20200702 17:30:22.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:30:22.975" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:30:23.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:30:23.080" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 02 Jul 2020 17:30:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Jul 2020 16:59:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200702 17:30:22.970" endtime="20200702 17:30:23.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:30:23.082" level="INFO">HTTP/1.1 200 OK
Date: Thu, 02 Jul 2020 17:30:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Jul 2020 16:59:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200702 17:30:23.081" endtime="20200702 17:30:23.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:30:23.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:30:23.082" endtime="20200702 17:30:23.083"></status>
</kw>
<msg timestamp="20200702 17:30:23.083" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 02 Jul 2020 17:30:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 02 Jul 2020 16:59:04 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200702 17:30:22.970" endtime="20200702 17:30:23.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200702 17:30:23.083" endtime="20200702 17:30:23.083"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:30:22.968" endtime="20200702 17:30:23.084" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:30:23.087" endtime="20200702 17:30:23.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:30:23.094" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:06.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:06.461" level="INFO">${output} = 2020-07-02 17:30:24,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:30:25,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:30:23.090" endtime="20200702 17:31:06.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:06.462" level="INFO">2020-07-02 17:30:24,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:30:25,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-07-02 17:30:25,134 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-07-02 17:30:27,416 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-07-02 17:30:27,417 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-07-02 17:30:27,418 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-07-02 17:30:27,420 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-07-02 17:30:27,420 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-07-02 17:30:27,420 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-07-02 17:30:27,420 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-07-02 17:30:27,427 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-07-02 17:30:27,430 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-07-02 17:30:27,452 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-02 17:30:27,565 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-70878, with hadoop as owner.
2020-07-02 17:30:27,912 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-84757, with hadoop as owner.
2020-07-02 17:30:27,920 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-26340, with hadoop as owner.
2020-07-02 17:30:27,928 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-57429, with hadoop as owner.
2020-07-02 17:30:27,937 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-02625, with hadoop as owner.
2020-07-02 17:30:27,958 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70878/bucket-0-11945, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,044 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84757/bucket-0-08314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,061 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26340/bucket-0-58446, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,070 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57429/bucket-0-95221, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,079 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-02625/bucket-0-58161, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,088 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70878/bucket-1-99637, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,099 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84757/bucket-1-25008, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,105 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26340/bucket-1-56061, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,111 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57429/bucket-1-43945, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-02625/bucket-1-85822, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,134 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70878/bucket-2-01043, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,146 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84757/bucket-2-56760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,152 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26340/bucket-2-55257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,161 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57429/bucket-2-24439, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,170 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-02625/bucket-2-13525, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,174 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70878/bucket-3-50071, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,180 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84757/bucket-3-78298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26340/bucket-3-56735, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,191 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57429/bucket-3-18367, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,235 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-02625/bucket-3-13102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,240 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-70878/bucket-4-22508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,244 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-84757/bucket-4-67096, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,249 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26340/bucket-4-40640, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,255 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-57429/bucket-4-82406, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,260 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-02625/bucket-4-19905, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-07-02 17:30:28,459 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-02 17:30:29,363 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-07-02 17:30:29,459 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-07-02 17:30:30,460 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-02 17:30:31,460 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-07-02 17:30:32,462 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-07-02 17:30:33,462 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-07-02 17:30:34,463 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-07-02 17:30:35,463 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-07-02 17:30:36,464 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-07-02 17:30:37,464 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-02 17:30:38,465 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-02 17:30:39,465 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-07-02 17:30:40,466 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2020-07-02 17:30:41,468 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-07-02 17:30:42,469 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-02 17:30:43,469 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-07-02 17:30:44,482 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-07-02 17:30:45,482 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-02 17:30:46,483 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-02 17:30:47,483 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2020-07-02 17:30:48,484 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-07-02 17:30:49,484 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-07-02 17:30:50,485 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-07-02 17:30:51,485 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-07-02 17:30:52,486 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-07-02 17:30:53,488 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-07-02 17:30:54,489 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-02 17:30:55,489 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-07-02 17:30:56,489 [Thread-7] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2020-07-02 17:30:57,490 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-02 17:30:58,490 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-02 17:30:59,491 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-07-02 17:31:00,494 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-07-02 17:31:01,495 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,466
Average Time spent in bucket creation: 00:00:00,219
Average Time spent in key creation: 00:00:02,376
Average Time spent in key write: 00:00:00,842
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:40,786
***************************************************</msg>
<status status="PASS" starttime="20200702 17:31:06.461" endtime="20200702 17:31:06.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:06.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:06.462" endtime="20200702 17:31:06.463"></status>
</kw>
<msg timestamp="20200702 17:31:06.463" level="INFO">${result} = 2020-07-02 17:30:24,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-07-02 17:30:25,134 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200702 17:30:23.090" endtime="20200702 17:31:06.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:06.464" endtime="20200702 17:31:06.465"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:06.464" endtime="20200702 17:31:06.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:06.465" endtime="20200702 17:31:06.465"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200702 17:30:23.085" endtime="20200702 17:31:06.465" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200702 17:30:22.941" endtime="20200702 17:31:06.467"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200702 17:31:06.477" level="INFO">${random} = 50248</msg>
<status status="PASS" starttime="20200702 17:31:06.477" endtime="20200702 17:31:06.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200702 17:31:06.478" level="INFO">${prefix} = 50248</msg>
<status status="PASS" starttime="20200702 17:31:06.478" endtime="20200702 17:31:06.478"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:06.476" endtime="20200702 17:31:06.478"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:06.479" endtime="20200702 17:31:06.479"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:06.483" level="INFO">Running command 'ozone sh volume info o3://om:9862/50248-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:09.151" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:31:09.151" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50248-rpcwoport is not found</msg>
<status status="PASS" starttime="20200702 17:31:06.480" endtime="20200702 17:31:09.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:09.152" level="INFO">VOLUME_NOT_FOUND Volume 50248-rpcwoport is not found</msg>
<status status="PASS" starttime="20200702 17:31:09.151" endtime="20200702 17:31:09.152"></status>
</kw>
<msg timestamp="20200702 17:31:09.152" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50248-rpcwoport is not found</msg>
<status status="PASS" starttime="20200702 17:31:06.480" endtime="20200702 17:31:09.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:09.153" endtime="20200702 17:31:09.153"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:09.157" level="INFO">Running command 'ozone sh volume create o3://om:9862/50248-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:12.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:12.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:09.154" endtime="20200702 17:31:12.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:12.098" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:12.097" endtime="20200702 17:31:12.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:12.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:12.098" endtime="20200702 17:31:12.098"></status>
</kw>
<msg timestamp="20200702 17:31:12.099" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:31:09.153" endtime="20200702 17:31:12.099"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:12.099" endtime="20200702 17:31:12.099"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:12.103" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="50248-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:15.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:15.152" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200702 17:31:12.100" endtime="20200702 17:31:15.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:15.153" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:31:15.153" endtime="20200702 17:31:15.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:15.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:15.154" endtime="20200702 17:31:15.154"></status>
</kw>
<msg timestamp="20200702 17:31:15.155" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200702 17:31:12.099" endtime="20200702 17:31:15.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:15.155" endtime="20200702 17:31:15.155"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:15.158" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50248-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:18.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:18.371" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200702 17:31:15.156" endtime="20200702 17:31:18.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:18.372" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:31:18.371" endtime="20200702 17:31:18.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:18.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:18.372" endtime="20200702 17:31:18.373"></status>
</kw>
<msg timestamp="20200702 17:31:18.373" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:31:11.920Z",
  "modificationTime": "2020-07-02T17:31:11.920Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200702 17:31:15.155" endtime="20200702 17:31:18.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:18.373" endtime="20200702 17:31:18.374"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:18.377" level="INFO">Running command 'ozone sh volume update o3://om:9862/50248-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:21.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:21.409" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50248-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:31:11.920Z",
  "modificationTime" : "2020-07-02T17:31:20.898Z",
  "acl...</msg>
<status status="PASS" starttime="20200702 17:31:18.374" endtime="20200702 17:31:21.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:21.410" level="INFO">{
  "metadata" : { },
  "name" : "50248-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:31:11.920Z",
  "modificationTime" : "2020-07-02T17:31:20.898Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200702 17:31:21.409" endtime="20200702 17:31:21.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:21.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:21.411" endtime="20200702 17:31:21.411"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:18.374" endtime="20200702 17:31:21.412"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:21.416" level="INFO">Running command 'ozone sh volume info o3://om:9862/50248-rpcwoport | jq -r '. | select(.name=="50248-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:24.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:24.344" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:31:21.413" endtime="20200702 17:31:24.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:24.346" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200702 17:31:24.345" endtime="20200702 17:31:24.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:24.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:24.346" endtime="20200702 17:31:24.346"></status>
</kw>
<msg timestamp="20200702 17:31:24.347" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:31:21.412" endtime="20200702 17:31:24.347"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:24.347" endtime="20200702 17:31:24.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:24.351" level="INFO">Running command 'ozone sh bucket create o3://om:9862/50248-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:27.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:27.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:24.348" endtime="20200702 17:31:27.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:27.099" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:27.098" endtime="20200702 17:31:27.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:27.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:27.099" endtime="20200702 17:31:27.100"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:24.348" endtime="20200702 17:31:27.100"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:27.104" level="INFO">Running command 'ozone sh bucket info o3://om:9862/50248-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:30.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:30.160" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200702 17:31:27.101" endtime="20200702 17:31:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:30.162" level="INFO">DISK</msg>
<status status="PASS" starttime="20200702 17:31:30.161" endtime="20200702 17:31:30.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:30.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:30.162" endtime="20200702 17:31:30.162"></status>
</kw>
<msg timestamp="20200702 17:31:30.163" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200702 17:31:27.100" endtime="20200702 17:31:30.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:30.163" endtime="20200702 17:31:30.163"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:30.166" level="INFO">Running command 'ozone sh bucket list o3://om:9862/50248-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:33.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:33.281" level="INFO">${output} = 50248-rpcwoport</msg>
<status status="PASS" starttime="20200702 17:31:30.164" endtime="20200702 17:31:33.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:33.282" level="INFO">50248-rpcwoport</msg>
<status status="PASS" starttime="20200702 17:31:33.281" endtime="20200702 17:31:33.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:33.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:33.282" endtime="20200702 17:31:33.283"></status>
</kw>
<msg timestamp="20200702 17:31:33.283" level="INFO">${result} = 50248-rpcwoport</msg>
<status status="PASS" starttime="20200702 17:31:30.163" endtime="20200702 17:31:33.283"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:33.283" endtime="20200702 17:31:33.284"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:33.290" level="INFO">Running command 'ozone sh key put o3://om:9862/50248-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:38.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:38.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:33.286" endtime="20200702 17:31:38.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:38.218" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:38.218" endtime="20200702 17:31:38.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:38.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:38.219" endtime="20200702 17:31:38.219"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:33.285" endtime="20200702 17:31:38.220"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:38.222" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:38.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:38.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:38.220" endtime="20200702 17:31:38.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:38.226" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:38.225" endtime="20200702 17:31:38.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:38.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:38.226" endtime="20200702 17:31:38.227"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:38.220" endtime="20200702 17:31:38.227"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:38.231" level="INFO">Running command 'ozone sh key get o3://om:9862/50248-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:42.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:42.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:38.228" endtime="20200702 17:31:42.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:42.802" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:42.801" endtime="20200702 17:31:42.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:42.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:42.802" endtime="20200702 17:31:42.803"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:38.228" endtime="20200702 17:31:42.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:42.808" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:42.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:42.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:42.804" endtime="20200702 17:31:42.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:42.812" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:42.811" endtime="20200702 17:31:42.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:42.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:42.812" endtime="20200702 17:31:42.813"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:42.804" endtime="20200702 17:31:42.813"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:42.817" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/50248-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:47.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:47.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:42.814" endtime="20200702 17:31:47.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:47.925" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:47.924" endtime="20200702 17:31:47.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:47.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:47.925" endtime="20200702 17:31:47.925"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:42.813" endtime="20200702 17:31:47.926"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:47.929" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:47.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:47.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:47.927" endtime="20200702 17:31:47.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:47.932" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:47.932" endtime="20200702 17:31:47.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:47.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:47.933" endtime="20200702 17:31:47.933"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:47.926" endtime="20200702 17:31:47.934"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:47.936" level="INFO">Running command 'ozone sh key get o3://om:9862/50248-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:52.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:52.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:47.934" endtime="20200702 17:31:52.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:52.390" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:52.390" endtime="20200702 17:31:52.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:52.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:52.391" endtime="20200702 17:31:52.391"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:47.934" endtime="20200702 17:31:52.391"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:52.396" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:52.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:52.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:52.392" endtime="20200702 17:31:52.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:52.398" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:52.398" endtime="20200702 17:31:52.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:52.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:52.399" endtime="20200702 17:31:52.399"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:52.392" endtime="20200702 17:31:52.399"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:52.402" level="INFO">Running command 'ozone sh key info o3://om:9862/50248-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:55.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:55.344" level="INFO">${output} = {
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:45.520Z",
  "modificationTime": "2020-07-02T17:31:47.438Z",...</msg>
<status status="PASS" starttime="20200702 17:31:52.400" endtime="20200702 17:31:55.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:55.345" level="INFO">{
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:45.520Z",
  "modificationTime": "2020-07-02T17:31:47.438Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445451011162240,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:31:55.345" endtime="20200702 17:31:55.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:55.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:55.346" endtime="20200702 17:31:55.346"></status>
</kw>
<msg timestamp="20200702 17:31:55.346" level="INFO">${result} = {
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:45.520Z",
  "modificationTime": "2020-07-02T17:31:47.438Z",...</msg>
<status status="PASS" starttime="20200702 17:31:52.400" endtime="20200702 17:31:55.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200702 17:31:55.347" endtime="20200702 17:31:55.347"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:55.351" level="INFO">Running command 'ozone sh key delete o3://om:9862/50248-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:31:57.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:31:57.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:55.348" endtime="20200702 17:31:57.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:31:57.870" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:31:57.869" endtime="20200702 17:31:57.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:31:57.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:31:57.870" endtime="20200702 17:31:57.871"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:55.347" endtime="20200702 17:31:57.871"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:31:57.875" level="INFO">Running command 'ozone sh key cp o3://om:9862/50248-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:03.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:03.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:31:57.872" endtime="20200702 17:32:03.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:03.507" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:03.506" endtime="20200702 17:32:03.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:03.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:03.507" endtime="20200702 17:32:03.507"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:57.871" endtime="20200702 17:32:03.508"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:03.511" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:03.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:03.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:03.508" endtime="20200702 17:32:03.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:03.514" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:03.513" endtime="20200702 17:32:03.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:03.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:03.514" endtime="20200702 17:32:03.515"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:03.508" endtime="20200702 17:32:03.515"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:03.518" level="INFO">Running command 'ozone sh key get o3://om:9862/50248-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:08.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:08.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:03.516" endtime="20200702 17:32:08.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:08.017" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:08.016" endtime="20200702 17:32:08.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:08.017" endtime="20200702 17:32:08.017"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:03.515" endtime="20200702 17:32:08.018"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:08.020" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:08.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:08.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:08.018" endtime="20200702 17:32:08.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:08.024" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:08.024" endtime="20200702 17:32:08.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:08.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:08.025" endtime="20200702 17:32:08.025"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:08.018" endtime="20200702 17:32:08.025"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:08.028" level="INFO">Running command 'ozone sh key delete o3://om:9862/50248-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:10.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:10.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:08.026" endtime="20200702 17:32:10.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:10.778" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:10.777" endtime="20200702 17:32:10.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:10.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:10.778" endtime="20200702 17:32:10.779"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:08.026" endtime="20200702 17:32:10.779"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:10.782" level="INFO">Running command 'ozone sh key get o3://om:9862/50248-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:13.730" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:32:13.730" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:32:10.780" endtime="20200702 17:32:13.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:13.731" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:32:13.730" endtime="20200702 17:32:13.731"></status>
</kw>
<msg timestamp="20200702 17:32:13.731" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:32:10.779" endtime="20200702 17:32:13.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:13.732" endtime="20200702 17:32:13.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:13.737" level="INFO">Running command 'ozone sh key get --force o3://om:9862/50248-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:18.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:18.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:13.733" endtime="20200702 17:32:18.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:18.287" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:18.286" endtime="20200702 17:32:18.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:18.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:18.287" endtime="20200702 17:32:18.288"></status>
</kw>
<msg timestamp="20200702 17:32:18.288" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:32:13.732" endtime="20200702 17:32:18.288"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:18.288" endtime="20200702 17:32:18.288"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:18.292" level="INFO">Running command 'ozone sh key info o3://om:9862/50248-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:21.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:21.300" level="INFO">${output} = {
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:35.888Z",
  "modificationTime": "2020-07-02T17:31:37.748Z",
  "re...</msg>
<status status="PASS" starttime="20200702 17:32:18.290" endtime="20200702 17:32:21.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:21.301" level="INFO">{
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:35.888Z",
  "modificationTime": "2020-07-02T17:31:37.748Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445450379985020,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:32:21.300" endtime="20200702 17:32:21.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:21.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:21.301" endtime="20200702 17:32:21.302"></status>
</kw>
<msg timestamp="20200702 17:32:21.302" level="INFO">${result} = {
  "volumeName": "50248-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:31:35.888Z",
  "modificationTime": "2020-07-02T17:31:37.748Z",
  "re...</msg>
<status status="PASS" starttime="20200702 17:32:18.289" endtime="20200702 17:32:21.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:21.302" endtime="20200702 17:32:21.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:21.307" level="INFO">Running command 'ozone sh key list o3://om:9862/50248-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:24.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:24.340" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200702 17:32:21.303" endtime="20200702 17:32:24.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:24.341" level="INFO">key1</msg>
<status status="PASS" starttime="20200702 17:32:24.341" endtime="20200702 17:32:24.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:24.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:24.341" endtime="20200702 17:32:24.342"></status>
</kw>
<msg timestamp="20200702 17:32:24.342" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200702 17:32:21.303" endtime="20200702 17:32:24.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:24.343" endtime="20200702 17:32:24.343"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:24.347" level="INFO">Running command 'ozone sh key rename o3://om:9862/50248-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:26.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:26.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:24.344" endtime="20200702 17:32:26.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:26.981" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:26.981" endtime="20200702 17:32:26.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:26.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:26.982" endtime="20200702 17:32:26.982"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:24.343" endtime="20200702 17:32:26.982"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:26.986" level="INFO">Running command 'ozone sh key list o3://om:9862/50248-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:30.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:30.082" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200702 17:32:26.983" endtime="20200702 17:32:30.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:30.083" level="INFO">key2</msg>
<status status="PASS" starttime="20200702 17:32:30.082" endtime="20200702 17:32:30.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:30.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:30.084" endtime="20200702 17:32:30.086"></status>
</kw>
<msg timestamp="20200702 17:32:30.087" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200702 17:32:26.983" endtime="20200702 17:32:30.087"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:30.087" endtime="20200702 17:32:30.087"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:30.090" level="INFO">Running command 'ozone sh key delete o3://om:9862/50248-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:32.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:32.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:30.088" endtime="20200702 17:32:32.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:32.701" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:32.701" endtime="20200702 17:32:32.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:32.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:32.702" endtime="20200702 17:32:32.703"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:30.087" endtime="20200702 17:32:32.703"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:33.284" endtime="20200702 17:32:32.703"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:33.284" endtime="20200702 17:32:32.703"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:32.708" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/50248-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:35.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:35.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:32.704" endtime="20200702 17:32:35.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:35.401" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:35.400" endtime="20200702 17:32:35.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:35.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:35.401" endtime="20200702 17:32:35.401"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:32.703" endtime="20200702 17:32:35.402"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:35.405" level="INFO">Running command 'ozone sh volume delete o3://om:9862/50248-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:38.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:38.102" level="INFO">${output} = Volume 50248-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200702 17:32:35.403" endtime="20200702 17:32:38.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:38.103" level="INFO">Volume 50248-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200702 17:32:38.103" endtime="20200702 17:32:38.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:38.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:38.104" endtime="20200702 17:32:38.104"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:35.402" endtime="20200702 17:32:38.104"></status>
</kw>
<status status="PASS" starttime="20200702 17:31:06.479" endtime="20200702 17:32:38.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:31:06.478" endtime="20200702 17:32:38.105" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:38.106" endtime="20200702 17:32:38.107"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:38.110" level="INFO">Running command 'ozone sh volume create o3://om:9862/50248-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:40.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:40.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:32:38.108" endtime="20200702 17:32:40.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:40.874" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:32:40.873" endtime="20200702 17:32:40.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:40.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:40.874" endtime="20200702 17:32:40.875"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:38.107" endtime="20200702 17:32:40.875"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:40.878" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50248-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:43.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:43.855" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:32:40.876" endtime="20200702 17:32:43.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:43.856" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:32:43.855" endtime="20200702 17:32:43.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:43.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:43.856" endtime="20200702 17:32:43.857"></status>
</kw>
<msg timestamp="20200702 17:32:43.857" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:32:40.875" endtime="20200702 17:32:43.857"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:43.857" endtime="20200702 17:32:43.858"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:43.862" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/50248-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:46.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:46.347" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200702 17:32:43.859" endtime="20200702 17:32:46.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:46.348" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200702 17:32:46.347" endtime="20200702 17:32:46.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:46.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:46.348" endtime="20200702 17:32:46.349"></status>
</kw>
<msg timestamp="20200702 17:32:46.350" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200702 17:32:43.858" endtime="20200702 17:32:46.350"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:46.354" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50248-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:49.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:49.371" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:32:46.350" endtime="20200702 17:32:49.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:49.373" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:32:49.372" endtime="20200702 17:32:49.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:49.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:49.373" endtime="20200702 17:32:49.373"></status>
</kw>
<msg timestamp="20200702 17:32:49.374" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:32:46.350" endtime="20200702 17:32:49.374"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:49.374" endtime="20200702 17:32:49.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:49.378" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/50248-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:52.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:52.174" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200702 17:32:49.376" endtime="20200702 17:32:52.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:52.175" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200702 17:32:52.175" endtime="20200702 17:32:52.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:52.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:52.176" endtime="20200702 17:32:52.176"></status>
</kw>
<msg timestamp="20200702 17:32:52.176" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200702 17:32:49.375" endtime="20200702 17:32:52.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:52.180" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50248-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:54.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:54.938" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:32:52.177" endtime="20200702 17:32:54.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:54.939" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:32:54.938" endtime="20200702 17:32:54.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:54.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:54.939" endtime="20200702 17:32:54.940"></status>
</kw>
<msg timestamp="20200702 17:32:54.940" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:32:52.177" endtime="20200702 17:32:54.940"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:32:54.940" endtime="20200702 17:32:54.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:54.945" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/50248-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:32:57.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:32:57.688" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:32:54.942" endtime="20200702 17:32:57.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:32:57.689" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:32:57.689" endtime="20200702 17:32:57.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:32:57.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:32:57.690" endtime="20200702 17:32:57.690"></status>
</kw>
<msg timestamp="20200702 17:32:57.690" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:32:54.942" endtime="20200702 17:32:57.690"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:32:57.693" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/50248-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:00.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:00.451" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200702 17:32:57.691" endtime="20200702 17:33:00.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:00.452" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:00.452" endtime="20200702 17:33:00.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:00.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:00.453" endtime="20200702 17:33:00.453"></status>
</kw>
<msg timestamp="20200702 17:33:00.454" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200702 17:32:57.691" endtime="20200702 17:33:00.454"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:00.454" endtime="20200702 17:33:00.454"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:00.454" endtime="20200702 17:33:00.455"></status>
</kw>
<status status="PASS" starttime="20200702 17:32:38.107" endtime="20200702 17:33:00.455"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:32:38.105" endtime="20200702 17:33:00.456" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:00.457" endtime="20200702 17:33:00.457"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:00.461" level="INFO">Running command 'ozone sh bucket create o3://om:9862/50248-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:03.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:03.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:33:00.459" endtime="20200702 17:33:03.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:03.302" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:33:03.301" endtime="20200702 17:33:03.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:03.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:03.302" endtime="20200702 17:33:03.303"></status>
</kw>
<status status="PASS" starttime="20200702 17:33:00.459" endtime="20200702 17:33:03.303"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:03.306" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50248-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:06.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:06.271" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:03.304" endtime="20200702 17:33:06.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:06.273" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:06.272" endtime="20200702 17:33:06.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:06.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:06.273" endtime="20200702 17:33:06.274"></status>
</kw>
<msg timestamp="20200702 17:33:06.274" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:03.303" endtime="20200702 17:33:06.274"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:06.274" endtime="20200702 17:33:06.275"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:06.278" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/50248-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:09.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:09.070" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200702 17:33:06.276" endtime="20200702 17:33:09.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:09.071" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200702 17:33:09.070" endtime="20200702 17:33:09.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:09.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:09.072" endtime="20200702 17:33:09.072"></status>
</kw>
<msg timestamp="20200702 17:33:09.072" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200702 17:33:06.275" endtime="20200702 17:33:09.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:09.077" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50248-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:11.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:11.804" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:09.073" endtime="20200702 17:33:11.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:11.806" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:11.805" endtime="20200702 17:33:11.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:11.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:11.806" endtime="20200702 17:33:11.807"></status>
</kw>
<msg timestamp="20200702 17:33:11.807" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:09.073" endtime="20200702 17:33:11.807"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:11.807" endtime="20200702 17:33:11.808"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:11.812" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/50248-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:14.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:14.668" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:11.809" endtime="20200702 17:33:14.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:14.669" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:14.668" endtime="20200702 17:33:14.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:14.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:14.669" endtime="20200702 17:33:14.670"></status>
</kw>
<msg timestamp="20200702 17:33:14.671" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:11.808" endtime="20200702 17:33:14.671"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:14.674" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50248-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:17.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:17.652" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:14.671" endtime="20200702 17:33:17.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:17.654" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:17.653" endtime="20200702 17:33:17.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:17.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:17.654" endtime="20200702 17:33:17.654"></status>
</kw>
<msg timestamp="20200702 17:33:17.655" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:14.671" endtime="20200702 17:33:17.655"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:17.655" endtime="20200702 17:33:17.656"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:17.660" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/50248-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:20.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:20.371" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:17.657" endtime="20200702 17:33:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:20.372" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:20.372" endtime="20200702 17:33:20.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:20.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:20.373" endtime="20200702 17:33:20.373"></status>
</kw>
<msg timestamp="20200702 17:33:20.374" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:17.656" endtime="20200702 17:33:20.374"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:20.377" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/50248-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:23.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:23.471" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200702 17:33:20.374" endtime="20200702 17:33:23.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:23.472" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:23.472" endtime="20200702 17:33:23.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:23.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:23.473" endtime="20200702 17:33:23.473"></status>
</kw>
<msg timestamp="20200702 17:33:23.473" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200702 17:33:20.374" endtime="20200702 17:33:23.473"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:23.474" endtime="20200702 17:33:23.474"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:23.474" endtime="20200702 17:33:23.475"></status>
</kw>
<status status="PASS" starttime="20200702 17:33:00.457" endtime="20200702 17:33:23.475"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:33:00.456" endtime="20200702 17:33:23.475" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:23.476" endtime="20200702 17:33:23.477"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:23.480" level="INFO">Running command 'ozone sh key put o3://om:9862/50248-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:30.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:30.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:33:23.478" endtime="20200702 17:33:30.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:30.988" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:33:30.987" endtime="20200702 17:33:30.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:30.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:30.988" endtime="20200702 17:33:30.989"></status>
</kw>
<status status="PASS" starttime="20200702 17:33:23.478" endtime="20200702 17:33:30.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:30.992" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50248-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:34.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:34.074" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:30.990" endtime="20200702 17:33:34.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:34.075" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:34.075" endtime="20200702 17:33:34.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:34.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:34.076" endtime="20200702 17:33:34.076"></status>
</kw>
<msg timestamp="20200702 17:33:34.076" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:30.989" endtime="20200702 17:33:34.076"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:34.077" endtime="20200702 17:33:34.077"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:34.082" level="INFO">Running command 'ozone sh key addacl o3://om:9862/50248-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:36.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:36.965" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200702 17:33:34.078" endtime="20200702 17:33:36.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:36.966" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200702 17:33:36.965" endtime="20200702 17:33:36.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:36.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:36.966" endtime="20200702 17:33:36.967"></status>
</kw>
<msg timestamp="20200702 17:33:36.967" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200702 17:33:34.077" endtime="20200702 17:33:36.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:36.970" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50248-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:39.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:39.990" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:36.968" endtime="20200702 17:33:39.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:39.992" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:39.991" endtime="20200702 17:33:39.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:39.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:39.992" endtime="20200702 17:33:39.993"></status>
</kw>
<msg timestamp="20200702 17:33:39.993" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:36.967" endtime="20200702 17:33:39.993"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:39.993" endtime="20200702 17:33:39.994"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:39.998" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/50248-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:42.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:42.690" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:39.995" endtime="20200702 17:33:42.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:42.692" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:42.691" endtime="20200702 17:33:42.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:42.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:42.692" endtime="20200702 17:33:42.692"></status>
</kw>
<msg timestamp="20200702 17:33:42.693" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200702 17:33:39.995" endtime="20200702 17:33:42.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:42.697" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50248-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:45.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:45.664" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:42.694" endtime="20200702 17:33:45.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:45.665" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:45.664" endtime="20200702 17:33:45.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:45.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:45.666" endtime="20200702 17:33:45.666"></status>
</kw>
<msg timestamp="20200702 17:33:45.667" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200702 17:33:42.693" endtime="20200702 17:33:45.667"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:45.667" endtime="20200702 17:33:45.668"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:45.672" level="INFO">Running command 'ozone sh key setacl o3://om:9862/50248-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:48.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:48.291" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:45.669" endtime="20200702 17:33:48.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:48.292" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:48.291" endtime="20200702 17:33:48.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:48.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:48.292" endtime="20200702 17:33:48.293"></status>
</kw>
<msg timestamp="20200702 17:33:48.293" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200702 17:33:45.668" endtime="20200702 17:33:48.293"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:48.296" level="INFO">Running command 'ozone sh key getacl o3://om:9862/50248-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:51.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:51.445" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200702 17:33:48.294" endtime="20200702 17:33:51.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:51.447" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200702 17:33:51.446" endtime="20200702 17:33:51.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:51.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:51.447" endtime="20200702 17:33:51.448"></status>
</kw>
<msg timestamp="20200702 17:33:51.448" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200702 17:33:48.294" endtime="20200702 17:33:51.448"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:51.448" endtime="20200702 17:33:51.449"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:51.449" endtime="20200702 17:33:51.450"></status>
</kw>
<status status="PASS" starttime="20200702 17:33:23.477" endtime="20200702 17:33:51.450"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:33:23.476" endtime="20200702 17:33:51.450" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:51.451" endtime="20200702 17:33:51.452"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:51.457" level="INFO">Running command 'ozone sh volume info o3:///50248-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:54.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:33:54.238" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50248-rpcwport is not found</msg>
<status status="PASS" starttime="20200702 17:33:51.453" endtime="20200702 17:33:54.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:54.239" level="INFO">VOLUME_NOT_FOUND Volume 50248-rpcwport is not found</msg>
<status status="PASS" starttime="20200702 17:33:54.238" endtime="20200702 17:33:54.239"></status>
</kw>
<msg timestamp="20200702 17:33:54.240" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50248-rpcwport is not found</msg>
<status status="PASS" starttime="20200702 17:33:51.452" endtime="20200702 17:33:54.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:54.240" endtime="20200702 17:33:54.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:54.244" level="INFO">Running command 'ozone sh volume create o3:///50248-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:33:56.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:33:56.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:33:54.241" endtime="20200702 17:33:56.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:33:56.994" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:33:56.993" endtime="20200702 17:33:56.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:33:56.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:33:56.994" endtime="20200702 17:33:56.995"></status>
</kw>
<msg timestamp="20200702 17:33:56.995" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:33:54.240" endtime="20200702 17:33:56.995"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200702 17:33:56.996" endtime="20200702 17:33:56.996"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:33:57.001" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="50248-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:00.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:00.056" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200702 17:33:56.997" endtime="20200702 17:34:00.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:00.057" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:34:00.057" endtime="20200702 17:34:00.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:00.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:00.058" endtime="20200702 17:34:00.058"></status>
</kw>
<msg timestamp="20200702 17:34:00.059" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200702 17:33:56.996" endtime="20200702 17:34:00.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:00.059" endtime="20200702 17:34:00.060"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:00.063" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50248-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:03.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:03.050" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200702 17:34:00.060" endtime="20200702 17:34:03.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:03.051" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:34:03.050" endtime="20200702 17:34:03.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:03.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:03.051" endtime="20200702 17:34:03.052"></status>
</kw>
<msg timestamp="20200702 17:34:03.052" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:33:56.779Z",
  "modificationTime": "2020-07-02T17:33:56.779Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200702 17:34:00.060" endtime="20200702 17:34:03.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:03.052" endtime="20200702 17:34:03.052"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:03.057" level="INFO">Running command 'ozone sh volume update o3:///50248-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:05.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:05.938" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50248-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:33:56.779Z",
  "modificationTime" : "2020-07-02T17:34:05.557Z",
  "acls...</msg>
<status status="PASS" starttime="20200702 17:34:03.053" endtime="20200702 17:34:05.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:05.939" level="INFO">{
  "metadata" : { },
  "name" : "50248-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:33:56.779Z",
  "modificationTime" : "2020-07-02T17:34:05.557Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200702 17:34:05.938" endtime="20200702 17:34:05.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:05.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:05.939" endtime="20200702 17:34:05.940"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:03.053" endtime="20200702 17:34:05.940"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:05.944" level="INFO">Running command 'ozone sh volume info o3:///50248-rpcwport | jq -r '. | select(.name=="50248-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:09.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:09.373" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:34:05.941" endtime="20200702 17:34:09.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:09.374" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200702 17:34:09.373" endtime="20200702 17:34:09.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:09.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:09.374" endtime="20200702 17:34:09.375"></status>
</kw>
<msg timestamp="20200702 17:34:09.375" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:34:05.940" endtime="20200702 17:34:09.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:09.375" endtime="20200702 17:34:09.376"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:09.380" level="INFO">Running command 'ozone sh bucket create o3:///50248-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:11.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:11.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:09.376" endtime="20200702 17:34:11.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:11.989" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:11.988" endtime="20200702 17:34:11.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:11.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:11.989" endtime="20200702 17:34:11.989"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:09.376" endtime="20200702 17:34:11.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:11.994" level="INFO">Running command 'ozone sh bucket info o3:///50248-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:14.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:14.936" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200702 17:34:11.991" endtime="20200702 17:34:14.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:14.937" level="INFO">DISK</msg>
<status status="PASS" starttime="20200702 17:34:14.937" endtime="20200702 17:34:14.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:14.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:14.938" endtime="20200702 17:34:14.938"></status>
</kw>
<msg timestamp="20200702 17:34:14.939" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200702 17:34:11.990" endtime="20200702 17:34:14.939"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:14.939" endtime="20200702 17:34:14.939"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:14.944" level="INFO">Running command 'ozone sh bucket list o3:///50248-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:17.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:17.965" level="INFO">${output} = 50248-rpcwport</msg>
<status status="PASS" starttime="20200702 17:34:14.940" endtime="20200702 17:34:17.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:17.966" level="INFO">50248-rpcwport</msg>
<status status="PASS" starttime="20200702 17:34:17.965" endtime="20200702 17:34:17.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:17.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:17.966" endtime="20200702 17:34:17.967"></status>
</kw>
<msg timestamp="20200702 17:34:17.967" level="INFO">${result} = 50248-rpcwport</msg>
<status status="PASS" starttime="20200702 17:34:14.940" endtime="20200702 17:34:17.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:17.967" endtime="20200702 17:34:17.968"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:17.973" level="INFO">Running command 'ozone sh key put o3:///50248-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:23.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:23.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:17.969" endtime="20200702 17:34:23.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:23.193" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:23.192" endtime="20200702 17:34:23.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:23.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:23.193" endtime="20200702 17:34:23.193"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:17.969" endtime="20200702 17:34:23.194"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:23.198" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:23.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:23.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:23.194" endtime="20200702 17:34:23.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:23.202" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:23.201" endtime="20200702 17:34:23.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:23.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:23.202" endtime="20200702 17:34:23.202"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:23.194" endtime="20200702 17:34:23.202"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:23.205" level="INFO">Running command 'ozone sh key get o3:///50248-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:28.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:28.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:23.203" endtime="20200702 17:34:28.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:28.095" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:28.094" endtime="20200702 17:34:28.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:28.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:28.095" endtime="20200702 17:34:28.096"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:23.203" endtime="20200702 17:34:28.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:28.099" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:28.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:28.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:28.097" endtime="20200702 17:34:28.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:28.103" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:28.102" endtime="20200702 17:34:28.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:28.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:28.103" endtime="20200702 17:34:28.104"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:28.096" endtime="20200702 17:34:28.104"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:28.107" level="INFO">Running command 'ozone sh key put -t RATIS o3:///50248-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:33.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:33.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:28.105" endtime="20200702 17:34:33.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:33.015" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:33.014" endtime="20200702 17:34:33.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:33.015" endtime="20200702 17:34:33.016"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:28.104" endtime="20200702 17:34:33.016"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:33.019" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:33.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:33.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:33.017" endtime="20200702 17:34:33.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:33.023" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:33.022" endtime="20200702 17:34:33.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:33.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:33.023" endtime="20200702 17:34:33.023"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:33.016" endtime="20200702 17:34:33.024"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:33.027" level="INFO">Running command 'ozone sh key get o3:///50248-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:37.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:37.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:33.025" endtime="20200702 17:34:37.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:37.680" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:37.679" endtime="20200702 17:34:37.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:37.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:37.680" endtime="20200702 17:34:37.681"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:33.024" endtime="20200702 17:34:37.681"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:37.684" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:37.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:37.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:37.682" endtime="20200702 17:34:37.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:37.688" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:37.688" endtime="20200702 17:34:37.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:37.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:37.689" endtime="20200702 17:34:37.689"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:37.681" endtime="20200702 17:34:37.689"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:37.694" level="INFO">Running command 'ozone sh key info o3:///50248-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:40.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:40.841" level="INFO">${output} = {
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:30.686Z",
  "modificationTime": "2020-07-02T17:34:32.523Z",
...</msg>
<status status="PASS" starttime="20200702 17:34:37.690" endtime="20200702 17:34:40.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:40.843" level="INFO">{
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:30.686Z",
  "modificationTime": "2020-07-02T17:34:32.523Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445461835612290,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:34:40.842" endtime="20200702 17:34:40.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:40.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:40.843" endtime="20200702 17:34:40.844"></status>
</kw>
<msg timestamp="20200702 17:34:40.844" level="INFO">${result} = {
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:30.686Z",
  "modificationTime": "2020-07-02T17:34:32.523Z",
...</msg>
<status status="PASS" starttime="20200702 17:34:37.690" endtime="20200702 17:34:40.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:40.844" endtime="20200702 17:34:40.844"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:40.849" level="INFO">Running command 'ozone sh key delete o3:///50248-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:43.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:43.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:40.845" endtime="20200702 17:34:43.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:43.511" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:43.510" endtime="20200702 17:34:43.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:43.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:43.511" endtime="20200702 17:34:43.512"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:40.845" endtime="20200702 17:34:43.512"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:43.516" level="INFO">Running command 'ozone sh key cp o3:///50248-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:48.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:48.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:43.513" endtime="20200702 17:34:48.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:48.852" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:48.851" endtime="20200702 17:34:48.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:48.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:48.852" endtime="20200702 17:34:48.852"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:43.512" endtime="20200702 17:34:48.853"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:48.856" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:48.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:48.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:48.853" endtime="20200702 17:34:48.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:48.859" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:48.858" endtime="20200702 17:34:48.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:48.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:48.859" endtime="20200702 17:34:48.860"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:48.853" endtime="20200702 17:34:48.860"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:48.863" level="INFO">Running command 'ozone sh key get o3:///50248-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:53.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:53.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:48.861" endtime="20200702 17:34:53.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:53.541" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:53.541" endtime="20200702 17:34:53.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:53.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:53.542" endtime="20200702 17:34:53.542"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:48.860" endtime="20200702 17:34:53.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:53.545" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:53.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:53.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:53.543" endtime="20200702 17:34:53.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:53.549" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:53.548" endtime="20200702 17:34:53.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:53.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:53.549" endtime="20200702 17:34:53.550"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:53.543" endtime="20200702 17:34:53.550"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:53.553" level="INFO">Running command 'ozone sh key delete o3:///50248-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:56.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:34:56.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:53.551" endtime="20200702 17:34:56.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:56.222" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:34:56.221" endtime="20200702 17:34:56.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:34:56.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:34:56.222" endtime="20200702 17:34:56.223"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:53.550" endtime="20200702 17:34:56.223"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:56.226" level="INFO">Running command 'ozone sh key get o3:///50248-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:34:58.987" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:34:58.987" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:34:56.224" endtime="20200702 17:34:58.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:34:58.988" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:34:58.987" endtime="20200702 17:34:58.988"></status>
</kw>
<msg timestamp="20200702 17:34:58.989" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:34:56.223" endtime="20200702 17:34:58.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:34:58.989" endtime="20200702 17:34:58.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:34:58.992" level="INFO">Running command 'ozone sh key get --force o3:///50248-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:03.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:03.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:34:58.990" endtime="20200702 17:35:03.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:03.816" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:03.815" endtime="20200702 17:35:03.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:03.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:03.816" endtime="20200702 17:35:03.816"></status>
</kw>
<msg timestamp="20200702 17:35:03.817" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:34:58.989" endtime="20200702 17:35:03.817"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:03.817" endtime="20200702 17:35:03.817"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:03.820" level="INFO">Running command 'ozone sh key info o3:///50248-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:06.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:06.822" level="INFO">${output} = {
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:20.671Z",
  "modificationTime": "2020-07-02T17:34:22.611Z",
  "rep...</msg>
<status status="PASS" starttime="20200702 17:35:03.818" endtime="20200702 17:35:06.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:06.824" level="INFO">{
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:20.671Z",
  "modificationTime": "2020-07-02T17:34:22.611Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445461179269250,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:35:06.823" endtime="20200702 17:35:06.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:06.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:06.824" endtime="20200702 17:35:06.824"></status>
</kw>
<msg timestamp="20200702 17:35:06.825" level="INFO">${result} = {
  "volumeName": "50248-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:34:20.671Z",
  "modificationTime": "2020-07-02T17:34:22.611Z",
  "rep...</msg>
<status status="PASS" starttime="20200702 17:35:03.817" endtime="20200702 17:35:06.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:06.825" endtime="20200702 17:35:06.825"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:06.829" level="INFO">Running command 'ozone sh key list o3:///50248-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:09.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:09.729" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200702 17:35:06.826" endtime="20200702 17:35:09.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:09.730" level="INFO">key1</msg>
<status status="PASS" starttime="20200702 17:35:09.729" endtime="20200702 17:35:09.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:09.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:09.730" endtime="20200702 17:35:09.731"></status>
</kw>
<msg timestamp="20200702 17:35:09.731" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200702 17:35:06.825" endtime="20200702 17:35:09.731"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:09.731" endtime="20200702 17:35:09.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:09.737" level="INFO">Running command 'ozone sh key rename o3:///50248-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:12.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:12.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:09.732" endtime="20200702 17:35:12.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:12.474" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:12.473" endtime="20200702 17:35:12.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:12.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:12.475" endtime="20200702 17:35:12.475"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:09.732" endtime="20200702 17:35:12.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:12.479" level="INFO">Running command 'ozone sh key list o3:///50248-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:15.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:15.548" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200702 17:35:12.476" endtime="20200702 17:35:15.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:15.549" level="INFO">key2</msg>
<status status="PASS" starttime="20200702 17:35:15.548" endtime="20200702 17:35:15.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:15.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:15.549" endtime="20200702 17:35:15.550"></status>
</kw>
<msg timestamp="20200702 17:35:15.550" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200702 17:35:12.476" endtime="20200702 17:35:15.550"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:15.550" endtime="20200702 17:35:15.551"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:15.554" level="INFO">Running command 'ozone sh key delete o3:///50248-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:18.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:18.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:15.552" endtime="20200702 17:35:18.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:18.288" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:18.287" endtime="20200702 17:35:18.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:18.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:18.288" endtime="20200702 17:35:18.289"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:15.551" endtime="20200702 17:35:18.289"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:17.968" endtime="20200702 17:35:18.289"></status>
</kw>
<status status="PASS" starttime="20200702 17:34:17.968" endtime="20200702 17:35:18.289"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:18.293" level="INFO">Running command 'ozone sh bucket delete o3:///50248-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:21.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:21.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:18.290" endtime="20200702 17:35:21.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:21.079" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:21.078" endtime="20200702 17:35:21.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:21.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:21.079" endtime="20200702 17:35:21.080"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:18.289" endtime="20200702 17:35:21.080"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:21.083" level="INFO">Running command 'ozone sh volume delete o3:///50248-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:23.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:23.796" level="INFO">${output} = Volume 50248-rpcwport is deleted</msg>
<status status="PASS" starttime="20200702 17:35:21.081" endtime="20200702 17:35:23.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:23.797" level="INFO">Volume 50248-rpcwport is deleted</msg>
<status status="PASS" starttime="20200702 17:35:23.796" endtime="20200702 17:35:23.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:23.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:23.797" endtime="20200702 17:35:23.798"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:21.080" endtime="20200702 17:35:23.798"></status>
</kw>
<status status="PASS" starttime="20200702 17:33:51.452" endtime="20200702 17:35:23.798"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:33:51.450" endtime="20200702 17:35:23.798" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:23.800" endtime="20200702 17:35:23.800"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:23.805" level="INFO">Running command 'ozone sh volume info /50248-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:26.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:35:26.377" level="INFO">${output} = VOLUME_NOT_FOUND Volume 50248-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200702 17:35:23.802" endtime="20200702 17:35:26.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:26.378" level="INFO">VOLUME_NOT_FOUND Volume 50248-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200702 17:35:26.377" endtime="20200702 17:35:26.378"></status>
</kw>
<msg timestamp="20200702 17:35:26.378" level="INFO">${result} = VOLUME_NOT_FOUND Volume 50248-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200702 17:35:23.801" endtime="20200702 17:35:26.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:26.379" endtime="20200702 17:35:26.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:26.382" level="INFO">Running command 'ozone sh volume create /50248-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:29.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:29.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:26.380" endtime="20200702 17:35:29.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:29.164" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:29.164" endtime="20200702 17:35:29.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:29.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:29.165" endtime="20200702 17:35:29.166"></status>
</kw>
<msg timestamp="20200702 17:35:29.166" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:35:26.379" endtime="20200702 17:35:29.166"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:29.166" endtime="20200702 17:35:29.167"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:29.170" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="50248-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:32.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:32.233" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200702 17:35:29.168" endtime="20200702 17:35:32.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:32.235" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:35:32.234" endtime="20200702 17:35:32.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:32.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:32.235" endtime="20200702 17:35:32.236"></status>
</kw>
<msg timestamp="20200702 17:35:32.236" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200702 17:35:29.167" endtime="20200702 17:35:32.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:32.236" endtime="20200702 17:35:32.236"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:32.239" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="50248-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:35.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:35.232" level="INFO">${output} = {
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200702 17:35:32.237" endtime="20200702 17:35:35.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:35.233" level="INFO">{
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200702 17:35:35.232" endtime="20200702 17:35:35.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:35.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:35.233" endtime="20200702 17:35:35.234"></status>
</kw>
<msg timestamp="20200702 17:35:35.234" level="INFO">${result} = {
  "metadata": {},
  "name": "50248-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-07-02T17:35:29.033Z",
  "modificationTime": "2020-07-02T17:35:29.033Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200702 17:35:32.237" endtime="20200702 17:35:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:35.234" endtime="20200702 17:35:35.234"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:35.237" level="INFO">Running command 'ozone sh volume update /50248-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:38.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:38.214" level="INFO">${output} = {
  "metadata" : { },
  "name" : "50248-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:35:29.033Z",
  "modificationTime" : "2020-07-02T17:35:37.810Z",
  "a...</msg>
<status status="PASS" starttime="20200702 17:35:35.235" endtime="20200702 17:35:38.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:38.216" level="INFO">{
  "metadata" : { },
  "name" : "50248-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-07-02T17:35:29.033Z",
  "modificationTime" : "2020-07-02T17:35:37.810Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200702 17:35:38.215" endtime="20200702 17:35:38.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:38.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:38.216" endtime="20200702 17:35:38.216"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:35.235" endtime="20200702 17:35:38.217"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:38.220" level="INFO">Running command 'ozone sh volume info /50248-rpcwoscheme | jq -r '. | select(.name=="50248-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:41.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:41.148" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:35:38.218" endtime="20200702 17:35:41.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:41.150" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200702 17:35:41.149" endtime="20200702 17:35:41.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:41.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:41.150" endtime="20200702 17:35:41.150"></status>
</kw>
<msg timestamp="20200702 17:35:41.151" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200702 17:35:38.217" endtime="20200702 17:35:41.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:41.151" endtime="20200702 17:35:41.151"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:41.155" level="INFO">Running command 'ozone sh bucket create /50248-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:44.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:44.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:41.152" endtime="20200702 17:35:44.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:44.049" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:44.049" endtime="20200702 17:35:44.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:44.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:44.050" endtime="20200702 17:35:44.050"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:41.152" endtime="20200702 17:35:44.051"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:44.054" level="INFO">Running command 'ozone sh bucket info /50248-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:47.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:47.382" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200702 17:35:44.051" endtime="20200702 17:35:47.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:47.383" level="INFO">DISK</msg>
<status status="PASS" starttime="20200702 17:35:47.382" endtime="20200702 17:35:47.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:47.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:47.384" endtime="20200702 17:35:47.385"></status>
</kw>
<msg timestamp="20200702 17:35:47.386" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200702 17:35:44.051" endtime="20200702 17:35:47.386"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:47.386" endtime="20200702 17:35:47.386"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:47.390" level="INFO">Running command 'ozone sh bucket list /50248-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:50.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:50.210" level="INFO">${output} = 50248-rpcwoscheme</msg>
<status status="PASS" starttime="20200702 17:35:47.387" endtime="20200702 17:35:50.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:50.211" level="INFO">50248-rpcwoscheme</msg>
<status status="PASS" starttime="20200702 17:35:50.210" endtime="20200702 17:35:50.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:50.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:50.211" endtime="20200702 17:35:50.212"></status>
</kw>
<msg timestamp="20200702 17:35:50.212" level="INFO">${result} = 50248-rpcwoscheme</msg>
<status status="PASS" starttime="20200702 17:35:47.386" endtime="20200702 17:35:50.212"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200702 17:35:50.212" endtime="20200702 17:35:50.213"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:50.218" level="INFO">Running command 'ozone sh key put /50248-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:55.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:55.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:50.214" endtime="20200702 17:35:55.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:55.259" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:55.258" endtime="20200702 17:35:55.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:55.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:55.259" endtime="20200702 17:35:55.260"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:50.214" endtime="20200702 17:35:55.260"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:55.263" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:55.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:55.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:55.261" endtime="20200702 17:35:55.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:55.267" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:55.266" endtime="20200702 17:35:55.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:55.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:55.267" endtime="20200702 17:35:55.268"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:55.260" endtime="20200702 17:35:55.268"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:55.271" level="INFO">Running command 'ozone sh key get /50248-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:59.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:59.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:55.269" endtime="20200702 17:35:59.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:59.972" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:59.971" endtime="20200702 17:35:59.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:59.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:59.972" endtime="20200702 17:35:59.973"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:55.268" endtime="20200702 17:35:59.973"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:59.976" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:35:59.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:35:59.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:59.974" endtime="20200702 17:35:59.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:35:59.981" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:35:59.980" endtime="20200702 17:35:59.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:35:59.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:35:59.981" endtime="20200702 17:35:59.983"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:59.973" endtime="20200702 17:35:59.983"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:35:59.987" level="INFO">Running command 'ozone sh key put -t RATIS /50248-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:05.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:05.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:35:59.984" endtime="20200702 17:36:05.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:05.058" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:05.057" endtime="20200702 17:36:05.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:05.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:05.058" endtime="20200702 17:36:05.059"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:59.983" endtime="20200702 17:36:05.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:05.064" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:05.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:05.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:05.060" endtime="20200702 17:36:05.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:05.068" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:05.067" endtime="20200702 17:36:05.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:05.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:05.068" endtime="20200702 17:36:05.069"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:05.059" endtime="20200702 17:36:05.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:05.073" level="INFO">Running command 'ozone sh key get /50248-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:09.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:09.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:05.070" endtime="20200702 17:36:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:09.635" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:09.634" endtime="20200702 17:36:09.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:09.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:09.635" endtime="20200702 17:36:09.636"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:05.069" endtime="20200702 17:36:09.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:09.639" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:09.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:09.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:09.637" endtime="20200702 17:36:09.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:09.642" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:09.642" endtime="20200702 17:36:09.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:09.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:09.643" endtime="20200702 17:36:09.643"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:09.636" endtime="20200702 17:36:09.643"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:09.647" level="INFO">Running command 'ozone sh key info /50248-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:13.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:13.114" level="INFO">${output} = {
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:36:02.801Z",
  "modificationTime": "2020-07-02T17:36:04.612Z...</msg>
<status status="PASS" starttime="20200702 17:36:09.644" endtime="20200702 17:36:13.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:13.116" level="INFO">{
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:36:02.801Z",
  "modificationTime": "2020-07-02T17:36:04.612Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445467872329860,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:36:13.115" endtime="20200702 17:36:13.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:13.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:13.116" endtime="20200702 17:36:13.116"></status>
</kw>
<msg timestamp="20200702 17:36:13.117" level="INFO">${result} = {
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:36:02.801Z",
  "modificationTime": "2020-07-02T17:36:04.612Z...</msg>
<status status="PASS" starttime="20200702 17:36:09.644" endtime="20200702 17:36:13.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:13.117" endtime="20200702 17:36:13.117"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:13.120" level="INFO">Running command 'ozone sh key delete /50248-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:15.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:15.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:13.118" endtime="20200702 17:36:15.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:15.796" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:15.795" endtime="20200702 17:36:15.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:15.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:15.796" endtime="20200702 17:36:15.797"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:13.117" endtime="20200702 17:36:15.797"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:15.801" level="INFO">Running command 'ozone sh key cp /50248-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:20.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:20.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:15.798" endtime="20200702 17:36:20.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:20.984" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:20.983" endtime="20200702 17:36:20.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:20.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:20.984" endtime="20200702 17:36:20.985"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:15.797" endtime="20200702 17:36:20.985"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:20.988" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:20.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:20.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:20.986" endtime="20200702 17:36:20.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:20.991" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:20.991" endtime="20200702 17:36:20.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:20.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:20.992" endtime="20200702 17:36:20.993"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:20.985" endtime="20200702 17:36:20.993"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:20.997" level="INFO">Running command 'ozone sh key get /50248-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:25.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:25.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:20.994" endtime="20200702 17:36:25.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:25.772" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:25.772" endtime="20200702 17:36:25.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:25.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:25.773" endtime="20200702 17:36:25.773"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:20.993" endtime="20200702 17:36:25.773"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:25.778" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:25.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:25.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:25.774" endtime="20200702 17:36:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:25.780" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:25.780" endtime="20200702 17:36:25.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:25.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:25.780" endtime="20200702 17:36:25.781"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:25.774" endtime="20200702 17:36:25.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:25.785" level="INFO">Running command 'ozone sh key delete /50248-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:28.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:28.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:25.782" endtime="20200702 17:36:28.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:28.526" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:28.525" endtime="20200702 17:36:28.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:28.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:28.526" endtime="20200702 17:36:28.527"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:25.781" endtime="20200702 17:36:28.527"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:28.530" level="INFO">Running command 'ozone sh key get /50248-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:31.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20200702 17:36:31.350" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:36:28.528" endtime="20200702 17:36:31.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:31.351" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:36:31.351" endtime="20200702 17:36:31.352"></status>
</kw>
<msg timestamp="20200702 17:36:31.352" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200702 17:36:28.528" endtime="20200702 17:36:31.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:31.352" endtime="20200702 17:36:31.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:31.361" level="INFO">Running command 'ozone sh key get --force /50248-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:36.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:36.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:31.358" endtime="20200702 17:36:36.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:36.059" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:36.058" endtime="20200702 17:36:36.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:36.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:36.060" endtime="20200702 17:36:36.060"></status>
</kw>
<msg timestamp="20200702 17:36:36.060" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200702 17:36:31.357" endtime="20200702 17:36:36.060"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:36.061" endtime="20200702 17:36:36.061"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:36.064" level="INFO">Running command 'ozone sh key info /50248-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:39.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:39.174" level="INFO">${output} = {
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:35:52.877Z",
  "modificationTime": "2020-07-02T17:35:54.773Z",
  "...</msg>
<status status="PASS" starttime="20200702 17:36:36.062" endtime="20200702 17:36:39.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:39.176" level="INFO">{
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:35:52.877Z",
  "modificationTime": "2020-07-02T17:35:54.773Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104445467222147200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200702 17:36:39.175" endtime="20200702 17:36:39.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:39.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:39.176" endtime="20200702 17:36:39.176"></status>
</kw>
<msg timestamp="20200702 17:36:39.177" level="INFO">${result} = {
  "volumeName": "50248-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-07-02T17:35:52.877Z",
  "modificationTime": "2020-07-02T17:35:54.773Z",
  "...</msg>
<status status="PASS" starttime="20200702 17:36:36.061" endtime="20200702 17:36:39.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:39.177" endtime="20200702 17:36:39.177"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:39.181" level="INFO">Running command 'ozone sh key list /50248-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:42.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:42.135" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200702 17:36:39.178" endtime="20200702 17:36:42.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:42.137" level="INFO">key1</msg>
<status status="PASS" starttime="20200702 17:36:42.136" endtime="20200702 17:36:42.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:42.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:42.137" endtime="20200702 17:36:42.137"></status>
</kw>
<msg timestamp="20200702 17:36:42.138" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200702 17:36:39.177" endtime="20200702 17:36:42.138"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:42.138" endtime="20200702 17:36:42.138"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:42.142" level="INFO">Running command 'ozone sh key rename /50248-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:45.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:45.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:42.139" endtime="20200702 17:36:45.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:45.149" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:45.148" endtime="20200702 17:36:45.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:45.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:45.149" endtime="20200702 17:36:45.150"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:42.139" endtime="20200702 17:36:45.150"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:45.153" level="INFO">Running command 'ozone sh key list /50248-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:48.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:48.173" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200702 17:36:45.151" endtime="20200702 17:36:48.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:48.174" level="INFO">key2</msg>
<status status="PASS" starttime="20200702 17:36:48.173" endtime="20200702 17:36:48.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:48.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:48.174" endtime="20200702 17:36:48.175"></status>
</kw>
<msg timestamp="20200702 17:36:48.175" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200702 17:36:45.150" endtime="20200702 17:36:48.175"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200702 17:36:48.175" endtime="20200702 17:36:48.176"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:48.178" level="INFO">Running command 'ozone sh key delete /50248-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:51.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:51.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:48.176" endtime="20200702 17:36:51.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:51.033" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:51.032" endtime="20200702 17:36:51.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:51.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:51.033" endtime="20200702 17:36:51.034"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:48.176" endtime="20200702 17:36:51.034"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:50.213" endtime="20200702 17:36:51.034"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:50.213" endtime="20200702 17:36:51.034"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:51.039" level="INFO">Running command 'ozone sh bucket delete /50248-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:53.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:53.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200702 17:36:51.035" endtime="20200702 17:36:53.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:53.815" level="INFO"></msg>
<status status="PASS" starttime="20200702 17:36:53.814" endtime="20200702 17:36:53.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:53.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:53.815" endtime="20200702 17:36:53.816"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:51.035" endtime="20200702 17:36:53.816"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200702 17:36:53.819" level="INFO">Running command 'ozone sh volume delete /50248-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200702 17:36:56.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200702 17:36:56.501" level="INFO">${output} = Volume 50248-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200702 17:36:53.817" endtime="20200702 17:36:56.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200702 17:36:56.502" level="INFO">Volume 50248-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200702 17:36:56.501" endtime="20200702 17:36:56.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200702 17:36:56.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200702 17:36:56.502" endtime="20200702 17:36:56.503"></status>
</kw>
<status status="PASS" starttime="20200702 17:36:53.816" endtime="20200702 17:36:56.503"></status>
</kw>
<status status="PASS" starttime="20200702 17:35:23.801" endtime="20200702 17:36:56.503"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200702 17:35:23.799" endtime="20200702 17:36:56.504" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200702 17:31:06.470" endtime="20200702 17:36:56.505"></status>
</suite>
<status status="PASS" starttime="20200702 17:30:22.910" endtime="20200702 17:36:56.511"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
